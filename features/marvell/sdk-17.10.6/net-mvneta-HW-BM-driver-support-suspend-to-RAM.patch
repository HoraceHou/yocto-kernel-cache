From 0ca15d5b3dd4887cf52ff05487600dfcd8f79add Mon Sep 17 00:00:00 2001
From: Yelena Krivosheev <yelena@marvell.com>
Date: Tue, 27 Jun 2017 12:24:20 +0300
Subject: [PATCH 1054/1345] net: mvneta: HW BM driver support suspend to RAM

commit  8f90a6e6f24cc94e5871c9115e8a4acd4f00363b from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Use suspend_late() to be sure that BM suspend after
all ports are closed.
Use resume_early() to be sure that BM is resumed
before NETA ports are opened.

Change-Id: I2c8cde0873b48a5dffa05b6f1f25e2e786a38142
Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/40892
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvneta.c    |   18 ++++++++++---
 drivers/net/ethernet/marvell/mvneta_bm.c |   43 ++++++++++++++++++++++++++++++
 2 files changed, 57 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index f715a54..6b1e84b 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -4991,17 +4991,27 @@ static int mvneta_resume(struct device *device)
 			pp->bm_priv = NULL;
 		}
 	}
+
+	if (pp->bm_priv) {
+		ret = mvneta_bm_port_init(pdev, pp);
+		if (ret < 0) {
+			netdev_err(dev, "Cannot resume HW BM, use SW buffer management\n");
+			pp->bm_priv = NULL;
+		}
+	}
+
 	mvneta_defaults_set(pp);
+	if (pp->use_inband_status)
+		mvneta_fixed_link_update(pp, dev->phydev);
+
+	netif_device_attach(dev);
+
 	err = mvneta_port_power_up(pp, pp->phy_interface);
 	if (err < 0) {
 		dev_err(device, "can't power up port\n");
 		return err;
 	}
 
-	if (pp->use_inband_status)
-		mvneta_fixed_link_update(pp, dev->phydev);
-
-	netif_device_attach(dev);
 	if (netif_running(dev)) {
 		mvneta_open(dev);
 		mvneta_set_rx_mode(dev);
diff --git a/drivers/net/ethernet/marvell/mvneta_bm.c b/drivers/net/ethernet/marvell/mvneta_bm.c
index 4363802..340d564 100644
--- a/drivers/net/ethernet/marvell/mvneta_bm.c
+++ b/drivers/net/ethernet/marvell/mvneta_bm.c
@@ -503,18 +503,61 @@ static int mvneta_bm_remove(struct platform_device *pdev)
 	return 0;
 }
 
+#ifdef CONFIG_PM_SLEEP
+static int mvneta_bm_suspend(struct device *dev)
+{
+	struct mvneta_bm *priv = dev_get_drvdata(dev);
+	u8 all_ports_map = 0xff;
+	int i = 0;
+
+	for (i = 0; i < MVNETA_BM_POOLS_NUM; i++) {
+		struct mvneta_bm_pool *bm_pool = &priv->bm_pools[i];
+
+		mvneta_bm_pool_destroy(priv, bm_pool, all_ports_map);
+	}
+
+	/* Dectivate BM unit */
+	mvneta_bm_write(priv, MVNETA_BM_COMMAND_REG, MVNETA_BM_STOP_MASK);
+	return 0;
+}
+
+int mvneta_bm_resume(struct device *dev)
+{
+	struct mvneta_bm *priv = dev_get_drvdata(dev);
+	int err = 0;
+
+	/* Initialize buffer manager internals */
+	err = mvneta_bm_init(priv);
+	if (err < 0)
+		pr_err("%s: failed to resume BM controller\n", __func__);
+
+	return err;
+}
+
+#endif
+
 static const struct of_device_id mvneta_bm_match[] = {
 	{ .compatible = "marvell,armada-380-neta-bm" },
 	{ }
 };
 MODULE_DEVICE_TABLE(of, mvneta_bm_match);
 
+#ifdef CONFIG_PM_SLEEP
+static const struct dev_pm_ops mvneta_bm_pm_ops = {
+	.suspend_late = mvneta_bm_suspend,
+	.resume_early = mvneta_bm_resume,
+};
+#endif
+
 static struct platform_driver mvneta_bm_driver = {
 	.probe = mvneta_bm_probe,
 	.remove = mvneta_bm_remove,
 	.driver = {
 		.name = MVNETA_BM_DRIVER_NAME,
 		.of_match_table = mvneta_bm_match,
+#ifdef CONFIG_PM_SLEEP
+		.pm = &mvneta_bm_pm_ops,
+#endif
 	},
 };
 
-- 
1.7.9.5

