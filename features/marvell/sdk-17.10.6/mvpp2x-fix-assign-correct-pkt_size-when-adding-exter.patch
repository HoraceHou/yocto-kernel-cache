From c7241ea7ca88e8bb45d5455db888a91b1838f38f Mon Sep 17 00:00:00 2001
From: Alan Winkowski <walan@marvell.com>
Date: Sun, 11 Sep 2016 12:38:26 +0300
Subject: [PATCH 0485/1345] mvpp2x: fix: assign correct pkt_size when adding
 external BM pool

commit  91a8f002ce6c7e016cbdc33c8a1731ebbe80c01b from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: Ia68a560ce86a5685c2070003525c0b837f230308
Signed-off-by: Alan Winkowski <walan@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32662
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Neta Zur Hershkovits <neta@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 3cd09d0..70ac3c9 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -330,7 +330,7 @@ static int mv_pp2x_rx_refill_new(struct mv_pp2x_port *port,
 static int mv_pp2x_bm_pool_create(struct device *dev,
 					 struct mv_pp2x_hw *hw,
 					 struct mv_pp2x_bm_pool *bm_pool,
-					 int size)
+					 int size, int pkt_size)
 {
 	int size_bytes;
 
@@ -360,7 +360,7 @@ static int mv_pp2x_bm_pool_create(struct device *dev,
 	mv_pp2x_bm_hw_pool_create(hw, bm_pool->id, bm_pool->phys_addr, size);
 
 	bm_pool->size = size;
-	bm_pool->pkt_size = mv_pp2x_pool_pkt_size_get(bm_pool->log_id);
+	bm_pool->pkt_size = pkt_size;
 	bm_pool->frag_size = SKB_DATA_ALIGN(MVPP2_RX_BUF_SIZE(
 				bm_pool->pkt_size)) + MVPP2_SKB_SHINFO_SIZE;
 	bm_pool->buf_num = 0;
@@ -485,10 +485,9 @@ int mv_pp2x_bm_pool_ext_add(struct device *dev, struct mv_pp2x *priv,
 	bm_pool->log_id = pool;
 	bm_pool->id = first_pool + pool;
 	bm_pool->external_pool = true;
-	mv_pp2x_pools[pool].pkt_size = pkt_size;
-		err = mv_pp2x_bm_pool_create(dev, hw, bm_pool, size);
-		if (err)
-			return err;
+	err = mv_pp2x_bm_pool_create(dev, hw, bm_pool, size, pkt_size);
+	if (err)
+		return err;
 
 	*pool_num = pool;
 	priv->num_pools++;
@@ -510,7 +509,8 @@ static int mv_pp2x_bm_pools_init(struct platform_device *pdev,
 		bm_pool->log_id = i;
 		bm_pool->id = first_pool + i;
 		bm_pool->external_pool = false;
-		err = mv_pp2x_bm_pool_create(&pdev->dev, hw, bm_pool, size);
+		err = mv_pp2x_bm_pool_create(&pdev->dev, hw, bm_pool, size,
+					     mv_pp2x_pool_pkt_size_get(bm_pool->log_id));
 		if (err)
 			goto err_unroll_pools;
 	}
-- 
1.7.9.5

