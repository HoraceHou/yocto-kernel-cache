From ed8cfd2201a8284c3e5995b8740ab160b3dc2275 Mon Sep 17 00:00:00 2001
From: Igal Liberman <igall@marvell.com>
Date: Wed, 27 Jul 2016 13:21:03 +0300
Subject: [PATCH 0394/1345] spi: orion: fix incorrect chip-select switching

commit  46da038eb21f4d317caa0ce31890b3b813140a16 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Some SPI devices require switching CS every transferred byte.
The feature was added in Kernel v3.10 (a9944d6)
and ported to Kernel v4.4 (cf7c9b1).

This patch fixes incorrect chip-select switching caused by
logic change in orion_spi_set_cs() (75872eb) which went unnoticed
during porting to Kernel 4.4.

This patch inverts only the second parameter of the calls
to orion_spi_set_cs(), which is the enable/disable logic.

change-Id: I2c9a43c855554e5a6d6bc09c8ffba46b25fc2575
Signed-off-by: Igal Liberman <igall@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/31483
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/spi/spi-orion.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/spi/spi-orion.c b/drivers/spi/spi-orion.c
index 38a3d57..3a06be6 100644
--- a/drivers/spi/spi-orion.c
+++ b/drivers/spi/spi-orion.c
@@ -361,7 +361,7 @@ static inline int orion_spi_wait_till_ready(struct orion_spi *orion_spi)
 	orion_spi = spi_master_get_devdata(spi->master);
 
 	if (cs_single_byte)
-		orion_spi_set_cs(spi, 1);
+		orion_spi_set_cs(spi, 0);
 
 	tx_reg = spi_reg(orion_spi, ORION_SPI_DATA_OUT_REG);
 	rx_reg = spi_reg(orion_spi, ORION_SPI_DATA_IN_REG);
@@ -377,7 +377,7 @@ static inline int orion_spi_wait_till_ready(struct orion_spi *orion_spi)
 
 	if (orion_spi_wait_till_ready(orion_spi) < 0) {
 		if (cs_single_byte) {
-			orion_spi_set_cs(spi, 0);
+			orion_spi_set_cs(spi, 1);
 			/* Satisfy some SLIC devices requirements */
 			udelay(4);
 		}
@@ -389,7 +389,7 @@ static inline int orion_spi_wait_till_ready(struct orion_spi *orion_spi)
 		*(*rx_buf)++ = readl(rx_reg);
 
 	if (cs_single_byte) {
-		orion_spi_set_cs(spi, 0);
+		orion_spi_set_cs(spi, 1);
 		/* Satisfy some SLIC devices requirements */
 		udelay(4);
 	}
-- 
1.7.9.5

