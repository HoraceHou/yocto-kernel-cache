From 9063bfe0a0280fad88d9cabbf53573711488dd74 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Mon, 14 Aug 2017 11:42:05 +0300
Subject: [PATCH 1163/1345] net: mvpp2x: fix GoP InBand AutoNeg function
 naming

commit  587a5bdfc6b34b6c556ad6e8a924814392ba5304 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Function set GoP InBand AutoNeg and do not reset GPCS clock.
No functional changes.

Change-Id: I4a28dceb5c2cf87072554e1876a6a088786eda89
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/42966
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.c |   20 ++++++++++----------
 drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.h |    2 +-
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.c b/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.c
index 0b70cf15..39ea986 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.c
@@ -907,8 +907,8 @@ int mv_gop110_port_init(struct gop_hw *gop, struct mv_mac_data *mac)
 		/* select proper Mac mode */
 		mv_gop110_xlg_2_gig_mac_cfg(gop, mac_num);
 
-		/* pcs unreset */
-		mv_gop110_gpcs_reset(gop, mac_num, UNRESET);
+		/* set InBand AutoNeg */
+		mv_gop110_in_band_auto_neg(gop, mac_num, true);
 		/* mac unreset */
 		mv_gop110_gmac_reset(gop, mac_num, UNRESET);
 		mv_gop110_force_link_mode_set(gop, mac, false, false);
@@ -925,8 +925,8 @@ int mv_gop110_port_init(struct gop_hw *gop, struct mv_mac_data *mac)
 		/* select proper Mac mode */
 		mv_gop110_xlg_2_gig_mac_cfg(gop, mac_num);
 
-		/* pcs unreset */
-		mv_gop110_gpcs_reset(gop, mac_num, UNRESET);
+		/* set InBand AutoNeg */
+		mv_gop110_in_band_auto_neg(gop, mac_num, true);
 		/* mac unreset */
 		mv_gop110_gmac_reset(gop, mac_num, UNRESET);
 		mv_gop110_force_link_mode_set(gop, mac, false, false);
@@ -1015,8 +1015,8 @@ int mv_gop110_port_reset(struct gop_hw *gop, struct mv_mac_data *mac)
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
-		/* pcs unreset */
-		mv_gop110_gpcs_reset(gop, mac_num, RESET);
+		/* set InBand AutoNeg */
+		mv_gop110_in_band_auto_neg(gop, mac_num, false);
 		/* mac unreset */
 		mv_gop110_gmac_reset(gop, mac_num, RESET);
 	break;
@@ -1650,16 +1650,16 @@ int mv_gop110_gpcs_mode_cfg(struct gop_hw *gop, int pcs_num, bool en)
 }
 
 /* Set InBand AutoNeg configuration */
-int  mv_gop110_gpcs_reset(struct gop_hw *gop, int pcs_num, enum mv_reset act)
+int  mv_gop110_in_band_auto_neg(struct gop_hw *gop, int pcs_num, bool en)
 {
 	u32 reg_data;
 
 	reg_data = mv_gop110_gmac_read(gop, pcs_num, MV_GMAC_PORT_CTRL2_REG);
-	if (act == RESET)
-		U32_SET_FIELD(reg_data, MV_GMAC_PORT_CTRL2_SGMII_MODE_MASK, 0);
-	else
+	if (en)
 		U32_SET_FIELD(reg_data, MV_GMAC_PORT_CTRL2_SGMII_MODE_MASK,
 			      1 << MV_GMAC_PORT_CTRL2_SGMII_MODE_OFFS);
+	else
+		U32_SET_FIELD(reg_data, MV_GMAC_PORT_CTRL2_SGMII_MODE_MASK, 0);
 
 	mv_gop110_gmac_write(gop, pcs_num, MV_GMAC_PORT_CTRL2_REG, reg_data);
 	return 0;
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.h b/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.h
index 592f217..1f928a7 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_gop110_hw.h
@@ -171,7 +171,7 @@ int mv_gop110_loopback_set(struct gop_hw *gop, struct mv_mac_data *mac,
 
 /* Gig PCS Functions */
 int mv_gop110_gpcs_mode_cfg(struct gop_hw *gop, int pcs_num, bool en);
-int mv_gop110_gpcs_reset(struct gop_hw *gop, int pcs_num, enum mv_reset act);
+int mv_gop110_in_band_auto_neg(struct gop_hw *gop, int pcs_num, bool en);
 
 /* MPCS Functions */
 
-- 
1.7.9.5

