From 5fdf7fbb5f9515e76d80832cae5f314591397fa6 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 21 Sep 2016 12:59:23 +0300
Subject: [PATCH 0513/1345] fix: mvpp2x: disable tx checksum if jumbo packet
 enabled on 1G port

commit  c3a2c7e359d5ae16120dd0decc314dbe4f4fcc59 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

-  tx checksum disabled for 1G port if jumbo packet enabled,
   due to TX FIFO size limit

Change-Id: If4c1c5d46b5ffd43bd2ce2f4c0acfa6e0abc7186
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32937
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 70ac3c9..3a5adcb 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -748,10 +748,15 @@ static int mv_pp2x_bm_update_mtu(struct net_device *dev, int mtu)
 
 		/* Update L4 checksum when jumbo enable/disable on port */
 		if (new_log_pool == MVPP2_BM_SWF_JUMBO_POOL) {
-			if (port->id != port->priv->l4_chksum_jumbo_port)
+			if (port->id != port->priv->l4_chksum_jumbo_port) {
+				dev->features &=
+					~(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
 				dev->hw_features &=
 					~(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
+				}
 		} else {
+			dev->features |=
+				(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
 			dev->hw_features |=
 				(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
 		}
@@ -759,6 +764,7 @@ static int mv_pp2x_bm_update_mtu(struct net_device *dev, int mtu)
 
 	dev->mtu = mtu;
 
+	dev->wanted_features = dev->features;
 	netdev_update_features(dev);
 	return 0;
 }
@@ -4451,6 +4457,7 @@ static int mv_pp2x_port_probe(struct platform_device *pdev,
 			NETIF_F_IPV6_CSUM | NETIF_F_TSO;
 	dev->hw_features |= features | NETIF_F_RXCSUM | NETIF_F_GRO |
 			NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM | NETIF_F_TSO;
+
 	/* Only when multi queue mode, rxhash is supported */
 	if (mv_pp2x_queue_mode)
 		dev->hw_features |= NETIF_F_RXHASH;
-- 
1.7.9.5

