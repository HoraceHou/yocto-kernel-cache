From 8ce48a9f9cccf56a5ddb4b56e2054a23e1b7fdfc Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Tue, 13 Dec 2016 19:20:48 +0100
Subject: [PATCH 0664/1345] telephony: mvebu: split tdm_if_write and
 tdm_if_pcm_stop

commit  0c9632669519090a39c9000ab817789d6be99282 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

This commit splits tdm_if_write and tdm_if_stop in order to
remove ifdefs and conditionally executed code. Also initial
TAL ops sorting is added by moving tdm_if_stats_get.

Change-Id: Ic838084d871ab9f3c5bf4d5badf4bce99433b77d
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35033
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/telephony/mvebu_phone/mv_phone_dev.c |  147 +++++++++++++++-----------
 1 file changed, 83 insertions(+), 64 deletions(-)

diff --git a/drivers/telephony/mvebu_phone/mv_phone_dev.c b/drivers/telephony/mvebu_phone/mv_phone_dev.c
index 978acf2..6129db0 100644
--- a/drivers/telephony/mvebu_phone/mv_phone_dev.c
+++ b/drivers/telephony/mvebu_phone/mv_phone_dev.c
@@ -119,7 +119,6 @@
 
 /* PCM start/stop */
 static void tdm_if_pcm_start(void);
-static void tdm_if_pcm_stop(void);
 
 /* Rx/Tx Tasklets  */
 #if !(defined CONFIG_MV_PHONE_USE_IRQ_PROCESSING) && !(defined CONFIG_MV_PHONE_USE_FIQ_PROCESSING)
@@ -160,9 +159,9 @@
 #ifdef CONFIG_MV_TDM2C_SUPPORT
 static int pcm_stop_flag;
 static int pcm_stop_status;
+#endif
 static u32 pcm_start_stop_state;
 static u32 is_pcm_stopping;
-#endif
 static u32 mv_tdm_unit_type;
 
 /* Get TDM unit interrupt number */
@@ -264,6 +263,47 @@ static u32 tdm_if_unit_type_get(void)
 	return mv_tdm_unit_type;
 }
 
+static void tdm2c_if_pcm_stop(void)
+{
+	unsigned long flags;
+
+	spin_lock_irqsave(&tdm_if_lock, flags);
+
+	if (!pcm_enable) {
+		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		return;
+	}
+
+	pcm_enable = 0;
+	if (is_pcm_stopping == 0) {
+		is_pcm_stopping = 1;
+		tdm2c_pcm_stop();
+	} else {
+		pcm_start_stop_state--;
+		dev_dbg(priv->dev, "pcm_start_stop_state(%d)\n",
+			pcm_start_stop_state);
+	}
+
+	spin_unlock_irqrestore(&tdm_if_lock, flags);
+}
+
+static void tdmmc_if_pcm_stop(void)
+{
+	unsigned long flags;
+
+	spin_lock_irqsave(&tdm_if_lock, flags);
+
+	if (!pcm_enable) {
+		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		return;
+	}
+
+	pcm_enable = 0;
+	tdmmc_pcm_stop();
+
+	spin_unlock_irqrestore(&tdm_if_lock, flags);
+}
+
 int tdm_if_init(struct tal_params *tal_params)
 {
 	struct mv_phone_params tdm_params;
@@ -373,7 +413,7 @@ int tdm_if_init(struct tal_params *tal_params)
 	/* WA to stop the MCDMA gracefully after commUnit initialization */
 #ifdef CONFIG_MV_TDMMC_SUPPORT
 	if (tdm_if_unit_type_get() == MV_TDM_UNIT_TDMMC)
-		tdm_if_pcm_stop();
+		tdmmc_if_pcm_stop();
 #endif
 	return 0;
 }
@@ -387,7 +427,12 @@ void tdm_if_exit(void)
 
 	/* Stop PCM channels */
 	if (pcm_enable)
-		tdm_if_pcm_stop();
+#ifdef CONFIG_MV_TDM2C_SUPPORT
+		tdm2c_if_pcm_stop();
+#endif
+#ifdef CONFIG_MV_TDMMC_SUPPORT
+		tdmmc_if_pcm_stop();
+#endif
 
 #ifdef CONFIG_MV_TDM2C_SUPPORT
 		if (tdm_if_unit_type_get() == MV_TDM_UNIT_TDM2C) {
@@ -490,33 +535,6 @@ static void tdm_if_pcm_start(void)
 	spin_unlock_irqrestore(&tdm_if_lock, flags);
 }
 
-static void tdm_if_pcm_stop(void)
-{
-	unsigned long flags;
-
-	spin_lock_irqsave(&tdm_if_lock, flags);
-	if (pcm_enable) {
-		pcm_enable = 0;
-#ifdef CONFIG_MV_TDM2C_SUPPORT
-		if (tdm_if_unit_type_get() == MV_TDM_UNIT_TDM2C) {
-			if (is_pcm_stopping == 0) {
-				is_pcm_stopping = 1;
-				tdm2c_pcm_stop();
-			} else {
-				pcm_start_stop_state--;
-				dev_dbg(priv->dev, "pcm_start_stop_state(%d)\n",
-					pcm_start_stop_state);
-			}
-		}
-#endif
-#ifdef CONFIG_MV_TDMMC_SUPPORT
-		if (tdm_if_unit_type_get() == MV_TDM_UNIT_TDMMC)
-			tdmmc_pcm_stop();
-#endif
-	}
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
-}
-
 static irqreturn_t tdm_if_isr(int irq, void *dev_id)
 {
 	struct mv_phone_intr_info tdm_int_info;
@@ -555,7 +573,7 @@ static irqreturn_t tdm_if_isr(int irq, void *dev_id)
 			/* If Rx/Tx tasklets already scheduled, let them do the work. */
 			if ((!rx_buff) && (!tx_buff)) {
 				dev_dbg(priv->dev, "Stopping the TDM\n");
-				tdm_if_pcm_stop();
+				tdm2c_if_pcm_stop();
 				pcm_stop_flag = 0;
 				tasklet_hi_schedule(&tdm2c_if_stop_tasklet);
 			} else {
@@ -688,7 +706,7 @@ static void tdm_if_pcm_rx_process(unsigned long arg)
 	if (tdm_type == MV_TDM_UNIT_TDM2C) {
 		if ((pcm_stop_flag == 1) && !tx_buff) {
 			dev_dbg(priv->dev, "Stopping TDM from Rx tasklet\n");
-			tdm_if_pcm_stop();
+			tdm2c_if_pcm_stop();
 			spin_lock_irqsave(&tdm_if_lock, flags);
 			pcm_stop_flag = 0;
 			spin_unlock_irqrestore(&tdm_if_lock, flags);
@@ -745,7 +763,7 @@ static void tdm_if_pcm_tx_process(unsigned long arg)
 	if (tdm_type == MV_TDM_UNIT_TDM2C) {
 		if ((pcm_stop_flag == 1) && !rx_buff) {
 			dev_dbg(priv->dev, "Stopping TDM from Tx tasklet\n");
-			tdm_if_pcm_stop();
+			tdm2c_if_pcm_stop();
 			spin_lock_irqsave(&tdm_if_lock, flags);
 			pcm_stop_flag = 0;
 			spin_unlock_irqrestore(&tdm_if_lock, flags);
@@ -755,21 +773,6 @@ static void tdm_if_pcm_tx_process(unsigned long arg)
 #endif
 }
 
-static void tdm_if_stats_get(struct tal_stats *tdm_if_stats)
-{
-	if (tdm_init == 0)
-		return;
-
-	tdm_if_stats->tdm_init = tdm_init;
-	tdm_if_stats->rx_miss = rx_miss;
-	tdm_if_stats->tx_miss = tx_miss;
-	tdm_if_stats->rx_over = rx_over;
-	tdm_if_stats->tx_under = tx_under;
-#ifdef CONFIG_MV_TDM_EXT_STATS
-	tdm2c_ext_stats_get(&tdm_if_stats->tdm_ext_stats);
-#endif
-}
-
 #ifdef CONFIG_MV_TDM2C_SUPPORT
 static void tdm2c_if_stop_channels(unsigned long arg)
 {
@@ -820,28 +823,44 @@ static int tdm_if_control(int cmd, void *arg)
 	return 0;
 }
 
-static int tdm_if_write(u8 *buffer, int size)
+static int tdm2c_if_write(u8 *buffer, int size)
 {
-	if (test_enable) {
-#ifdef CONFIG_MV_TDM2C_SUPPORT
-		if (tdm_if_unit_type_get() == MV_TDM_UNIT_TDM2C)
-			return tdm2c_tx(buffer);
-#endif
-#ifdef CONFIG_MV_TDMMC_SUPPORT
-		if (tdm_if_unit_type_get() == MV_TDM_UNIT_TDMMC)
-			return tdmmc_tx(buffer);
-#endif
-	}
+	if (test_enable)
+		return tdm2c_tx(buffer);
+
+	return 0;
+}
+
+static int tdmmc_if_write(u8 *buffer, int size)
+{
+	if (test_enable)
+		return tdmmc_tx(buffer);
+
 	return 0;
 }
 
+static void tdm_if_stats_get(struct tal_stats *tdm_if_stats)
+{
+	if (tdm_init == 0)
+		return;
+
+	tdm_if_stats->tdm_init = tdm_init;
+	tdm_if_stats->rx_miss = rx_miss;
+	tdm_if_stats->tx_miss = tx_miss;
+	tdm_if_stats->rx_over = rx_over;
+	tdm_if_stats->tx_under = tx_under;
+#ifdef CONFIG_MV_TDM_EXT_STATS
+	tdm2c_ext_stats_get(&tdm_if_stats->tdm_ext_stats);
+#endif
+}
+
 static struct tal_if tdm2c_if = {
 	.init		= tdm_if_init,
 	.exit		= tdm_if_exit,
 	.pcm_start	= tdm_if_pcm_start,
-	.pcm_stop	= tdm_if_pcm_stop,
+	.pcm_stop	= tdm2c_if_pcm_stop,
 	.control	= tdm_if_control,
-	.write		= tdm_if_write,
+	.write		= tdm2c_if_write,
 	.stats_get	= tdm_if_stats_get,
 };
 
@@ -849,9 +868,9 @@ static int tdm_if_write(u8 *buffer, int size)
 	.init		= tdm_if_init,
 	.exit		= tdm_if_exit,
 	.pcm_start	= tdm_if_pcm_start,
-	.pcm_stop	= tdm_if_pcm_stop,
+	.pcm_stop	= tdmmc_if_pcm_stop,
 	.control	= tdm_if_control,
-	.write		= tdm_if_write,
+	.write		= tdmmc_if_write,
 	.stats_get	= tdm_if_stats_get,
 };
 
-- 
1.7.9.5

