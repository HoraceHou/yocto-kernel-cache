From 02f13a6b31711ead830e853a669721e2447c7bbe Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Tue, 8 Aug 2017 11:15:00 +0800
Subject: [PATCH 1106/1345] fix: dvfs: a37x0: decease the DVFS module init
 level

commit  e4e6dacd9d434ff7c4072d76caafb4deb456da2c from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

As the A3700 clock driver marvell-armada-3700-periph-clock
involved, which has init level of 6 and  loaded too late
when cold boot, and caused DVFS driver initialization
failed.

The A37x0 DVFS driver consists of 3 drivers:
armada3700-cpufreq, armada-37xx-pm-clk, and
armada-37xx-regulator.
The driver of armada3700-cpufreq observes OPP-v2 framework,
which will call callback functions registered by driver of
armada-37xx-pm-clk and armada-37xx-regulator when need to
adjust the CPU frequency and CPU VDD.

In order to fix the issue, the patch adjusts the DVFS
drivers load sequence and guarantee the A3700 clock driver
is ready, details as below:
1) Deferral operation during probe is added in driver of
   armada-37xx-regulator and armada-37xx-pm-clk.
2) Decrease init level of armada3700-cpufreq from 6 to 7

JIRA number: A3700-1486

Change-Id: Idd734826a401bd933e1ab59d84fb46a3d9e93728
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/42661
Reviewed-by: Victor Gu <xigu@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/mvebu/armada-37xx-pm-clk.c    |    6 ++++--
 drivers/cpufreq/armada3700-cpufreq.c      |    3 ++-
 drivers/regulator/armada-37xx-regulator.c |    6 ++++--
 3 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/drivers/clk/mvebu/armada-37xx-pm-clk.c b/drivers/clk/mvebu/armada-37xx-pm-clk.c
index 3c22f49..bee813b 100644
--- a/drivers/clk/mvebu/armada-37xx-pm-clk.c
+++ b/drivers/clk/mvebu/armada-37xx-pm-clk.c
@@ -393,8 +393,10 @@ static int armada_3700_clk_pm_probe(struct platform_device *pdev)
 	/* Get maximum possible frequency */
 	max_cpu_clk = devm_clk_get(&pdev->dev, NULL);
 	if (IS_ERR(max_cpu_clk)) {
-		dev_err(dev, "error getting max cpu frequency\n");
-		ret = PTR_ERR(max_cpu_clk);
+		dev_err(&pdev->dev,
+			"error getting max cpu frequency, try again later\n");
+		/* Try probe again after A3700 clock driver loaded */
+		ret = -EPROBE_DEFER;
 		goto free_clk_pm_data;
 	}
 
diff --git a/drivers/cpufreq/armada3700-cpufreq.c b/drivers/cpufreq/armada3700-cpufreq.c
index 2772ff4..3da43da 100644
--- a/drivers/cpufreq/armada3700-cpufreq.c
+++ b/drivers/cpufreq/armada3700-cpufreq.c
@@ -127,7 +127,8 @@ static int __init armada3700_cpufreq_driver_init(void)
 
 	return PTR_ERR_OR_ZERO(pdev);
 }
-module_init(armada3700_cpufreq_driver_init);
+/* late_initcall, to guarantee the driver is loaded after A3700 clock driver */
+late_initcall(armada3700_cpufreq_driver_init);
 
 MODULE_AUTHOR("Victor Gu <xigu@marvell.com>");
 MODULE_AUTHOR("Evan Wang <xswang@marvell.com>");
diff --git a/drivers/regulator/armada-37xx-regulator.c b/drivers/regulator/armada-37xx-regulator.c
index 08acf18..bd3b950 100644
--- a/drivers/regulator/armada-37xx-regulator.c
+++ b/drivers/regulator/armada-37xx-regulator.c
@@ -283,8 +283,10 @@ static int armada_3700_avs_probe(struct platform_device *pdev)
 
 	max_cpu_clk = devm_clk_get(&pdev->dev, NULL);
 	if (IS_ERR(max_cpu_clk)) {
-		dev_err(&pdev->dev, "error getting max cpu frequency\n");
-		ret = PTR_ERR(max_cpu_clk);
+		dev_err(&pdev->dev,
+			"error getting max cpu frequency, try again later\n");
+		/* Try probe again after A3700 clock driver loaded */
+		ret = -EPROBE_DEFER;
 		goto err_put_node;
 	}
 	max_cpu_freq = clk_get_rate(max_cpu_clk) / MHZ_TO_HZ;
-- 
1.7.9.5

