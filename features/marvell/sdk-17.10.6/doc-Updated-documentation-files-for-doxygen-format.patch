From a6d96321a02cd297c31746485b781a869864c16b Mon Sep 17 00:00:00 2001
From: Nadav Haklai <nadavh@marvell.com>
Date: Mon, 5 Dec 2016 17:32:25 +0200
Subject: [PATCH 0632/1345] doc: Updated documentation files for doxygen
 format

commit  85aa647a9fdf8e0caad6fdcfdd2817efe43662b9 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: I39c7867eb68346b9f282d8ff9c6c6eb3ff21d7a6
Signed-off-by: Nadav Haklai <nadavh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34359
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 Documentation/mvebu/porting_guide.txt              |  246 ++++++++------------
 Documentation/mvebu/user_guide.txt                 |   53 ++---
 Documentation/networking/dsa/dsa.txt               |    4 +-
 Documentation/trace/axi-monitor.txt                |   38 ++-
 .../telephony/mvebu_phone/telephony_user_guide.txt |   49 ++--
 5 files changed, 161 insertions(+), 229 deletions(-)

diff --git a/Documentation/mvebu/porting_guide.txt b/Documentation/mvebu/porting_guide.txt
index 60e01c6..903a36f 100644
--- a/Documentation/mvebu/porting_guide.txt
+++ b/Documentation/mvebu/porting_guide.txt
@@ -1,77 +1,62 @@
-==============================
 Porting Guide for Marvell SoCs
 ==============================
 
-This document provides instructions for porting the Marvell Linux package
-to a customer board.
+This document provides instructions for porting Marvell Linux package
+to a customer's board.
 
-================
 Relevant Devices
-================
-
-	Armada-80x0
-	Armada-70x0
-	Armada-37x0
-	Armada-38x
-	Armada-39x
+----------------
+	- Armada-80x0
+	- Armada-70x0
+	- Armada-37x0
+	- Armada-38x
+	- Armada-39x
 
-============
 Introduction
-============
-
-	This section provides general and Marvell specific information about
-	the Linux device-tree.
-
-	The device-tree includes the runtime configuration of Linux Kernel.
-	In addition, the device-tree enables passing configuration parameters
-	for each of the drivers.
-
-	For general information about the device-tree please refer to:
-	http://elinux.org/Device_Tree
+------------
+The device-tree includes runtime configuration for the Linux Kernel.
+In addition, the device-tree enables passing configuration parameters to drivers.
 
-	Marvell's device-tree are located in the following locations:
-	- arch/arm64/boot/dts/marvell for 64bit devices (A37x0, A80x0 and A70x0)
-	- arch/arm/boot/dts for 32bit devices (A38x and A39x).
+For general information about the device-tree please refer to:
+http://elinux.org/Device_Tree
 
-	Marvell specific device-tree information (binding documents) will be
-	provided later in this document.
-
-==================================
-Customer board device-tree porting
-==================================
-
-device-tree files:
+Device-tree files
 -----------------
-	Marvell device-trees consists of 2 types of file:
-	- *.dtsi - Those files represents the SoC. Each available interface
-			   has a node which holds the SoC information.
-	- *.dts  - Those files holds the configuration of the board itself,
-			   enabling/disabling nodes from SoCs, adding board information
-			   to each node (if required).
-
-porting procedure:
+Marvell's device-tree files are located in the following locations:
+- arch/arm64/boot/dts/marvell for 64-bit devices (A37x0, A80x0 and A70x0)
+- arch/arm/boot/dts for 32-bit devices (A38x and A39x).
+
+Marvell device-trees consists of 2 types of file:
+	- *.dtsi - These files represents the SoC. Each available interface
+		   has a node which holds the SoC information.
+	- *.dts  - These files holds the configuration of the board itself,
+		   enabling/disabling nodes from SoCs, adding board information
+		   to each node (if required).
+
+Porting procedure
 -----------------
 	1. Choose one of the following example device-trees (for the SoC in use):
-			arch/arm64/boot/dts/marvell/armada-80x0-customer.dts
-			arch/arm64/boot/dts/marvell/armada-70x0-customer.dts
-			arch/arm64/boot/dts/marvell/armada-37x0-customer.dts
-			arch/arm/boot/dts/marvell/armada-38x-customer.dts	/* TODO - generate */
-			arch/arm/boot/dts/marvell/armada-39x-customer.dts	/* TODO - generate */
-	   Copy the selected file, change the name and place the file
-			in the correct folder, for example:
-				./arch/arm64/boot/dts/marvell/armada-8040-<new_name>.dts
-				./arch/arm/boot/dts/armada-38x-<new_name>.dts
+		- arch/arm64/boot/dts/marvell/armada-80x0-customer.dts
+		- arch/arm64/boot/dts/marvell/armada-70x0-customer.dts
+		- arch/arm64/boot/dts/marvell/armada-37x0-customer.dts
+		- arch/arm/boot/dts/marvell/armada-38x-customer.dts	/* TODO - generate */
+		- arch/arm/boot/dts/marvell/armada-39x-customer.dts	/* TODO - generate */
+
+		Copy the selected file, change the name and place the file in the correct folder, for example:
+		- "/arch/arm64/boot/dts/marvell/armada-8040-<new_name>.dts"
+		- "./arch/arm/boot/dts/armada-38x-<new_name>.dts"
 
 	2. Add the new device-tree file to the corrisponding Makefile:
-			./arch/arm64/boot/dts/marvell/Makefile	(A80x0, A70x0, A37x0)
-			./arch/arm/boot/dts/Makefile		(A38x, A39x)
-			For example:
-			dtb-$(CONFIG_ARCH_MVEBU) += armada-8040-<new_name>.dtb
+		- ./arch/arm64/boot/dts/marvell/Makefile (A80x0, A70x0, A37x0)
+		- ./arch/arm/boot/dts/Makefile		 (A38x, A39x)
+
+		For example:
+		"dtb-$(CONFIG_ARCH_MVEBU) += armada-8040-<new_name>.dtb"
 
 	3. Look for "UPDATE" comments in the device tree and update board
 	   specific information:
-		- model: "Costumer board model"
-		- compatible: "costumer-board-compatible"
+		- Model: "Customer board model"
+		- Compatible: "customer-board-compatible"
 		- Memory size: Update "memory" node properties
 		- MPPs: pinctrl-0 = <handle>
 		- PHY addresses for network nodes
@@ -79,112 +64,63 @@ porting procedure:
 		- SPI flash (if needed)
 		- I2c devices (if needed)
 
-	Driver specific information can be found in the device-tree binding,
-	refer to the next section on this document ("Device-tree bindings").
 
+Device-Tree Bindings
 ====================
-Device-tree bindings
-====================
-
-	In order to make the porting of the drivers easier, each Linux driver
-	has a device tree binding document which explains the usage of the driver.
-	All binding documents are located in: Documentation/devicetree/bindings.
-
-	A list of binding documents for Marvell's drivers (All drivers are available
-	in all supported SoC, unless otherwise stated):
-
-Common
-------
-	- Marvell SATA driver
-	  Binding: ata/ahci-platform.txt
-
-	- USB xHCI controller
-	  Binding: usb/usb-xhci.txt
-
-	- USB device controller
-	  Binding: usb/marvell-u3d.txt
-		   usb/marvell-udc.txt
-
-	- Marvell Xenon SDHCI driver
-	  Binding: mmc/marvell,xenon-sdhci.txt
-
-	- Marvell MDIO ethernet driver
-	  Binding: net/marvell-orion-mdio.txt
-
-	- Marvell PCIe driver
-	  Binding: pci/armada8k-pcie.txt
-
-A80x0/7040
------------
-	- Marvell A80x0/7040 pin control driver
-	  Binding: pinctrl/marvell,armada-ap806-pinctrl.txt
-		   pinctrl/marvell,armada-cp110-pinctrl.txt
-
-	- Marvell Comphy driver
-	  Binding: phy/phy-mvebu-comphy.txt
-
-	- Marvell Telephony driver
-	  Binding: telephony/mvebu-phone.txt
-
-	- Marvell PPv2x ethernet driver
-	  Binding: net/marvell-pp2x.txt
-
-	- Marvell EIP197 security driver (A80x0, A70x0)
-	  Binding: crypto/mv_eip197.txt
-
-	- Marvell AP806 CPU Clock Driver
-	  Binding: clock/mvebu-armada-ap806-cpu-clock.txt
-
-	- Marvell SPI driver
-	  Binding: spi/spi-orion.txt
-
-	- Marvell I2c driver
-	  Binding: i2c/i2c-mv64xxx.txt
+In order to make the porting of the drivers easier, each Linux driver
+has a device tree binding document which explains the usage of the driver.
+All binding documents are located in: Documentation/devicetree/bindings.
+
+The tables below list the binding documents for Marvell's drivers.
+
+Common Drivers
+--------------
+	Driver				| Binding file
+	--------------------------------|---------------------------------------
+	Marvell SATA driver		| ata/ahci-platform.txt
+	USB xHCI controller		| usb/usb-xhci.txt
+	USB device controller		| usb/marvell-u3d.txt, usb/marvell-udc.txt
+	Marvell Xenon SDHCI driver	| mmc/marvell,xenon-sdhci.txt
+	Marvell MDIO ethernet driver	| net/marvell-orion-mdio.txt
+	Marvell PCIe driver		| pci/armada8k-pcie.txt
+
+A80x0/A70x0
+----------
+	Driver				| Binding file
+	--------------------------------|---------------------------------------
+	Marvell A80x0/A70x0 Pinctrl driver| pinctrl/marvell,armada-ap806-pinctrl.txt, pinctrl/marvell,armada-cp110-pinctrl.txt
+	Marvell Comphy driver		| phy/phy-mvebu-comphy.txt
+	Marvell Telephony driver	| telephony/mvebu-phone.txt
+	Marvell PPv2x ethernet driver	| net/marvell-pp2x.txt
+	Marvell EIP197 security driver	| crypto/mv_eip197.txt
+	Marvell AP806 CPU Clock Driver	| clock/mvebu-armada-ap806-cpu-clock.txt
+	Marvell SPI driver		| spi/spi-orion.txt
+	Marvell I2c driver		| i2c/i2c-mv64xxx.txt
 
 A37x0
 -----
-	- Marvell A37x0 Pinctrl driver
-	  Binding: pinctrl/marvell,armada-3700-pinctrl.txt
-
-	- Marvell Neta Ethernet controller
-	  Binding: net/marvell-armada-370-neta.txt
-
-	- Marvell A37x0 i2c driver:
-	  Binding: i2c/i2c-pxa.txt
-
-	- Marvell A37x0 SPI driver
-	  spi/spi-armada-3700.txt
-
-	- Marvell A37x0 USB OTG (Host/Device Switching) PHY driver
-	  Binding: usb/armada3700-otg-phy.txt
+	Driver				| Binding file
+	--------------------------------|---------------------------------------
+	Marvell A37x0 Pinctrl driver	| pinctrl/marvell,armada-3700-pinctrl.txt
+	Marvell Neta Ethernet controller| net/marvell-armada-370-neta.txt
+	Marvell A37x0 i2c driver	| i2c/i2c-pxa.txt
+	Marvell A37x0 SPI driver	| spi/spi-armada-3700.txt
 
 A39x
 ----
-	- Marvell A39x Pinctrl driver
-	  Binding: pinctrl/marvell,armada-39x-pinctrl.txt
-
-	- Marvell PP3 Ethernet controller
-	  Binding: net/marvell-pp3-platform.txt
-
-	- Marvell SPI driver
-	  Binding: spi/spi-orion.txt
-
-	- Marvell I2c driver
-	  Binding: i2c/i2c-mv64xxx.txt
+	Driver				| Binding file
+	--------------------------------|---------------------------------------
+	Marvell A39x Pinctrl driver	| pinctrl/marvell,armada-39x-pinctrl.txt
+	Marvell PP3 Ethernet controller	| net/marvell-pp3-platform.txt
+	Marvell SPI driver		| spi/spi-orion.txt
+	Marvell I2c driver		| i2c/i2c-mv64xxx.txt
 
 A38x
 ----
-	- Marvell A38x Pinctrl driver
-	  Binding: pinctrl/marvell,armada-38x-pinctrl.txt
-
-	- Marvell Telephony driver
-	  Binding: telephony/mvebu-phone.txt
-
-	- Marvell Neta Ethernet controller
-	  marvell-armada-370-neta.txt
-
-	- Marvell SPI driver
-	  Binding: spi/spi-orion.txt
-
-	- Marvell I2c driver
-	  Binding: i2c/i2c-mv64xxx.txt
+	Driver				| Binding file
+	--------------------------------|---------------------------------------
+	Marvell A38x Pinctrl driver	| pinctrl/marvell,armada-38x-pinctrl.txt
+	Marvell Telephony driver	| telephony/mvebu-phone.txt
+	Marvell Neta Ethernet controller| marvell-armada-370-neta.txt
+	Marvell SPI driver		| spi/spi-orion.txt
+	Marvell I2c driver		| i2c/i2c-mv64xxx.txt
diff --git a/Documentation/mvebu/user_guide.txt b/Documentation/mvebu/user_guide.txt
index d0c9884..9018a95 100644
--- a/Documentation/mvebu/user_guide.txt
+++ b/Documentation/mvebu/user_guide.txt
@@ -1,45 +1,34 @@
-Marvell user guide
+Kernel Build Instructions
+=========================
 
-
-Build instructions
-==================
-ARMv8:
+ARMv8
 -----
+
 	$ export CROSS_COMPILE=<path/to/cross/compiler/>
-		(Path to compiler gcc executable, without the gcc suffix. e.g. CROSS_COMPILE=/my_compilers/gcc-5.2/bin/aarch64-marvell-linux-gnu-)
+	  (Path to gcc compiler, without the gcc suffix. e.g. CROSS_COMPILE=/my_compilers/gcc-5.2/bin/aarch64-marvell-linux-gnu-)
 	$ export ARCH=arm64
 	$ make mvebu_v8_lsp_defconfig
 	$ make - for build kernel image and device tree images.
-	- Linux image is under: 'arch/arm64/boot/Image'.
-	- Device tree images are generated under: 'arch/arm64/boot/dts/marvell'.
-	  For example (more device-trees are available in the folder):
-		arch/arm64/boot/dts/marvell/armada-3720-community.dtb
-		arch/arm64/boot/dts/marvell/armada-8040-mcbin.dtb
 
-ARMv7:
+- Linux image is under: 'arch/arm64/boot/Image'.
+- Device tree images are generated under: 'arch/arm64/boot/dts/marvell'.
+  For example (more device-trees are available in the folder):
+	- arch/arm64/boot/dts/marvell/armada-3720-community.dtb
+	- arch/arm64/boot/dts/marvell/armada-8040-mcbin.dtb
+
+ARMv7
 -----
+
 	$ export CROSS_COMPILE=<path/to/cross/compiler/>
-		(Path to compiler gcc executable, without the gcc suffix. e.g. CROSS_COMPILE=/my_compilers/gcc-5.2/bin/aarch64-marvell-linux-gnu-)
+	  (Path to gcc compiler, without the gcc suffix. e.g. CROSS_COMPILE=/my_compilers/gcc-5.2/bin/aarch64-marvell-linux-gnu-)
 	$ export ARCH=arm
 	$ make mvebu_v7_lsp_defconfig
 	$ make - for build kernel image and device tree images.
 	$ make zImage - for build kernel image
-	- Linux image is under: 'arch/arm/boot/zImage'.
-	- Device tree images are generated under: 'arch/arm/boot/dts'.
-	  For example (more device-trees are available in the folder):
-		arch/arm/boot/dts/marvell/armada-388-clearfog.dtb
-
-Board options
-=============
-	List of board options of development board.
-	doc/mvebu/<soc_name>/<board_name>-setup.txt
-
-Drivers used in Marvells release
-================================
-
-	Driver			Kernel infrastructe		Link
-	------------------------------------------------------------
-	Comphy			Generic PHY framework		Documentation/phy.txt
-	mv_xor, mv_xor2		DMA Engine			Documentation/dmaengine/00-INDEX
-	Telephony		Marvell proprietary		drivers/telephony/mvebu_phone/telephony_user_guide.txt
-	cpufreq			generic cpufreq-dt		Documentation/cpu-freq/user-guide.txt
+
+- Linux image is under: 'arch/arm/boot/zImage'.
+- Device tree images are generated under: 'arch/arm/boot/dts'.
+  For example (more device-trees are available in the folder):
+	- arch/arm/boot/dts/marvell/armada-388-clearfog.dtb
+
+
diff --git a/Documentation/networking/dsa/dsa.txt b/Documentation/networking/dsa/dsa.txt
index b8b4075..c0773d3 100644
--- a/Documentation/networking/dsa/dsa.txt
+++ b/Documentation/networking/dsa/dsa.txt
@@ -181,9 +181,9 @@ perspective:
 			|                          |
 			|        tag added by CPU> |
 		|--------------------------------------------|
-		| Switch driver				     |
+		| Switch driver                              |
 		|--------------------------------------------|
-                    ||        ||         ||
+            ||        ||         ||
 		|-------|  |-------|  |-------|
 		| sw0p0 |  | sw0p1 |  | sw0p2 |
 		|-------|  |-------|  |-------|
diff --git a/Documentation/trace/axi-monitor.txt b/Documentation/trace/axi-monitor.txt
index dbb5750..d5b80ed 100644
--- a/Documentation/trace/axi-monitor.txt
+++ b/Documentation/trace/axi-monitor.txt
@@ -1,5 +1,5 @@
-		AXI Monitor - A bus monitor for debug and trace
-		===============================================
+AXI Monitor
+===========
 
    Author:   Yehuda Yitschak <yehuday@marvell.com>
    Date:     April 6th, 2016
@@ -22,16 +22,16 @@ The profiling counters can also be independently traced to the STM.
 An AXIM monitors a single direction bus, meaning a read channel or write channel.
 A typical AXIM connection may look like this.
 
-					     -------
-					     |	   |
-			--------    -------->| CTI |
-AXI channel (rd/wr)	|      |    |	     |     |
------------------------>| AXIM | ---|	     -------
-			|      |    |        -------	  -------
-			--------    |	     |     |      |     |
-				    -------->| STM |----->| ETF |
-				             |     |      |     |
-					     -------      -------
+								|-------
+								|       |
+					--------    -------->| CTI |
+		AXI channel (rd/wr) |      |    |      |     |
+		----------------------->| AXIM | ---|   -------
+					|      |    |      -------      -------
+					--------    |      |     |      |     |
+							-------->| STM |----->| ETF |
+									 |     |      |     |
+								 -------      -------
 
 The AXI monitor has several revisions with different feature set:
 
@@ -42,13 +42,10 @@ Rev 2
    * Profiling of transaction variables
    * Tracing detected events and profiling counters
 
-Acronyms and Classification
----------------------------
-
-Acronyms:
-
-STM:     System trace Macrocell
-CTI:     Cross Trigger Interface
+Acronyms
+--------
+- STM:	System trace Macrocell
+- CTI:	Cross Trigger Interface
 
 Device Tree Bindings
 ----------------------
@@ -106,7 +103,8 @@ Another example is detecting all non secure shareable device accesses:
 The specific sysfs files and their functions are documented under:
 Documentation/ABI/testing/sysfs-bus-coresight-devices-axim
 
-NOTE:
+NOTE
+----
 CPU or device accesses may not map the same to AXI bus transactions.
 For example when a CPU accesses a non 64byte aligned address (e.g 0x10), the L2 may
 issue a cache line prefetch to the aligned address (0x0). Therefore it is advised
diff --git a/drivers/telephony/mvebu_phone/telephony_user_guide.txt b/drivers/telephony/mvebu_phone/telephony_user_guide.txt
index c41ba7a..f5c17ad 100644
--- a/drivers/telephony/mvebu_phone/telephony_user_guide.txt
+++ b/drivers/telephony/mvebu_phone/telephony_user_guide.txt
@@ -1,7 +1,7 @@
 Marvell TDM telephony user guide
 ================================
 
-Introduction:
+Introduction
 ------------
 There are 2 telephony controllers in Marvell SoCs:
 	- 2-channel TDM (TDM2C, available in A380)
@@ -14,7 +14,7 @@ In order to use telephony drivers the following SW modules are required
 	- SLIC (Subscriber line interface card) Linux Kernel module
 	- Demo user-space application (mv-voice-tool)
 
-Linux Image:
+Linux Image
 -----------
 There are config options for both telephony controllers:
 	- MV_TDMMC_SUPPORT for multi-channel TDM
@@ -22,40 +22,49 @@ There are config options for both telephony controllers:
 arch/arm/configs/mvebu_v7_lsp_defconfig enables both controllers
 arch/arm64/confgs/mvebu_v8_lsp_defconfig enables MV_TDMMC_SUPPORT.
 
-Device-tree:
+Device-tree
 ------------
 Refer to: Documentation/devicetree/bindings/telephony/mvebu-phone.txt
 
-SLIC:
+SLIC
 ----
 There are pre-compiled Linux Kernel modules for supported SLIC devices.
-Silabs SLICs: silabs-si3217x.ko, silabs-si3226x.ko
-Zarlink SLICs: zarlink-ve792.ko zarlink-ve880.ko
-	       zarlink-ve886.ko zarlink-ve888.ko zarlink-ve890.ko
+- Silabs SLICs:
+	- silabs-si3217x.ko
+	- silabs-si3226x.ko
+- Zarlink SLICs:
+	- zarlink-ve792.ko
+	- zarlink-ve880.ko
+	- zarlink-ve886.ko
+	- zarlink-ve888.ko
+	- zarlink-ve890.ko
 
 The corresponding Kernel module should be inserted after boot using:
-insmod <Kernel_module_name>
+
+	insmod <Kernel_module_name>
+
 For example: insmod silabs-si3226x.ko
 
-mv-voice-tool:
+mv-voice-tool
 -------------
 User-space application which communicates via ioctl with the telephony
 driver. mv-voice-tool must suit the SLIC which is used:
-	SLIC			mv-voice-tool
-	------			---------------
-	silabs-si3226x.ko	mv_voice_tool-si3217x
-	silabs-si3217x.ko	mv_voice_tool-si3217x
-	zarlink-ve792.ko	mv_voice_tool-ve792
-	zarlink-ve880.ko	mv_voice_tool-ve880
-	zarlink-ve886.ko	mv_voice_tool-ve886
-	zarlink-ve888.ko	mv_voice_tool-ve888
-	zarlink-ve890.ko	mv_voice_tool-ve890
+	SLIC			|	mv-voice-tool
+	------------------------|------------------------
+	silabs-si3226x.ko	|	mv_voice_tool-si3217x
+	silabs-si3217x.ko	|	mv_voice_tool-si3217x
+	zarlink-ve792.ko	|	mv_voice_tool-ve792
+	zarlink-ve880.ko	|	mv_voice_tool-ve880
+	zarlink-ve886.ko	|	mv_voice_tool-ve886
+	zarlink-ve888.ko	|	mv_voice_tool-ve888
+	zarlink-ve890.ko	|	mv_voice_tool-ve890
 
 In order to run mv-voice tool, run the following command:
-run mv-voice-tool:
-./mv_voice_tool-<version>
+
+	./mv_voice_tool-<version>
 
 Example for connecting 2 phones using mv-voice-tool:
+
 	# ./mv_voice_tool-si3226x
 
 	>>  Please enter total lines number: 2
-- 
1.7.9.5

