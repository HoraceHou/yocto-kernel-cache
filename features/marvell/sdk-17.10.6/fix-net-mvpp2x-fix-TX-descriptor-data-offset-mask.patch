From e11b40ec3f16c937f1cac3dbfb36ac879ce9cab0 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Thu, 8 Jun 2017 13:27:59 +0300
Subject: [PATCH 1029/1345] fix: net: mvpp2x: fix TX descriptor data offset
 mask
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit  d600ad0021e79145aca760ddd883a8d8a3f0ca7e from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Wrong TX descriptor data offset mask were set.
This patch change TX descriptor data offset mask to 0xFF
and rename define.
This patch didnâ€™t make any functionality changes.
Correct mask required for buffer recycling support.

Change-Id: I73580fc6ccdc6530233aad60198fe857e539662d
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/40299
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h  |    4 ++--
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   16 ++++++++--------
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
index 8e4d1fe..03ddbfd 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
@@ -1224,8 +1224,8 @@
 					MVPP2_DESC_Q_ALIGN)
 #define MVPP2_DESCQ_MEM_ALIGN(mem)	(ALIGN(mem, MVPP2_DESC_Q_ALIGN))
 
-/* Descriptor alignment mask */
-#define MVPP2_TX_DESC_ALIGN		(MVPP2_DESC_ALIGNED_SIZE - 1)
+/* TX descriptor data offset mask */
+#define MVPP2_TX_DESC_DATA_OFFSET		0XFF
 
 /* TX FIFO constants */
 #define MVPP2_TX_FIFO_DATA_SIZE_10KB		0xa
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index a096f7b..80865eb 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -2599,9 +2599,9 @@ static int mv_pp2x_tx_frag_process(struct mv_pp2x_port *port,
 			mv_pp2x_txq_desc_put(txq);
 			goto error;
 		}
-		tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_ALIGN;
+		tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_DATA_OFFSET;
 		mv_pp2x_txdesc_phys_addr_set(port->priv->pp2_version,
-					     buf_phys_addr & ~MVPP2_TX_DESC_ALIGN, tx_desc);
+					     buf_phys_addr & ~MVPP2_TX_DESC_DATA_OFFSET, tx_desc);
 
 		if (i == (skb_shinfo(skb)->nr_frags - 1)) {
 			/* Last descriptor */
@@ -2742,10 +2742,10 @@ static inline int mv_pp2_tso_build_hdr_desc(struct mv_pp2x_tx_desc *tx_desc,
 		return -1;
 	}
 
-	tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_ALIGN;
+	tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_DATA_OFFSET;
 
 	mv_pp2x_txdesc_phys_addr_set(port->priv->pp2_version,
-				     buf_phys_addr & ~MVPP2_TX_DESC_ALIGN, tx_desc);
+				     buf_phys_addr & ~MVPP2_TX_DESC_DATA_OFFSET, tx_desc);
 
 	mv_pp2x_txq_inc_put(port->priv->pp2_version,
 			    txq_pcpu,
@@ -2777,10 +2777,10 @@ static inline int mv_pp2_tso_build_data_desc(struct mv_pp2x_port *port,
 		return -1;
 	}
 
-	tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_ALIGN;
+	tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_DATA_OFFSET;
 
 	mv_pp2x_txdesc_phys_addr_set(port->priv->pp2_version,
-				     buf_phys_addr & ~MVPP2_TX_DESC_ALIGN, tx_desc);
+				     buf_phys_addr & ~MVPP2_TX_DESC_DATA_OFFSET, tx_desc);
 
 	tx_desc->command = 0;
 
@@ -3071,9 +3071,9 @@ static int mv_pp2x_tx(struct sk_buff *skb, struct net_device *dev)
 	}
 	pr_debug("buf_phys_addr=%x\n", (unsigned int)buf_phys_addr);
 
-	tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_ALIGN;
+	tx_desc->packet_offset = buf_phys_addr & MVPP2_TX_DESC_DATA_OFFSET;
 	mv_pp2x_txdesc_phys_addr_set(port->priv->pp2_version,
-				     buf_phys_addr & ~MVPP2_TX_DESC_ALIGN, tx_desc);
+				     buf_phys_addr & ~MVPP2_TX_DESC_DATA_OFFSET, tx_desc);
 
 	tx_cmd = mv_pp2x_skb_tx_csum(port, skb);
 	if (frags == 1) {
-- 
1.7.9.5

