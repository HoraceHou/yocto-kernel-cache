From f2f6e2a47ad67915048723f2228696099ba34361 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Wed, 7 Dec 2016 15:23:00 +0200
Subject: [PATCH 0661/1345] net: mvpp2x: clean optional part of tx descriptor

commit  8733f48cb5d3f453f3a533c282853af554543cd2 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

tx_desc has dozens of fields.
Some Mandatory fields are always initialized.
But other fields are service-specific only, they are NOT cleared
after hw-consumption and go with new/irrelevant packets.
Clear the tx_desc before usage

Change-Id: I8fb6625f5cc61783f1ea34a03c8d17c9c41946b2
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34449
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index dda0e63..242cf65 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -2913,6 +2913,21 @@ static int mv_pp2x_tx(struct sk_buff *skb, struct net_device *dev)
 #ifdef MVPP2_VERBOSE
 		mv_pp2x_skb_dump(skb, tx_desc->data_size, 4);
 #endif
+	/* Mandatory tx_desc fields are always initialized, but
+	 * service-specific fields are NOT cleared => old tx_desc impacts
+	 * new TX by irrelevant data inside. Clear these fields before usage.
+	 * The clear shold be done in an asm-optimized way.
+	 * Bit-field and Byte access generates in assembler some additional asm commands.
+	 * But Write32bitZero only to required fields is most effective.
+	 */
+#ifdef CONFIG_MV_PTP_SERVICE
+	/* Clearing the following fields:
+	 * u32[2]: 0x08: L4iChk , DSATTag, DP, GEM_port_id/PTP_Descriptor[11:0]
+	 * u32[5]: 0x14: Buffer_physical_pointer ,PTP Descriptor
+	 */
+	*((u32 *)tx_desc + 2) = 0;
+	*((u32 *)tx_desc + 5) = 0;
+#endif
 
 	buf_phys_addr = dma_map_single(dev->dev.parent, skb->data,
 				       tx_desc->data_size, DMA_TO_DEVICE);
-- 
1.7.9.5

