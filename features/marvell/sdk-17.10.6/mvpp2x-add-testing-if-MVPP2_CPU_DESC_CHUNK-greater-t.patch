From 33066677ba5fdb9d6c60c651591e00edd509d548 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Thu, 22 Sep 2016 15:29:07 +0300
Subject: [PATCH 0520/1345] mvpp2x: add testing if MVPP2_CPU_DESC_CHUNK
 greater than MAX_SKB_FRAGS

commit  5c2e4dcbacd2922fb150d215b92bd5e53a460adc from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- in current Linux version MAX_SKB_FRAGS equal to 17

Change-Id: I6362826f90c5be9a42b4e5427ef07504894d9740
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33077
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   36 ++++++++++++--------
 1 file changed, 21 insertions(+), 15 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 9a130e8..1eab444 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -857,7 +857,7 @@ int mv_pp2x_txq_reserved_desc_num_proc(
 					struct mv_pp2x_txq_pcpu *txq_pcpu,
 					int num)
 {
-	int req, cpu, desc_count;
+	int req;
 
 	if (txq_pcpu->reserved_num >= num)
 		return 0;
@@ -873,24 +873,30 @@ int mv_pp2x_txq_reserved_desc_num_proc(
 
 	req = MVPP2_CPU_DESC_CHUNK;
 
-	if ((num - txq_pcpu->reserved_num) > req) {
-		req = num - txq_pcpu->reserved_num;
-		desc_count = 0;
-		/* Compute total of used descriptors */
-		for_each_online_cpu(cpu) {
-			int txq_count;
-			struct mv_pp2x_txq_pcpu *txq_pcpu_aux;
+#if (MVPP2_CPU_DESC_CHUNK < MAX_SKB_FRAGS)
+	{
+		int cpu_desc, desc_count;
 
-			txq_pcpu_aux = per_cpu_ptr(txq->pcpu, cpu);
-			txq_count = mv_pp2x_txq_count(txq_pcpu_aux);
-			desc_count += txq_count;
+		if ((num - txq_pcpu->reserved_num) > req) {
+			req = num - txq_pcpu->reserved_num;
+			desc_count = 0;
+			/* Compute total of used descriptors */
+			for_each_online_cpu(cpu_desc) {
+				int txq_count;
+				struct mv_pp2x_txq_pcpu *txq_pcpu_aux;
 
-		}
-		desc_count += req;
+				txq_pcpu_aux = per_cpu_ptr(txq->pcpu, cpu_desc);
+				txq_count = mv_pp2x_txq_count(txq_pcpu_aux);
+				desc_count += txq_count;
 
-		if (desc_count > txq->size)
-			return -ENOMEM;
+			}
+			desc_count += req;
+
+			if (desc_count > txq->size)
+				return -ENOMEM;
+		}
 	}
+#endif
 
 	txq_pcpu->reserved_num += mv_pp2x_txq_alloc_reserved_desc(priv, txq,
 								  req);
-- 
1.7.9.5

