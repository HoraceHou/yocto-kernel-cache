From d7bc8a25bcfb529746ba253e163887c61bd87562 Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Thu, 22 Dec 2016 11:29:07 +0100
Subject: [PATCH 0671/1345] telephony: mvebu: split Tx tasklet

commit  705926658d2e51efd2c68105146074fc6c9f4798 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Because of siginificant differences it was better to split the tasklet
for tdm2c and tdmmc. It allowed to remove ifdefs and conditional code.
Also global mv_tdm_unit_type became obsolete and could be removed
along with tdm_if_unit_type_get function.

Change-Id: Ibc3e3859c5cb1d03960f914381a3dcca625795af
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35040
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/telephony/mvebu_phone/mv_phone_dev.c |   84 ++++++++++++++------------
 1 file changed, 44 insertions(+), 40 deletions(-)

diff --git a/drivers/telephony/mvebu_phone/mv_phone_dev.c b/drivers/telephony/mvebu_phone/mv_phone_dev.c
index ac4818c..76e6d23 100644
--- a/drivers/telephony/mvebu_phone/mv_phone_dev.c
+++ b/drivers/telephony/mvebu_phone/mv_phone_dev.c
@@ -120,7 +120,8 @@
 /* Rx/Tx Tasklets  */
 static void tdm2c_if_pcm_rx_process(unsigned long arg);
 static void tdmmc_if_pcm_rx_process(unsigned long arg);
-static void tdm_if_pcm_tx_process(unsigned long arg);
+static void tdm2c_if_pcm_tx_process(unsigned long arg);
+static void tdmmc_if_pcm_tx_process(unsigned long arg);
 
 /* TDM SW Reset */
 static void tdm2c_if_stop_channels(unsigned long args);
@@ -128,7 +129,8 @@
 /* Globals */
 static DECLARE_TASKLET(tdm2c_if_rx_tasklet, tdm2c_if_pcm_rx_process, 0);
 static DECLARE_TASKLET(tdmmc_if_rx_tasklet, tdmmc_if_pcm_rx_process, 0);
-static DECLARE_TASKLET(tdm_if_tx_tasklet, tdm_if_pcm_tx_process, 0);
+static DECLARE_TASKLET(tdm2c_if_tx_tasklet, tdm2c_if_pcm_tx_process, 0);
+static DECLARE_TASKLET(tdmmc_if_tx_tasklet, tdmmc_if_pcm_tx_process, 0);
 static DECLARE_TASKLET(tdm2c_if_stop_tasklet, tdm2c_if_stop_channels, 0);
 static DEFINE_SPINLOCK(tdm_if_lock);
 static u8 *rx_buff, *tx_buff;
@@ -146,7 +148,6 @@
 static int pcm_stop_status;
 static u32 pcm_start_stop_state;
 static u32 is_pcm_stopping;
-static u32 mv_tdm_unit_type;
 
 static int proc_tdm_status_show(struct seq_file *m, void *v)
 {
@@ -192,11 +193,6 @@ static int proc_tdm_status_open(struct inode *inode, struct file *file)
 	.release	= seq_release,
 };
 
-static u32 tdm_if_unit_type_get(void)
-{
-	return mv_tdm_unit_type;
-}
-
 static void tdm2c_if_pcm_start(void)
 {
 	unsigned long flags;
@@ -502,6 +498,7 @@ static irqreturn_t tdm_if_isr(int irq, void *dev_id)
 {
 	struct mv_phone_intr_info tdm_int_info;
 	struct tasklet_struct *tdm_rx_tasklet = NULL;
+	struct tasklet_struct *tdm_tx_tasklet = NULL;
 	u32 int_type;
 	int ret = 0;
 
@@ -510,10 +507,12 @@ static irqreturn_t tdm_if_isr(int irq, void *dev_id)
 	case MV_TDM_UNIT_TDM2C:
 		ret = tdm2c_intr_low(&tdm_int_info);
 		tdm_rx_tasklet = &tdm2c_if_rx_tasklet;
+		tdm_tx_tasklet = &tdm2c_if_tx_tasklet;
 		break;
 	case MV_TDM_UNIT_TDMMC:
 		tdmmc_intr_low(&tdm_int_info);
 		tdm_rx_tasklet = &tdmmc_if_rx_tasklet;
+		tdm_tx_tasklet = &tdmmc_if_tx_tasklet;
 		break;
 	default:
 		dev_err(&priv->parent->dev, "%s: undefined TDM type\n", __func__);
@@ -575,7 +574,7 @@ static irqreturn_t tdm_if_isr(int irq, void *dev_id)
 			tx_buff = tdm_int_info.tdm_tx_buff;
 			/* Schedule Tx processing within SOFT_IRQ context */
 			dev_dbg(priv->dev, "%s: schedule Tx tasklet\n", __func__);
-			tasklet_hi_schedule(&tdm_if_tx_tasklet);
+			tasklet_hi_schedule(tdm_tx_tasklet);
 		}
 	}
 
@@ -665,13 +664,10 @@ static void tdmmc_if_pcm_rx_process(unsigned long arg)
 	spin_unlock_irqrestore(&tdm_if_lock, flags);
 }
 
-/* Tx tasklet */
-static void tdm_if_pcm_tx_process(unsigned long arg)
+/* Tx tasklets */
+static void tdm2c_if_pcm_tx_process(unsigned long arg)
 {
 	unsigned long flags;
-	u32 tdm_type;
-
-	tdm_type = tdm_if_unit_type_get();
 
 	if (pcm_enable) {
 		if (tx_buff == NULL) {
@@ -682,20 +678,10 @@ static void tdm_if_pcm_tx_process(unsigned long arg)
 		/* Dispatch Tx handler */
 		tal_mmp_tx(tx_buff, buff_size);
 
-		if (test_enable == 0) {
-#ifdef CONFIG_MV_TDM2C_SUPPORT
+		if (!test_enable) {
 			/* Fill Tx aggregated buffer */
-			if (tdm_type == MV_TDM_UNIT_TDM2C) {
-				if (tdm2c_tx(tx_buff) != 0)
-					dev_warn(priv->dev, "%s: could not fill Tx buffer\n", __func__);
-			}
-#endif
-#ifdef CONFIG_MV_TDMMC_SUPPORT
-			if (tdm_type == MV_TDM_UNIT_TDMMC) {
-				if (tdmmc_tx(tx_buff) != 0)
-					dev_warn(priv->dev, "%s: could not fill Tx buffer\n", __func__);
-			}
-#endif
+			if (tdm2c_tx(tx_buff) != 0)
+				dev_warn(priv->dev, "%s: Could not fill Tx buffer\n", __func__);
 		}
 	}
 
@@ -704,18 +690,39 @@ static void tdm_if_pcm_tx_process(unsigned long arg)
 	tx_buff = NULL;
 	spin_unlock_irqrestore(&tdm_if_lock, flags);
 
-#ifdef CONFIG_MV_TDM2C_SUPPORT
-	if (tdm_type == MV_TDM_UNIT_TDM2C) {
-		if ((pcm_stop_flag == 1) && !rx_buff) {
-			dev_dbg(priv->dev, "Stopping TDM from Tx tasklet\n");
-			tdm2c_if_pcm_stop();
-			spin_lock_irqsave(&tdm_if_lock, flags);
-			pcm_stop_flag = 0;
-			spin_unlock_irqrestore(&tdm_if_lock, flags);
-			tasklet_hi_schedule(&tdm2c_if_stop_tasklet);
+	if ((pcm_stop_flag == 1) && !rx_buff) {
+		dev_dbg(priv->dev, "Stopping TDM from Tx tasklet\n");
+		tdm2c_if_pcm_stop();
+		spin_lock_irqsave(&tdm_if_lock, flags);
+		pcm_stop_flag = 0;
+		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		tasklet_hi_schedule(&tdm2c_if_stop_tasklet);
+	}
+}
+
+static void tdmmc_if_pcm_tx_process(unsigned long arg)
+{
+	unsigned long flags;
+
+	if (pcm_enable) {
+		if (tx_buff == NULL) {
+			dev_warn(priv->dev, "%s: Error, empty Tx processing\n", __func__);
+			return;
+		}
+
+		/* Dispatch Tx handler */
+		tal_mmp_tx(tx_buff, buff_size);
+
+		if (!test_enable) {
+			if (tdmmc_tx(tx_buff) != 0)
+				dev_warn(priv->dev, "%s: Could not fill Tx buffer\n", __func__);
 		}
 	}
-#endif
+
+	spin_lock_irqsave(&tdm_if_lock, flags);
+	/* Clear tx_buff for next iteration */
+	tx_buff = NULL;
+	spin_unlock_irqrestore(&tdm_if_lock, flags);
 }
 
 static void tdm2c_if_stop_channels(unsigned long arg)
@@ -1077,7 +1084,6 @@ static int mvebu_phone_probe(struct platform_device *pdev)
 		priv->irq_count = 1;
 
 		tal_set_if(&tdm2c_if);
-		mv_tdm_unit_type = MV_TDM_UNIT_TDM2C;
 	}
 
 	if (of_device_is_compatible(priv->np, "marvell,armada-xp-tdm")) {
@@ -1089,7 +1095,6 @@ static int mvebu_phone_probe(struct platform_device *pdev)
 		priv->irq_count = 1;
 
 		tal_set_if(&tdmmc_if);
-		mv_tdm_unit_type = MV_TDM_UNIT_TDMMC;
 	}
 
 	if (of_device_is_compatible(priv->np, "marvell,armada-a8k-tdm")) {
@@ -1099,7 +1104,6 @@ static int mvebu_phone_probe(struct platform_device *pdev)
 		priv->irq_count = 3;
 
 		tal_set_if(&tdmmc_if);
-		mv_tdm_unit_type = MV_TDM_UNIT_TDMMC;
 	}
 
 	/* Obtain IRQ numbers */
-- 
1.7.9.5

