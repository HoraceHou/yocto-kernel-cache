From 719e3a9a52176eeb9f5318a7461ef04e4a6da773 Mon Sep 17 00:00:00 2001
From: Alan Winkowski <walan@marvell.com>
Date: Tue, 19 Jul 2016 19:53:51 +0300
Subject: [PATCH 0364/1345] mvpp2x: change unsigned char/short/int to
 u8/u16/u32

commit  b76024042671aa5ad5b8d9f2d24e89d4a7241b74 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: Ida79cfce597efa65e98626bb05cd6db9007d14d6
Signed-off-by: Alan Winkowski <walan@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/31253
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h      |   16 +++----
 .../net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h  |   46 ++++++++++----------
 2 files changed, 31 insertions(+), 31 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
index 815976f..39fc09c 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
@@ -107,7 +107,7 @@
 
 #define MVPP2_PRINT_VAR(var) \
 	pr_info("%s(%d): "#var"=0x%lx\n", __func__, __LINE__,\
-		(unsigned long)var)
+		(u64)var)
 #define MVPP2_PRINT_VAR_NAME(var, name) \
 	pr_info("%s(%d): %s=0x%lx\n", __func__, __LINE__, name, var)
 #else
@@ -203,7 +203,7 @@ enum mv_pp2x_rss_nf_udp_mode {
 
 struct mv_mac_data {
 	u8			gop_index;
-	unsigned long		flags;
+	u64			flags;
 	/* Whether a PHY is present, and if yes, at which address. */
 	int			phy_addr;
 	phy_interface_t		phy_mode; /* RXAUI, SGMII, etc. */
@@ -212,10 +212,10 @@ struct mv_mac_data {
 	int			link_irq;
 	char			irq_name[IRQ_NAME_SIZE];
 	bool			force_link;
-	unsigned int		autoneg;
-	unsigned int		link;
-	unsigned int		duplex;
-	unsigned int		speed;
+	u32			autoneg;
+	u32			link;
+	u32			duplex;
+	u32			speed;
 };
 
 /* Masks used for pp3_emac flags */
@@ -506,7 +506,7 @@ struct mv_pp2x_port_pcpu {
 };
 
 struct queue_vector {
-	unsigned int irq;
+	u32 irq;
 	char irq_name[IRQ_NAME_SIZE];
 	struct napi_struct napi;
 	enum mv_pp2x_queue_vector_type qv_type;
@@ -557,7 +557,7 @@ struct mv_pp2x_port {
 	/* Per-CPU port control */
 	struct mv_pp2x_port_pcpu __percpu *pcpu;
 	/* Flags */
-	unsigned long flags;
+	u64 flags;
 
 	u16 tx_ring_size;
 	u16 rx_ring_size;
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
index 7c05be8..964c18d 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
@@ -2045,8 +2045,8 @@ enum mv_pp2x_src_port_type {
 
 struct mv_pp2x_src_port {
 	enum mv_pp2x_src_port_type	port_type;
-	unsigned int			port_value;
-	unsigned int			port_mask;
+	u32				port_value;
+	u32				port_mask;
 };
 
 enum mv_pp2x_qos_tbl_sel {
@@ -2063,9 +2063,9 @@ struct mv_pp2x_engine_qos_info {
 	/* dscp pri table or none */
 	enum mv_pp2x_qos_tbl_sel	qos_tbl_type;
 	/* dscp or pri table index */
-	unsigned int		qos_tbl_index;
+	u32				qos_tbl_index;
 	/* policer id, 0xffff do not assign policer */
-	unsigned short		policer_id;
+	u16				policer_id;
 	/* pri/dscp comes from qos or act tbl */
 	enum mv_pp2x_qos_src_tbl	pri_dscp_src;
 	/* gemport comes from qos or act tbl */
@@ -2133,44 +2133,44 @@ enum mv_pp2x_frwd_action_type {
 
 struct mv_pp2x_engine_pkt_action {
 	enum mv_pp2x_color_action_type		color_act;
-	enum mv_pp2x_general_action_type		pri_act;
-	enum mv_pp2x_general_action_type		dscp_act;
-	enum mv_pp2x_general_action_type		gemp_act;
-	enum mv_pp2x_general_action_type		q_low_act;
-	enum mv_pp2x_general_action_type		q_high_act;
-	enum mv_pp2x_general_action_type		rss_act;
+	enum mv_pp2x_general_action_type	pri_act;
+	enum mv_pp2x_general_action_type	dscp_act;
+	enum mv_pp2x_general_action_type	gemp_act;
+	enum mv_pp2x_general_action_type	q_low_act;
+	enum mv_pp2x_general_action_type	q_high_act;
+	enum mv_pp2x_general_action_type	rss_act;
 	enum mv_pp2x_flowid_action_type		flowid_act;
 	enum mv_pp2x_frwd_action_type		frwd_act;
 };
 
 struct mv_pp2x_qos_value {
-	unsigned short		pri;
-	unsigned short		dscp;
-	unsigned short		gemp;
-	unsigned short		q_low;
-	unsigned short		q_high;
+	u16		pri;
+	u16		dscp;
+	u16		gemp;
+	u16		q_low;
+	u16		q_high;
 };
 
 struct mv_pp2x_engine_pkt_mod {
-	unsigned int	mod_cmd_idx;
-	unsigned int	mod_data_idx;
-	unsigned int	l4_chksum_update_flag;
+	u32		mod_cmd_idx;
+	u32		mod_data_idx;
+	u32		l4_chksum_update_flag;
 };
 
 struct mv_pp2x_duplicate_info {
 	/* pkt duplication flow id */
-	unsigned int	flow_id;
+	u32		flow_id;
 	/* pkt duplication count */
-	unsigned int	flow_cnt;
+	u32		flow_cnt;
 };
 
 /* The logic C2 entry, easy to understand and use */
 struct mv_pp2x_c2_add_entry {
 	struct mv_pp2x_src_port		port;
-	unsigned char			lkp_type;
-	unsigned char			lkp_type_mask;
+	u8				lkp_type;
+	u8				lkp_type_mask;
 	/* priority in this look_type */
-	unsigned int			priority;
+	u32				priority;
 	/* all the qos input */
 	struct mv_pp2x_engine_qos_info	qos_info;
 	/* update&lock info */
-- 
1.7.9.5

