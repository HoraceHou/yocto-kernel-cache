From 0438ddaf900409693375a3e6ceee3f85647a9143 Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Fri, 5 Feb 2016 18:57:11 +0800
Subject: [PATCH 0136/1345] fix: pinctrl: mvebu: relocate the definiton of MPP

commit  8796403eab26bd733764d6a10921734ed97d792c from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- relocate the soc related MPP definition into per pinctrl driver
- rewrite the default_mpp_ctrl_get/set function with global variable
  and make it more generic.
- mvebu_pinctrl_set_mpps is prepared here for those SOCs which not
  aligned with the default settings.

Change-Id: Ide1a1fa48b7a359656124c1a617a0e0d8f82f6e6
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/27949
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pinctrl/mvebu/pinctrl-armada-370.c |    4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-375.c |    4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-38x.c |    4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-39x.c |    4 +++
 drivers/pinctrl/mvebu/pinctrl-armada-xp.c  |    4 +++
 drivers/pinctrl/mvebu/pinctrl-dove.c       |    4 +++
 drivers/pinctrl/mvebu/pinctrl-kirkwood.c   |    5 ++++
 drivers/pinctrl/mvebu/pinctrl-mvebu.c      |   44 ++++++++++++++++++++++++++--
 drivers/pinctrl/mvebu/pinctrl-mvebu.h      |    6 +++-
 drivers/pinctrl/mvebu/pinctrl-orion.c      |    4 +++
 10 files changed, 79 insertions(+), 4 deletions(-)

diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-370.c b/drivers/pinctrl/mvebu/pinctrl-armada-370.c
index 9feba9a..17185b5 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-370.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-370.c
@@ -22,6 +22,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static struct mvebu_mpp_mode mv88f6710_mpp_modes[] = {
 	MPP_MODE(0,
 	   MPP_FUNCTION(0x0, "gpio", NULL),
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-375.c b/drivers/pinctrl/mvebu/pinctrl-armada-375.c
index b7de8ab..7610916 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-375.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-375.c
@@ -22,6 +22,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static struct mvebu_mpp_mode mv88f6720_mpp_modes[] = {
 	MPP_MODE(0,
 		 MPP_FUNCTION(0x0, "gpio", NULL),
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-38x.c b/drivers/pinctrl/mvebu/pinctrl-armada-38x.c
index be1d89a..ddc96d4 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-38x.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-38x.c
@@ -20,6 +20,10 @@
 #include <linux/pinctrl/pinctrl.h>
 
 #include "pinctrl-mvebu.h"
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static u32 *mpp_saved_regs;
 
 enum {
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-39x.c b/drivers/pinctrl/mvebu/pinctrl-armada-39x.c
index 627f57c..092aaff 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-39x.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-39x.c
@@ -21,6 +21,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 enum {
 	V_88F6920 = BIT(0),
 	V_88F6925 = BIT(1),
diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-xp.c b/drivers/pinctrl/mvebu/pinctrl-armada-xp.c
index b854f1e..c4c2143 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-xp.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-xp.c
@@ -29,6 +29,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static u32 *mpp_saved_regs;
 
 enum armada_xp_variant {
diff --git a/drivers/pinctrl/mvebu/pinctrl-dove.c b/drivers/pinctrl/mvebu/pinctrl-dove.c
index 8472f61..398a8396 100644
--- a/drivers/pinctrl/mvebu/pinctrl-dove.c
+++ b/drivers/pinctrl/mvebu/pinctrl-dove.c
@@ -23,6 +23,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 /* Internal registers can be configured at any 1 MiB aligned address */
 #define INT_REGS_MASK		~(SZ_1M - 1)
 #define MPP4_REGS_OFFS		0xd0440
diff --git a/drivers/pinctrl/mvebu/pinctrl-kirkwood.c b/drivers/pinctrl/mvebu/pinctrl-kirkwood.c
index 5995a19..49fc7f5 100644
--- a/drivers/pinctrl/mvebu/pinctrl-kirkwood.c
+++ b/drivers/pinctrl/mvebu/pinctrl-kirkwood.c
@@ -20,6 +20,11 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
+
 #define V(f6180, f6190, f6192, f6281, f6282, dx4122)	\
 	((f6180 << 0) | (f6190 << 1) | (f6192 << 2) |	\
 	 (f6281 << 3) | (f6282 << 4) | (dx4122 << 5))
diff --git a/drivers/pinctrl/mvebu/pinctrl-mvebu.c b/drivers/pinctrl/mvebu/pinctrl-mvebu.c
index e4dda12..d210e95 100644
--- a/drivers/pinctrl/mvebu/pinctrl-mvebu.c
+++ b/drivers/pinctrl/mvebu/pinctrl-mvebu.c
@@ -27,9 +27,10 @@
 
 #include "pinctrl-mvebu.h"
 
-#define MPPS_PER_REG	8
-#define MPP_BITS	4
-#define MPP_MASK	0xf
+/* need to align with the Soc settings, changed by mvebu_pinctrl_set_mpps() */
+static unsigned mpps_per_reg = 8;
+static unsigned mpp_bits = 4;
+static unsigned mpp_mask = 0xf;
 
 struct mvebu_pinctrl_function {
 	const char *name;
@@ -567,6 +568,43 @@ static int mvebu_pinctrl_build_functions(struct platform_device *pdev,
 	return 0;
 }
 
+/*
+ * set the number of pins per reg in the soc, only needed by those
+ * socs which doesn't align to the default settings
+ */
+int mvebu_pinctrl_set_mpps(unsigned int npins)
+{
+	mpps_per_reg = npins;
+	mpp_bits = 32/mpps_per_reg;
+	mpp_mask = ((1UL<<(mpp_bits))-1);
+
+	return 0;
+}
+
+int default_mpp_ctrl_get(void __iomem *base, unsigned int pid,
+				       unsigned long *config)
+{
+	unsigned off = (pid / mpps_per_reg) * mpp_bits;
+	unsigned shift = (pid % mpps_per_reg) * mpp_bits;
+
+	*config = (readl(base + off) >> shift) & mpp_mask;
+
+	return 0;
+}
+
+int default_mpp_ctrl_set(void __iomem *base, unsigned int pid,
+				       unsigned long config)
+{
+	unsigned off = (pid / mpps_per_reg) * mpp_bits;
+	unsigned shift = (pid % mpps_per_reg) * mpp_bits;
+	unsigned long reg;
+
+	reg = readl(base + off) & ~(mpp_mask << shift);
+	writel(reg | (config << shift), base + off);
+
+	return 0;
+}
+
 int mvebu_pinctrl_probe(struct platform_device *pdev)
 {
 	struct mvebu_pinctrl_soc_info *soc = dev_get_platdata(&pdev->dev);
diff --git a/drivers/pinctrl/mvebu/pinctrl-mvebu.h b/drivers/pinctrl/mvebu/pinctrl-mvebu.h
index c90704e..2b58fd3 100644
--- a/drivers/pinctrl/mvebu/pinctrl-mvebu.h
+++ b/drivers/pinctrl/mvebu/pinctrl-mvebu.h
@@ -206,7 +206,11 @@ int mvebu_regmap_mpp_ctrl_get(struct mvebu_mpp_ctrl_data *data, unsigned pid,
 			      unsigned long *config);
 int mvebu_regmap_mpp_ctrl_set(struct mvebu_mpp_ctrl_data *data, unsigned pid,
 			      unsigned long config);
-
+int default_mpp_ctrl_get(void __iomem *base, unsigned int pid,
+				       unsigned long *config);
+int default_mpp_ctrl_set(void __iomem *base, unsigned int pid,
+				       unsigned long config);
+int mvebu_pinctrl_set_mpps(unsigned int npins);
 int mvebu_pinctrl_probe(struct platform_device *pdev);
 int mvebu_pinctrl_simple_mmio_probe(struct platform_device *pdev);
 int mvebu_pinctrl_simple_regmap_probe(struct platform_device *pdev,
diff --git a/drivers/pinctrl/mvebu/pinctrl-orion.c b/drivers/pinctrl/mvebu/pinctrl-orion.c
index 69cb4d9..7bf3f9f 100644
--- a/drivers/pinctrl/mvebu/pinctrl-orion.c
+++ b/drivers/pinctrl/mvebu/pinctrl-orion.c
@@ -28,6 +28,10 @@
 
 #include "pinctrl-mvebu.h"
 
+#define MVEBU_MPPS_PER_REG	8
+#define MVEBU_MPP_BITS		4
+#define MVEBU_MPP_MASK		0xf
+
 static void __iomem *mpp_base;
 static void __iomem *high_mpp_base;
 
-- 
1.7.9.5

