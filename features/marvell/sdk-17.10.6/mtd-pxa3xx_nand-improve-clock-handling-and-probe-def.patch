From 1e26ef629a1eeb294d4166cfdac1826cafb33b92 Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Sun, 28 Aug 2016 04:20:07 +0200
Subject: [PATCH 0465/1345] mtd: pxa3xx_nand: improve clock handling and probe
 deferral

commit  794650ad1820b31ebc8b0d601c7b62e78ea6bef0 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

This patch improves style of clock handling. Also, when devm_clk_get()
returns -EPROBE_DEFER, the warning will not be printed.

result of devm_clk_get() takes possible probe deferral
into consideration, which is needed on a7k/a8k, because CP110 system
controller clocks are registered as normal driver (not using
CLK_OF_DECLARE macro for probing).

On some platforms, the clocks might be registered by a platform
driver. When this is the case, the clock platform driver may very well
be probed after NAND driver, in which case the first probe() invocation
of NAND driver will receive -EPROBE_DEFER as the return value of
devm_clk_get().

The current code handles that as a normal error, and simply assumes
that this means that the system doesn't have a clock for the this
unit, and continues probing without calling clk_prepare_enable().

Unfortunately, this doesn't work with units in which the clock is
provided by another platform driver. In order to fix this situation,
we handle the -EPROBE_DEFER error condition specially, and abort the
driver probe(). It will be retried later automatically, the
clock will be available, devm_clk_get() will succeed, and the probe()
will continue with the clock prepared and enabled as expected.

In practice, such issue is seen on the ARM64 Marvell 7K/8K platform,
where the clocks are registered by a platform driver.

This patch is part of patch-set which adds
mainline mvebu clock gating support [18/21].

Change-Id: Ifcb9fdcd11cf7d38ba6493cab8b6574153ee8555
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Signed-off-by: Igal Liberman <igall@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32403
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mtd/nand/pxa3xx_nand.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/mtd/nand/pxa3xx_nand.c b/drivers/mtd/nand/pxa3xx_nand.c
index 649ba82..ee81232 100644
--- a/drivers/mtd/nand/pxa3xx_nand.c
+++ b/drivers/mtd/nand/pxa3xx_nand.c
@@ -1816,14 +1816,17 @@ static int alloc_nand_resource(struct platform_device *pdev)
 
 	nand_hw_control_init(chip->controller);
 	info->clk = devm_clk_get(&pdev->dev, NULL);
-	if (IS_ERR(info->clk)) {
+	if (!IS_ERR(info->clk)) {
+		ret = clk_prepare_enable(info->clk);
+		if (ret < 0)
+			return ret;
+	} else if (PTR_ERR(info->clk) == -EPROBE_DEFER) {
+		return -EPROBE_DEFER;
+	} else {
 		ret = PTR_ERR(info->clk);
 		dev_err(&pdev->dev, "failed to get nand clock: %d\n", ret);
 		return ret;
 	}
-	ret = clk_prepare_enable(info->clk);
-	if (ret < 0)
-		return ret;
 
 	if (!np && use_dma) {
 		r = platform_get_resource(pdev, IORESOURCE_DMA, 0);
-- 
1.7.9.5

