From 52e4688cd235dbab79c55045a857f0d028bb4849 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sat, 17 Dec 2016 14:19:39 +0200
Subject: [PATCH 0695/1345] net: mvpp2x: add unlikely cases for TXQ rings
 callbacks

commit  d2067cddf0a184cc72ab04197fa86a3fa70de4c7 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- unlikely cases added to improve performance in data path

Change-Id: I16d32518488d5154f5c1993c5fe765cbe536c33f
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34731
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 242cf65..933b49d 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -206,7 +206,7 @@ static inline int mv_pp2x_txq_free_count(struct mv_pp2x_txq_pcpu *txq_pcpu)
 	int index_modulo = (txq_pcpu->txq_get_index - txq_pcpu->txq_put_index +
 				txq_pcpu->size) % txq_pcpu->size;
 
-	if (index_modulo == 0)
+	if (unlikely(index_modulo == 0))
 		return txq_pcpu->size;
 
 	return index_modulo;
@@ -214,7 +214,7 @@ static inline int mv_pp2x_txq_free_count(struct mv_pp2x_txq_pcpu *txq_pcpu)
 
 static void mv_pp2x_txq_inc_get(struct mv_pp2x_txq_pcpu *txq_pcpu)
 {
-	if (txq_pcpu->txq_get_index == txq_pcpu->size - 1)
+	if (unlikely(txq_pcpu->txq_get_index == txq_pcpu->size - 1))
 		txq_pcpu->txq_get_index = 0;
 	else
 		txq_pcpu->txq_get_index++;
@@ -223,7 +223,7 @@ static void mv_pp2x_txq_inc_get(struct mv_pp2x_txq_pcpu *txq_pcpu)
 void mv_pp2x_txq_inc_error(struct mv_pp2x_txq_pcpu *txq_pcpu, int num)
 {
 	for (; num > 0; num--) {
-		if (txq_pcpu->txq_put_index < 1)
+		if (unlikely(txq_pcpu->txq_put_index < 1))
 			txq_pcpu->txq_put_index = txq_pcpu->size - 1;
 		else
 			txq_pcpu->txq_put_index--;
@@ -242,7 +242,7 @@ void mv_pp2x_txq_inc_put(enum mvppv2_version pp2_ver,
 	txq_pcpu->data_size[txq_pcpu->txq_put_index] = tx_desc->data_size;
 	txq_pcpu->tx_buffs[txq_pcpu->txq_put_index] =
 				mv_pp2x_txdesc_phys_addr_get(pp2_ver, tx_desc);
-	if (txq_pcpu->txq_put_index == txq_pcpu->size - 1)
+	if (unlikely(txq_pcpu->txq_put_index == txq_pcpu->size - 1))
 		txq_pcpu->txq_put_index = 0;
 	else
 		txq_pcpu->txq_put_index++;
@@ -256,7 +256,7 @@ void mv_pp2x_txq_inc_put(enum mvppv2_version pp2_ver,
 
 static void mv_pp2x_txq_dec_put(struct mv_pp2x_txq_pcpu *txq_pcpu)
 {
-	if (txq_pcpu->txq_put_index == 0)
+	if (unlikely(txq_pcpu->txq_put_index == 0))
 		txq_pcpu->txq_put_index = txq_pcpu->size - 1;
 	else
 		txq_pcpu->txq_put_index--;
-- 
1.7.9.5

