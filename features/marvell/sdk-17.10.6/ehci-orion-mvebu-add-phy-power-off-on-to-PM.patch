From 4cc645c42ae3ed36393a1630fe7312a34c512563 Mon Sep 17 00:00:00 2001
From: Ken Ma <make@marvell.com>
Date: Thu, 16 Mar 2017 15:48:51 +0800
Subject: [PATCH 0887/1345] ehci-orion: mvebu: add phy power off/on to PM

commit  4f39baf463aea6e3ebe807eb97109864609021a0 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- The patch adds PHY power off/on in ehci-orion's suspend/resume
  routines.

Change-Id: I13f91821438be6632ddccceb3fb07a629c32d85b
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37495
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Victor Gu <xigu@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../devicetree/bindings/usb/ehci-orion.txt         |    2 ++
 drivers/usb/host/ehci-orion.c                      |   17 ++++++++++++++++-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/usb/ehci-orion.txt b/Documentation/devicetree/bindings/usb/ehci-orion.txt
index 770eb55..75d2ea4 100644
--- a/Documentation/devicetree/bindings/usb/ehci-orion.txt
+++ b/Documentation/devicetree/bindings/usb/ehci-orion.txt
@@ -28,5 +28,7 @@ Examples:
 		compatible = "marvell,armada-3700-ehci";
 		reg = <0x5e000 0x1000>;
 		interrupts = <GIC_SPI 17 IRQ_TYPE_LEVEL_HIGH>;
+		phys = <&utmi_usb2>;
+		phy-names = "usb";
 		needs-reset-on-resume;
 	};
diff --git a/drivers/usb/host/ehci-orion.c b/drivers/usb/host/ehci-orion.c
index 797e69e..4623586 100644
--- a/drivers/usb/host/ehci-orion.c
+++ b/drivers/usb/host/ehci-orion.c
@@ -370,6 +370,10 @@ static int ehci_orion_drv_suspend(struct platform_device *pdev,
 	if (rc)
 		return rc;
 
+	/* Power off PHY */
+	phy_power_off(hcd->phy);
+	phy_exit(hcd->phy);
+
 	return 0;
 }
 
@@ -386,7 +390,18 @@ static int ehci_orion_drv_resume(struct platform_device *pdev)
 {
 	struct usb_hcd *hcd = platform_get_drvdata(pdev);
 	struct orion_ehci_hcd *priv = hcd_to_orion_priv(hcd);
-	int addr, regVal, i;
+	int addr, regVal, i, rc;
+
+	/* Init and power on PHY */
+	rc = phy_init(hcd->phy);
+	if (rc)
+		return rc;
+
+	rc = phy_power_on(hcd->phy);
+	if (rc) {
+		phy_exit(hcd->phy);
+		return rc;
+	}
 
 	for (addr = USB_CAUSE, i = 0; addr <= USB_IPG; addr += 0x4, i++)
 		writel_relaxed(usb_save[i], hcd->regs + addr);
-- 
1.7.9.5

