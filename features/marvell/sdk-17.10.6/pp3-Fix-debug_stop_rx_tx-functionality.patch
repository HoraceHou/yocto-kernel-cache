From 8a963e0c8b91f1cdfb0d9adf7be864a53efefeb4 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Wed, 7 Sep 2016 22:31:33 +0300
Subject: [PATCH 0494/1345] pp3: Fix debug_stop_rx_tx functionality

commit  2a642fb82044838645b8da742ccfb627ce81e08a from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Timer correctly stopped

Change-Id: I1b8ae261a8ad49a520def442a8c629f5c27d66ef
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32627
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-by: Neta Zur Hershkovits <neta@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../net/ethernet/marvell/pp3/net_dev/mv_netdev.c   |   22 ++++++++++++++------
 drivers/net/ethernet/marvell/pp3/platform/mv_pp3.h |    5 -----
 2 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
index a4ccbaf..03fcf13 100644
--- a/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
+++ b/drivers/net/ethernet/marvell/pp3/net_dev/mv_netdev.c
@@ -132,10 +132,14 @@ static int mv_pp3_internal_debug_action_on_err(struct net_device *dev)
 	/* Error detail is already printed */
 	if (internal_debug_action == MV_DBG_ACTION_STOP) {
 		debug_stop_rx_tx = true;
+		/* Memory barrier to unsure debug_stop_rx_tx is visible to all CPUs */
+		wmb();
 		pr_err("%s: unrecoverable problem. Net-device <%s> STOPPED!!!\n",
 		       dev->name, dev->name);
 	} else if (internal_debug_action == MV_DBG_ACTION_PANIC) {
 		debug_stop_rx_tx = true;
+		/* Memory barrier to unsure debug_stop_rx_tx is visible to all CPUs */
+		wmb();
 		/* PANIC rather then Oops/BUG */
 		panic("%s: unrecoverable problem. PANIC\n", dev->name);
 	} else {
@@ -801,21 +805,28 @@ static void mv_pp3_txdone_timer_callback(unsigned long data)
 	int txdone_todo, txdone_free;
 
 	if (cpu_vp->port.cpu.cpu_num != cpu) {
-		pr_err("timer run on incorrect CPU (%d)\n", smp_processor_id());
+		pr_err("timer run on incorrect CPU (%d)\n", cpu);
 		mv_pp3_timer_complete(pp3_timer);
 		return;
 	}
 
+#ifdef PP3_INTERNAL_DEBUG
+	if (debug_stop_rx_tx)
+		return;
+#endif
+
 	MV_LIGHT_LOCK(flags);
 	txdone_todo = PPOOL_BUF_TXDONE(ppool, cpu);
 	if (txdone_todo) {
 		STAT_INFO(cpu_vp->port.cpu.stats.txdone++);
 		txdone_free = mv_pp3_tx_done(dev, txdone_todo, ppool);
 		if (txdone_free == -1) {
-			pr_err("%s: tx_done in Timer (cpu = %d) failed to release %d buffers\n",
+			pr_err("%s: (cpu = %d) TX_DONE in Timer failed to release %d buffers\n",
 			       dev->name, cpu, txdone_todo);
 #ifdef PP3_INTERNAL_DEBUG
 			mv_pp3_internal_debug_action_on_err(dev);
+			MV_LIGHT_UNLOCK(flags);
+			return;
 #endif
 		} else {
 			txdone_todo -= txdone_free;
@@ -1249,7 +1260,7 @@ static inline int pp3_pool_bufs_free_internal(int buf_num, struct net_device *de
 	int queue = cpu_ctrl->bm_swq;
 	bool zero_flag;
 
-	static int time_out_max = 100;
+	static int time_out_max = 10000;
 
 	buffs_req = MV_MIN(buf_num, MV_PP3_BUF_REQUEST_SIZE);
 
@@ -1268,9 +1279,8 @@ static inline int pp3_pool_bufs_free_internal(int buf_num, struct net_device *de
 
 		if (time_out >=  time_out_max) {
 			STAT_ERR(PPOOL_STATS(ppool, cpu_ctrl->cpu)->buff_get_timeout_err++);
-			pr_err("%s: free pool_%d timeout, hmac:cpu%d:bm_frame=%d:bm_swq=%d\n",
-			       dev->name, ppool->pool, smp_processor_id(), frame, queue);
-			pr_err("    waiting for %d of %d buffers, received %d\n", buffs_req, buf_num, occ);
+			pr_err_ratelimited("%s: free pool_%d timeout, cpu = %d: waiting for %d of %d buffers, received %d\n",
+					   dev->name, ppool->pool, cpu, buffs_req, buf_num, occ);
 			/* Return error, so CALLER decides about mv_pp3_internal_debug_action_on_err();
 			 * permits also to see where from it has been called
 			*/
diff --git a/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.h b/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.h
index abb302b..0a1ec57 100644
--- a/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.h
+++ b/drivers/net/ethernet/marvell/pp3/platform/mv_pp3.h
@@ -120,11 +120,6 @@ static inline bool mv_pp3_timer_is_running(struct mv_pp3_timer *pp3_timer)
 /* add time period to timer on the current CPU */
 static inline void mv_pp3_timer_add(struct mv_pp3_timer *pp3_timer)
 {
-#ifdef PP3_INTERNAL_DEBUG
-	if (debug_stop_rx_tx)
-		return;
-#endif /* PP3_INTERNAL_DEBUG */
-
 	if (test_and_set_bit(MV_PP3_TIMER_SCHED_BIT, &(pp3_timer->flags)))
 		return;
 
-- 
1.7.9.5

