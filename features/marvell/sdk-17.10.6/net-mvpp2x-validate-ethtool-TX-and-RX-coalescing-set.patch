From 177a76a3de596ed581188dbe54c6d590b7d434eb Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Tue, 16 Aug 2016 14:29:37 +0300
Subject: [PATCH 0419/1345] net: mvpp2x: validate ethtool TX and RX coalescing
 set.

commit  5caa678800ab08c5af1f66dab2df4e14318b479c from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: Iaaf3e95377ecb2459fa807e48156fc93d17b7ede
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/31977
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c  |   34 ++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
index 87bba07..72c2b7c 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
@@ -139,6 +139,38 @@ int mv_pp2x_autoneg_check_valid(struct mv_mac_data *mac, struct gop_hw *gop,
 
 }
 
+void mv_pp2x_ethtool_valid_coalesce(struct ethtool_coalesce *c,
+				struct mv_pp2x_port *port)
+{
+	u64 val;
+
+	if (c->rx_max_coalesced_frames > MVPP2_MAX_OCCUPIED_THRESH)
+		pr_err("RX coalesced frames value too high, rounded to %d\n",
+			MVPP2_MAX_OCCUPIED_THRESH);
+
+	if (c->tx_max_coalesced_frames > MVPP2_MAX_TRANSMITTED_THRESH) {
+		pr_err("TX coalesced frames value too high, rounded to %d\n",
+			MVPP2_MAX_TRANSMITTED_THRESH);
+		c->tx_max_coalesced_frames = MVPP2_MAX_TRANSMITTED_THRESH;
+	}
+
+	val = (port->priv->hw.tclk / USEC_PER_SEC) * c->rx_coalesce_usecs;
+	if (val > MVPP2_MAX_ISR_RX_THRESHOLD)
+		pr_err("RX coalesced time value too high, rounded to %ld usecs\n",
+			(MVPP2_MAX_ISR_RX_THRESHOLD * USEC_PER_SEC)
+			/ port->priv->hw.tclk);
+
+	val = (port->priv->hw.tclk / USEC_PER_SEC) * c->tx_coalesce_usecs;
+	if (val > MVPP22_MAX_ISR_TX_THRESHOLD) {
+		pr_err("TX coalesced time value too high, rounded to %ld usecs\n",
+			(MVPP22_MAX_ISR_TX_THRESHOLD * USEC_PER_SEC)
+			/ port->priv->hw.tclk);
+		c->tx_coalesce_usecs =
+			(MVPP22_MAX_ISR_TX_THRESHOLD * USEC_PER_SEC)
+			/ port->priv->hw.tclk;
+	}
+}
+
 /* Ethtool methods */
 
 /* Ethtool statistic */
@@ -526,6 +558,8 @@ static int mv_pp2x_ethtool_set_coalesce(struct net_device *dev,
 		return -EOPNOTSUPP;
 	}
 
+	mv_pp2x_ethtool_valid_coalesce(c, port);
+
 	for (queue = 0; queue < port->num_rx_queues; queue++) {
 		struct mv_pp2x_rx_queue *rxq = port->rxqs[queue];
 
-- 
1.7.9.5

