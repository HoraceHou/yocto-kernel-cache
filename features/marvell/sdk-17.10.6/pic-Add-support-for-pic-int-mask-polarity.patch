From 7f7672398506bd1806aa4a1f2d47342f3c35e8e0 Mon Sep 17 00:00:00 2001
From: Shadi Ammouri <shadi@marvell.com>
Date: Thu, 7 Apr 2016 10:58:48 +0300
Subject: [PATCH 0155/1345] pic: Add support for pic int mask polarity

commit  2184f0e826e0bdc2d067f4132530d22f1e818c3a from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

PIC interrupt mask bits polarity differs between AP806-Z1 and A0.
Add a dts property to differentiate between the two cases.

Change-Id: Ib194482fbdc0c5c1e1bd330cd60a39046118372f
Signed-off-by: Shadi Ammouri <shadi@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/28868
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/irqchip/irq-mvebu-pic.c |   21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/drivers/irqchip/irq-mvebu-pic.c b/drivers/irqchip/irq-mvebu-pic.c
index eec6395..8a8cd7b 100644
--- a/drivers/irqchip/irq-mvebu-pic.c
+++ b/drivers/irqchip/irq-mvebu-pic.c
@@ -24,12 +24,16 @@
 
 #define PIC_MAX_IRQS		32
 #define PIC_MAX_IRQ_MASK	((1UL << PIC_MAX_IRQS) - 1)
+#define PIC_INT_EN_POL		(0)
 
 struct mvebu_pic {
 	void __iomem *base;
 	u32 parent_irq;
 	struct irq_domain *domain;
 	struct irq_chip irq_chip;
+	u32 int_en_pol;		/* Interrupt mask bit polarity - 0 means that writing
+				 * 0 to the int-mask reg enables the interrupt.
+				 */
 };
 
 static void mvebu_pic_reset(struct mvebu_pic *pic)
@@ -52,7 +56,11 @@ static void mvebu_pic_mask_irq(struct irq_data *d)
 	u32 reg;
 
 	reg =  readl(pic->base + PIC_MASK);
-	reg |= (1 << d->hwirq);
+	if (pic->int_en_pol)
+		reg &= ~(1 << d->hwirq);
+	else
+		/* 1 enables the interrupt */
+		reg |= (1 << d->hwirq);
 	writel(reg, pic->base + PIC_MASK);
 }
 
@@ -62,7 +70,11 @@ static void mvebu_pic_unmask_irq(struct irq_data *d)
 	u32 reg;
 
 	reg = readl(pic->base + PIC_MASK);
-	reg &= ~(1 << d->hwirq);
+	if (pic->int_en_pol)
+		/* 1 enables the interrupt */
+		reg |= (1 << d->hwirq);
+	else
+		reg &= ~(1 << d->hwirq);
 	writel(reg, pic->base + PIC_MASK);
 }
 
@@ -147,6 +159,11 @@ static int mvebu_pic_probe(struct platform_device *pdev)
 		return -EINVAL;
 	}
 
+	if (of_property_read_u32(node, "int-en-pol", &pic->int_en_pol)) {
+		pr_warn("Missing interrupt enable polarity. Assuming %d\n", PIC_INT_EN_POL);
+		pic->int_en_pol = PIC_INT_EN_POL;
+	}
+
 	pic->domain = irq_domain_add_linear(node, PIC_MAX_IRQS,
 					    &mvebu_pic_domain_ops, pic);
 	if (!pic->domain) {
-- 
1.7.9.5

