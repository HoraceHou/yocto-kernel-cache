From e745fe06fe80dd7150a523277516976a9f8152cb Mon Sep 17 00:00:00 2001
From: Yedidia Falk <yedidiaf@marvell.com>
Date: Thu, 22 Dec 2016 14:27:13 +0200
Subject: [PATCH 0648/1345] phy: add phy_is_pll_locked callback

commit  79d6d91be0e3da4e3f674e05f1b5a68a5f94a1e6 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

This callback may be used to check the PLL status of
the corresponding phy.
For this purpose, a private implementation of this callback is required.

Change-Id: I8ae248fe0cb2a55f218fc720dbed0262203e601c
Signed-off-by: Yedidia Falk <yedidiaf@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34920
Reviewed-by: Felix Kaushansky <felixka@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/phy/phy-core.c  |   14 ++++++++++++++
 include/linux/phy/phy.h |   10 ++++++++++
 2 files changed, 24 insertions(+)

diff --git a/drivers/phy/phy-core.c b/drivers/phy/phy-core.c
index 648b685..cde6691 100644
--- a/drivers/phy/phy-core.c
+++ b/drivers/phy/phy-core.c
@@ -389,6 +389,20 @@ enum phy_mode phy_get_mode(struct phy *phy)
 }
 EXPORT_SYMBOL_GPL(phy_get_mode);
 
+int phy_is_pll_locked(struct phy *phy)
+{
+	int ret;
+
+	if (!phy || !phy->ops->is_pll_locked)
+		return 0;
+
+	mutex_lock(&phy->mutex);
+	ret = phy->ops->is_pll_locked(phy);
+	mutex_unlock(&phy->mutex);
+
+	return ret;
+}
+
 /**
  * _of_phy_get() - lookup and obtain a reference to a phy by phandle
  * @np: device_node for which to get the phy
diff --git a/include/linux/phy/phy.h b/include/linux/phy/phy.h
index fbbe7f5..cc8b09a 100644
--- a/include/linux/phy/phy.h
+++ b/include/linux/phy/phy.h
@@ -38,6 +38,7 @@ enum phy_mode {
  * @set_mode: set the mode of the phy
  * @reset: resetting the phy
  * @get_mode: get the mode of the phy
+ * @is_pll_locked: check phy's PLL status (locked/unlocked)
  * @owner: the module owner containing the ops
  */
 struct phy_ops {
@@ -48,6 +49,7 @@ struct phy_ops {
 	int	(*set_mode)(struct phy *phy, enum phy_mode mode);
 	int	(*reset)(struct phy *phy);
 	enum phy_mode	(*get_mode)(struct phy *phy);
+	int	(*is_pll_locked)(struct phy *phy);
 	struct module *owner;
 };
 
@@ -142,6 +144,7 @@ static inline void *phy_get_drvdata(struct phy *phy)
 int phy_set_mode(struct phy *phy, enum phy_mode mode);
 int phy_reset(struct phy *phy);
 enum phy_mode phy_get_mode(struct phy *phy);
+int phy_is_pll_locked(struct phy *phy);
 static inline int phy_get_bus_width(struct phy *phy)
 {
 	return phy->attrs.bus_width;
@@ -270,6 +273,13 @@ static inline enum phy_mode phy_get_mode(struct phy *phy)
 	return -ENOSYS;
 }
 
+static inline int phy_is_pll_locked(struct phy *phy)
+{
+	if (!phy)
+		return 0;
+	return -ENOSYS;
+}
+
 static inline int phy_get_bus_width(struct phy *phy)
 {
 	return -ENOSYS;
-- 
1.7.9.5

