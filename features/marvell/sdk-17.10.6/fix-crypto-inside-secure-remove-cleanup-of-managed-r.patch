From fdad8909fda4373d2aee084ae7705d818085da5f Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Mon, 15 May 2017 16:15:32 +0300
Subject: [PATCH 1017/1345] fix: crypto: inside-secure: remove cleanup of
 managed resource

commit  2b324874cea7408fd181153db55046524c9021da from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

dmam_ cleanup routines should not be invoked in driver failure
cases, the framework will run them

Change-Id: I63ada8390174bad494760b0422a60fe076e1f9a0
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/39484
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/39534
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/inside-secure/ring.c     |   20 ++------------------
 drivers/crypto/inside-secure/safexcel.c |    5 +----
 drivers/crypto/inside-secure/safexcel.h |    3 ---
 3 files changed, 3 insertions(+), 25 deletions(-)

diff --git a/drivers/crypto/inside-secure/ring.c b/drivers/crypto/inside-secure/ring.c
index 6ca3ec1..3c68af6 100644
--- a/drivers/crypto/inside-secure/ring.c
+++ b/drivers/crypto/inside-secure/ring.c
@@ -32,12 +32,9 @@ int safexcel_init_ring_descriptors(struct safexcel_crypto_priv *priv,
 	rdr->base = dmam_alloc_coherent(priv->dev,
 					rdr->offset * EIP197_DEFAULT_RING_SIZE,
 					&rdr->base_dma, GFP_KERNEL);
-	if (!rdr->base) {
-		dmam_free_coherent(priv->dev,
-				   cdr->offset * EIP197_DEFAULT_RING_SIZE,
-				   cdr->base, cdr->base_dma);
+	if (!rdr->base)
 		return -ENOMEM;
-	}
+
 	rdr->write = rdr->base;
 	rdr->base_end = rdr->base + rdr->offset * EIP197_DEFAULT_RING_SIZE;
 	rdr->read = rdr->base;
@@ -45,19 +42,6 @@ int safexcel_init_ring_descriptors(struct safexcel_crypto_priv *priv,
 	return 0;
 }
 
-/* Free the ring descriptors */
-void safexcel_free_ring_descriptors(struct safexcel_crypto_priv *priv,
-				    struct safexcel_ring *cdr,
-				    struct safexcel_ring *rdr)
-{
-	dmam_free_coherent(priv->dev,
-			   cdr->offset * EIP197_DEFAULT_RING_SIZE,
-			   cdr->base, cdr->base_dma);
-	dmam_free_coherent(priv->dev,
-			   rdr->offset * EIP197_DEFAULT_RING_SIZE,
-			   rdr->base, rdr->base_dma);
-}
-
 /* Return the next available descriptor for use (command/result) */
 static void *safexcel_ring_next_wptr(struct safexcel_crypto_priv *priv,
 				     struct safexcel_ring *ring)
diff --git a/drivers/crypto/inside-secure/safexcel.c b/drivers/crypto/inside-secure/safexcel.c
index c6b5b33..5f0a7db 100644
--- a/drivers/crypto/inside-secure/safexcel.c
+++ b/drivers/crypto/inside-secure/safexcel.c
@@ -1374,11 +1374,8 @@ static int safexcel_remove(struct platform_device *pdev)
 
 	clk_disable_unprepare(priv->clk);
 
-	for (i = 0; i < priv->config.rings; i++) {
-		safexcel_free_ring_descriptors(priv, &priv->ring[i].cdr,
-					       &priv->ring[i].rdr);
+	for (i = 0; i < priv->config.rings; i++)
 		destroy_workqueue(priv->ring[i].workqueue);
-	}
 
 	return 0;
 }
diff --git a/drivers/crypto/inside-secure/safexcel.h b/drivers/crypto/inside-secure/safexcel.h
index 1757af5..d88f3ac 100644
--- a/drivers/crypto/inside-secure/safexcel.h
+++ b/drivers/crypto/inside-secure/safexcel.h
@@ -699,9 +699,6 @@ int safexcel_invalidate_cache(struct crypto_async_request *async,
 int safexcel_init_ring_descriptors(struct safexcel_crypto_priv *priv,
 				   struct safexcel_ring *cdr,
 				   struct safexcel_ring *rdr);
-void safexcel_free_ring_descriptors(struct safexcel_crypto_priv *priv,
-				    struct safexcel_ring *cdr,
-				    struct safexcel_ring *rdr);
 int safexcel_select_ring(struct safexcel_crypto_priv *priv);
 void *safexcel_ring_next_rptr(struct safexcel_crypto_priv *priv,
 			      struct safexcel_ring *ring);
-- 
1.7.9.5

