From a0441c1b3387948f39da72527e3b6fd3e234bf8d Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Thu, 30 Mar 2017 14:13:42 +0300
Subject: [PATCH 0956/1345] fix: net: mvpp2x: fix IPv6 packets drops with Hop
 Limit field equals 0

commit  a9c5a7c5019f015a0f00db8729b04be6c0270f33 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

This patch fix drops of IPv6 packets with Hop Limit field equals 0 by
mvpp2 HW.
Packets dropped due to IPv6 packet Hop Limit validation in Mvpp2 Parser.
Its wrong behavior, packets with Hop Limit = 0 should be dropped
by stack and not by HW.
Fix:
Remove parser entry with IPv6 Hop Limit validation.

Change-Id: I8e1c11476e8061952645f4efb344a10c0f6d00f0
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/38218
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c |   28 +---------------------
 1 file changed, 1 insertion(+), 27 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
index 34a99df..44ff45e 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
@@ -2299,7 +2299,7 @@ static int mv_pp2x_prs_ip4_init(struct mv_pp2x_hw *hw)
 static int mv_pp2x_prs_ip6_init(struct mv_pp2x_hw *hw)
 {
 	struct mv_pp2x_prs_entry pe;
-	int tid, err;
+	int err;
 
 	/* Set entries for TCP, UDP and ICMP over IPv6 */
 	err = mv_pp2x_prs_ip6_proto(hw, IPPROTO_TCP,
@@ -2335,32 +2335,6 @@ static int mv_pp2x_prs_ip6_init(struct mv_pp2x_hw *hw)
 	if (err)
 		return err;
 
-	/* Entry for checking hop limit */
-	tid = mv_pp2x_prs_tcam_first_free(hw, MVPP2_PE_FIRST_FREE_TID,
-					  MVPP2_PE_LAST_FREE_TID);
-	if (tid < 0)
-		return tid;
-
-	memset(&pe, 0, sizeof(struct mv_pp2x_prs_entry));
-	mv_pp2x_prs_tcam_lu_set(&pe, MVPP2_PRS_LU_IP6);
-	pe.index = tid;
-
-	/* Finished: go to flowid generation */
-	mv_pp2x_prs_sram_next_lu_set(&pe, MVPP2_PRS_LU_FLOWS);
-	mv_pp2x_prs_sram_bits_set(&pe, MVPP2_PRS_SRAM_LU_GEN_BIT, 1);
-	mv_pp2x_prs_sram_ri_update(&pe, MVPP2_PRS_RI_L3_UN |
-				   MVPP2_PRS_RI_DROP_MASK,
-				   MVPP2_PRS_RI_L3_PROTO_MASK |
-				   MVPP2_PRS_RI_DROP_MASK);
-
-	mv_pp2x_prs_tcam_data_byte_set(&pe, 1, 0x00, MVPP2_PRS_IPV6_HOP_MASK);
-	mv_pp2x_prs_tcam_ai_update(&pe, MVPP2_PRS_IPV6_NO_EXT_AI_BIT,
-				   MVPP2_PRS_IPV6_NO_EXT_AI_BIT);
-
-	/* Update shadow table and hw entry */
-	mv_pp2x_prs_shadow_set(hw, pe.index, MVPP2_PRS_LU_IP4);
-	mv_pp2x_prs_hw_write(hw, &pe);
-
 	/* Default IPv6 entry for unknown protocols */
 	memset(&pe, 0, sizeof(struct mv_pp2x_prs_entry));
 	mv_pp2x_prs_tcam_lu_set(&pe, MVPP2_PRS_LU_IP6);
-- 
1.7.9.5

