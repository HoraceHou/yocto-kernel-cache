From 26f8251ba15ba605ea9ae70f44a9b8cec8db1b61 Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Thu, 2 Mar 2017 22:07:46 +0800
Subject: [PATCH 0876/1345] phy: comphy: a3700: add SATA phy power off support

commit  56c0d6272e866ade73577920ccb25298ce69b3ad from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- The patch add SATA power off support to save more
  power when system in PM mode.
- The power off flow like below:
  1) set the PHY to isolation mode
  2) power off PLL, TX, and RX

Change-Id: I9521939273d5596c8248e091f5d08225556a2686
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37140
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Victor Gu <xigu@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/phy/phy-comphy-a3700.c |   67 ++++++++++++++++++++++++++++++++++++++--
 drivers/phy/phy-comphy-a3700.h |    4 +++
 2 files changed, 69 insertions(+), 2 deletions(-)

diff --git a/drivers/phy/phy-comphy-a3700.c b/drivers/phy/phy-comphy-a3700.c
index 1d26afd..40668f5 100644
--- a/drivers/phy/phy-comphy-a3700.c
+++ b/drivers/phy/phy-comphy-a3700.c
@@ -138,6 +138,13 @@ static int mvebu_a3700_comphy_sata_power_on(struct mvebu_comphy_priv *priv,
 	/* Configure phy selector for SATA */
 	mvebu_a3700_comphy_set_phy_selector(priv, comphy);
 
+	/* Clear phy isolation mode to make it work in normal mode */
+	mvebu_comphy_reg_set_indirect(comphy_indir_regs,
+				      COMPHY_ISOLATION_CTRL_REG + SATAPHY_LANE2_REG_BASE_OFFSET,
+				      0,
+				      PHY_ISOLATE_MODE,
+				      mode);
+
 	/*
 	 * 0. Check the Polarity invert bits
 	 */
@@ -217,6 +224,50 @@ static int mvebu_a3700_comphy_sata_power_on(struct mvebu_comphy_priv *priv,
 	return ret;
 }
 
+static int mvebu_a3700_comphy_sata_power_off(struct mvebu_comphy_priv *priv,
+							     struct mvebu_comphy *comphy)
+{
+	void __iomem *comphy_indir_regs;
+	struct resource *res;
+	struct platform_device *pdev = container_of(priv->dev, struct platform_device, dev);
+	int mode = COMPHY_GET_MODE(priv->lanes[comphy->index].mode);
+
+	dev_dbg(priv->dev, "%s: Enter\n", __func__);
+
+	/* Get the indirect access register resource and map */
+	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "indirect");
+	if (res) {
+		comphy_indir_regs = devm_ioremap_resource(&pdev->dev, res);
+		if (IS_ERR(comphy_indir_regs))
+			return PTR_ERR(comphy_indir_regs);
+	} else {
+		dev_err(priv->dev, "no inirect register resource\n");
+		return -ENOTSUPP;
+	}
+
+	/* Set phy isolation mode */
+	mvebu_comphy_reg_set_indirect(comphy_indir_regs,
+				      COMPHY_ISOLATION_CTRL_REG + SATAPHY_LANE2_REG_BASE_OFFSET,
+				      PHY_ISOLATE_MODE,
+				      PHY_ISOLATE_MODE,
+				      mode);
+
+	/* Power off PLL, Tx, Rx */
+	mvebu_comphy_reg_set_indirect(comphy_indir_regs,
+				      COMPHY_POWER_PLL_CTRL + SATAPHY_LANE2_REG_BASE_OFFSET,
+				      0,
+				      PU_PLL_BIT | PU_RX_BIT | PU_TX_BIT,
+				      mode);
+
+	/* Unmap resource */
+	devm_iounmap(&pdev->dev, comphy_indir_regs);
+	devm_release_mem_region(&pdev->dev, res->start, resource_size(res));
+
+	dev_dbg(priv->dev, "%s: Exit\n", __func__);
+
+	return 0;
+}
+
 static int mvebu_a3700_comphy_sgmii_power_on(struct mvebu_comphy_priv *priv,
 					     struct mvebu_comphy *comphy)
 {
@@ -799,18 +850,30 @@ static int mvebu_a3700_comphy_power_off(struct phy *phy)
 {
 	struct mvebu_comphy *comphy = phy_get_drvdata(phy);
 	struct mvebu_comphy_priv *priv = to_mvebu_comphy_priv(comphy);
+	int mode = COMPHY_GET_MODE(priv->lanes[comphy->index].mode);
+	int err = 0;
 
 	dev_dbg(priv->dev, "%s: Enter\n", __func__);
 
 	spin_lock(&priv->lock);
 
-	dev_dbg(priv->dev, "power off is not implemented\n");
+	switch (mode) {
+	case (COMPHY_SATA_MODE):
+		err = mvebu_a3700_comphy_sata_power_off(priv, comphy);
+		break;
+
+	default:
+		dev_err(priv->dev, "comphy%d: unsupported comphy mode\n",
+			comphy->index);
+		err = -EINVAL;
+		break;
+	}
 
 	spin_unlock(&priv->lock);
 
 	dev_dbg(priv->dev, "%s: Exit\n", __func__);
 
-	return 0;
+	return err;
 }
 
 static int mvebu_a3700_comphy_sata_is_pll_locked(struct phy *phy)
diff --git a/drivers/phy/phy-comphy-a3700.h b/drivers/phy/phy-comphy-a3700.h
index fa13a8a..97dc3b7 100644
--- a/drivers/phy/phy-comphy-a3700.h
+++ b/drivers/phy/phy-comphy-a3700.h
@@ -90,6 +90,10 @@ enum {
 #define TXD_INVERT_BIT				BIT(10)
 #define RXD_INVERT_BIT				BIT(11)
 
+#define COMPHY_ISOLATION_CTRL_REG	0x26
+#define ISOLATION_CTRL_REG_ADDR(unit)	(COMPHY_ISOLATION_CTRL_REG * PHY_SHFT(unit))
+#define PHY_ISOLATE_MODE		BIT(15)
+
 #define COMPHY_MISC_REG0_ADDR		0x4F
 #define MISC_REG0_ADDR(unit)		(COMPHY_MISC_REG0_ADDR * PHY_SHFT(unit))
 #define CLK100M_125M_EN				BIT(4)
-- 
1.7.9.5

