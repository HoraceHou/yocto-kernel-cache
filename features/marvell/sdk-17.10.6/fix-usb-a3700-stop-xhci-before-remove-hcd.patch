From cb0417c3cb230f3c56bf5b0da555a6a4b9143a91 Mon Sep 17 00:00:00 2001
From: jinghua <xigu@marvell.com>
Date: Fri, 21 Apr 2017 19:25:32 +0800
Subject: [PATCH 0976/1345] fix: usb: a3700: stop xhci before remove hcd

commit  f460f210873d6e190d9f9ab607ecd6728dece556 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- There is an issue that in OTG mode, unplugged USB HUB gets timeout
  error, and USB Host feature stops working. Root cause is when USB
  HUB gets unplugged, usb_id changes from usb host to usb device,
  then USB PHY starts to transfer all interrupt and data to USB device
  controller instead of USB host controller. So USB host controller
  gets nothing and does not even know the USB DOK is gone.
- Then when hcd is removed, it would try to talk with the USB DOK on
  its bus, since it thinks it is still there, and then get a timeout error.
- What used to be done here is to remove the hcd that has NO USB DOK
  connected first, and it would stop the xhci (host controller). Then
  when the next hcd which used to have USB DOK connected being removed,
  it finds the xhci has been stopped already, then will not try to
  talk with its USB DOK.
- To fix this issue, xhci needs to be stopped first, then hcd would not
  talk with USB DOK/HUB, and they could be removed issue free.
- But when a USB3 HUB is connected, both hcd are working, in this case
  when removing hcd after HUB disconnect, xhci needs to be stopped first,
  then these two hcd could be removed error free.
- This patch adds xhci stop before remove two hcd, so it fits any scenario.
- JIRA bug: A3700-960 Unplug USB Hub causes timeout error.

Change-Id: I2b3092318db34ba932c0f0c4effb60816c5bb4bf
Signed-off-by: jinghua <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/38797
Reviewed-on: http://vgitil04.il.marvell.com:8080/39008
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/phy/phy-a3700-usb.c |   24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/drivers/usb/phy/phy-a3700-usb.c b/drivers/usb/phy/phy-a3700-usb.c
index 6ef2ac5..34ed386 100644
--- a/drivers/usb/phy/phy-a3700-usb.c
+++ b/drivers/usb/phy/phy-a3700-usb.c
@@ -116,13 +116,23 @@ static void a3700_otg_start_host(struct a3700_otg *mvotg, int on)
 		usb_add_hcd(hcd->shared_hcd, hcd->irq, IRQF_SHARED);
 		device_wakeup_enable(hcd->self.controller);
 	} else {
-		if (hcd->state == HC_STATE_RUNNING) {
-			usb_remove_hcd(hcd->shared_hcd);
-			usb_remove_hcd(hcd);
-		} else {
-			usb_remove_hcd(hcd);
-			usb_remove_hcd(hcd->shared_hcd);
-		}
+		/*
+		 * Now the USB dok has already been unplugged, and usb_id changes from
+		 * usb host to usb device, then USB PHY starts to transfer all interrupt
+		 * and data to USB device controller instead of USB host controller.
+		 * So USB host controller gets nothing and does not even know the USB DOK
+		 * is gone.
+		 * Here are two hcd need to be removed, shared_hcd is for USB3 bus, while
+		 * main hcd is for USB2 bus.
+		 * when a hcd is removed, it finds xhci (usb host controller) is active, then
+		 * it would try to talk with the USB DOK/HUB on its bus, since it thinks it is
+		 * still there, and then get a timeout error.
+		 * To fix this issue, the xhci needs to be stopped first, then these two hcd
+		 * could be removed issue free.
+		 */
+		hcd->driver->stop(hcd);
+		usb_remove_hcd(hcd->shared_hcd);
+		usb_remove_hcd(hcd);
 	}
 
 	if (!IS_ERR(mvotg->vcc)) {
-- 
1.7.9.5

