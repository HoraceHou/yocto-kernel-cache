From e017c5d33186be92ada35d1b78bac1e2e3c1a2ad Mon Sep 17 00:00:00 2001
From: jinghua <xigu@marvell.com>
Date: Fri, 14 Jul 2017 17:50:20 +0800
Subject: [PATCH 1078/1345] fix: usb: ehci-orion: disable streaming for Armada
 3700

commit  981f445518fbe9b810a80fa6f6c47d04efce1795 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Set stream disable to guarantee the DDR access in low bandwidth
system as Armada3700.
Set "stream disable" ensures that overruns/underruns of the
latency FIFO are eliminated for low bandwidth systems where
the RX and TX buffers are sufficient to contain the entire
packet. Enabling stream disable also has the effect of ensuring
the TX latency FIFO is filled to capacity before the packet is
launched onto the USB.

Change-Id: I04ad21618033e54c36164fe88b31ffbf5ae70c39
Signed-off-by: jinghua <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/41613
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/host/ehci-orion.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/host/ehci-orion.c b/drivers/usb/host/ehci-orion.c
index 4623586..707ef8a 100644
--- a/drivers/usb/host/ehci-orion.c
+++ b/drivers/usb/host/ehci-orion.c
@@ -171,6 +171,7 @@ static int ehci_orion_drv_reset(struct usb_hcd *hcd)
 {
 	struct device *dev = hcd->self.controller;
 	int ret;
+	uint32_t regVal;
 
 	ret = ehci_setup(hcd);
 	if (ret)
@@ -183,8 +184,14 @@ static int ehci_orion_drv_reset(struct usb_hcd *hcd)
 	 * sbuscfg reg has to be set after usb controller reset, otherwise
 	 * the value would be override to 0.
 	 */
-	if (of_device_is_compatible(dev->of_node, "marvell,armada-3700-ehci"))
+	if (of_device_is_compatible(dev->of_node, "marvell,armada-3700-ehci")) {
 		wrl(USB_SBUSCFG, USB_SBUSCFG_DEF_VAL);
+		/*
+		 * Disable Streaming to guaratee DDR access in low bandwidth systems.
+		 */
+		regVal = rdl(USB_MODE);
+		wrl(USB_MODE, regVal | USB_MODE_SDIS);
+	}
 
 	return ret;
 }
-- 
1.7.9.5

