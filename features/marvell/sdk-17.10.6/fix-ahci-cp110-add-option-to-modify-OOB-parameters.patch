From 6a58b57e940ad72d83118a40728b2e25dbca838c Mon Sep 17 00:00:00 2001
From: Igal Liberman <igall@marvell.com>
Date: Tue, 28 Feb 2017 19:08:56 +0200
Subject: [PATCH 0822/1345] fix: ahci: cp110: add option to modify OOB
 parameters

commit  1d001b66117150e29757791f6b4a02b2755977b3 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Out of band (OOB) signals are used for handshake signaling
between a device and its host.
There are three OOB signals: COMRESET, COMINIT and COMWAKE.
This patch allows to modify the COMRESET and COMWAKE limits in order
to improve SATA electrical behavior for systems that
can't use the default values.

The new values should be given by the device-tree.
Binding document updated accordingly.

Change-Id: I4a17fba1c6fe786005669d31217f961a456fd4ff
Signed-off-by: Igal Liberman <igall@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37097
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../devicetree/bindings/ata/ahci-platform.txt      |    6 ++++
 drivers/ata/ahci.h                                 |   15 +++++++++
 drivers/ata/ahci_mvebu.c                           |    8 +++++
 drivers/ata/libahci.c                              |   34 ++++++++++++++++++++
 4 files changed, 63 insertions(+)

diff --git a/Documentation/devicetree/bindings/ata/ahci-platform.txt b/Documentation/devicetree/bindings/ata/ahci-platform.txt
index fedc213..d463777 100644
--- a/Documentation/devicetree/bindings/ata/ahci-platform.txt
+++ b/Documentation/devicetree/bindings/ata/ahci-platform.txt
@@ -37,6 +37,12 @@ Optional properties:
 		      are available for software to use. Useful if PORTS_IMPL
 		      is not programmed by the BIOS, which is true with
 		      some embedded SOC's.
+- comreset_u        : allows to modify COMRESET spacing upper limit which controls
+		      the high limit of the spacing between two bursts of COMRESET.
+		      This field should contain the hexacecimal value in nano seconds.
+- comwake           : allows to modify COMWAKE spacing upper limit which controls
+		      the high limit of the spacing between two bursts of COMWAKE.
+		      This field should contain the hexacecimal value in nano seconds.
 
 Required properties when using sub-nodes:
 - #address-cells    : number of cells to encode an address
diff --git a/drivers/ata/ahci.h b/drivers/ata/ahci.h
index 5db6ab2..3b09a02 100644
--- a/drivers/ata/ahci.h
+++ b/drivers/ata/ahci.h
@@ -143,6 +143,8 @@ enum {
 	PORT_SCR_NTF		= 0x3c, /* SATA phy register: SNotification */
 	PORT_FBS		= 0x40, /* FIS-based Switching */
 	PORT_DEVSLP		= 0x44, /* device sleep */
+	PORT_INDIRECT_ADDR	= 0x78, /* Indirect Access Port PHY Address Register */
+	PORT_INDIRECT_DATA	= 0x7c, /* Indirect Access Port PHY Data Register */
 
 	/* PORT_IRQ_{STAT,MASK} bits */
 	PORT_IRQ_COLD_PRES	= (1 << 31), /* cold presence detect */
@@ -216,6 +218,12 @@ enum {
 	PORT_DEVSLP_DSP		= (1 << 1),       /* DevSlp present */
 	PORT_DEVSLP_ADSE	= (1 << 0),       /* Aggressive DevSlp enable */
 
+	/* PORT OOB Params */
+	PORT_OOB_INDIRECT_ADDR	= 0x48,		/* OOB register address */
+	PORT_OOB_COMRESET_U_MASK = 0x3f,	/* OOB COMRESET UPPER LIMIT MASK */
+	PORT_OOB_COMWAKE_OFFSET	= 12,		/* OOB COMWAKE OFFSET */
+	PORT_OOB_COMWAKE_MASK	= (0xf << 12),	/* OOB COMWAKE MASK */
+
 	/* hpriv->flags bits */
 
 #define AHCI_HFLAGS(flags)		.private_data	= (void *)(flags)
@@ -352,6 +360,13 @@ struct ahci_host_priv {
 	unsigned		nports;		/* Number of ports */
 	void			*plat_data;	/* Other platform data */
 	unsigned int		irq;		/* interrupt line */
+
+	/* OOB (Out of Band) parameters */
+	/* High limit of the spacing between two bursts of COMRESET */
+	u32 comreset_u;
+	/* High limit of the spacing between two bursts of COMWAKE */
+	u32 comwake;
+
 	/*
 	 * Optional ahci_start_engine override, if not set this gets set to the
 	 * default ahci_start_engine during ahci_save_initial_config, this can
diff --git a/drivers/ata/ahci_mvebu.c b/drivers/ata/ahci_mvebu.c
index c799529..57042ae 100644
--- a/drivers/ata/ahci_mvebu.c
+++ b/drivers/ata/ahci_mvebu.c
@@ -263,6 +263,14 @@ static int ahci_mvebu_probe(struct platform_device *pdev)
 			return rc;
 	}
 
+	if (of_property_read_u32(pdev->dev.of_node, "comwake",
+				 &hpriv->comwake))
+		hpriv->comwake = 0;
+
+	if (of_property_read_u32(pdev->dev.of_node, "comreset_u",
+				 &hpriv->comreset_u))
+		hpriv->comreset_u = 0;
+
 	rc = ahci_platform_init_host(pdev, hpriv, &ahci_mvebu_port_info,
 				     &ahci_platform_sht);
 	if (rc)
diff --git a/drivers/ata/libahci.c b/drivers/ata/libahci.c
index 3159f9e..909f1aa 100644
--- a/drivers/ata/libahci.c
+++ b/drivers/ata/libahci.c
@@ -1198,6 +1198,40 @@ static void ahci_port_init(struct device *dev, struct ata_port *ap,
 	if (rc)
 		dev_warn(dev, "%s (%d)\n", emsg, rc);
 
+	if (hpriv->comreset_u) {
+		u32 reg;
+
+		/* Modify COMRESET spacing upper limit which controls the high
+		 * limit of the spacing between two bursts of COMRESET where we
+		 * still respond to COMRESET command.
+		 *
+		 * This is indirect access, so we write the required address,
+		 * then read the register, modify it and write back.
+		 */
+		writel(PORT_OOB_INDIRECT_ADDR, port_mmio + PORT_INDIRECT_ADDR);
+		reg = readl(port_mmio + PORT_INDIRECT_DATA);
+		reg &= ~PORT_OOB_COMRESET_U_MASK;
+		reg |= hpriv->comreset_u;
+		writel(reg, port_mmio + PORT_INDIRECT_DATA);
+	}
+
+	if (hpriv->comwake) {
+		u32 reg;
+
+		/* Modify COMWAKE spacing upper limit which controls the high
+		 * limit of the spacing between two bursts of COMWAKE where we
+		 * still respond to COMWAKE command.
+		 *
+		 * This is indirect access, so we write the required address,
+		 * then read the register, modify it and write back.
+		 */
+		writel(PORT_OOB_INDIRECT_ADDR, port_mmio + PORT_INDIRECT_ADDR);
+		reg = readl(port_mmio + PORT_INDIRECT_DATA);
+		reg &= ~PORT_OOB_COMWAKE_MASK;
+		reg |= hpriv->comwake << PORT_OOB_COMWAKE_OFFSET;
+		writel(reg, port_mmio + PORT_INDIRECT_DATA);
+	}
+
 	/* clear SError */
 	tmp = readl(port_mmio + PORT_SCR_ERR);
 	VPRINTK("PORT_SCR_ERR 0x%x\n", tmp);
-- 
1.7.9.5

