From 1bbd7c37091cdfefa87f3a65b52903713cf50a45 Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Wed, 13 Apr 2016 15:22:33 +0300
Subject: [PATCH 0181/1345] axim: improved comments and explanations

commit  f05cbc51cffe56af5d9fd8bee7105febf997f48d from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: If049f3fbb7d1e3c75d8c07699b207d8c5921cc55
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/28997
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../hwtracing/coresight/coresight-axi-monitor.c    |   14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/drivers/hwtracing/coresight/coresight-axi-monitor.c b/drivers/hwtracing/coresight/coresight-axi-monitor.c
index 80714e5..c310712 100644
--- a/drivers/hwtracing/coresight/coresight-axi-monitor.c
+++ b/drivers/hwtracing/coresight/coresight-axi-monitor.c
@@ -45,7 +45,7 @@ static void axim_enable_channel(struct axim_drvdata *axim, int chan_nr)
 	int order, offset;
 	u32 reload;
 
-	/* Find the MSB different betweem both addresses */
+	/* Find the MSB different between both addresses */
 	order = ilog2(chan->addr_end ^ chan->addr_start);
 	if (order < 0)
 		addr_mask = 0;
@@ -54,15 +54,19 @@ static void axim_enable_channel(struct axim_drvdata *axim, int chan_nr)
 
 	offset = max(0, order - 31);
 
-	/* First define the power of 2 aligned window */
+	/* First define the power of 2 aligned window
+	 * This is a coarse window for address comparison
+	 */
 	writel(chan->addr_start & U32_MAX, axim->base + AXI_MON_CH_REF_ADDR_L(chan_nr));
 	writel(chan->addr_start >> 32, axim->base + AXI_MON_CH_REF_ADDR_H(chan_nr));
 	writel(addr_mask & U32_MAX, axim->base + AXI_MON_CH_USE_ADDR_L(chan_nr));
 	writel(addr_mask >> 32, axim->base + AXI_MON_CH_USE_ADDR_H(chan_nr));
 
-	/* now set specific addresses in the 32 comperator
-	 * the comperator can also be used for user field but we use it
-	 * statically for address field to enable fine grain address match
+	/* now set precise addresses in the 32 bit comperator
+	 * the comperator can also be used for user field but we
+	 * always use it for address field to enable fine grain
+	 * address match. The comperator can select which 32 bits
+	 * of address to capture so we update the offset accordingly
 	 */
 	if (addr_mask) {
 		writel(chan->addr_start & U32_MAX, axim->base + AXI_MON_CH_COMP_MIN(chan_nr));
-- 
1.7.9.5

