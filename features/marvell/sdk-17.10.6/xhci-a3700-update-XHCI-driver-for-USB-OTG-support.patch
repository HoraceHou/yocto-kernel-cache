From c0a131963d24dafc082e9a680135d0a653177513 Mon Sep 17 00:00:00 2001
From: jinghua <xigu@marvell.com>
Date: Wed, 9 Nov 2016 16:56:06 +0800
Subject: [PATCH 0622/1345] xhci: a3700: update XHCI driver for USB OTG
 support

commit  cf0133a24574bf1c915423bfb8b8764b8d3c061a from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- Armada3700 has got both USB Host and Device controller,
  and a dedicate USB_ID interrupt as a indication of USB
  mode switch between Host and Device.
- This patch updates generic XHCI driver to support USB
  OTG framework, with newly introduced compatible string
  "marvell,armada-3700-xhci-otg", it will be working in
  USB OTG mode, register itself to OTG PHY driver
  in probe routine, and only start to work until OTG PHY
  driver decides to move to USB Host mode by handling USB_ID
  interrupt, and call usb_add_hcd from it.
- Armada3700 could still work in USB Host only mode as usual
  with regular generic XHCI driver compatible string "generic-xhci".
- This update is for Armada3700 USB OTG mode specially, and
  might not be able to mainline.

Change-Id: Iff3fc79218c5fa1d2780fd8bef775a7afc28a347
Signed-off-by: jinghua <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33631
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/host/xhci-plat.c |   52 +++++++++++++++++++++++++++++++++---------
 1 file changed, 41 insertions(+), 11 deletions(-)

diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 2087407..ca9545a 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -20,6 +20,7 @@
 #include <linux/usb/phy.h>
 #include <linux/slab.h>
 #include <linux/acpi.h>
+#include <linux/usb/otg.h>
 
 #include "xhci.h"
 #include "xhci-plat.h"
@@ -126,6 +127,8 @@ static int xhci_plat_start(struct usb_hcd *hcd)
 	}, {
 		.compatible = "xhci-platform",
 	}, {
+		.compatible = "marvell,armada-3700-xhci-otg"
+	}, {
 		.compatible = "marvell,armada-375-xhci",
 		.data = &xhci_plat_marvell_armada,
 	}, {
@@ -289,16 +292,37 @@ static int xhci_plat_probe(struct platform_device *pdev)
 			goto put_usb3_hcd;
 	}
 
-	ret = usb_add_hcd(hcd, irq, IRQF_SHARED);
-	if (ret)
-		goto disable_usb_phy;
+	if (of_device_is_compatible(pdev->dev.of_node,
+				    "marvell,armada-3700-xhci-otg")) {
+		/* If Armada3700 needs to enable OTG support, register XHCI
+		 * driver to OTG PHY, and wait for it to call usb_add_hcd
+		 * at the right time (start working in USB Host mode).
+		 */
+
+		if (hcd->usb_phy == NULL) {
+			dev_err(&pdev->dev, "unable to find OTG PHY\n");
+			goto disable_usb_phy;
+		}
+
+		hcd->irq = irq;
+
+		ret = otg_set_host(hcd->usb_phy->otg, &hcd->self);
+		if (ret) {
+			dev_err(&pdev->dev, "unable to register with OTG PHY\n");
+			goto disable_usb_phy;
+		}
+	} else {
+		ret = usb_add_hcd(hcd, irq, IRQF_SHARED);
+		if (ret)
+			goto disable_usb_phy;
 
-	if (HCC_MAX_PSA(xhci->hcc_params) >= 4)
-		xhci->shared_hcd->can_do_streams = 1;
+		if (HCC_MAX_PSA(xhci->hcc_params) >= 4)
+			xhci->shared_hcd->can_do_streams = 1;
 
-	ret = usb_add_hcd(xhci->shared_hcd, irq, IRQF_SHARED);
-	if (ret)
-		goto dealloc_usb2_hcd;
+		ret = usb_add_hcd(xhci->shared_hcd, irq, IRQF_SHARED);
+		if (ret)
+			goto dealloc_usb2_hcd;
+	}
 
 	device_enable_async_suspend(&pdev->dev);
 	pm_runtime_put_noidle(&pdev->dev);
@@ -343,10 +367,16 @@ static int xhci_plat_remove(struct platform_device *dev)
 
 	xhci->xhc_state |= XHCI_STATE_REMOVING;
 
-	usb_remove_hcd(xhci->shared_hcd);
-	usb_phy_shutdown(hcd->usb_phy);
+	if (of_device_is_compatible(dev->dev.of_node,
+				    "marvell,armada-3700-xhci-otg")) {
+		otg_set_host(hcd->usb_phy->otg, NULL);
+	} else {
+		usb_remove_hcd(xhci->shared_hcd);
+		usb_phy_shutdown(hcd->usb_phy);
+
+		usb_remove_hcd(hcd);
+	}
 
-	usb_remove_hcd(hcd);
 	usb_put_hcd(xhci->shared_hcd);
 
 	if (!IS_ERR(clk))
-- 
1.7.9.5

