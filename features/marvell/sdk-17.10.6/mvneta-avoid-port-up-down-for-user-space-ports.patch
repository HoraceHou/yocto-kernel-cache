From 98d9abdc09c0d0d0c99660359e414fa515f26fc4 Mon Sep 17 00:00:00 2001
From: Yelena Krivosheev <yelena@marvell.com>
Date: Wed, 7 Mar 2018 14:42:24 +0200
Subject: [PATCH 1307/1345] mvneta: avoid port up / down for user space ports

commit  19e638a235257471559f65b77b0a506ee3942bff from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: If37ec109d930fb0ab1ebde0072e2acda35662b65
Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/51478
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvneta.c |   41 ++++++++++++++++++---------------
 1 file changed, 22 insertions(+), 19 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 62b2fb3..e8cbb6f 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -3527,26 +3527,29 @@ static void mvneta_adjust_link(struct net_device *ndev)
 	}
 
 	if (status_change) {
-		if (phydev->link) {
-			if (!pp->use_inband_status) {
-				u32 val = mvreg_read(pp,
-						  MVNETA_GMAC_AUTONEG_CONFIG);
-				val &= ~MVNETA_GMAC_FORCE_LINK_DOWN;
-				val |= MVNETA_GMAC_FORCE_LINK_PASS;
-				mvreg_write(pp, MVNETA_GMAC_AUTONEG_CONFIG,
-					    val);
-			}
-			mvneta_port_up(pp);
-		} else {
-			if (!pp->use_inband_status) {
-				u32 val = mvreg_read(pp,
-						  MVNETA_GMAC_AUTONEG_CONFIG);
-				val &= ~MVNETA_GMAC_FORCE_LINK_PASS;
-				val |= MVNETA_GMAC_FORCE_LINK_DOWN;
-				mvreg_write(pp, MVNETA_GMAC_AUTONEG_CONFIG,
-					    val);
+		/* nothing to do if port belongs to User Space */
+		if (!(pp->flags & MVNETA_PORT_F_IF_MUSDK)) {
+			if (phydev->link) {
+				if (!pp->use_inband_status) {
+					u32 val = mvreg_read(pp,
+							  MVNETA_GMAC_AUTONEG_CONFIG);
+					val &= ~MVNETA_GMAC_FORCE_LINK_DOWN;
+					val |= MVNETA_GMAC_FORCE_LINK_PASS;
+					mvreg_write(pp, MVNETA_GMAC_AUTONEG_CONFIG,
+						    val);
+				}
+				mvneta_port_up(pp);
+			} else {
+				if (!pp->use_inband_status) {
+					u32 val = mvreg_read(pp,
+							  MVNETA_GMAC_AUTONEG_CONFIG);
+					val &= ~MVNETA_GMAC_FORCE_LINK_PASS;
+					val |= MVNETA_GMAC_FORCE_LINK_DOWN;
+					mvreg_write(pp, MVNETA_GMAC_AUTONEG_CONFIG,
+						    val);
+				}
+				mvneta_port_down(pp);
 			}
-			mvneta_port_down(pp);
 		}
 		phy_print_status(phydev);
 	}
-- 
1.7.9.5

