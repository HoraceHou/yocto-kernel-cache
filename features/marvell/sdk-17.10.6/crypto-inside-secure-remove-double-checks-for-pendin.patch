From a3a6ea5325ac3ea5a5e9af2616202a4c43e7f7a6 Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Wed, 25 Oct 2017 04:57:17 +0300
Subject: [PATCH 1264/1345] crypto: inside-secure: remove double checks for
 pending req

commit  78efd39223e49154ac604353d74e9464d0b22786 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

request is checked twice instead of once, this reduces the number
of checkes.

Change-Id: I3965c8d8cee317dad0d45aaee1a5efddca693504
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45574
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/51645
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/inside-secure/safexcel.c |   14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/crypto/inside-secure/safexcel.c b/drivers/crypto/inside-secure/safexcel.c
index 0157889e..5e7dffe 100644
--- a/drivers/crypto/inside-secure/safexcel.c
+++ b/drivers/crypto/inside-secure/safexcel.c
@@ -683,14 +683,15 @@ void safexcel_dequeue(struct safexcel_crypto_priv *priv, int ring)
 	req = priv->ring[ring].req;
 	backlog = priv->ring[ring].backlog;
 
+	if (req)
+		goto handle_pending;
+
 	do {
 		/* get a new request if no ring saved req */
-		if (!req) {
-			spin_lock_bh(&priv->ring[ring].queue_lock);
-			backlog = crypto_get_backlog(&priv->ring[ring].queue);
-			req = crypto_dequeue_request(&priv->ring[ring].queue);
-			spin_unlock_bh(&priv->ring[ring].queue_lock);
-		}
+		spin_lock_bh(&priv->ring[ring].queue_lock);
+		backlog = crypto_get_backlog(&priv->ring[ring].queue);
+		req = crypto_dequeue_request(&priv->ring[ring].queue);
+		spin_unlock_bh(&priv->ring[ring].queue_lock);
 
 		/* no more requests, update ring saved req */
 		if (!req) {
@@ -700,6 +701,7 @@ void safexcel_dequeue(struct safexcel_crypto_priv *priv, int ring)
 			goto finalize;
 		}
 
+handle_pending:
 		request = kzalloc(sizeof(*request), EIP197_GFP_FLAGS(*req));
 		if (!request)
 			goto resource_fail;
-- 
1.7.9.5

