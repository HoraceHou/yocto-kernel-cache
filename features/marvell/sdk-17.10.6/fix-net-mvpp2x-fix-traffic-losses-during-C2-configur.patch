From 7a0beb9e590df680148f1d12ae320c4c2919f7f3 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 19 Mar 2017 17:31:50 +0200
Subject: [PATCH 0914/1345] fix: net: mvpp2x: fix traffic losses during C2
 configuration

commit  00eafe7f484d5f387e287acaf29dfabb125ab301 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

C2 entry should be invalid before C2 TCAM configuration.

Change-Id: Ifb6226144df3f664fb5ee37b749dc391873e8d28
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37878
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c |   18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
index 70d976e..ffb2c0a 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
@@ -5496,14 +5496,7 @@ int mv_pp2x_cls_c2_hw_write(struct mv_pp2x_hw *hw, int index,
 	/* write index reg */
 	mv_pp2x_write(hw, MVPP2_CLS2_TCAM_IDX_REG, index);
 
-	/* write valid bit*/
-	c2->inv = 0;
-	mv_pp2x_write(hw, MVPP2_CLS2_TCAM_INV_REG,
-		      ((c2->inv) << MVPP2_CLS2_TCAM_INV_INVALID_OFF));
-
-	for (tcm_idx = 0; tcm_idx < MVPP2_CLS_C2_TCAM_WORDS; tcm_idx++)
-		mv_pp2x_write(hw, MVPP2_CLS2_TCAM_DATA_REG(tcm_idx),
-			      c2->tcam.words[tcm_idx]);
+	mv_pp2x_cls_c2_hw_inv(hw, index);
 
 	/* write action_tbl CLSC2_ACT_DATA */
 	mv_pp2x_write(hw, MVPP2_CLS2_ACT_DATA_REG, c2->sram.regs.action_tbl);
@@ -5520,6 +5513,15 @@ int mv_pp2x_cls_c2_hw_write(struct mv_pp2x_hw *hw, int index,
 	/* write rss_attr CLSC2_ATTR2 */
 	mv_pp2x_write(hw, MVPP2_CLS2_ACT_DUP_ATTR_REG, c2->sram.regs.rss_attr);
 
+	/* write valid bit*/
+	c2->inv = 0;
+	mv_pp2x_write(hw, MVPP2_CLS2_TCAM_INV_REG,
+		      ((c2->inv) << MVPP2_CLS2_TCAM_INV_INVALID_OFF));
+
+	for (tcm_idx = 0; tcm_idx < MVPP2_CLS_C2_TCAM_WORDS; tcm_idx++)
+		mv_pp2x_write(hw, MVPP2_CLS2_TCAM_DATA_REG(tcm_idx),
+			      c2->tcam.words[tcm_idx]);
+
 	return 0;
 }
 EXPORT_SYMBOL(mv_pp2x_cls_c2_hw_write);
-- 
1.7.9.5

