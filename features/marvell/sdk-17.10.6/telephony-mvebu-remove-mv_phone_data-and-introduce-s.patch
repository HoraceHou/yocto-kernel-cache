From fea7f87e58b1ce092aa98cf2b344e51968ef96cc Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Tue, 27 Dec 2016 17:37:07 +0100
Subject: [PATCH 0689/1345] telephony: mvebu: remove mv_phone_data and
 introduce spi_mode for tdm2c

commit  8a047dd4f57881847399c8f407dd2ec9884267d7 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

After reimplementing IP version selection for tdmmc it occurred that
the only common parameter for tdm2c and tdmmc initialization is
frame_ts. Hence this small structure could be removed, which required
tdm2c_init() and tdmmc_init() argument list modification.

Additionally spi_mode for it's only user (tdm2c) had to be determined.
Because of that, this commit adds new enum and the way for obtaining
value from new DT property. Binding documentation was updated
accordingly.

Change-Id: I436f07ee5b85fb1333b90a854ca3a1c7780a1f0d
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35153
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../devicetree/bindings/telephony/mvebu-phone.txt  |    4 +++
 drivers/telephony/mvebu_phone/mv_phone.h           |   19 +++++++++-----
 drivers/telephony/mvebu_phone/mv_phone_dev.c       |   27 ++++++++++++--------
 drivers/telephony/mvebu_phone/tdm2c/tdm2c.c        |    9 ++++---
 drivers/telephony/mvebu_phone/tdmmc/tdmmc.c        |   14 +++++-----
 5 files changed, 45 insertions(+), 28 deletions(-)

diff --git a/Documentation/devicetree/bindings/telephony/mvebu-phone.txt b/Documentation/devicetree/bindings/telephony/mvebu-phone.txt
index f5dfa4b..515b63d 100644
--- a/Documentation/devicetree/bindings/telephony/mvebu-phone.txt
+++ b/Documentation/devicetree/bindings/telephony/mvebu-phone.txt
@@ -27,6 +27,10 @@ Optional properties:
 
 - use-pclk-external: chooses SLIC as an external pclk source
 
+- spi-mode: set <0> for direct connection and <1> for daisy-chain mode.
+  If not set, by default direct mode is used. This property is valid
+  only for TDM2C devices, for TDMMC it will be ignored.
+
 Example:
 
 tdm@b0000 {
diff --git a/drivers/telephony/mvebu_phone/mv_phone.h b/drivers/telephony/mvebu_phone/mv_phone.h
index 81dd8cf..b5f2298 100644
--- a/drivers/telephony/mvebu_phone/mv_phone.h
+++ b/drivers/telephony/mvebu_phone/mv_phone.h
@@ -184,6 +184,11 @@ enum mv_phone_frame_ts {
 	MV_FRAME_128TS = 128
 };
 
+enum mv_phone_spi_mode {
+	MV_SPI_MODE_DIRECT = 0,
+	MV_SPI_MODE_DAISY_CHAIN = 1
+};
+
 #ifdef CONFIG_MV_TDM_EXT_STATS
 struct mv_phone_extended_stats {
 	u32 int_rx_count;
@@ -215,11 +220,6 @@ struct mv_phone_params {
 	u16 total_channels;
 };
 
-struct mv_phone_data {
-	u8 spi_mode;
-	enum mv_phone_frame_ts frame_ts;
-};
-
 struct mv_phone_dev {
 	void __iomem *tdm_base;
 	void __iomem *pll_base;
@@ -267,6 +267,9 @@ struct mv_phone_dev {
 	u32 pcm_stop_fail;
 #endif
 
+	/* TDM2C SPI operation mode */
+	enum mv_phone_spi_mode tdm2c_spi_mode;
+
 	/* TDMMC silicon revision */
 	enum tdmmc_ip_version tdmmc_ip_ver;
 };
@@ -317,7 +320,9 @@ void mv_phone_spi_read(u16 lineId, u8 *cmdBuff, u8 cmdSize,
 
 /* TDM2C */
 int tdm2c_init(void __iomem *base, struct device *dev,
-	       struct mv_phone_params *tdmParams, struct mv_phone_data *halData);
+	       struct mv_phone_params *tdm_params,
+	       enum mv_phone_frame_ts frame_ts,
+	       enum mv_phone_spi_mode spi_mode);
 int tdm2c_intr_low(struct mv_phone_intr_info *tdm_intr_info);
 #ifdef CONFIG_MV_TDM_EXT_STATS
 void tdm2c_ext_stats_get(struct mv_phone_extended_stats *tdmExtStats);
@@ -325,7 +330,7 @@ int tdm2c_init(void __iomem *base, struct device *dev,
 
 /* TDMMC */
 int tdmmc_init(void __iomem *base, struct device *dev, struct mv_phone_params *tdm_params,
-	       struct mv_phone_data *hal_data, enum tdmmc_ip_version tdmmc_ip_ver);
+	       enum mv_phone_frame_ts frame_ts, enum tdmmc_ip_version tdmmc_ip_ver);
 int tdmmc_intr_low(struct mv_phone_intr_info *tdm_intr_info);
 
 #endif /* _MV_PHONE_H_ */
diff --git a/drivers/telephony/mvebu_phone/mv_phone_dev.c b/drivers/telephony/mvebu_phone/mv_phone_dev.c
index 3a457ca..d69dfa2 100644
--- a/drivers/telephony/mvebu_phone/mv_phone_dev.c
+++ b/drivers/telephony/mvebu_phone/mv_phone_dev.c
@@ -293,30 +293,28 @@ static void tdmmc_if_pcm_stop(void)
 /* TDM low-level initialization */
 static int tdm_hw_init(struct mv_phone_params *tdm_params)
 {
-	struct mv_phone_data hal_data;
-	u8 spi_mode = 0;
+	enum mv_phone_frame_ts frame_ts;
 	int ret;
 
-	hal_data.spi_mode = spi_mode;
-
 	switch (priv->pclk_freq_mhz) {
 	case 8:
-		hal_data.frame_ts = MV_FRAME_128TS;
+		frame_ts = MV_FRAME_128TS;
 		break;
 	case 4:
-		hal_data.frame_ts = MV_FRAME_64TS;
+		frame_ts = MV_FRAME_64TS;
 		break;
 	case 2:
-		hal_data.frame_ts = MV_FRAME_32TS;
+		frame_ts = MV_FRAME_32TS;
 		break;
 	default:
-		hal_data.frame_ts = MV_FRAME_128TS;
+		frame_ts = MV_FRAME_128TS;
 		break;
 	}
 
 	switch (priv->tdm_type) {
 	case MV_TDM_UNIT_TDM2C:
-		ret = tdm2c_init(priv->tdm_base, priv->dev, tdm_params, &hal_data);
+		ret = tdm2c_init(priv->tdm_base, priv->dev, tdm_params,
+				 frame_ts, priv->tdm2c_spi_mode);
 
 		/* Soft reset to PCM I/F */
 		tdm2c_pcm_if_reset();
@@ -324,7 +322,7 @@ static int tdm_hw_init(struct mv_phone_params *tdm_params)
 		break;
 	case MV_TDM_UNIT_TDMMC:
 		ret = tdmmc_init(priv->tdm_base, priv->dev, tdm_params,
-				 &hal_data, priv->tdmmc_ip_ver);
+				 frame_ts, priv->tdmmc_ip_ver);
 
 		/* Issue SLIC reset */
 		ret |= tdmmc_reset_slic();
@@ -1071,6 +1069,15 @@ static int mvebu_phone_probe(struct platform_device *pdev)
 		}
 	}
 
+	if (priv->tdm_type == MV_TDM_UNIT_TDM2C) {
+		if (of_property_read_u32(np, "spi-mode", &priv->tdm2c_spi_mode) ||
+		    (priv->tdm2c_spi_mode != 0 && priv->tdm2c_spi_mode != 1))
+			priv->tdm2c_spi_mode = 0;
+
+		dev_info(&pdev->dev, "using %s SPI mode\n",
+			 priv->tdm2c_spi_mode ? "daisy-chain" : "direct");
+	}
+
 	spin_lock_init(&priv->lock);
 
 	mv_phone_enabled = 1;
diff --git a/drivers/telephony/mvebu_phone/tdm2c/tdm2c.c b/drivers/telephony/mvebu_phone/tdm2c/tdm2c.c
index 358eb89..f5ec581 100644
--- a/drivers/telephony/mvebu_phone/tdm2c/tdm2c.c
+++ b/drivers/telephony/mvebu_phone/tdm2c/tdm2c.c
@@ -378,7 +378,8 @@ static void tdm2c_reset(void)
 }
 
 int tdm2c_init(void __iomem *base, struct device *dev,
-	       struct mv_phone_params *tdm_params, struct mv_phone_data *phone_data)
+	       struct mv_phone_params *tdm_params, enum mv_phone_frame_ts frame_ts,
+	       enum mv_phone_spi_mode spi_mode)
 {
 	u8 ch;
 	u32 pcm_ctrl_reg, nb_delay = 0, wb_delay = 0;
@@ -442,7 +443,7 @@ int tdm2c_init(void __iomem *base, struct device *dev,
 	for (ch = 0; ch < MV_TDM2C_TOTAL_CHANNELS; ch++) {
 		nb_delay = ((tdm_params->pcm_slot[ch] * PCM_SLOT_PCLK) + 1);
 		/* Offset required by ZARLINK VE880 SLIC */
-		wb_delay = (nb_delay + ((phone_data->frame_ts / 2) * PCM_SLOT_PCLK));
+		wb_delay = (nb_delay + ((frame_ts / 2) * PCM_SLOT_PCLK));
 		ch_delay[ch] = ((nb_delay << CH_RX_DELAY_OFFS) | (nb_delay << CH_TX_DELAY_OFFS));
 		ch_delay[(ch + 2)] = ((wb_delay << CH_RX_DELAY_OFFS) | (wb_delay << CH_TX_DELAY_OFFS));
 	}
@@ -468,7 +469,7 @@ int tdm2c_init(void __iomem *base, struct device *dev,
 	/* SPI SCLK freq */
 	writel(SPI_CLK_2MHZ, tdm2c->regs + SPI_CLK_PRESCALAR_REG);
 	/* Number of timeslots (PCLK) */
-	writel((u32)phone_data->frame_ts, tdm2c->regs + FRAME_TIMESLOT_REG);
+	writel((u32)frame_ts, tdm2c->regs + FRAME_TIMESLOT_REG);
 
 	if (tdm2c->band_mode == MV_NARROW_BAND) {
 		pcm_ctrl_reg = (CONFIG_PCM_CRTL | (((u8)tdm2c->pcm_format - 1) << PCM_SAMPLE_SIZE_OFFS));
@@ -507,7 +508,7 @@ int tdm2c_init(void __iomem *base, struct device *dev,
 	mdelay(1);
 	writel(1, tdm2c->regs + MISC_CTRL_REG);
 
-	if (phone_data->spi_mode) {
+	if (spi_mode == MV_SPI_MODE_DAISY_CHAIN) {
 		/* Configure TDM to work in daisy chain mode */
 		tdm2c_daisy_chain_mode_set();
 	}
diff --git a/drivers/telephony/mvebu_phone/tdmmc/tdmmc.c b/drivers/telephony/mvebu_phone/tdmmc/tdmmc.c
index 904d8b7..f168cb3 100644
--- a/drivers/telephony/mvebu_phone/tdmmc/tdmmc.c
+++ b/drivers/telephony/mvebu_phone/tdmmc/tdmmc.c
@@ -358,7 +358,7 @@ void tdmmc_show(void)
 }
 
 int tdmmc_init(void __iomem *base, struct device *dev,
-	       struct mv_phone_params *tdm_params, struct mv_phone_data *hal_data,
+	       struct mv_phone_params *tdm_params, enum mv_phone_frame_ts frame_ts,
 	       enum tdmmc_ip_version tdmmc_ip_ver)
 {
 	u16 pcm_slot, index;
@@ -532,9 +532,9 @@ int tdmmc_init(void __iomem *base, struct device *dev,
 		pcm_slot = tdm_params->pcm_slot[chan];
 
 		/* Verify time slot is within frame boundries */
-		if (pcm_slot >= hal_data->frame_ts) {
+		if (pcm_slot >= frame_ts) {
 			dev_err(pdev, "Error, time slot(%d) exceeded maximum(%d)\n",
-				pcm_slot, hal_data->frame_ts);
+				pcm_slot, frame_ts);
 			ret = -ETIME;
 			goto err_dpram;
 		}
@@ -567,7 +567,7 @@ int tdmmc_init(void __iomem *base, struct device *dev,
 
 		/* WideBand mode */
 		if (sample_size == MV_PCM_FORMAT_4BYTES) {
-			index = (index + (hal_data->frame_ts / sample_size));
+			index = (index + (frame_ts / sample_size));
 			/* DPRAM low half */
 			act_dpram_entry->mask = 0xff;
 			writel(*((u32 *) act_dpram_entry), regs + FLEX_TDM_RDPR_REG(index));
@@ -589,9 +589,9 @@ int tdmmc_init(void __iomem *base, struct device *dev,
 
 	/* Index for last entry */
 	if (sample_size == MV_PCM_FORMAT_1BYTE)
-		index = (hal_data->frame_ts - 1);
+		index = (frame_ts - 1);
 	else
-		index = ((hal_data->frame_ts / 2) - 1);
+		index = ((frame_ts / 2) - 1);
 
 	/* Low half */
 	writel(*((u32 *) act_dpram_entry), regs + FLEX_TDM_TDPR_REG(index));
@@ -626,7 +626,7 @@ int tdmmc_init(void __iomem *base, struct device *dev,
 	writel(0, regs + MCSC_EXTENDED_INT_CAUSE_REG);
 
 	/* Set output sync counter bits for FS */
-	count = hal_data->frame_ts * 8;
+	count = frame_ts * 8;
 	writel(((count << TDM_SYNC_BIT_RX_OFFS) & TDM_SYNC_BIT_RX_MASK) | (count & TDM_SYNC_BIT_TX_MASK),
 	       regs + TDM_OUTPUT_SYNC_BIT_COUNT_REG);
 
-- 
1.7.9.5

