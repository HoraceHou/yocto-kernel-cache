From 6c185b555a5e03523ccaa76fcf4626fe62ee83b1 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Thu, 22 Sep 2016 15:07:25 +0300
Subject: [PATCH 0515/1345] mvpp2x: remove unused bm_pool->in_use variable

commit  5c40f0981b2b077c1f12610ca142d4f49f4f274a from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- bm_pool->in_use was created for recycling feature
- bm_pool->in_use would be added with recycling support

Change-Id: Ic7122c8b5dff46f7ddde75b5dd724605a5c4686b
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33071
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h  |    2 --
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   13 +------------
 2 files changed, 1 insertion(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
index 3e6a575..40a4ddd 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
@@ -2256,8 +2256,6 @@ struct mv_pp2x_bm_pool {
 	/* Ports using BM pool */
 	u32 port_map;
 
-	/* Occupied buffers indicator */
-	atomic_t in_use;
 	int in_use_thresh;
 };
 
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index d66edf4..cd8bb63 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -301,10 +301,6 @@ static int mv_pp2x_rx_refill_new(struct mv_pp2x_port *port,
 	dma_addr_t phys_addr;
 	void *data;
 
-	if (is_recycle &&
-	    (atomic_read(&bm_pool->in_use) < bm_pool->in_use_thresh))
-		return 0;
-
 	data = mv_pp2x_frag_alloc(bm_pool);
 	if (!data)
 		return -ENOMEM;
@@ -319,7 +315,6 @@ static int mv_pp2x_rx_refill_new(struct mv_pp2x_port *port,
 	}
 
 	mv_pp2x_pool_refill(port->priv, pool, phys_addr);
-	atomic_dec(&bm_pool->in_use);
 	return 0;
 }
 
@@ -363,7 +358,7 @@ static int mv_pp2x_bm_pool_create(struct device *dev,
 	bm_pool->buf_num = 0;
 	mv_pp2x_bm_pool_bufsize_set(hw, bm_pool,
 				    MVPP2_RX_BUF_SIZE(bm_pool->pkt_size));
-	atomic_set(&bm_pool->in_use, 0);
+
 
 	return 0;
 }
@@ -2137,17 +2132,12 @@ static int mv_pp2x_rx_refill(struct mv_pp2x_port *port,
 	struct sk_buff *skb;
 	dma_addr_t phys_addr;
 
-	if (is_recycle &&
-	    (atomic_read(&bm_pool->in_use) < bm_pool->in_use_thresh))
-		return 0;
-
 	/* No recycle or too many buffers are in use, so allocate a new skb */
 	skb = mv_pp2x_skb_alloc(port, bm_pool, &phys_addr, GFP_ATOMIC);
 	if (!skb)
 		return -ENOMEM;
 
 	mv_pp2x_pool_refill(port->priv, pool, phys_addr, skb);
-	atomic_dec(&bm_pool->in_use);
 	return 0;
 }
 #endif
@@ -2321,7 +2311,6 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 				 MVPP2_RX_BUF_SIZE(bm_pool->pkt_size),
 				 DMA_FROM_DEVICE);
 
-		atomic_inc(&bm_pool->in_use);
 		refill_array[bm_pool->log_id]++;
 
 #ifdef MVPP2_VERBOSE
-- 
1.7.9.5

