From 77a6f094ec0dc190c754ede9618d89a5597cbadb Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 8 Jan 2017 19:23:43 +0200
Subject: [PATCH 0722/1345] fix: net: mvpp2x: TXQ software ring underrun
 workaround

commit  d71527f2841c12b1d54582428a908971477a52c8 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Issue:
 - Number of Transmitted Descriptors Counter packets from register
   0x3e00 (Ethernet_TX Queues Status) is greater than number
   wrote to No Of Written Descriptors in register 0x2090
   (TX Queues Status Update) as results occurred TXQ software ring
   underrun -> crashes due to unmapped 0 address and data corruption
   of packets that wasn't sent yet.

WA:
1. Each CPU will work with different Physical TXQ
2. Configure equal weighted round robin in TX scheduler

WA impact:
1. No CoS in Tx path
2. Minimum number of TXQ's is 4

Change-Id: I01b71bbc6878e8779188d689d8ccce24481529f2
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35453
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35387
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 5ef6770..b9aa5ef 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -1272,6 +1272,7 @@ static int mv_pp2x_txq_init(struct mv_pp2x_port *port,
 	val |= MVPP2_TXQ_REFILL_TOKENS_ALL_MASK;
 	mv_pp2x_write(hw, MVPP2_TXQ_SCHED_REFILL_REG(txq->log_id), val);
 
+	mv_pp2x_write(hw, MVPP2_TXP_SCHED_FIXED_PRIO_REG, 0);
 	val = MVPP2_TXQ_TOKEN_SIZE_MAX;
 	mv_pp2x_write(hw, MVPP2_TXQ_SCHED_TOKEN_SIZE_REG(txq->log_id),
 		      val);
@@ -3978,13 +3979,13 @@ u16 mv_pp2x_select_queue(struct net_device *dev, struct sk_buff *skb,
 			 void *accel_priv, select_queue_fallback_t fallback)
 
 {
-	int val;
-
-	/* If packet in coming from Rx -> RxQ = TxQ, callback function used for packets from CPU Tx */
-	if (skb->queue_mapping)
-		val = skb->queue_mapping - 1;
-	else
-		val = fallback(dev, skb);
+	/* TXQ software ring underrun workaround:
+	  * Using of same physical TXQ from different CPU's cause reading of wrong
+	  * value in Transmitted Descriptors Counter during TX done procedure
+	  * and as result TXQ software ring underrun.
+	  * WA: Each CPU will use different physical TXQ with same equal weighted round robin.
+	  */
+	int val = skb->napi_id - 1;
 
 	return (val % mv_pp2x_txq_number) + (smp_processor_id() * mv_pp2x_txq_number);
 }
-- 
1.7.9.5

