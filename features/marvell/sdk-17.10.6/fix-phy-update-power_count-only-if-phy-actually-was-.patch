From d9eca8284fd6d8d9d7bf9021dfabfdb93006360e Mon Sep 17 00:00:00 2001
From: Igal Liberman <igall@marvell.com>
Date: Tue, 15 Nov 2016 17:03:11 +0200
Subject: [PATCH 0582/1345] fix: phy: update power_count only if phy actually
 was powered off/on

commit  0647f5e82abf228e32475a8bcc22d3d647460b5b from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Currently, when phy_power_off or phy_power_on functions are called
the driver preforms the following checks:
In phy_power_off:
	if (phy->power_count == 1 && phy->ops->power_off) {
		ret =  phy->ops->power_off(phy);
		.
		.
In phy_power_on:
	if (phy->power_count == 0 && phy->ops->power_on) {
		ret = phy->ops->power_on(phy);
		.
		.

However, power_count will be updated even if phy->ops->power_off/on
wasn't actually called causing an incorrect state (In such case, if someone
calls phy_power_off before phy_power_on, phy_power_on will not be
executed.

Change-Id: I17928686a7532c3fe99f676abe88a8429895d615
Signed-off-by: Igal Liberman <igall@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33814
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/phy/phy-core.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/phy/phy-core.c b/drivers/phy/phy-core.c
index bf1e931..648b685 100644
--- a/drivers/phy/phy-core.c
+++ b/drivers/phy/phy-core.c
@@ -299,8 +299,9 @@ int phy_power_on(struct phy *phy)
 			dev_err(&phy->dev, "phy poweron failed --> %d\n", ret);
 			goto err_pwr_on;
 		}
+		++phy->power_count;
 	}
-	++phy->power_count;
+
 	mutex_unlock(&phy->mutex);
 	return 0;
 
@@ -330,8 +331,9 @@ int phy_power_off(struct phy *phy)
 			mutex_unlock(&phy->mutex);
 			return ret;
 		}
+		--phy->power_count;
 	}
-	--phy->power_count;
+
 	mutex_unlock(&phy->mutex);
 	phy_pm_runtime_put(phy);
 
-- 
1.7.9.5

