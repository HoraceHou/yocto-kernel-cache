From 2bb63d441bba73eeedd22727058000dd10bad7dd Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Mon, 18 Jul 2016 19:13:28 +0300
Subject: [PATCH 0355/1345] fix: net: mvpp2x: set txqid according to
 skb->queue_mapping

commit  e2159f2aa0f731a078a13ab9c35f1e3ddf32b9e2 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- set txqid according to skb->queue_mapping instead of hardcoded to 0
- stop queue if there are no free descriptors

Change-Id: Ifd75b35e3f68726ffea91f9f7d456d819507e4c1
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/31224
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 8d29547..3bbb865 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -2386,7 +2386,7 @@ static int mv_pp2x_tx(struct sk_buff *skb, struct net_device *dev)
 	u16 txq_id;
 	u32 tx_cmd;
 
-	txq_id = 0/*skb_get_queue_mapping(skb)*/;
+	txq_id = skb_get_queue_mapping(skb);
 	nq = netdev_get_tx_queue(dev, txq_id);
 	txq = port->txqs[txq_id];
 	txq_pcpu = this_cpu_ptr(txq->pcpu);
@@ -2399,6 +2399,7 @@ static int mv_pp2x_tx(struct sk_buff *skb, struct net_device *dev)
 	if (mv_pp2x_aggr_desc_num_check(port->priv, aggr_txq, frags) ||
 	    mv_pp2x_txq_reserved_desc_num_proc(port->priv, txq,
 					     txq_pcpu, frags)) {
+		netif_tx_stop_queue(nq);
 		frags = 0;
 		MVPP2_PRINT_LINE();
 		goto out;
@@ -2499,9 +2500,9 @@ static int mv_pp2x_tx(struct sk_buff *skb, struct net_device *dev)
 		dev->stats.tx_dropped++;
 		dev_kfree_skb_any(skb);
 	}
-	/* PPV21 TX Post-Processing */
+	/* PPV22 TX Post-Processing */
 
-	if (port->priv->pp2xdata->interrupt_tx_done == false && frags > 0)
+	if (port->priv->pp2xdata->interrupt_tx_done == false)
 		mv_pp2x_tx_done_post_proc(txq, txq_pcpu, port, frags);
 
 	return NETDEV_TX_OK;
-- 
1.7.9.5

