From d87c336c184cc074cce70834ca2afdd5f31910f2 Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Thu, 23 Nov 2017 14:29:26 +0200
Subject: [PATCH 1278/1345] crypto: inside-secure: protection hint
 configuration

commit  4bbca6c31f8f988df83b2683531a290c88c06d8a from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

The eip197b security level configuration is done via ATF by
setting the Audio_EIP197_AXI_PROT Register value. On the ap810
this CPU register was removed and is configured using the eip197d
CDR_y_DMA_CFG, RDR_y_DMA_CFG and HIA_MST registers.

Change-Id: Ibcced65f8571243bd5ff0c31ddebd61d76f9b045
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/51659
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/inside-secure/safexcel.c |   20 +++++++++++++++++++-
 drivers/crypto/inside-secure/safexcel.h |    7 +++++++
 2 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/inside-secure/safexcel.c b/drivers/crypto/inside-secure/safexcel.c
index 4c40a2d..d3716ce 100644
--- a/drivers/crypto/inside-secure/safexcel.c
+++ b/drivers/crypto/inside-secure/safexcel.c
@@ -458,6 +458,13 @@ static int eip_hw_setup_cdesc_rings(struct safexcel_crypto_priv *priv)
 		/* Configure DMA tx control */
 		val = EIP197_HIA_xDR_CFG_WR_CACHE(WR_CACHE_3BITS);
 		val |= EIP197_HIA_xDR_CFG_RD_CACHE(RD_CACHE_3BITS);
+
+		if (priv->eip_type == EIP197 &&
+		    priv->eip197_hw_ver == EIP197D) {
+			val |= EIP197_HIA_xDR_CFG_xD_PROT(AXI_NONE_SECURE_ACCESS);
+			val |= EIP197_HIA_xDR_CFG_DATA_PROT(AXI_NONE_SECURE_ACCESS);
+			val |= EIP197_HIA_xDR_CFG_ACD_PROT(AXI_NONE_SECURE_ACCESS);
+		}
 		writel(val, EIP197_HIA_AIC_xDR(priv) + EIP197_HIA_CDR(i) + EIP197_HIA_xDR_DMA_CFG);
 
 		/* clear any pending interrupt */
@@ -499,6 +506,12 @@ static int eip_hw_setup_rdesc_rings(struct safexcel_crypto_priv *priv)
 		val = EIP197_HIA_xDR_CFG_WR_CACHE(WR_CACHE_3BITS);
 		val |= EIP197_HIA_xDR_CFG_RD_CACHE(RD_CACHE_3BITS);
 		val |= EIP197_HIA_xDR_WR_RES_BUF | EIP197_HIA_xDR_WR_CTRL_BUF;
+
+		if (priv->eip_type == EIP197 &&
+		    priv->eip197_hw_ver == EIP197D) {
+			val |= EIP197_HIA_xDR_CFG_xD_PROT(AXI_NONE_SECURE_ACCESS);
+			val |= EIP197_HIA_xDR_CFG_DATA_PROT(AXI_NONE_SECURE_ACCESS);
+		}
 		writel(val, EIP197_HIA_AIC_xDR(priv) + EIP197_HIA_RDR(i) + EIP197_HIA_xDR_DMA_CFG);
 
 		/* clear any pending interrupt */
@@ -531,7 +544,12 @@ static int eip197_hw_init(struct device *dev, struct safexcel_crypto_priv *priv)
 	writel(val, EIP197_HIA_AIC(priv) + EIP197_HIA_MST_CTRL);
 
 	/* configure wr/rd cache values */
-	val = MST_CTRL_RD_CACHE(RD_CACHE_4BITS) | MST_CTRL_WD_CACHE(WR_CACHE_4BITS);
+	val = MST_CTRL_RD_CACHE(RD_CACHE_4BITS) |
+		MST_CTRL_WD_CACHE(WR_CACHE_4BITS);
+
+	if (priv->eip_type == EIP197 &&
+	    priv->eip197_hw_ver == EIP197D)
+		val |= MST_CTRL_SUPPORT_PROT(AXI_NONE_SECURE_ACCESS);
 	writel(val, EIP197_HIA_GEN_CFG(priv) + EIP197_MST_CTRL);
 
 	/*
diff --git a/drivers/crypto/inside-secure/safexcel.h b/drivers/crypto/inside-secure/safexcel.h
index ee8a47c..5dee660 100644
--- a/drivers/crypto/inside-secure/safexcel.h
+++ b/drivers/crypto/inside-secure/safexcel.h
@@ -46,6 +46,9 @@
 #define RD_CACHE_4BITS				(RD_CACHE_3BITS << 1 | 0x1)
 #define WR_CACHE_4BITS				(WR_CACHE_3BITS << 1 | 0x1)
 
+/* AXI protection fields */
+#define AXI_NONE_SECURE_ACCESS				BIT(1)
+
 /* EIP-197 Classification Engine */
 /* configuration parameters */
 /* classification */
@@ -165,6 +168,7 @@
 /* EIP197_MST_CTRL values */
 #define MST_CTRL_RD_CACHE(n)				(((n) & 0xf) << 0)
 #define MST_CTRL_WD_CACHE(n)				(((n) & 0xf) << 4)
+#define MST_CTRL_SUPPORT_PROT(n)			(((n) & 0xf) << 12)
 
 /* CDR/RDR register offsets */
 #define EIP197_HIA_xDR_OFF(r)				((r) * 0x1000)
@@ -194,6 +198,9 @@
 #define EIP197_HIA_xDR_WR_RES_BUF			BIT(22)
 #define EIP197_HIA_xDR_WR_CTRL_BUF			BIT(23)
 #define EIP197_HIA_xDR_WR_OWN_BUF			BIT(24)
+#define EIP197_HIA_xDR_CFG_xD_PROT(n)			(((n) & 0xf) << 4)
+#define EIP197_HIA_xDR_CFG_DATA_PROT(n)			(((n) & 0xf) << 12)
+#define EIP197_HIA_xDR_CFG_ACD_PROT(n)			(((n) & 0xf) << 20)
 #define EIP197_HIA_xDR_CFG_WR_CACHE(n)			(((n) & 0x7) << 25)
 #define EIP197_HIA_xDR_CFG_RD_CACHE(n)			(((n) & 0x7) << 29)
 
-- 
1.7.9.5

