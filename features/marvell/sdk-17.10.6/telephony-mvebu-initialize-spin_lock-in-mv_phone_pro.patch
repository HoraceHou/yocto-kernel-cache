From cf8e5808c34af6f3f02c582455a696be4b638f16 Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Sat, 24 Dec 2016 09:49:24 +0100
Subject: [PATCH 0680/1345] telephony: mvebu: initialize spin_lock in
 mv_phone_probe

commit  fe367403b3f4bd3907be0e8f11f316b2cd7f58c3 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Move spin_lock structure to mv_phone_dev structure and initialize it
in probe function, so that global DEFINE_SPINLOCK macro could be removed.

Change-Id: I9120b53afacd01399491076050eee0753d7ff50a
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35049
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/telephony/mvebu_phone/mv_phone.h     |    1 +
 drivers/telephony/mvebu_phone/mv_phone_dev.c |   59 +++++++++++++-------------
 2 files changed, 31 insertions(+), 29 deletions(-)

diff --git a/drivers/telephony/mvebu_phone/mv_phone.h b/drivers/telephony/mvebu_phone/mv_phone.h
index a6037df..6984843 100644
--- a/drivers/telephony/mvebu_phone/mv_phone.h
+++ b/drivers/telephony/mvebu_phone/mv_phone.h
@@ -233,6 +233,7 @@ struct mv_phone_dev {
 	u32 pclk_freq_mhz;
 	u8 irq_count;
 	int irq[3];
+	spinlock_t lock;
 
 	/* Used to preserve TDM registers across suspend/resume */
 	u32 tdm_ctrl_regs[TDM_CTRL_REGS_NUM];
diff --git a/drivers/telephony/mvebu_phone/mv_phone_dev.c b/drivers/telephony/mvebu_phone/mv_phone_dev.c
index 49e0317..5dea184 100644
--- a/drivers/telephony/mvebu_phone/mv_phone_dev.c
+++ b/drivers/telephony/mvebu_phone/mv_phone_dev.c
@@ -128,7 +128,6 @@
 static DECLARE_TASKLET(tdm2c_if_tx_tasklet, tdm2c_if_pcm_tx_process, 0);
 static DECLARE_TASKLET(tdmmc_if_tx_tasklet, tdmmc_if_pcm_tx_process, 0);
 static DECLARE_TASKLET(tdm2c_if_reset_tasklet, tdm2c_if_reset_channels, 0);
-static DEFINE_SPINLOCK(tdm_if_lock);
 
 /* Statistic printout in userspace via /proc/tdm */
 static int mv_phone_status_show(struct seq_file *m, void *v)
@@ -183,10 +182,10 @@ static void tdm2c_if_pcm_start(void)
 	unsigned long flags;
 	u32 max_poll = 0;
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 
 	if (priv->pcm_enable) {
-		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		spin_unlock_irqrestore(&priv->lock, flags);
 		return;
 	}
 
@@ -201,10 +200,10 @@ static void tdm2c_if_pcm_start(void)
 	} else {
 		priv->pcm_start_stop_state++;
 		while (priv->pcm_is_stopping && max_poll < MV_TDM_STOP_POLLING_TIMEOUT) {
-			spin_unlock_irqrestore(&tdm_if_lock, flags);
+			spin_unlock_irqrestore(&priv->lock, flags);
 			mdelay(1);
 			max_poll++;
-			spin_lock_irqsave(&tdm_if_lock, flags);
+			spin_lock_irqsave(&priv->lock, flags);
 		}
 
 		if (priv->pcm_is_stopping) {
@@ -227,17 +226,17 @@ static void tdm2c_if_pcm_start(void)
 		}
 	}
 
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 }
 
 static void tdmmc_if_pcm_start(void)
 {
 	unsigned long flags;
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 
 	if (priv->pcm_enable) {
-		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		spin_unlock_irqrestore(&priv->lock, flags);
 		return;
 	}
 
@@ -246,7 +245,7 @@ static void tdmmc_if_pcm_start(void)
 	priv->tx_buff = NULL;
 	tdmmc_pcm_start();
 
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 }
 
 /* PCM stop */
@@ -254,10 +253,10 @@ static void tdm2c_if_pcm_stop(void)
 {
 	unsigned long flags;
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 
 	if (!priv->pcm_enable) {
-		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		spin_unlock_irqrestore(&priv->lock, flags);
 		return;
 	}
 
@@ -271,24 +270,24 @@ static void tdm2c_if_pcm_stop(void)
 			priv->pcm_start_stop_state);
 	}
 
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 }
 
 static void tdmmc_if_pcm_stop(void)
 {
 	unsigned long flags;
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 
 	if (!priv->pcm_enable) {
-		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		spin_unlock_irqrestore(&priv->lock, flags);
 		return;
 	}
 
 	priv->pcm_enable = false;
 	tdmmc_pcm_stop();
 
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 }
 
 /* TDM low-level initialization */
@@ -689,17 +688,17 @@ static void tdm2c_if_pcm_rx_process(unsigned long arg)
 			dev_warn(priv->dev, "%s: Could not fill Rx buffer\n", __func__);
 	}
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 	/* Clear Rx buff for next iteration */
 	priv->rx_buff = NULL;
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 
 	if (priv->pcm_stop_flag && !priv->tx_buff) {
 		dev_dbg(priv->dev, "Stopping TDM from Rx tasklet\n");
 		tdm2c_if_pcm_stop();
-		spin_lock_irqsave(&tdm_if_lock, flags);
+		spin_lock_irqsave(&priv->lock, flags);
 		priv->pcm_stop_flag = false;
-		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		spin_unlock_irqrestore(&priv->lock, flags);
 		tasklet_hi_schedule(&tdm2c_if_reset_tasklet);
 	}
 }
@@ -721,10 +720,10 @@ static void tdmmc_if_pcm_rx_process(unsigned long arg)
 			dev_warn(priv->dev, "%s: could not fill Rx buffer\n", __func__);
 	}
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 	/* Clear priv->rx_buff for next iteration */
 	priv->rx_buff = NULL;
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 }
 
 /* Tx tasklets */
@@ -748,17 +747,17 @@ static void tdm2c_if_pcm_tx_process(unsigned long arg)
 		}
 	}
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 	/* Clear Tx buff for next iteration */
 	priv->tx_buff = NULL;
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 
 	if (priv->pcm_stop_flag && !priv->rx_buff) {
 		dev_dbg(priv->dev, "Stopping TDM from Tx tasklet\n");
 		tdm2c_if_pcm_stop();
-		spin_lock_irqsave(&tdm_if_lock, flags);
+		spin_lock_irqsave(&priv->lock, flags);
 		priv->pcm_stop_flag = false;
-		spin_unlock_irqrestore(&tdm_if_lock, flags);
+		spin_unlock_irqrestore(&priv->lock, flags);
 		tasklet_hi_schedule(&tdm2c_if_reset_tasklet);
 	}
 }
@@ -782,10 +781,10 @@ static void tdmmc_if_pcm_tx_process(unsigned long arg)
 		}
 	}
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 	/* Clear Tx buff for next iteration */
 	priv->tx_buff = NULL;
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 }
 
 /* TDM2C restart channel callback */
@@ -815,9 +814,9 @@ static void tdm2c_if_reset_channels(unsigned long arg)
 		mdelay(10);
 	}
 
-	spin_lock_irqsave(&tdm_if_lock, flags);
+	spin_lock_irqsave(&priv->lock, flags);
 	priv->pcm_is_stopping = false;
-	spin_unlock_irqrestore(&tdm_if_lock, flags);
+	spin_unlock_irqrestore(&priv->lock, flags);
 
 	/* Restart channels */
 	tdm2c_if_pcm_start();
@@ -1069,6 +1068,8 @@ static int mvebu_phone_probe(struct platform_device *pdev)
 		}
 	}
 
+	spin_lock_init(&priv->lock);
+
 	mv_phone_enabled = 1;
 
 	priv->dev = &pdev->dev;
-- 
1.7.9.5

