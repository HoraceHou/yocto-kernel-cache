From fa26f201c9ca08b4b2d74c98f64fe4a2f26effab Mon Sep 17 00:00:00 2001
From: orenbh <orenbh@marvell.com>
Date: Mon, 17 Nov 2014 15:18:53 +0200
Subject: [PATCH 0032/1345] bus: mvebu-mbus: Add debugs for decoding window

commit  4e7371d346ed91ae9cf51e414f4901efcc40a0c4 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

	Porting from 3.10.39-14t3

Signed-off-by: orenbh <orenbh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/14517
Reviewed-by: Shadi Ammouri <shadi@marvell.com>
Tested-by: Yehuda Yitschak <yehuday@marvell.com>

fix check-patch error
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>

Conflicts:
	drivers/bus/Kconfig

Change-Id: If19e2af12988da979d55cb6d54cbe2d98eef7bb4
Reviewed-on: http://vgitil04.il.marvell.com:8080/27317
Reviewed-by: Lior Amsalem <alior@marvell.com>
Tested-by: Lior Amsalem <alior@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/bus/Kconfig      |   11 +++++++++++
 drivers/bus/mvebu-mbus.c |   47 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 58 insertions(+)

diff --git a/drivers/bus/Kconfig b/drivers/bus/Kconfig
index 0a52da4..008d667 100644
--- a/drivers/bus/Kconfig
+++ b/drivers/bus/Kconfig
@@ -99,6 +99,17 @@ config OMAP_INTERCONNECT
 	help
 	  Driver to enable OMAP interconnect error handling driver.
 
+config MVEBU_DEBUG_MBUS
+	bool "Mvebu MBUS Windows"
+	default n
+	depends on MVEBU_MBUS
+	help
+	  Print MBus Windows configuration on Marvell
+	  EBU SoCs.
+	  (e.g. Armada 370/XP)
+
+	  Useful for debugging.
+
 config OMAP_OCP2SCP
 	tristate "OMAP OCP2SCP DRIVER"
 	depends on ARCH_OMAP2PLUS
diff --git a/drivers/bus/mvebu-mbus.c b/drivers/bus/mvebu-mbus.c
index 87a1bb3..9e475cd 100644
--- a/drivers/bus/mvebu-mbus.c
+++ b/drivers/bus/mvebu-mbus.c
@@ -199,6 +199,48 @@ static bool mvebu_mbus_window_is_remappable(struct mvebu_mbus_state *mbus,
  * Functions to manipulate the address decoding windows
  */
 
+#ifdef CONFIG_MVEBU_DEBUG_MBUS
+void mbus_debug_window(void)
+{
+	void __iomem *win_addr = mbus_state.mbuswins_base;
+	int i, j;
+
+	pr_info("----------- mbus window -----------\n");
+
+	/* win 0-7 has 4reg: ctrl, base, remap_l,remap_h */
+	for (i = 0; i <= 7; i++) {
+		pr_info("WIN%d\n", i);
+		for (j = 0; j < 4; j++) {
+			pr_info("\twin(%d,%d): %p\t 0x%x\n",
+				i, j, win_addr, readl(win_addr));
+			win_addr += 4;
+		}
+	}
+
+	pr_info("\nINTERREGS_WIN(%d): %p\t 0x%x\n",
+		i++, win_addr, readl(win_addr));
+	win_addr += 4;
+	pr_info("\nSYNC_BARIER_WIN(%d): %p\t 0x%x\n\n",
+		i++, win_addr, readl(win_addr));
+	win_addr += 4;
+
+	/* hole */
+	win_addr += 8;
+
+	/* win 8-19 has 2reg: ctrl, base */
+	for (i = 8; i <= 19; i++) {
+		pr_info("WIN%d\n", i);
+			for (j = 0; j < 2; j++) {
+				pr_info("\twin(%d,%d): %p\t 0x%x\n",
+					i, j, win_addr, readl(win_addr));
+				win_addr += 4;
+			}
+	}
+
+	pr_info("\n");
+}
+#endif /* CONFIG_MVEBU_DEBUG_MBUS */
+
 static void mvebu_mbus_read_window(struct mvebu_mbus_state *mbus,
 				   int win, int *enabled, u64 *base,
 				   u32 *size, u8 *target, u8 *attr,
@@ -1318,6 +1360,11 @@ static int __init mbus_dt_setup(struct mvebu_mbus_state *mbus,
 		if (ret < 0)
 			return ret;
 	}
+
+#ifdef CONFIG_MVEBU_DEBUG_MBUS
+	mbus_debug_window();
+#endif /* CONFIG_MVEBU_DEBUG_MBUS */
+
 	return 0;
 }
 
-- 
1.7.9.5

