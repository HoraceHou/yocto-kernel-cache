From 962fcfb29f1fd7fe4a66111b362f5e9d81dd88f5 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Tue, 25 Oct 2016 12:02:43 +0300
Subject: [PATCH 0546/1345] mvpp2x: remove code related to skb 40 BIT address
 and mask

commit  28fdd429992a6aa937d858068a3e7867337ca863 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- we don't need this code anymore, physical address space is 40 BIT and
  all physical addresses could be dma mapped to virtual addresses

Change-Id: I66697f57dbefe7bc8a8d3b49a9ed4c43ae440598
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33341
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h      |    4 ---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   26 --------------------
 2 files changed, 30 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
index 3a18d9c..7d298bb 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
@@ -648,10 +648,6 @@ struct mv_pp2x_platform_data {
 	void (*mv_pp2x_port_queue_vectors_init)(struct mv_pp2x_port *);
 	void (*mv_pp2x_port_isr_rx_group_cfg)(struct mv_pp2x_port *);
 	struct pp2x_hw_params hw;
-#ifdef CONFIG_64BIT
-	uintptr_t skb_base_addr;
-	uintptr_t skb_base_mask;
-#endif
 };
 
 struct mv_pp2x_ext_buf_struct {
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index ebf41b6..091d6a8 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -4766,10 +4766,6 @@ static int mv_pp2x_init(struct platform_device *pdev, struct mv_pp2x *priv)
 	.mv_pp2x_port_isr_rx_group_cfg = mv_pp21x_port_isr_rx_group_cfg,
 	.num_port_irq = 1,
 	.hw.desc_queue_addr_shift = MVPP21_DESC_ADDR_SHIFT,
-#ifdef CONFIG_64BIT
-	.skb_base_addr = 0,
-	.skb_base_mask = DMA_BIT_MASK(32),
-#endif
 };
 
 static struct mv_pp2x_platform_data pp22_pdata = {
@@ -4784,10 +4780,6 @@ static int mv_pp2x_init(struct platform_device *pdev, struct mv_pp2x *priv)
 	.mv_pp2x_port_isr_rx_group_cfg = mv_pp22_port_isr_rx_group_cfg,
 	.num_port_irq = 5,
 	.hw.desc_queue_addr_shift = MVPP22_DESC_ADDR_SHIFT,
-#ifdef CONFIG_64BIT
-	.skb_base_addr = 0,
-	.skb_base_mask = DMA_BIT_MASK(32),
-#endif
 };
 
 static const struct of_device_id mv_pp2x_match_tbl[] = {
@@ -5151,24 +5143,6 @@ static int mv_pp2x_probe(struct platform_device *pdev)
 		}
 	}
 
-#ifdef CONFIG_64BIT
-{
-	/* Set skb_base_address (MSB bits) */
-	struct sk_buff *skb;
-
-	if (priv->pp2xdata->skb_base_addr == 0) {
-		skb = alloc_skb(MVPP2_SKB_TEST_SIZE, GFP_KERNEL);
-		if (!skb) {
-			err = ENOMEM;
-			goto err_clk;
-		}
-		priv->pp2xdata->skb_base_addr =
-			(uintptr_t)skb & ~(priv->pp2xdata->skb_base_mask);
-		kfree_skb(skb);
-	}
-}
-#endif
-
 	/* Save cpu_present_mask + populate the per_cpu address space */
 	cpu_map = 0;
 	i = 0;
-- 
1.7.9.5

