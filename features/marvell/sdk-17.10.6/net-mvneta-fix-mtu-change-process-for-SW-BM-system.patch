From 05f151c7b1117dae739477310e1645171d48815f Mon Sep 17 00:00:00 2001
From: Yelena Krivosheev <yelena@marvell.com>
Date: Tue, 20 Jun 2017 13:06:44 +0300
Subject: [PATCH 1059/1345] net: mvneta: fix mtu change process for SW BM
 system

commit  60602d4bcfd5eb2a9dc489511c0ab532178173f8 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Clear buffer virtual address in 'missed' descriptor.
This buffer will not released by driver (during MTU change).

Change-Id: Ib21a17e0aae745c31e11a99fdf14b52e268c1f4f
Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/40644
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Neta Zur Hershkovits <neta@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvneta.c |    8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 6b1e84b..d483347 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -2132,6 +2132,9 @@ static void mvneta_rxq_drop_pkts(struct mvneta_port *pp,
 		struct mvneta_rx_desc *rx_desc = rxq->descs + i;
 		void *data = rxq->buf_virt_addr[i];
 
+		if (!data)
+			continue;
+
 		dma_unmap_single(pp->dev->dev.parent, rx_desc->buf_phys_addr - pp->rx_offset_correction,
 				 MVNETA_RX_BUF_SIZE(pp->pkt_size), DMA_FROM_DEVICE);
 		mvneta_frag_free(pp->frag_size, data);
@@ -2251,6 +2254,7 @@ static int mvneta_rx_swbm(struct mvneta_port *pp, int rx_todo,
 				atomic_inc(&rxq->missed);
 
 				/* record the first rx desc refilled failure */
+				rx_desc->buf_cookie = 0;
 				rxq->missed_desc = rx_desc;
 
 				/* add cleanup timer */
@@ -2261,6 +2265,7 @@ static int mvneta_rx_swbm(struct mvneta_port *pp, int rx_todo,
 			}
 		} else {
 			/* refill already stopped - only update missed counter */
+			rx_desc->buf_cookie = 0;
 			atomic_inc(&rxq->missed);
 		}
 
@@ -3159,6 +3164,8 @@ static void mvneta_rxq_deinit(struct mvneta_port *pp,
 	rxq->last_desc         = 0;
 	rxq->next_desc_to_proc = 0;
 	rxq->descs_phys        = 0;
+	rxq->missed_desc       = NULL;
+	atomic_set(&rxq->missed, 0);
 }
 
 /* Create and initialize a tx queue */
@@ -3430,6 +3437,7 @@ static int mvneta_change_mtu(struct net_device *dev, int mtu)
 	 */
 	mvneta_stop_dev(pp);
 	on_each_cpu(mvneta_percpu_disable, pp, true);
+	usleep_range(10, 20);
 
 	mvneta_cleanup_txqs(pp);
 	mvneta_cleanup_rxqs(pp);
-- 
1.7.9.5

