From 02277ee60fed5fe2c6ced2547d4cf7a917a340f8 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 29 Jun 2016 14:49:02 +0300
Subject: [PATCH 0313/1345] net: mvpp2x: Add external_pool flag

commit  8146d2ff4625cb67ef18d10a5d3b6a52671d878e from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- new flag added to "struct mv_pp2x_bm_pool",
  that indicates if the pool is for external use

Change-Id: Icfe13332a7eec892939bfb2bb0953eccbb4af623
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30847
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h      |    2 +-
 .../net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h  |    3 ++-
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   13 +++++++++----
 3 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
index ad2fc21..f74de15 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
@@ -720,7 +720,7 @@ void mv_pp2x_bm_bufs_free(struct mv_pp2x *priv, struct mv_pp2x_bm_pool *bm_pool,
 			  int buf_num);
 int mv_pp2x_bm_bufs_add(struct mv_pp2x_port *port,
 			struct mv_pp2x_bm_pool *bm_pool, int buf_num);
-int mv_pp2x_bm_pool_add(struct device *dev, struct mv_pp2x *priv,
+int mv_pp2x_bm_pool_ext_add(struct device *dev, struct mv_pp2x *priv,
 			u32 *pool_num, u32 pkt_size);
 int mv_pp2x_bm_pool_destroy(struct device *dev, struct mv_pp2x *priv,
 			    struct mv_pp2x_bm_pool *bm_pool);
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
index 7425e48..890a2b9 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
@@ -2213,7 +2213,8 @@ struct mv_pp2x_bm_pool {
 	/* Packet size */
 	int pkt_size;
 	int frag_size;
-
+	/* pool for external use (not kernel) */
+	bool external_pool;
 	/* BPPE virtual base address */
 	void *virt_addr;
 	/* BPPE physical base address */
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 06609b0..8bc8e23 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -369,11 +369,14 @@ void mv_pp2x_bm_bufs_free(struct mv_pp2x *priv, struct mv_pp2x_bm_pool *bm_pool,
 		vaddr = mv_pp2x_bm_virt_addr_get(&priv->hw, bm_pool->id);
 		if (!vaddr)
 			break;
+		if (!bm_pool->external_pool) {
 #ifdef CONFIG_64BIT
-		mv_pp2x_frag_free(bm_pool, (u8 *)(bm_pool->data_high | (uintptr_t)vaddr));
+			mv_pp2x_frag_free(bm_pool,
+				(u8 *)(bm_pool->data_high | (uintptr_t)vaddr));
 #else
-		mv_pp2x_frag_free(bm_pool, vaddr);
+			mv_pp2x_frag_free(bm_pool, vaddr);
 #endif
+		}
 	}
 
 	/* Update BM driver with number of buffers removed from pool */
@@ -407,8 +410,8 @@ int mv_pp2x_bm_pool_destroy(struct device *dev, struct mv_pp2x *priv,
 	return 0;
 }
 
-int mv_pp2x_bm_pool_add(struct device *dev, struct mv_pp2x *priv, u32 *pool_num,
-	u32 pkt_size)
+int mv_pp2x_bm_pool_ext_add(struct device *dev, struct mv_pp2x *priv,
+			    u32 *pool_num, u32 pkt_size)
 {
 	int err, size, enabled;
 	u8 first_pool = mv_pp2x_first_pool_get(priv);
@@ -444,6 +447,7 @@ int mv_pp2x_bm_pool_add(struct device *dev, struct mv_pp2x *priv, u32 *pool_num,
 	bm_pool = &priv->bm_pools[pool];
 	bm_pool->log_id = pool;
 	bm_pool->id = first_pool + pool;
+	bm_pool->external_pool = true;
 	mv_pp2x_pools[pool].pkt_size = pkt_size;
 		err = mv_pp2x_bm_pool_create(dev, hw, bm_pool, size);
 		if (err)
@@ -471,6 +475,7 @@ static int mv_pp2x_bm_pools_init(struct platform_device *pdev,
 		bm_pool = &priv->bm_pools[i];
 		bm_pool->log_id = i;
 		bm_pool->id = first_pool + i;
+		bm_pool->external_pool = false;
 		err = mv_pp2x_bm_pool_create(&pdev->dev, hw, bm_pool, size);
 		if (err)
 			goto err_unroll_pools;
-- 
1.7.9.5

