From 82868e99422f14da80f40383de08878beb8bbd61 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 23 Nov 2016 14:13:20 +0200
Subject: [PATCH 0646/1345] net: mvxmdio: rename xmdio check_read_done and
 check idle functions

commit  8db129fc6ba3b562b3175aa23daf47a3a4fbcd0d from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- Use proper function naming

Change-Id: Iefddff4342ddfa83a39eab2ca51f16f1fdb837de
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34025
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvxmdio.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvxmdio.c b/drivers/net/ethernet/marvell/mvxmdio.c
index 4aa5f6a0..b755621 100644
--- a/drivers/net/ethernet/marvell/mvxmdio.c
+++ b/drivers/net/ethernet/marvell/mvxmdio.c
@@ -47,7 +47,7 @@ struct xmdio_controller {
 } __packed;
 
 /* Check if XSMI bus is idle */
-static int xmdio_chck_idle(struct xmdio_controller __iomem *regs)
+static int xmdio_check_idle(struct xmdio_controller __iomem *regs)
 {
 	return !(readl(&regs->xmdio_mngmnt) & XBUSY);
 }
@@ -58,7 +58,7 @@ static int xmdio_wait_free(struct device *dev, struct xmdio_controller __iomem *
 	int ntries = NTRIES;
 
 	while (ntries > 0) {
-		if (xmdio_chck_idle(regs))
+		if (xmdio_check_idle(regs))
 			return 0;
 
 		usleep_range(TIMEOUT_MIN, TIMEOUT_MAX);
@@ -70,7 +70,7 @@ static int xmdio_wait_free(struct device *dev, struct xmdio_controller __iomem *
 }
 
 /* Check if XSMI bus read operaton is done */
-static int xmdio_chck_read_done(struct xmdio_controller __iomem *regs)
+static int xmdio_check_read_done(struct xmdio_controller __iomem *regs)
 {
 	return readl(&regs->xmdio_mngmnt) & XREAD_VALID;
 }
@@ -81,7 +81,7 @@ static int xmdio_wait_read_done(struct device *dev, struct xmdio_controller __io
 	int ntries = NTRIES;
 
 	while (ntries > 0) {
-		if (xmdio_chck_read_done(regs))
+		if (xmdio_check_read_done(regs))
 			return 0;
 
 		usleep_range(TIMEOUT_MIN, TIMEOUT_MAX);
-- 
1.7.9.5

