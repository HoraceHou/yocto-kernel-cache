From 41a23cc87b4b6f758edfa524d69cf5869c4dbd59 Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Wed, 17 May 2017 10:56:36 +0800
Subject: [PATCH 1006/1345] fix: pcie: aardvark: resume MSI address in PM mode

commit  957284e0677847f9327b03420ad65e370dca3fd1 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Currently the MSI address is not resumed correctly
in S2RAM, which causes the MSI interrupt not work
after resume.

The patch moved MSI address setting to advk_pcie_setup_hw()
routine so that it can be called both during cold boot and
during resume from suspend state.

JIRA number: A3700-987

Change-Id: I899248970a08fb2ef370cccc8d179f3bee333f0d
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/39546
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/39670
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/host/pci-aardvark.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/pci/host/pci-aardvark.c b/drivers/pci/host/pci-aardvark.c
index 022c5e2e..67ba301 100644
--- a/drivers/pci/host/pci-aardvark.c
+++ b/drivers/pci/host/pci-aardvark.c
@@ -240,6 +240,7 @@ static int advk_pcie_wait_for_link(struct advk_pcie *pcie)
 static void advk_pcie_setup_hw(struct advk_pcie *pcie)
 {
 	u32 reg;
+	phys_addr_t msi_msg_phys;
 
 	/* Set HW Reference Clock Buffer Control */
 	advk_writel(pcie, PCIE_PHY_BUF_CTRL_INIT_VAL, PCIE_PHY_REF_CLOCK);
@@ -291,6 +292,13 @@ static void advk_pcie_setup_hw(struct advk_pcie *pcie)
 	reg |= LINK_TRAINING_EN;
 	advk_writel(pcie, reg, PCIE_CORE_CTRL0_REG);
 
+	/* Set MSI Address in RC mode */
+	msi_msg_phys = virt_to_phys(&pcie->msi_msg);
+	advk_writel(pcie, lower_32_bits(msi_msg_phys),
+		    PCIE_MSI_ADDR_LOW_REG);
+	advk_writel(pcie, upper_32_bits(msi_msg_phys),
+		    PCIE_MSI_ADDR_HIGH_REG);
+
 	/* Enable MSI */
 	reg = advk_readl(pcie, PCIE_CORE_CTRL2_REG);
 	reg |= PCIE_CORE_CTRL2_MSI_ENABLE;
@@ -619,7 +627,6 @@ static int advk_pcie_init_msi_irq_domain(struct advk_pcie *pcie)
 	struct device_node *node = dev->of_node;
 	struct irq_chip *bottom_ic, *msi_ic;
 	struct msi_domain_info *msi_di;
-	phys_addr_t msi_msg_phys;
 
 	mutex_init(&pcie->msi_used_lock);
 
@@ -637,13 +644,6 @@ static int advk_pcie_init_msi_irq_domain(struct advk_pcie *pcie)
 		MSI_FLAG_MULTI_PCI_MSI;
 	msi_di->chip = msi_ic;
 
-	msi_msg_phys = virt_to_phys(&pcie->msi_msg);
-
-	advk_writel(pcie, lower_32_bits(msi_msg_phys),
-		    PCIE_MSI_ADDR_LOW_REG);
-	advk_writel(pcie, upper_32_bits(msi_msg_phys),
-		    PCIE_MSI_ADDR_HIGH_REG);
-
 	pcie->msi_inner_domain =
 		irq_domain_add_linear(NULL, MSI_IRQ_NUM,
 				      &advk_msi_domain_ops, pcie);
-- 
1.7.9.5

