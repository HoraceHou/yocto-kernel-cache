From 3126241e1d5fedbac52aee9c905279582d853444 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 20 Jul 2016 16:31:43 +0300
Subject: [PATCH 0368/1345] net: mvpp2x: set device physical memory space
 range

commit  d604df4285274980515da7eda6c30097da84049a from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: I62d374b3c1f2de44379adb40917b6de81d13123a
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/31287
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h      |    3 +++
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   12 ++++++++++++
 2 files changed, 15 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
index 39fc09c..40a15fa 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
@@ -398,6 +398,9 @@ struct mv_pp2x_hw {
 	void __iomem *lms_base;
 	void __iomem *cpu_base[MVPP2_MAX_CPUS];
 
+	phys_addr_t phys_addr_start;
+	phys_addr_t phys_addr_end;
+
 	struct gop_hw gop;
 	/* ppv22_base_address for each CPU.
 	 * PPv2.2 - cpu_base[x] = base +
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 97a4189..58af52c 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -138,6 +138,14 @@
 module_param(first_log_rxq_queue, byte, S_IRUGO);
 MODULE_PARM_DESC(first_log_rxq_queue, "First logical rx_queue (0-31)");
 
+void set_device_base_address(struct net_device *dev)
+{
+	struct mv_pp2x_port *port = netdev_priv(dev);
+
+	dev->mem_start = (unsigned long)port->priv->hw.phys_addr_start;
+	dev->mem_end = (unsigned long)port->priv->hw.phys_addr_end;
+}
+
 /* Number of RXQs used by single port */
 static int mv_pp2x_rxq_number;
 /* Number of TXQs used by single port */
@@ -2968,6 +2976,8 @@ int mv_pp2x_open(struct net_device *dev)
 	struct mv_pp2x_port *port = netdev_priv(dev);
 	int err;
 
+	set_device_base_address(dev);
+
 	/* Allocate the Rx/Tx queues */
 	err = mv_pp2x_setup_rxqs(port);
 	if (err) {
@@ -4191,6 +4201,8 @@ static int mv_pp2x_platform_data_get(struct platform_device *pdev,
 
 	/* PPV2 Address Space */
 	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "pp");
+	hw->phys_addr_start = res->start;
+	hw->phys_addr_end = res->end;
 	hw->base = devm_ioremap_resource(&pdev->dev, res);
 	if (IS_ERR(hw->base))
 		return PTR_ERR(hw->base);
-- 
1.7.9.5

