From 331b1ecb9a929f15f12a398edabfa4e13fddda29 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Thu, 16 Nov 2017 11:51:09 +0200
Subject: [PATCH 1249/1345] fix: uio: block thread calling uio_poll() by
 updating event counter

commit  3af7e266ab05add9c7ca421575e76a9b169fe2a6 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

The issue: uio_poll() function doesn't block the caller thread,
	   but return immediately.
The uio_read() function works correctly.
One of the differences between implementation of these functions is
update for "listener->event_count".
uio_read() function updates the event_count after each wake up event,
while uio_poll() function never update it.
This patch causes uio_poll() to work the same way as uio_read(), i.e.
update "listener->event_count" after each wake up event.
After this patch "uio_poll()" works correctly

Change-Id: Ib86eee9f6220aaba013c03b82ca04fcd6c7d8e35
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/46406
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Natalie Samsonov <nsamsono@marvell.com>
Reviewed-by: Yelena Krivosheev <yelena@marvell.com>
(cherry picked from commit 1df4bcf7761aed4929365023b7f5fac69942489d)
Reviewed-on: http://vgitil04.il.marvell.com:8080/47203
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/uio/uio.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/uio/uio.c b/drivers/uio/uio.c
index ff04b7f..44646a7 100644
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@ -500,13 +500,17 @@ static unsigned int uio_poll(struct file *filep, poll_table *wait)
 {
 	struct uio_listener *listener = filep->private_data;
 	struct uio_device *idev = listener->dev;
+	s32 event_count;
 
 	if (!idev->info->irq)
 		return -EIO;
 
 	poll_wait(filep, &idev->wait, wait);
-	if (listener->event_count != atomic_read(&idev->event))
+	event_count = atomic_read(&idev->event);
+	if (listener->event_count != event_count) {
+		listener->event_count = event_count;
 		return POLLIN | POLLRDNORM;
+	}
 	return 0;
 }
 
-- 
1.7.9.5

