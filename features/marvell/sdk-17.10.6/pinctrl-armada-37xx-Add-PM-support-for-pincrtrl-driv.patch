From de00ebdc8c9802a914434077e8af84acbef4e35a Mon Sep 17 00:00:00 2001
From: Ken Ma <make@marvell.com>
Date: Wed, 9 Aug 2017 15:41:25 +0800
Subject: [PATCH 1178/1345] pinctrl: armada-37xx: Add PM support for pincrtrl
 driver

commit  c97087cd27c4433262668c2dd2b210a82c557e82 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

In order to keep all pinctrl regs setting, this patch saves north and
south bridge pinctrl regs(RD0013830h and RD0018830h) status into
pinctrl devices' driver data in DRAM and restore them during resume
after warm reset.

Since pinctrl is an infrastucture module, its resume should be issued
prior to other IO drivers. The pinctrl PM is registered as syscore
level to make sure of it. A postcore initcall is added to register
syscore operation. The init call is enhanced to postcore level to make
sure the pinctrl is executed prior to other IO modules during cold
booting. In order to get/set PM information from/to driver data of all
pinctrl devices in the postcore init call, this patch adds a driver
data list.

Change-Id: I80de0d0df110fbc4b218e034f2141b2a69b93dc3
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/42887
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Victor Gu <xigu@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pinctrl/mvebu/pinctrl-armada-37xx.c |   56 +++++++++++++++++++++++++++
 1 file changed, 56 insertions(+)

diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c b/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c
index 6b53a33..f20b516 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c
@@ -23,6 +23,7 @@
 #include <linux/platform_device.h>
 #include <linux/regmap.h>
 #include <linux/slab.h>
+#include <linux/syscore_ops.h>
 
 #include "../pinctrl-utils.h"
 
@@ -81,6 +82,8 @@ struct armada_37xx_pmx_func {
 };
 
 struct armada_37xx_pinctrl {
+	struct list_head		node;
+	unsigned int			sel_reg;
 	struct regmap			*regmap;
 	void __iomem			*base;
 	const struct armada_37xx_pin_data	*data;
@@ -149,6 +152,9 @@ struct armada_37xx_pinctrl {
 		.funcs = {_f1, _f2}			\
 	}
 
+/* Global list of devices (struct armada_37xx_pinctrl) */
+static LIST_HEAD(drvdata_list);
+
 static struct armada_37xx_pin_group armada_37xx_nb_groups[] = {
 	PIN_GRP_GPIO("jtag", 20, 5, BIT(0), "jtag"),
 	PIN_GRP_GPIO("sdio0", 8, 3, BIT(1), "sdio"),
@@ -1049,6 +1055,9 @@ static int __init armada_37xx_pinctrl_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, info);
 
+	/* Add to the global list */
+	list_add_tail(&info->node, &drvdata_list);
+
 	return 0;
 }
 
@@ -1059,5 +1068,52 @@ static int __init armada_37xx_pinctrl_probe(struct platform_device *pdev)
 	},
 };
 
+/**
+ * armada_3700_pinctrl_suspend - save pinctrl state for suspend
+ *
+ * Save data for all pinctrl devices.
+ */
+static int armada_3700_pinctrl_suspend(void)
+{
+	struct armada_37xx_pinctrl *info;
+
+	list_for_each_entry(info, &drvdata_list, node) {
+		regmap_read(info->regmap, SELECTION, &info->sel_reg);
+	}
+
+	return 0;
+}
+
+/**
+ * armada_3700_pinctrl_resume - restore pinctrl state for suspend
+ *
+ * Restore data for all pinctrl devices.
+ */
+static void armada_3700_pinctrl_resume(void)
+{
+	struct armada_37xx_pinctrl *info;
+
+	list_for_each_entry(info, &drvdata_list, node) {
+		regmap_update_bits(info->regmap, SELECTION, 0xffffffff, info->sel_reg);
+	}
+}
+
+static struct syscore_ops armada_3700_pinctrl_syscore_ops = {
+	.suspend = armada_3700_pinctrl_suspend,
+	.resume = armada_3700_pinctrl_resume,
+};
+
+static int __init armada_3700_pinctrl_pm_init(void)
+{
+	/*
+	 * Register syscore ops for save/restore of registers across suspend.
+	 * It's important to ensure that this driver is running at an earlier
+	 * initcall level than any arch-specific init calls.
+	 */
+	register_syscore_ops(&armada_3700_pinctrl_syscore_ops);
+	return 0;
+}
+
+postcore_initcall(armada_3700_pinctrl_pm_init);
 builtin_platform_driver_probe(armada_37xx_pinctrl_driver,
 			      armada_37xx_pinctrl_probe);
-- 
1.7.9.5

