From ba09bd93ec748deeace6bdadb80e2846cffb94eb Mon Sep 17 00:00:00 2001
From: Ken Ma <make@marvell.com>
Date: Fri, 10 Mar 2017 17:13:05 +0800
Subject: [PATCH 0881/1345] usb: support adding usb hcd with phy name

commit  2e85fcd6ca4cdda2d213fe0c662cd092ac0cf4ac from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- Currently xhci driver allocates two roothubs, one is for USB 2.0 and
  another is for USB 3.0, each roothub has a host controller driver and
  the 2 hcds share one same generic phy named as "usb", so in the API
  of adding usb hcd, hcd's generic phy is got directly by fixed name of
  "usb";
- For some usb3 host controllers, they have different generic phys for
  USB 2.0 and USB 3.0, for example, Armada 3700 usb3 host controller has
  a utmi phy for USB 2.0 and has a common phy for USB 3.0; In such
  cases, the input parameter of the generic phy name is needed for the
  API of adding usb hcd;
- Add a new API "usb_add_hcd_with_phy_name" for adding usb hcd with the
  generic phy name; if the generic phy name is NULL, then the default
  generic phy name "usb" will be used.

Change-Id: I815ab597d9a7b16a27f93eb88d681d745f476bf9
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37390
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Victor Gu <xigu@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/core/hcd.c  |   41 ++++++++++++++++++++++++++++++++++-------
 include/linux/usb/hcd.h |    2 ++
 2 files changed, 36 insertions(+), 7 deletions(-)

diff --git a/drivers/usb/core/hcd.c b/drivers/usb/core/hcd.c
index cc41216..55dd01f 100644
--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -2715,17 +2715,22 @@ static void usb_put_invalidate_rhdev(struct usb_hcd *hcd)
 }
 
 /**
- * usb_add_hcd - finish generic HCD structure initialization and register
+ * usb_add_hcd_with_phy_name - finish generic HCD structure initialization
+ * and register with generic phy name
  * @hcd: the usb_hcd structure to initialize
  * @irqnum: Interrupt line to allocate
  * @irqflags: Interrupt type flags
+ * @phy_name: generic phy name
  *
- * Finish the remaining parts of generic HCD initialization: allocate the
- * buffers of consistent memory, register the bus, request the IRQ line,
- * and call the driver's reset() and start() routines.
+ * Finish the remaining parts of generic HCD initialization with generic phy
+ * name: allocate the buffers of consistent memory, register the bus,
+ * request the IRQ line, and call the driver's reset() and start() routines.
  */
-int usb_add_hcd(struct usb_hcd *hcd,
-		unsigned int irqnum, unsigned long irqflags)
+int usb_add_hcd_with_phy_name(struct usb_hcd *hcd,
+			      unsigned int irqnum,
+			      unsigned long irqflags,
+			      const char *phy_name)
+
 {
 	int retval;
 	struct usb_device *rhdev;
@@ -2749,7 +2754,12 @@ int usb_add_hcd(struct usb_hcd *hcd,
 	}
 
 	if (IS_ENABLED(CONFIG_GENERIC_PHY) && !hcd->phy) {
-		struct phy *phy = phy_get(hcd->self.sysdev, "usb");
+		struct phy *phy;
+
+		if (phy_name == NULL)
+			phy = phy_get(hcd->self.sysdev, "usb");
+		else
+			phy = phy_get(hcd->self.sysdev, phy_name);
 
 		if (IS_ERR(phy)) {
 			retval = PTR_ERR(phy);
@@ -2950,6 +2960,23 @@ int usb_add_hcd(struct usb_hcd *hcd,
 	}
 	return retval;
 }
+EXPORT_SYMBOL_GPL(usb_add_hcd_with_phy_name);
+
+/**
+ * usb_add_hcd - finish generic HCD structure initialization and register
+ * @hcd: the usb_hcd structure to initialize
+ * @irqnum: Interrupt line to allocate
+ * @irqflags: Interrupt type flags
+ *
+ * Finish the remaining parts of generic HCD initialization: allocate the
+ * buffers of consistent memory, register the bus, request the IRQ line,
+ * and call the driver's reset() and start() routines.
+ */
+int usb_add_hcd(struct usb_hcd *hcd,
+		unsigned int irqnum, unsigned long irqflags)
+{
+	return usb_add_hcd_with_phy_name(hcd, irqnum, irqflags, NULL);
+}
 EXPORT_SYMBOL_GPL(usb_add_hcd);
 
 /**
diff --git a/include/linux/usb/hcd.h b/include/linux/usb/hcd.h
index a1f03eb..7e741dc 100644
--- a/include/linux/usb/hcd.h
+++ b/include/linux/usb/hcd.h
@@ -449,6 +449,8 @@ extern struct usb_hcd *usb_create_shared_hcd(const struct hc_driver *driver,
 extern struct usb_hcd *usb_get_hcd(struct usb_hcd *hcd);
 extern void usb_put_hcd(struct usb_hcd *hcd);
 extern int usb_hcd_is_primary_hcd(struct usb_hcd *hcd);
+extern int usb_add_hcd_with_phy_name(struct usb_hcd *hcd,
+		unsigned int irqnum, unsigned long irqflags, const char *phy_name);
 extern int usb_add_hcd(struct usb_hcd *hcd,
 		unsigned int irqnum, unsigned long irqflags);
 extern void usb_remove_hcd(struct usb_hcd *hcd);
-- 
1.7.9.5

