From 319adecfad16f7cd6b15df0ae3e9d9565d3485ae Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Wed, 30 Aug 2017 16:51:15 +0800
Subject: [PATCH 1216/1345] fix: pinctrl: cp110: improve the loop in S2R
 routine

commit  8c93ee6c954320c6e5378ef0103fd7e268824e2d from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: I3ff06479008fd4acd4b09c6d05a32d9a72e2574b
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/43541
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pinctrl/mvebu/pinctrl-armada-cp110.c |   22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-cp110.c b/drivers/pinctrl/mvebu/pinctrl-armada-cp110.c
index dc1ede2..6bd71f4 100644
--- a/drivers/pinctrl/mvebu/pinctrl-armada-cp110.c
+++ b/drivers/pinctrl/mvebu/pinctrl-armada-cp110.c
@@ -744,16 +744,15 @@ static int armada_cp110_pinctrl_suspend(void)
 {
 	struct mvebu_pinctrl_soc_info *soc;
 	void __iomem *mpp_base;
-	u32 reg_num, offset, i;
 
 	list_for_each_entry(soc, &drvdata_list, node) {
+		unsigned int offset, i = 0;
+
 		mpp_base = (soc->variant == V_ARMADA_80X0_CP1) ? cp1_mpp_base :
 								 cp0_mpp_base;
-		reg_num = soc->pm_save->length / sizeof(unsigned int);
-		for (i = 0; i < reg_num; i++) {
-			offset = i * sizeof(unsigned int);
-			soc->pm_save->regs[i] = readl(mpp_base + offset);
-		}
+		for (offset = 0; offset < soc->pm_save->length;
+		     offset += sizeof(unsigned int))
+			soc->pm_save->regs[i++] = readl(mpp_base + offset);
 	}
 
 	return 0;
@@ -764,16 +763,15 @@ static void armada_cp110_pinctrl_resume(void)
 {
 	struct mvebu_pinctrl_soc_info *soc;
 	void __iomem *mpp_base;
-	u32 reg_num, offset, i;
 
 	list_for_each_entry_reverse(soc, &drvdata_list, node) {
+		unsigned int offset, i = 0;
+
 		mpp_base = (soc->variant == V_ARMADA_80X0_CP1) ? cp1_mpp_base :
 								 cp0_mpp_base;
-		reg_num = soc->pm_save->length / sizeof(unsigned int);
-		for (i = 0; i < reg_num; i++) {
-			offset = i * sizeof(unsigned int);
-			writel(soc->pm_save->regs[i], mpp_base + offset);
-		}
+		for (offset = 0; offset < soc->pm_save->length;
+		     offset += sizeof(unsigned int))
+			writel(soc->pm_save->regs[i++], mpp_base + offset);
 	}
 }
 
-- 
1.7.9.5

