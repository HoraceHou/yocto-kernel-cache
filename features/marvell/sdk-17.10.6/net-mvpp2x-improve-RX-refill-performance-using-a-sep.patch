From 05c95e93621e19596a3f17cc6400ed9371f94666 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Tue, 14 Feb 2017 14:47:37 +0200
Subject: [PATCH 0835/1345] net: mvpp2x: improve RX refill performance using a
 separate loop

commit  ff1dfa4995a6860a4bfd242691c3b1c8769bfe77 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- This patch split mv_pp2x_rx_refill into a separate loop
  during RX procedure. Refill moved  to separate loop to
  improve performance.

Benchmark results:
- Board A8K: CPU 1.3GHz & DDR 800 MHz
- Scenarios: L2&L3 forwarding
- Results: ~2% improvement

Change-Id: Ia07a2e6d23bf16dc2c4e87bebb6926fbfe89a1c7
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37132
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c |   31 +++++++++++++++-----
 1 file changed, 24 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index c356397..dbaf6d1 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -2318,6 +2318,8 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 	int rx_received, rx_filled, i;
 	u32 rcvd_pkts = 0;
 	u32 rcvd_bytes = 0;
+	u32 refill_array[MVPP2_BM_POOLS_NUM] = {0};
+	u8  num_pool = MVPP2_BM_SWF_NUM_POOLS;
 	u8  first_bm_pool = port->priv->pp2_cfg.first_bm_pool;
 	int cpu = smp_processor_id();
 
@@ -2348,7 +2350,6 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 		int rx_bytes;
 		dma_addr_t buf_phys_addr;
 		unsigned char *data;
-		int err;
 
 #if defined(__BIG_ENDIAN)
 		if (port->priv->pp2_version == PPV21)
@@ -2403,15 +2404,10 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 			goto err_drop_frame;
 		}
 
-		err = mv_pp2x_rx_refill_new(port, bm_pool,
-					    bm_pool->log_id, 0, cpu);
-
-		if (unlikely(err))
-			netdev_err(port->dev, "failed to refill BM pools\n");
-
 		dma_unmap_single(dev->dev.parent, buf_phys_addr,
 				 MVPP2_RX_BUF_SIZE(bm_pool->pkt_size),
 				 DMA_FROM_DEVICE);
+		refill_array[bm_pool->log_id]++;
 
 #ifdef MVPP2_VERBOSE
 		mv_pp2x_skb_dump(skb, rx_desc->data_size, 4);
@@ -2434,6 +2430,27 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 		napi_gro_receive(napi, skb);
 	}
 
+	/* Refill pool */
+	for (i = 0; i < num_pool; i++) {
+		int err;
+		struct mv_pp2x_bm_pool *refill_bm_pool;
+
+		if (!refill_array[i])
+			continue;
+
+		refill_bm_pool = &port->priv->bm_pools[i];
+		while (likely(refill_array[i]--)) {
+			err = mv_pp2x_rx_refill_new(port, refill_bm_pool,
+						    refill_bm_pool->id, 0, cpu);
+			if (unlikely(err)) {
+				netdev_err(port->dev, "failed to refill BM pools\n");
+				refill_array[i]++;
+				rx_filled -= refill_array[i];
+				break;
+			}
+		}
+	}
+
 	if (likely(rcvd_pkts)) {
 		struct mv_pp2x_pcpu_stats *stats = this_cpu_ptr(port->stats);
 
-- 
1.7.9.5

