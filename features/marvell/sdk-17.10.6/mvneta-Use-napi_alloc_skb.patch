From aa555873f6e36147ccabc75486a095953a90e174 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Sat, 28 May 2016 21:25:31 +0300
Subject: [PATCH 0259/1345] mvneta: Use napi_alloc_skb()

commit  e95c78e1dc6efd428843dc9c0458141284a75712 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- This change replaces calls to netdev_alloc_skb_ip_align with
napi_alloc_skb as done for most other drivers

Change-Id: I7b2f8103dc5323658cd76f28f46d3d2b05182e85
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30084
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-by: Lior Amsalem <alior@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/marvell/mvneta.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 654f6ff..a1e9528 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -2014,7 +2014,8 @@ static void mvneta_rxq_drop_pkts(struct mvneta_port *pp,
 
 /* Main rx processing when using software buffer management */
 static int mvneta_rx_swbm(struct mvneta_port *pp, int rx_todo,
-			  struct mvneta_rx_queue *rxq)
+			  struct mvneta_rx_queue *rxq,
+			  struct napi_struct *napi)
 {
 	struct mvneta_pcpu_port *port = this_cpu_ptr(pp->ports);
 	struct net_device *dev = pp->dev;
@@ -2059,7 +2060,7 @@ static int mvneta_rx_swbm(struct mvneta_port *pp, int rx_todo,
 
 		if (rx_bytes <= rx_copybreak) {
 		/* better copy a small frame and not unmap the DMA region */
-			skb = netdev_alloc_skb_ip_align(dev, rx_bytes);
+			skb = napi_alloc_skb(napi, rx_bytes);
 			if (unlikely(!skb)) {
 				netdev_warn(dev, "rxq #%d - Can't allocate skb. rx_bytes = %d bytes\n",
 					    rxq->id, rx_bytes);
@@ -2160,7 +2161,8 @@ static int mvneta_rx_swbm(struct mvneta_port *pp, int rx_todo,
 
 /* Main rx processing when using hardware buffer management */
 static int mvneta_rx_hwbm(struct mvneta_port *pp, int rx_todo,
-			  struct mvneta_rx_queue *rxq)
+			  struct mvneta_rx_queue *rxq,
+			  struct napi_struct *napi)
 {
 	struct mvneta_pcpu_port *port = this_cpu_ptr(pp->ports);
 	struct net_device *dev = pp->dev;
@@ -2210,7 +2212,7 @@ static int mvneta_rx_hwbm(struct mvneta_port *pp, int rx_todo,
 
 		if (rx_bytes <= rx_copybreak) {
 			/* better copy a small frame and not unmap the DMA region */
-			skb = netdev_alloc_skb_ip_align(dev, rx_bytes);
+			skb = napi_alloc_skb(napi, rx_bytes);
 			if (unlikely(!skb))
 				goto err_drop_frame_ret_pool;
 
-- 
1.7.9.5

