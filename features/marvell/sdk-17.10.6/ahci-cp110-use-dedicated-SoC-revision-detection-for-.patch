From 2c33cba3e6181e4b8698082673ef057c14cd1eb3 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Tue, 27 Dec 2016 18:21:20 +0200
Subject: [PATCH 0699/1345] ahci: cp110: use dedicated SoC revision detection
 for A0 WA

commit  f7c7360bf06ea4d314824a48991ece6403f3a4eb from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Armada8k A0 required a special WA for port offset in aHCI unit.
This patch updates the SoC revision detection, to use the dedicated
API in SoC information drive, to read SoC revision ID.

Change-Id: Ifd612891b9b76b116594a962dc7ab7d9dd044f9e
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35110
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/ata/ahci_mvebu.c |   79 ++++++++--------------------------------------
 1 file changed, 13 insertions(+), 66 deletions(-)

diff --git a/drivers/ata/ahci_mvebu.c b/drivers/ata/ahci_mvebu.c
index 67c1689..f9af4da 100644
--- a/drivers/ata/ahci_mvebu.c
+++ b/drivers/ata/ahci_mvebu.c
@@ -19,6 +19,7 @@
 #include <linux/of_address.h>
 #include <linux/platform_device.h>
 #include "ahci.h"
+#include <linux/mv_soc_info.h>
 
 #define DRV_NAME "ahci-mvebu"
 
@@ -262,74 +263,20 @@ static int ahci_mvebu_probe(struct platform_device *pdev)
 			return rc;
 	}
 
-	/* In A8k A0 AHCI unit the port register offsets are not
-	 * according to AHCI specification. We need a WA for a8k (cp110).
+	/* Armada-8k revision A0, port register offsets of the aHCI unit are not
+	 * according to aHCI specification, so we need a WA for A8k rev A0 (CP110).
 	 */
-	if (of_device_is_compatible(pdev->dev.of_node,
-	    "marvell,armada-cp110-ahci")) {
-
-		struct device_node *node;
-		void __iomem *gwd_iidr2;
-		const unsigned int *reg;
-		phys_addr_t paddr;
-
-		/* Read the node which holds the "Global Watchdog Interface
-		 * Identification Register (GWD_IIDR2)" address - holds the revision.
-		 */
-		node = of_find_compatible_node(NULL, NULL,
-					       "marvell,ap806-rev-info");
-		if (!node) {
-			dev_err(&pdev->dev, "unable to read rev-info node\n");
-			of_node_put(node);
-			return -ENODEV;
-		}
-
-		/* Read the offset of the register */
-		reg = of_get_property(node, "reg", NULL);
-		if (!reg) {
-			dev_err(&pdev->dev, "unable to read reg property from rev-info node\n");
-			of_node_put(node);
-			return -ENODEV;
-		}
-
-		/* Translate the offset to phyisical address */
-		paddr = of_translate_address(node, reg);
-		if (paddr == OF_BAD_ADDR) {
-			dev_err(&pdev->dev, "of_translate_address failed\n");
-			of_node_put(node);
-			return -EINVAL;
-		}
-
-		gwd_iidr2 = ioremap(paddr, reg[1]);
-		if (!gwd_iidr2) {
-			dev_err(&pdev->dev, "rev-info ioremap() failed\n");
-			of_node_put(node);
-			return -EINVAL;
-		}
-
-#define GWD_IIDR2_REV_ID_OFFSET	12
-#define GWD_IIDR2_REV_ID_MASK	0xF
-#define APN806_REV_ID_A0	0
-
-		/* The workaround is required only for A0 revision.
-		 * read gwd_iidr2 register to determing the revision
+	if (of_device_is_compatible(pdev->dev.of_node, "marvell,armada-cp110-ahci")
+		&& mv_soc_info_get_revision() == APN806_REV_ID_A0) {
+		pr_debug("setting aHCI port offset WA for A8k revision A0");
+		/* Read the correct port base and offset from the
+		 * device tree and set hpriv->a8k_a0_wa for future use.
 		 */
-		if (((readl(gwd_iidr2) >> GWD_IIDR2_REV_ID_OFFSET) &
-		    GWD_IIDR2_REV_ID_MASK) == APN806_REV_ID_A0) {
-
-			/* Read the correct port base and offset from the
-			 * device tree and set hpriv->a8k_a0_wa for future use.
-			 */
-			hpriv->a8k_a0_wa = 1;
-			of_property_read_u32(pdev->dev.of_node, "port_base",
-					     &hpriv->port_base);
-			of_property_read_u32(pdev->dev.of_node, "port_offset",
-					     &hpriv->port_offset);
-		}
-
-		/* Release resources */
-		iounmap(gwd_iidr2);
-		of_node_put(node);
+		hpriv->a8k_a0_wa = 1;
+		of_property_read_u32(pdev->dev.of_node, "port_base",
+				     &hpriv->port_base);
+		of_property_read_u32(pdev->dev.of_node, "port_offset",
+				     &hpriv->port_offset);
 	}
 
 	rc = ahci_platform_init_host(pdev, hpriv, &ahci_mvebu_port_info,
-- 
1.7.9.5

