From 044167a36ae746d062a7c7bf7b1c0ddd4ab89053 Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Mon, 26 Dec 2016 09:53:37 +0800
Subject: [PATCH 0886/1345] ehci-orion: mvebu: add echi suspend/resume to PM

commit  c2618685f378ac0f54d6baa14c98ad63a134b63b from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- This patch adds EHCI generic parts of controller suspend/resume in
  ehci-orion's suspend/resume routines;
- This patch introduces a new fdt property "needs-reset-on-resume"
  which is set to force EHCI reset after resume as generic ehci driver
  does.

Change-Id: Iaf1c5ed33f0a6dc76eb7400c96f75a6ed7901c78
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34989
Reviewed-by: Wilson Ding <dingwei@marvell.com>
Tested-by: Wilson Ding <dingwei@marvell.com>
Signed-off-by: Ken Ma <make@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37168
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Victor Gu <xigu@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../devicetree/bindings/usb/ehci-orion.txt         |   12 +++++++++++-
 drivers/usb/host/ehci-orion.c                      |   17 +++++++++++++++--
 2 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/Documentation/devicetree/bindings/usb/ehci-orion.txt b/Documentation/devicetree/bindings/usb/ehci-orion.txt
index 2855bae..770eb55 100644
--- a/Documentation/devicetree/bindings/usb/ehci-orion.txt
+++ b/Documentation/devicetree/bindings/usb/ehci-orion.txt
@@ -12,11 +12,21 @@ Optional properties:
 - clocks: reference to the clock
 - phys: reference to the USB PHY
 - phy-names: name of the USB PHY, should be "usb"
+- needs-reset-on-resume: boolean, set this to force EHCI reset after resume,
+  for example, Armada 3700 should force EHCI reset after resume to insure
+  data traffic continuity
 
-Example:
+Examples:
 
 	ehci@50000 {
 		compatible = "marvell,orion-ehci";
 		reg = <0x50000 0x1000>;
 		interrupts = <19>;
 	};
+
+	usb@5e000 {
+		compatible = "marvell,armada-3700-ehci";
+		reg = <0x5e000 0x1000>;
+		interrupts = <GIC_SPI 17 IRQ_TYPE_LEVEL_HIGH>;
+		needs-reset-on-resume;
+	};
diff --git a/drivers/usb/host/ehci-orion.c b/drivers/usb/host/ehci-orion.c
index 69ca329..797e69e 100644
--- a/drivers/usb/host/ehci-orion.c
+++ b/drivers/usb/host/ehci-orion.c
@@ -66,6 +66,7 @@
 struct orion_ehci_hcd {
 	struct clk *clk;
 	struct phy *phy;
+	bool reset_on_resume;
 };
 
 static const char hcd_name[] = "ehci-orion";
@@ -259,6 +260,11 @@ static int ehci_orion_drv_probe(struct platform_device *pdev)
 	if (!IS_ERR(priv->clk))
 		clk_prepare_enable(priv->clk);
 
+	if (of_property_read_bool(pdev->dev.of_node, "needs-reset-on-resume"))
+		priv->reset_on_resume = true;
+	else
+		priv->reset_on_resume = false;
+
 	priv->phy = devm_phy_optional_get(&pdev->dev, "usb");
 	if (IS_ERR(priv->phy)) {
 		err = PTR_ERR(priv->phy);
@@ -350,8 +356,8 @@ static int ehci_orion_drv_suspend(struct platform_device *pdev,
 				  pm_message_t state)
 {
 	struct usb_hcd *hcd = platform_get_drvdata(pdev);
-
-	int addr, i;
+	bool do_wakeup = device_may_wakeup(&pdev->dev);
+	int addr, i, rc;
 
 	for (addr = USB_CAUSE, i = 0; addr <= USB_IPG; addr += 0x4, i++)
 		usb_save[i] = readl_relaxed(hcd->regs + addr);
@@ -360,6 +366,10 @@ static int ehci_orion_drv_suspend(struct platform_device *pdev,
 	     addr += 0x4, i++)
 		usb_save[i] = readl_relaxed(hcd->regs + addr);
 
+	rc = ehci_suspend(hcd, do_wakeup);
+	if (rc)
+		return rc;
+
 	return 0;
 }
 
@@ -375,6 +385,7 @@ static int ehci_orion_drv_suspend(struct platform_device *pdev,
 static int ehci_orion_drv_resume(struct platform_device *pdev)
 {
 	struct usb_hcd *hcd = platform_get_drvdata(pdev);
+	struct orion_ehci_hcd *priv = hcd_to_orion_priv(hcd);
 	int addr, regVal, i;
 
 	for (addr = USB_CAUSE, i = 0; addr <= USB_IPG; addr += 0x4, i++)
@@ -414,6 +425,8 @@ static int ehci_orion_drv_resume(struct platform_device *pdev)
 	regVal = MV_USB_CORE_MODE_HOST;
 	writel_relaxed(regVal, hcd->regs + 0x1A8);
 
+	ehci_resume(hcd, priv->reset_on_resume);
+
 	return 0;
 }
 
-- 
1.7.9.5

