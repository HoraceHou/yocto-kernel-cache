From dc1119170909005c99cbadc74df42289d18ee0d4 Mon Sep 17 00:00:00 2001
From: Haim Boot <hayim@marvell.com>
Date: Tue, 28 Jun 2016 12:38:37 +0300
Subject: [PATCH 0309/1345] fix: thermal: disabled armada-380 specific code
 from other devices probing

commit  51239e647b65164d6ac45fad0fa497db6234900c from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- patch a916dd3 added new functionality for armada-380 which broke apn806
  thermal support.
- new flag was added to armada_thermal_data structure to indicate that
  the new functionality is supported (and it is set only by armada-380).

Change-Id: I478d251c3d24e8dfc2e7f769ea39558a822df975
Signed-off-by: Haim Boot <hayim@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/30772
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/thermal/armada_thermal.c |   31 +++++++++++++++++++------------
 1 file changed, 19 insertions(+), 12 deletions(-)

diff --git a/drivers/thermal/armada_thermal.c b/drivers/thermal/armada_thermal.c
index eef35d5..f2ed29a 100644
--- a/drivers/thermal/armada_thermal.c
+++ b/drivers/thermal/armada_thermal.c
@@ -92,6 +92,9 @@ struct armada_thermal_data {
 	unsigned int temp_mask;
 	unsigned int is_valid_shift;
 
+	/* DFX interrupt support (optional) */
+	bool dfx_interrupt;
+
 	struct thermal_zone_device_ops *ops;
 };
 
@@ -416,6 +419,7 @@ static irqreturn_t a38x_temp_irq_handler(int irq, void *data)
 	.coef_m = 2000096UL,
 	.coef_div = 4201,
 	.inverted = true,
+	.dfx_interrupt = 1,
 	.ops = &armada_ops,
 };
 
@@ -486,12 +490,16 @@ static int armada_thermal_probe(struct platform_device *pdev)
 	if (IS_ERR(priv->control))
 		return PTR_ERR(priv->control);
 
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 2);
-	priv->dfx = devm_ioremap_resource(&pdev->dev, res);
-	if (IS_ERR(priv->dfx))
-		return PTR_ERR(priv->dfx);
-
 	priv->data = (struct armada_thermal_data *)match->data;
+
+	if (priv->data->dfx_interrupt) {
+		/* DFX interrupts are supported by some of the devices */
+		res = platform_get_resource(pdev, IORESOURCE_MEM, 2);
+		priv->dfx = devm_ioremap_resource(&pdev->dev, res);
+		if (IS_ERR(priv->dfx))
+			return PTR_ERR(priv->dfx);
+	}
+
 	priv->data->init_sensor(pdev, priv);
 
 	thermal = thermal_zone_device_register("armada_thermal", 0, 0,
@@ -507,13 +515,12 @@ static int armada_thermal_probe(struct platform_device *pdev)
 	/* Register overheat interrupt */
 	irq = platform_get_irq(pdev, 0);
 
-	if (irq < 0) {
-		dev_warn(&pdev->dev, "no irq\n");
-		return irq;
-	}
-	if (devm_request_irq(&pdev->dev, irq, a38x_temp_irq_handler,
-				0, pdev->name, priv) < 0) {
-		dev_warn(&pdev->dev, "Interrupt not available.\n");
+	if (irq >= 0) {
+		if (devm_request_irq(&pdev->dev, irq, a38x_temp_irq_handler,
+					0, pdev->name, priv) < 0)
+			dev_warn(&pdev->dev, "Interrupt not available.\n");
+	} else {
+		pr_debug("armada_thermal: no irq was assigned\n");
 	}
 
 	platform_set_drvdata(pdev, thermal);
-- 
1.7.9.5

