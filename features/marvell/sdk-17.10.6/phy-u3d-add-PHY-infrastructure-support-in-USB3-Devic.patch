From 076d36fa06beeb9f77f18aec987d709116f89654 Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Sat, 14 Jan 2017 00:17:16 +0800
Subject: [PATCH 0853/1345] phy: u3d: add PHY infrastructure support in USB3
 Device driver

commit  ffd4b6ad3c5e2292792ec031ef6715da3c816f47 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

- The patch added call for PHY init if exists via calling
  APIs (phy_init, phy_power_on, etc.)
- The main purposes to support phy infrastructure are:
  1) Initialize u3d PHY without bootloader dependency
  2) Power on/off in case doing suspend/resume

Change-Id: I79efde4d0a6f0ad2b1b7bca1bd7551a54478a1ae
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/37074
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../devicetree/bindings/usb/marvell-u3d.txt        |    4 +++
 drivers/usb/gadget/udc/mvebu_u3d.c                 |   26 ++++++++++++++++++++
 drivers/usb/gadget/udc/mvebu_u3d.h                 |    1 +
 3 files changed, 31 insertions(+)

diff --git a/Documentation/devicetree/bindings/usb/marvell-u3d.txt b/Documentation/devicetree/bindings/usb/marvell-u3d.txt
index adcae2e..f7d33df 100644
--- a/Documentation/devicetree/bindings/usb/marvell-u3d.txt
+++ b/Documentation/devicetree/bindings/usb/marvell-u3d.txt
@@ -13,6 +13,8 @@ Optional properties :
 - vbus-gpio	: VBUS interrupt GPIO pin
 		  set to trigger VBUS event notification to PHY/controller
 		  whether VBUS was powered or not
+- phys		: the COMPHY associated to this controller
+- phy-names:	: the name of COMPHY indicated by above property of phys
 
 Example:
 	u3d@520000 {
@@ -22,6 +24,8 @@ Example:
 		clocks = <&gateclk 24>, <&gateclk 16>;
 		dma-coherent;
 		vbus-gpio = <&gpio1 19 GPIO_ACTIVE_HIGH>;
+		phys = <&a3700_comphy 1 COMPHY_USB3>;
+		phy-names = "usb";
 		status = "disabled";
 	};
 
diff --git a/drivers/usb/gadget/udc/mvebu_u3d.c b/drivers/usb/gadget/udc/mvebu_u3d.c
index 2635638..c768c7c 100644
--- a/drivers/usb/gadget/udc/mvebu_u3d.c
+++ b/drivers/usb/gadget/udc/mvebu_u3d.c
@@ -42,6 +42,7 @@
 #include <linux/highmem.h>
 #include <linux/of_gpio.h>
 #include <linux/gpio.h>
+#include <linux/phy/phy.h>
 
 #include "mvebu_u3d.h"
 
@@ -2395,6 +2396,20 @@ static int mvc2_probe(struct platform_device *pdev)
 		cp->reg->global_control = 0x24;
 	}
 
+	/* Get comphy and init if there is */
+	cp->comphy = devm_of_phy_get(&pdev->dev, pdev->dev.of_node, "usb");
+	if (!IS_ERR(cp->comphy)) {
+		ret = phy_init(cp->comphy);
+		if (ret)
+			goto disable_phy;
+
+		ret = phy_power_on(cp->comphy);
+		if (ret) {
+			phy_exit(cp->comphy);
+			goto disable_phy;
+		}
+	}
+
 	spin_lock_init(&cp->lock);
 
 	/* init irq status */
@@ -2424,6 +2439,11 @@ static int mvc2_probe(struct platform_device *pdev)
 err_qwork:
 	if (cp->qwork)
 		destroy_workqueue(cp->qwork);
+disable_phy:
+	if (cp->comphy) {
+		phy_power_off(cp->comphy);
+		phy_exit(cp->comphy);
+	}
 err_base:
 	iounmap(base);
 err_phybase:
@@ -2461,6 +2481,12 @@ static int mvc2_remove(struct platform_device *dev)
 		destroy_workqueue(cp->qwork);
 	}
 
+	/* PHY exit if there is */
+	if (cp->comphy) {
+		phy_power_off(cp->comphy);
+		phy_exit(cp->comphy);
+	}
+
 	return 0;
 }
 
diff --git a/drivers/usb/gadget/udc/mvebu_u3d.h b/drivers/usb/gadget/udc/mvebu_u3d.h
index b83685d..330125f 100644
--- a/drivers/usb/gadget/udc/mvebu_u3d.h
+++ b/drivers/usb/gadget/udc/mvebu_u3d.h
@@ -350,6 +350,7 @@ struct mvc2 {
 	struct device   *dev;
 	struct clk  *clk;
 	struct usb_phy *phy;
+	struct phy *comphy;
 	int irq;
 	void    __iomem *base;
 	void    __iomem *win_base;
-- 
1.7.9.5

