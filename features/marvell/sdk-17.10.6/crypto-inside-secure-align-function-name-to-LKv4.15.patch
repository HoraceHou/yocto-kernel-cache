From abfa261f1a9b4fc9bd936d03b49a38f4553caa77 Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Mon, 15 Jan 2018 14:08:20 +0200
Subject: [PATCH 1295/1345] crypto: inside-secure: align function name to
 LKv4.15

commit  574284ab5cbd15f4183d36b4777cbc7e91b392c9 from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Change-Id: I630fdf26ed1e5d92aa81a48892f1a6dd558073b6
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/49058
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/51676
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/inside-secure/safexcel.c |   21 ++++++++++-----------
 1 file changed, 10 insertions(+), 11 deletions(-)

diff --git a/drivers/crypto/inside-secure/safexcel.c b/drivers/crypto/inside-secure/safexcel.c
index c870fd2..ee01fce 100644
--- a/drivers/crypto/inside-secure/safexcel.c
+++ b/drivers/crypto/inside-secure/safexcel.c
@@ -375,7 +375,7 @@ static int eip197_load_fw(struct device *dev, struct safexcel_crypto_priv *priv)
 }
 
 /* Reset the command descriptor rings */
-static void eip_hw_reset_cdesc_rings(struct safexcel_crypto_priv *priv)
+static void safexcel_hw_reset_cdesc_rings(struct safexcel_crypto_priv *priv)
 {
 	int i;
 
@@ -393,7 +393,7 @@ static void eip_hw_reset_cdesc_rings(struct safexcel_crypto_priv *priv)
 }
 
 /* Reset the result descriptor rings */
-static void eip_hw_reset_rdesc_rings(struct safexcel_crypto_priv *priv)
+static void safexcel_hw_reset_rdesc_rings(struct safexcel_crypto_priv *priv)
 {
 	int i;
 
@@ -411,7 +411,7 @@ static void eip_hw_reset_rdesc_rings(struct safexcel_crypto_priv *priv)
 }
 
 /* Configure the command descriptor ring manager */
-static int eip_hw_setup_cdesc_rings(struct safexcel_crypto_priv *priv)
+static int safexcel_hw_setup_cdesc_rings(struct safexcel_crypto_priv *priv)
 {
 	u32 hdw, cd_size_rnd, val;
 	int i;
@@ -457,7 +457,7 @@ static int eip_hw_setup_cdesc_rings(struct safexcel_crypto_priv *priv)
 }
 
 /* Configure the result descriptor ring manager */
-static int eip_hw_setup_rdesc_rings(struct safexcel_crypto_priv *priv)
+static int safexcel_hw_setup_rdesc_rings(struct safexcel_crypto_priv *priv)
 {
 	u32 hdw, rd_size_rnd, val;
 	int i;
@@ -508,7 +508,7 @@ static int eip_hw_setup_rdesc_rings(struct safexcel_crypto_priv *priv)
 	return 0;
 }
 
-static int eip197_hw_init(struct device *dev, struct safexcel_crypto_priv *priv)
+static int safexcel_hw_init(struct device *dev, struct safexcel_crypto_priv *priv)
 {
 	u32 version, val;
 	int i, ret, pe;
@@ -613,7 +613,6 @@ static int eip197_hw_init(struct device *dev, struct safexcel_crypto_priv *priv)
 		 */
 		if (priv->eip_type == EIP197)
 			val |= EIP197_HIA_DSE_CFG_EN_SINGLE_WR;
-
 		writel(val, EIP197_HIA_DSE(priv) + EIP197_HIA_DSE_CFG(pe));
 
 		/* Leave the DSE threads reset state */
@@ -717,8 +716,8 @@ static int eip197_hw_init(struct device *dev, struct safexcel_crypto_priv *priv)
 		}
 	}
 
-	eip_hw_setup_cdesc_rings(priv);
-	eip_hw_setup_rdesc_rings(priv);
+	safexcel_hw_setup_cdesc_rings(priv);
+	safexcel_hw_setup_rdesc_rings(priv);
 
 	return 0;
 }
@@ -1372,7 +1371,7 @@ static int safexcel_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, priv);
 
-	ret = eip197_hw_init(dev, priv);
+	ret = safexcel_hw_init(dev, priv);
 	if (ret) {
 		dev_err(dev, "EIP h/w init failed (%d)\n", ret);
 		goto err_pool;
@@ -1413,8 +1412,8 @@ static int safexcel_remove(struct platform_device *pdev)
 	if (priv->id == eip_in_use)
 		safexcel_unregister_algorithms(priv);
 
-	eip_hw_reset_cdesc_rings(priv);
-	eip_hw_reset_rdesc_rings(priv);
+	safexcel_hw_reset_cdesc_rings(priv);
+	safexcel_hw_reset_rdesc_rings(priv);
 
 	clk_disable_unprepare(priv->clk);
 
-- 
1.7.9.5

