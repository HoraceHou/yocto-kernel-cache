From c4f9f5afcabbf591d85c98a3da5cd4b489015f24 Mon Sep 17 00:00:00 2001
From: David Sniatkiwicz <davidsn@marvell.com>
Date: Mon, 28 Aug 2017 17:20:50 +0300
Subject: [PATCH 1212/1345] phy: comphy: cp110: extend comphy power-off
 support for all modes

commit  d53e07d43547b915c7976253d854df854a7b1cec from
https://github.com/MarvellEmbeddedProcessors/linux-marvell.git

Add comphy power off implementation for all modes,
and not just for network ports.

Change-Id: I85d759130c42b9584ee09e7642aa6f95c6c6b320
Signed-off-by: David Sniatkiwicz <davidsn@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/43463
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/phy/phy-comphy-cp110.c |   44 ++++++++++++++++++----------------------
 1 file changed, 20 insertions(+), 24 deletions(-)

diff --git a/drivers/phy/phy-comphy-cp110.c b/drivers/phy/phy-comphy-cp110.c
index 73764c3..d828ba4 100644
--- a/drivers/phy/phy-comphy-cp110.c
+++ b/drivers/phy/phy-comphy-cp110.c
@@ -1799,8 +1799,7 @@ static int mvebu_cp110_comphy_power_off(struct phy *phy)
 {
 	struct mvebu_comphy *comphy = phy_get_drvdata(phy);
 	struct mvebu_comphy_priv *priv = to_mvebu_comphy_priv(comphy);
-	int mode = COMPHY_GET_MODE(priv->lanes[comphy->index].mode);
-	void __iomem *sd_ip_addr;
+	void __iomem *sd_ip_addr, *comphy_ip_addr;
 	u32 mask, data;
 
 	dev_dbg(priv->dev, "%s: Enter\n", __func__);
@@ -1812,28 +1811,25 @@ static int mvebu_cp110_comphy_power_off(struct phy *phy)
 
 	spin_lock(&priv->lock);
 
-	switch (mode) {
-	case(COMPHY_SGMII_MODE):
-	case(COMPHY_HS_SGMII_MODE):
-	case(COMPHY_RXAUI_MODE):
-	case(COMPHY_XFI_MODE):
-	case(COMPHY_SFI_MODE):
-		sd_ip_addr = SD_ADDR(priv->comphy_pipe_regs, comphy->index);
-
-		/* Hard reset the comphy */
-		mask = SD_EXTERNAL_CONFIG1_RESET_IN_MASK;
-		data = 0x0 << SD_EXTERNAL_CONFIG1_RESET_IN_OFFSET;
-		mask |= SD_EXTERNAL_CONFIG1_RESET_CORE_MASK;
-		data |= 0x0 << SD_EXTERNAL_CONFIG1_RESET_CORE_OFFSET;
-		mask |= SD_EXTERNAL_CONFIG1_RF_RESET_IN_MASK;
-		data |= 0x0 << SD_EXTERNAL_CONFIG1_RF_RESET_IN_OFFSET;
-		reg_set(sd_ip_addr + SD_EXTERNAL_CONFIG1_REG, data, mask);
-		break;
-	default:
-		dev_dbg(priv->dev, "comphy%d: power down is not implemented for 0x%x mode\n",
-			comphy->index, mode);
-		break;
-	}
+	sd_ip_addr = SD_ADDR(priv->comphy_pipe_regs, comphy->index);
+
+	/* Hard reset the comphy, for Ethernet modes and Sata */
+	mask = SD_EXTERNAL_CONFIG1_RESET_IN_MASK;
+	data = 0x0 << SD_EXTERNAL_CONFIG1_RESET_IN_OFFSET;
+	mask |= SD_EXTERNAL_CONFIG1_RESET_CORE_MASK;
+	data |= 0x0 << SD_EXTERNAL_CONFIG1_RESET_CORE_OFFSET;
+	mask |= SD_EXTERNAL_CONFIG1_RF_RESET_IN_MASK;
+	data |= 0x0 << SD_EXTERNAL_CONFIG1_RF_RESET_IN_OFFSET;
+	reg_set(sd_ip_addr + SD_EXTERNAL_CONFIG1_REG, data, mask);
+
+	comphy_ip_addr = COMPHY_ADDR(priv->comphy_regs, comphy->index);
+
+	/* Hard reset the comphy, for PCIe and usb3 */
+	mask = COMMON_PHY_CFG1_PWR_ON_RESET_MASK;
+	data = 0x0 << COMMON_PHY_CFG1_PWR_ON_RESET_OFFSET;
+	mask |= COMMON_PHY_CFG1_CORE_RSTN_MASK;
+	data |= 0x0 << COMMON_PHY_CFG1_CORE_RSTN_OFFSET;
+	reg_set(comphy_ip_addr + COMMON_PHY_CFG1_REG, data, mask);
 
 	/* Clear comphy PHY and PIPE selector, can't rely on u-boot */
 	mvebu_cp110_comphy_clr_phy_selector(priv, comphy);
-- 
1.7.9.5

