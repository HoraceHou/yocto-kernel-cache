From 8cd40f0d9922deb13950e0abebb6730dd3cd4ab3 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Thu, 7 Jun 2018 14:20:43 +0800
Subject: [PATCH 666/666] driver: staging: fsl_qbman/dce replace cpus_allowed
 to cpus_mask for RT

Based on the commit b0f7d3d946(kernel: sched: Provide a pointer to the valid CPU mask)
need to replace cpus_allowed to cpus_mask for RT.

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 .../fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c | 4 ++++
 drivers/staging/fsl_qbman/fsl_usdpaa_irq.c                       | 9 ++++++++-
 drivers/staging/fsl_qbman/qman_driver.c                          | 4 ++++
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c b/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c
index 5472818..b465761 100644
--- a/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c
+++ b/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c
@@ -671,7 +671,11 @@ static int compression_stateless_truncation_deflate_compoundframes_init(void)
 {
 	int ret, i;
 	struct dce_test_ctx *test_ctx;
+#ifdef CONFIG_PREEMPT_RT_FULL
+	struct cpumask backup_mask = current->cpus_mask;
+#else
 	struct cpumask backup_mask = current->cpus_allowed;
+#endif
 	struct cpumask new_mask = *qman_affine_cpus();
 
 	struct test_meta_info_t test_meta_info_array[] = {
diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c b/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c
index 914c7471..0e977ab 100755
--- a/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c
@@ -145,11 +145,18 @@ static int map_irq(struct file *fp, struct usdpaa_ioctl_irq_map *irq_map)
 		fput(ctx->usdpaa_filp);
 		return ret;
 	}
+#ifdef CONFIG_PREEMPT_RT_FULL
+	ret = irq_set_affinity(ctx->irq_num, &current->cpus_mask);
+#else
 	ret = irq_set_affinity(ctx->irq_num, &current->cpus_allowed);
+#endif
 	if (ret)
 		pr_err("USDPAA irq_set_affinity() failed, ret= %d\n", ret);
-
+#ifdef CONFIG_PREEMPT_RT_FULL
+	ret = irq_set_affinity_hint(ctx->irq_num, &current->cpus_mask);
+#else
 	ret = irq_set_affinity_hint(ctx->irq_num, &current->cpus_allowed);
+#endif
 	if (ret)
 		pr_err("USDPAA irq_set_affinity_hint() failed, ret= %d\n", ret);
 
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index d32299f..48d171a 100755
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -655,7 +655,11 @@ static struct qman_portal *init_pcfg(struct qm_portal_config *pcfg)
 static void init_slave(int cpu)
 {
 	struct qman_portal *p;
+#ifdef CONFIG_PREEMPT_RT_FULL
+	struct cpumask oldmask = current->cpus_mask;
+#else	
 	struct cpumask oldmask = current->cpus_allowed;
+#endif
 	set_cpus_allowed_ptr(current, get_cpu_mask(cpu));
 	p = qman_create_affine_slave(shared_portals[shared_portals_idx++], cpu);
 	if (!p)
-- 
2.7.4

