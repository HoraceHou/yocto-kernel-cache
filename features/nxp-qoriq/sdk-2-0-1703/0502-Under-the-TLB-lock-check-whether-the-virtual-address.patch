From 4ada8ff7c4d89d7d9a090c74881691306e45d644 Mon Sep 17 00:00:00 2001
From: Malik Sandeep-B02416 <Sandeep.Malik@freescale.com>
Date: Wed, 14 Dec 2016 20:35:39 +0530
Subject: [PATCH 502/666] Under the TLB lock, check whether the virtual address
 is already in the TLB before adding it again.

This commmit is based on commit 3872ac601a33a1e4326d37c898bd5f11d33d337b from
git://git.freescale.com/ppc/sdk/linux.git

Signed-off-by: Scott Wood <scott.wood@nxp.com>
Signed-off-by: Par Olsson <par.olsson@windriver.com>
Signed-off-by: Sandeep Malik <Sandeep.Malik@nxp.com>
Signed-off-by: Qi Hou <qi.hou@windriver.com>
---
 arch/powerpc/include/asm/mmu-book3e.h |  2 ++
 arch/powerpc/mm/hugetlbpage-book3e.c  |  2 +-
 arch/powerpc/mm/mem.c                 | 17 ++++++++++++++---
 3 files changed, 17 insertions(+), 4 deletions(-)

diff --git a/arch/powerpc/include/asm/mmu-book3e.h b/arch/powerpc/include/asm/mmu-book3e.h
index a8dc82a..0745dc1 100644
--- a/arch/powerpc/include/asm/mmu-book3e.h
+++ b/arch/powerpc/include/asm/mmu-book3e.h
@@ -320,6 +320,8 @@ static inline void book3e_tlb_lock(void)
 static inline void book3e_tlb_unlock(void)
 {}
 
+int book3e_tlb_exists(unsigned long ea, unsigned long pid);
+
 #endif
 
 #endif /* !__ASSEMBLY__ */
diff --git a/arch/powerpc/mm/hugetlbpage-book3e.c b/arch/powerpc/mm/hugetlbpage-book3e.c
index 73c9fc2..815149c 100644
--- a/arch/powerpc/mm/hugetlbpage-book3e.c
+++ b/arch/powerpc/mm/hugetlbpage-book3e.c
@@ -53,7 +53,7 @@ static inline int mmu_get_tsize(int psize)
 	return mmu_psize_defs[psize].enc;
 }
 
-static inline int book3e_tlb_exists(unsigned long ea, unsigned long pid)
+int book3e_tlb_exists(unsigned long ea, unsigned long pid)
 {
 	int found = 0;
 
diff --git a/arch/powerpc/mm/mem.c b/arch/powerpc/mm/mem.c
index f94fe8f..9a8f462 100644
--- a/arch/powerpc/mm/mem.c
+++ b/arch/powerpc/mm/mem.c
@@ -515,10 +515,21 @@ static inline void hook_usdpaa_tlb1(struct vm_area_struct *vma,
 	int tlb_idx = usdpaa_test_fault(pfn, &phys_addr, &size);
 	if (tlb_idx != -1) {
 		unsigned long va = address & ~(size - 1);
+		unsigned long flags;
+		u32 pid = mfspr(SPRN_PID);
+
 		flush_tlb_mm(vma->vm_mm);
-		settlbcam(tlb_idx, va, phys_addr, size, pte_val(*ptep),
-			  mfspr(SPRN_PID));
-		loadcam_entry(tlb_idx);
+		local_irq_save(flags);
+		book3e_tlb_lock();
+
+		if (!book3e_tlb_exists(va, pid)) {
+			settlbcam(tlb_idx, va, phys_addr, size, pte_val(*ptep),
+				  pid);
+			loadcam_entry(tlb_idx);
+		}
+
+		book3e_tlb_unlock();
+		local_irq_restore(flags);
 	}
 }
 #else
-- 
2.7.4

