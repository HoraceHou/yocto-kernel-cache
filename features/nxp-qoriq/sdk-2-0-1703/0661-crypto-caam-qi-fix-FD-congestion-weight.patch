From 81524d07297e2b9de28d9ccf851ccb9512c3d1a7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>
Date: Tue, 5 Dec 2017 11:14:10 +0200
Subject: [PATCH 661/666] crypto: caam/qi - fix FD congestion weight
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit e4102e7d08371f690c3d313686085237a216e257 from
https://github.com/qoriq-open-source/linux.git

When caam_qi_enqueue() is called, compound FD has already been swapped
to CAAM endianness, thus accesing it ("length" field in this case) by
CPU has to be done by first unswapping.

Fixes: ca982fae08a2 ("crypto: caam/qi - use QBMan (NXP) SDK driver")
Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/crypto/caam/qi.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index d3d5f62..89d3f2a 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -109,7 +109,7 @@ int caam_qi_enqueue(struct device *qidev, struct caam_drv_req *req)
 
 	fd.cmd = 0;
 	fd.format = qm_fd_compound;
-	fd.cong_weight = req->fd_sgt[1].length;
+	fd.cong_weight = caam32_to_cpu(req->fd_sgt[1].length);
 	fd.addr = dma_map_single(qidev, req->fd_sgt, sizeof(req->fd_sgt),
 			      DMA_BIDIRECTIONAL);
 	if (dma_mapping_error(qidev, fd.addr)) {
-- 
2.7.4

