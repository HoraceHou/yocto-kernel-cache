From 0e9f550075fb06c31fa8859db112f46f1d7f8832 Mon Sep 17 00:00:00 2001
From: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Date: Tue, 13 Aug 2013 14:31:35 +0530
Subject: [PATCH 047/666] fsl/usb: Workarourd for USB erratum-A005697

As per USB specification, in the Suspend state, the status bit does
not change until the port is suspended. However, there may be a delay
in suspending a port if there is a transaction currently in progress
on the bus.

In the USBDR controller, the PORTSCx[SUSP] bit changes immediately when
the application sets it and not when the port is actually suspended

Workaround for this issue involves waiting for a minimum of 10ms to
allow the controller to go into SUSPEND state before proceeding ahead

Signed-off-by: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Change-Id: I8d20619d7d62afc12981c2f913c3d3ec735f7e64
Reviewed-on: http://git.am.freescale.net:8181/3996
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Aggrwal Poonam-B10812 <Poonam.Aggrwal@freescale.com>
Reviewed-by: Rivera Jose-B46482 <Jose.G.Rivera@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/usb/host/ehci-hub.c      |  2 ++
 drivers/usb/host/ehci.h          |  5 +++++
 drivers/usb/host/fsl-mph-dr-of.c | 46 ++++++++++++++++++++++++++++++++++++++++
 3 files changed, 53 insertions(+)

diff --git a/drivers/usb/host/ehci-hub.c b/drivers/usb/host/ehci-hub.c
index df169c8..bcf3194 100644
--- a/drivers/usb/host/ehci-hub.c
+++ b/drivers/usb/host/ehci-hub.c
@@ -278,6 +278,8 @@ static int ehci_bus_suspend (struct usb_hcd *hcd)
 		else if ((t1 & PORT_PE) && !(t1 & PORT_SUSPEND)) {
 			t2 |= PORT_SUSPEND;
 			set_bit(port, &ehci->bus_suspended);
+			if (ehci_has_fsl_susp_errata(ehci))
+				usleep_range(10000, 20000);
 		}
 
 		/* enable remote wakeup on all ports, if told to do so */
diff --git a/drivers/usb/host/ehci.h b/drivers/usb/host/ehci.h
index c979854..cc881cb 100644
--- a/drivers/usb/host/ehci.h
+++ b/drivers/usb/host/ehci.h
@@ -707,10 +707,15 @@ ehci_port_speed(struct ehci_hcd *ehci, unsigned int portsc)
 #if defined(CONFIG_PPC_85xx)
 /* Some Freescale processors have an erratum (USB A-005275) in which
  * incoming packets get corrupted in HS mode
+ * Some Freescale processors have an erratum (USB A-005697) in which
+ * we need to wait for 10ms for bus to fo into suspend mode after
+ * setting SUSP bit
  */
 #define ehci_has_fsl_hs_errata(e)	((e)->has_fsl_hs_errata)
+#define ehci_has_fsl_susp_errata(e)	((e)->has_fsl_susp_errata)
 #else
 #define ehci_has_fsl_hs_errata(e)	(0)
+#define ehci_has_fsl_susp_errata(e)	(0)
 #endif
 
 /*
diff --git a/drivers/usb/host/fsl-mph-dr-of.c b/drivers/usb/host/fsl-mph-dr-of.c
index 1dcc0ed..e416563 100644
--- a/drivers/usb/host/fsl-mph-dr-of.c
+++ b/drivers/usb/host/fsl-mph-dr-of.c
@@ -126,6 +126,52 @@ static struct platform_device *fsl_usb2_device_register(
 
 static const struct of_device_id fsl_usb2_mph_dr_of_match[];
 
+static bool has_erratum_a005697(void)
+{
+	unsigned int svr = mfspr(SPRN_SVR);
+	bool flag = false;
+
+	switch (SVR_SOC_VER(svr)) {
+	case SVR_P1010:
+	case SVR_P1014:
+	case SVR_T1040:
+		if (SVR_REV(svr) == 0x10)
+			flag = true;
+		break;
+	case SVR_9132:
+		if ((SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x11))
+			flag = true;
+		break;
+	case SVR_P5040:
+	case SVR_P5021:
+		if ((SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x20) ||
+				(SVR_REV(svr) == 0x21))
+			flag = true;
+		break;
+	case SVR_T4240:
+	case SVR_T4160:
+	case SVR_P5020:
+	case SVR_P5010:
+		if ((SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x20))
+			flag = true;
+		break;
+	case SVR_P2040:
+	case SVR_P2041:
+	case SVR_P3041:
+		if ((SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x11) ||
+				(SVR_REV(svr) == 0x20))
+			flag = true;
+		break;
+	case SVR_P4080:
+		if ((SVR_REV(svr) == 0x10) || (SVR_REV(svr) == 0x20) ||
+				(SVR_REV(svr) == 0x30))
+			flag = true;
+		break;
+	}
+
+	return flag;
+}
+
 static enum fsl_usb2_controller_ver usb_get_ver_info(struct device_node *np)
 {
 	enum fsl_usb2_controller_ver ver = FSL_USB_VER_NONE;
-- 
2.7.4

