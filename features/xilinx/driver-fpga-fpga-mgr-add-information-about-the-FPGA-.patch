From 233f3d71aadd015f6a23d07dae661a0f11d254d4 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 28 Nov 2018 13:28:31 +0800
Subject: [PATCH] driver: fpga: fpga-mgr: add information about the FPGA image
 to program

on Xilinx-zcu102 platform, when update FPGA bitstream there
is a below call trace:
Unable to handle kernel NULL pointer dereference at virtual address 00000000
[<ffffff800888a44c>] zynqmp_fpga_ops_write_init+0x24/0x38
[<ffffff8008889698>] fpga_mgr_write_init_buf+0x50/0xa8
[<ffffff800888a144>] fpga_mgr_buf_load+0x154/0x280
[<ffffff800888a2e8>] fpga_mgr_firmware_load+0x78/0xd8
[<ffffff800888a3ac>] firmware_store+0x64/0x80
[<ffffff800866801c>] dev_attr_store+0x44/0x60
[<ffffff80082a6aa8>] sysfs_kf_write+0x58/0x80
[<ffffff80082a5c20>] kernfs_fop_write+0x120/0x208
[<ffffff800821f790>] __vfs_write+0x48/0x80
[<ffffff8008220c74>] vfs_write+0xac/0x198
[<ffffff80082221dc>] SyS_write+0x54/0xb0
This issue is caused by commit 1df2865f8dd9("fpga-mgr: add
fpga image information struct"). Because 0 is passed into
fpga_mgr_firmware_load() as the info parameter, and in
function zynqmp_fpga_ops_write_init(), the info is used
even if it is a NULL pointer. Therefore, a NULL pointer
call trace generated.
Refer to sdk linux kernel, commit 9087de47afd7("fpga-mgr:
add fpga image information struct"), add fpga image info
variable and set flag as 0 to indicate full reconfiguration
by default.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/fpga/fpga-mgr.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/fpga/fpga-mgr.c b/drivers/fpga/fpga-mgr.c
index 8947b98d..bb9b244 100644
--- a/drivers/fpga/fpga-mgr.c
+++ b/drivers/fpga/fpga-mgr.c
@@ -362,13 +362,19 @@ static ssize_t firmware_store(struct device *dev,
 	char image_name[NAME_MAX];
 	int ret;
 
+	/* struct with information about the FPGA image to program. */
+	struct fpga_image_info info;
+
+	/* flags indicates whether to do full or partial reconfiguration */
+	info.flags = 0;
+
 	/* lose terminating \n */
 	strcpy(image_name, buf);
 	len = strlen(image_name);
 	if (image_name[len - 1] == '\n')
 		image_name[len - 1] = 0;
 
-	ret = fpga_mgr_firmware_load(mgr, 0, image_name);
+	ret = fpga_mgr_firmware_load(mgr, &info, image_name);
 	if (ret)
 		return ret;
 
-- 
1.7.9.5

