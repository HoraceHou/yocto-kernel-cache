From 21b672b034c604a2750699392691491c2d5f7e08 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 9 May 2018 19:20:55 +0800
Subject: [PATCH 3/4] net: dpaa: Fix the nasty override to the dma_map_ops

The dma_map_ops returned by get_dma_ops() is usually used by many
drivers, and never be supposed to be modified by a specific driver.
If fact, it does have a "const" qualifier. So the codes in commit
c9d461c35b11 ("dpa: SDK DPAA 1.x Ethernet driver") to override
the dma_map_ops->dma_supported seems pretty ugly and we should never
do something like that. So drop these codes.

In order to set the dma_mask correctly without overriding the
dma_map_ops->dma_supported, we should move the setting of
dma mask after the arch_setup_dma_ops().

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c | 14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
index 19a8a3c..311eb7f 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
@@ -755,20 +755,16 @@ int __attribute__((nonnull))
 		err = PTR_ERR(pdev);
 		goto pdev_register_failed;
 	}
-	{
-		struct dma_map_ops *ops = get_dma_ops(&pdev->dev);
-		ops->dma_supported = NULL;
-	}
-	err = dma_coerce_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(40));
-	if (err) {
-		pr_err("dma_coerce_mask_and_coherent() failed\n");
-		goto pdev_mask_failed;
-	}
 #ifdef CONFIG_FMAN_ARM
 	/* force coherency */
 	pdev->dev.archdata.dma_coherent = true;
 	arch_setup_dma_ops(&pdev->dev, 0, 0, NULL, true);
 #endif
+	err = dma_coerce_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(40));
+	if (err) {
+		pr_err("dma_coerce_mask_and_coherent() failed\n");
+		goto pdev_mask_failed;
+	}
 
 	dpa_bp->dev = &pdev->dev;
 
-- 
1.8.5.2.233.g932f7e4

