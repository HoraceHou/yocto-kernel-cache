From 8414f2bb2d2105bf92434d6bec677bed7e31a5b0 Mon Sep 17 00:00:00 2001
From: Catalin Marinas <catalin.marinas@arm.com>
Date: Fri, 4 Aug 2017 15:10:12 +0100
Subject: [PATCH 6/9] arm64: neon: Temporarily add a
 kernel_mode_begin_partial() definition

commit 174dfb12860eac361f3ced9fefb51393fec5bd32 upstream

The crypto code currently relies on kernel_mode_begin_partial() being
available. Until the corresponding crypto patches are merged, define
this macro temporarily, though with different semantics as it cannot be
called in interrupt context.

Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 arch/arm64/include/asm/neon.h | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/arch/arm64/include/asm/neon.h b/arch/arm64/include/asm/neon.h
index fb9d137256a6..f922eaf780f9 100644
--- a/arch/arm64/include/asm/neon.h
+++ b/arch/arm64/include/asm/neon.h
@@ -19,4 +19,11 @@
 void kernel_neon_begin(void);
 void kernel_neon_end(void);
 
+/*
+ * Temporary macro to allow the crypto code to compile. Note that the
+ * semantics of kernel_neon_begin_partial() are now different from the
+ * original as it does not allow being called in an interrupt context.
+ */
+#define kernel_neon_begin_partial(num_regs)	kernel_neon_begin()
+
 #endif /* ! __ASM_NEON_H */
-- 
2.17.1

