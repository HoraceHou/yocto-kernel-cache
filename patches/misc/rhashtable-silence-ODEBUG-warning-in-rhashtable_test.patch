From 7bfeea0ecfcb655386509c0cf0f866f3d1cf4e70 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Tue, 29 Jan 2019 16:17:44 +0800
Subject: [PATCH] rhashtable: silence ODEBUG warning in rhashtable_test

The function test_insert_dup will call rhltable_init by passing "on-stack"
structure rhlt as argument. In this condition, rhashtable_init in rhltable_init
should call INIT_WORK_ONSTACK instead of INIT_WORK to initialise the work structure.

But rhashtable_init is a common function so we have to modify test_insert_dup
by passing a kmalloc object intead of an on stack object.

The calltrace is as below:
[ 52.864544] ODEBUG: object (____ptrval____) is on stack (____ptrval____), but NOT annotated.
[ 52.864588] WARNING: CPU: 8 PID: 1 at lib/debugobjects.c:369 __debug_object_init+0x430/0x530
[ 52.864590] Modules linked in:
[ 52.864599] CPU: 8 PID: 1 Comm: swapper/0 Not tainted 4.18.20-rt8-yocto-preempt-rt #1
[ 52.864601] Hardware name: AXM56xx Victoria (DT)
[ 52.864605] pstate: 80000085 (Nzcv daIf -PAN -UAO)
[ 52.864610] pc : __debug_object_init+0x430/0x530
[ 52.864614] lr : __debug_object_init+0x430/0x530
...
[ 52.864704] Call trace:
[ 52.864709] __debug_object_init+0x430/0x530
[ 52.864714] debug_object_init+0x20/0x28
[ 52.864719] __init_work+0x44/0x50
[ 52.864724] rhashtable_init+0x1e8/0x2f8
[ 52.864727] rhltable_init+0x1c/0x38
[ 52.864733] test_insert_dup+0x60/0x688
[ 52.864737] test_rht_init+0x2d4/0x60c
[ 52.864741] do_one_initcall+0xb0/0x4e8
[ 52.864746] kernel_init_freeable+0x56c/0x664
[ 52.864751] kernel_init+0x18/0x108
[ 52.864755] ret_from_fork+0x10/0x1c
[ 52.864757] irq event stamp: 13847336
[ 52.864763] hardirqs last enabled at (13847335): [<ffffff8008cb71e0>] _raw_spin_unlock_irqrestore+0x70/0xa8
[ 52.864767] hardirqs last disabled at (13847336): [<ffffff8008cb6eb4>] _raw_spin_lock_irqsave+0x2c/0xb8
[ 52.864772] softirqs last enabled at (0): [<ffffff80080ac158>] copy_process.isra.3.part.4+0x2c0/0x1598
[ 52.864775] softirqs last disabled at (0): [<0000000000000000>] (null)
[ 52.864778] ---[ end trace 0000000000000001 ]---

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 lib/test_rhashtable.c |   17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/lib/test_rhashtable.c b/lib/test_rhashtable.c
index 6ca59ff..7c74be2 100644
--- a/lib/test_rhashtable.c
+++ b/lib/test_rhashtable.c
@@ -544,38 +544,41 @@ static unsigned int __init print_ht(struct rhltable *rhlt)
 static int __init test_insert_dup(struct test_obj_rhl *rhl_test_objects,
 				  int cnt, bool slow)
 {
-	struct rhltable rhlt;
+	struct rhltable *rhlt;
 	unsigned int i, ret;
 	const char *key;
 	int err = 0;
 
-	err = rhltable_init(&rhlt, &test_rht_params_dup);
+	rhlt = kmalloc(sizeof(*rhlt), GFP_KERNEL);
+	if (!rhlt)
+		return -ENOMEM;
+	err = rhltable_init(rhlt, &test_rht_params_dup);
 	if (WARN_ON(err))
 		return err;
 
 	for (i = 0; i < cnt; i++) {
 		rhl_test_objects[i].value.tid = i;
-		key = rht_obj(&rhlt.ht, &rhl_test_objects[i].list_node.rhead);
+		key = rht_obj(&rhlt->ht, &rhl_test_objects[i].list_node.rhead);
 		key += test_rht_params_dup.key_offset;
 
 		if (slow) {
-			err = PTR_ERR(rhashtable_insert_slow(&rhlt.ht, key,
+			err = PTR_ERR(rhashtable_insert_slow(&rhlt->ht, key,
 							     &rhl_test_objects[i].list_node.rhead));
 			if (err == -EAGAIN)
 				err = 0;
 		} else
-			err = rhltable_insert(&rhlt,
+			err = rhltable_insert(rhlt,
 					      &rhl_test_objects[i].list_node,
 					      test_rht_params_dup);
 		if (WARN(err, "error %d on element %d/%d (%s)\n", err, i, cnt, slow? "slow" : "fast"))
 			goto skip_print;
 	}
 
-	ret = print_ht(&rhlt);
+	ret = print_ht(rhlt);
 	WARN(ret != cnt, "missing rhltable elements (%d != %d, %s)\n", ret, cnt, slow? "slow" : "fast");
 
 skip_print:
-	rhltable_destroy(&rhlt);
+	rhltable_destroy(rhlt);
 
 	return 0;
 }
-- 
1.7.9.5

