From 6888dc0f53d72c5ab71f3c28c874f8dfe891c9bb Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Mon, 15 Jul 2019 13:47:25 +0800
Subject: [PATCH 1/2] net: octeontx2-af: Reset the rvu af mxi-x table in case
 of kexec/kdump

The RVU AF MXI-X table region's base is configured by firmware, the HW
interprets it as IOVA, so we will create a IOMMU mapping for this
physical address and write IOVA into the RVU_AF_MSIXTR_BASE register.
But the physical address configured by the firmware may be needed by
the second kernel in case of kexec/kdump, so we add the shutdown hook
and panic hook for this driver to restore the physical address
configured by firmware.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/rvu.c   | 27 +++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index c5541495d75e..72887b7057b6 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -2818,11 +2818,36 @@ static void rvu_remove(struct pci_dev *pdev)
 	devm_kfree(&pdev->dev, rvu);
 }
 
+static void rvu_shutdown(struct pci_dev *pdev)
+{
+	struct rvu *rvu = pci_get_drvdata(pdev);
+
+	rvu_reset_msix(rvu);
+}
+
 static struct pci_driver rvu_driver = {
 	.name = DRV_NAME,
 	.id_table = rvu_id_table,
 	.probe = rvu_probe,
 	.remove = rvu_remove,
+	.shutdown = rvu_shutdown,
+};
+
+static int rvu_reset(struct notifier_block *self, unsigned long v, void *p)
+{
+	struct pci_dev *pdev = NULL;
+	struct rvu *rvu;
+
+	while ((pdev = pci_get_device(PCI_VENDOR_ID_CAVIUM,
+				     PCI_DEVID_OCTEONTX2_RVU_AF, pdev))) {
+		rvu = pci_get_drvdata(pdev);
+		rvu_reset_msix(rvu);
+	}
+	return 0;
+}
+
+static struct notifier_block rvu_reset_notifer = {
+	.notifier_call = rvu_reset
 };
 
 static int __init rvu_init_module(void)
@@ -2843,6 +2868,8 @@ static int __init rvu_init_module(void)
 	if (err < 0)
 		goto rvu_err;
 
+	atomic_notifier_chain_register(&panic_notifier_list,
+				       &rvu_reset_notifer);
 	return 0;
 rvu_err:
 	pci_unregister_driver(&ptp_driver);
-- 
2.17.1

