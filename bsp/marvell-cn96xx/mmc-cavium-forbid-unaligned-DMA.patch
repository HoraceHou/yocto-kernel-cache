From d8eef134ff9c5ed5a9baf4ba278106de8ed1ebdf Mon Sep 17 00:00:00 2001
From: Peter Swain <peter.swain@cavium.com>
Date: Wed, 22 Aug 2018 14:14:56 -0700
Subject: [PATCH 053/138] mmc: cavium: forbid unaligned DMA

commit 4ce9da542b3f63042c43d801dea08bc0a178bfeb from
git@git.assembla.com:cavium/WindRiver.linux.git

The DMA engine used in Cavium SoCs multi-block MMC transfers
requires 64bit alignment. Force failure on unaligned requests.

It should be possible for unaligned requests to fall back to
iterating over the direct-access of single-block access,
but that seems to provoke sg_miter confusion when crossing
block boundaries which are not page boundaries.

Returning -EINVAL for now, consider that optimization later.

This gives a clean UNSUPPORTED_BY_HOST to mmc_test 13/14.

Also moved the error = -EINVAL earlier, so it must be actively
overwritten by successful completion

Change-Id: Ia200f7a2094460111dd0b17e3d6cc3d7b0b76a81
Signed-off-by: Peter Swain <peter.swain@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8529
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Reviewed-by: Peter Swain <pswain@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/mmc/host/cavium.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/host/cavium.c b/drivers/mmc/host/cavium.c
index f7c5137ffe6c..9aeeaa090a18 100644
--- a/drivers/mmc/host/cavium.c
+++ b/drivers/mmc/host/cavium.c
@@ -658,6 +658,7 @@ static void cvm_mmc_dma_request(struct mmc_host *mmc,
 	struct cvm_mmc_host *host = slot->host;
 	struct mmc_data *data;
 	u64 emm_dma, addr;
+	int seg;
 
 	if (!mrq->data || !mrq->data->sg || !mrq->data->sg_len ||
 	    !mrq->stop || mrq->stop->opcode != MMC_STOP_TRANSMISSION) {
@@ -666,6 +667,21 @@ static void cvm_mmc_dma_request(struct mmc_host *mmc,
 		goto error;
 	}
 
+	/* cleared by successful termination */
+	mrq->cmd->error = -EINVAL;
+
+	/* unaligned multi-block DMA has problems, so forbid all unaligned */
+	for (seg = 0; seg < mrq->data->sg_len; seg++) {
+		struct scatterlist *sg = &mrq->data->sg[seg];
+		u64 align = (sg->offset | sg->length | sg->dma_address);
+
+		if (!(align & 7))
+			continue;
+		dev_info(&mmc->card->dev,
+			"Error:64bit alignment required\n");
+		goto error;
+	}
+
 	cvm_mmc_switch_to(slot);
 
 	data = mrq->data;
@@ -704,7 +720,6 @@ static void cvm_mmc_dma_request(struct mmc_host *mmc,
 	return;
 
 error:
-	mrq->cmd->error = -EINVAL;
 	if (mrq->done)
 		mrq->done(mrq);
 	host->release_bus(host);
-- 
2.17.1

