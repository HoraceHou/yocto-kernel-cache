From a9e920ddb8031f644afa9f0b88bc69badacf42a6 Mon Sep 17 00:00:00 2001
From: Linu Cherian <lcherian@marvell.com>
Date: Mon, 4 Feb 2019 15:35:04 +0530
Subject: [PATCH 001/255] iommu/arm-smmu-v3: Force 32 byte command queue memory
 reads on CN96XX SMMU

commit 5047147ad6f1774ef3a399ab6d283ab25e25bd9c from
git@git.assembla.com:cavium/WindRiver.linux.git

SMMU block issues unsupported 64 byte memory reads under certain
conditions for reading commands from the command queue.
Hence force SMMU to issue 32 byte memory reads always.

Change-Id: I473664d3fe66a6f2e6777148b4e9e2adada9b418
Signed-off-by: Linu Cherian <lcherian@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/7377
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/iommu/arm-smmu-v3.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c
index 91a5e324faf9..43fa254a2b1c 100644
--- a/drivers/iommu/arm-smmu-v3.c
+++ b/drivers/iommu/arm-smmu-v3.c
@@ -96,6 +96,9 @@
 #define IDR5_VAX			GENMASK(11, 10)
 #define IDR5_VAX_52_BIT			1
 
+#define ARM_SMMU_IIDR			0x18
+#define IIDR_CN96XX_A0			0x2b20034c
+
 #define ARM_SMMU_CR0			0x20
 #define CR0_CMDQEN			(1 << 3)
 #define CR0_EVTQEN			(1 << 2)
@@ -559,6 +562,7 @@ struct arm_smmu_device {
 
 #define ARM_SMMU_OPT_SKIP_PREFETCH	(1 << 0)
 #define ARM_SMMU_OPT_PAGE0_REGS_ONLY	(1 << 1)
+#define ARM_SMMU_OPT_FORCE_QDRAIN	(1 << 2)
 	u32				options;
 
 	struct arm_smmu_cmdq		cmdq;
@@ -917,6 +921,12 @@ static void arm_smmu_cmdq_insert_cmd(struct arm_smmu_device *smmu, u64 *cmd)
 	struct arm_smmu_queue *q = &smmu->cmdq.q;
 	bool wfe = !!(smmu->features & ARM_SMMU_FEAT_SEV);
 
+	if (smmu->options & ARM_SMMU_OPT_FORCE_QDRAIN) {
+		/* Ensure command queue has atmost two entries */
+		if (!(q->prod & 0x1)  && queue_poll_cons(q, true, false))
+			dev_err(smmu->dev, "command drain timeout\n");
+	}
+
 	while (queue_insert_raw(q, cmd) == -ENOSPC) {
 		if (queue_poll_cons(q, false, wfe))
 			dev_err_ratelimited(smmu->dev, "CMDQ timeout\n");
@@ -2723,6 +2733,22 @@ static int arm_smmu_device_hw_probe(struct arm_smmu_device *smmu)
 
 	dev_info(smmu->dev, "ias %lu-bit, oas %lu-bit (features 0x%08x)\n",
 		 smmu->ias, smmu->oas, smmu->features);
+
+	/* Options based on implementation */
+	reg = readl_relaxed(smmu->base + ARM_SMMU_IIDR);
+
+	switch (reg) {
+	case IIDR_CN96XX_A0:
+		/* Marvell Octeontx2 SMMU wrongly issues unsupported
+		 * 64 byte memory reads under certain conditions for
+		 * reading commands from the command queue.
+		 * Force command queue drain for every two writes,
+		 * so that SMMU issues only 32 byte reads.
+		 */
+		smmu->options |= ARM_SMMU_OPT_FORCE_QDRAIN;
+		break;
+	}
+
 	return 0;
 }
 
-- 
2.17.1

