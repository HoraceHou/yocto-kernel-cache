From 969a735dbe9404da76a1a5a2a65a5c25ac8f6660 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Sat, 2 Feb 2019 15:47:21 +0800
Subject: [PATCH] crypto: testmgr - add missing part of async completion

Based on the previous commit 7f3971368
(crypto: testmgr - move to generic async completion).

Testmgr is starting async. crypto ops and waiting for them to complete.
Move it over to generic code doing the same.

In order to fix error:
crypto/testmgr.c:1048:7: error: 'tcrypt_complete' undeclared (first use in this
		function); did you mean 'crypto_template'?
|        tcrypt_complete, &result);
|        ^~~~~~~~~~~~~~~
|        crypto_template

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 crypto/testmgr.c |   34 ++++++----------------------------
 1 file changed, 6 insertions(+), 28 deletions(-)
 mode change 100644 => 100755 crypto/testmgr.c

diff --git a/crypto/testmgr.c b/crypto/testmgr.c
old mode 100644
new mode 100755
index 55b9780..98e8969
--- a/crypto/testmgr.c
+++ b/crypto/testmgr.c
@@ -998,7 +998,7 @@ static int __test_tls(struct crypto_aead *tfm, int enc,
 	struct scatterlist *sg;
 	struct scatterlist *sgout;
 	const char *e, *d;
-	struct tcrypt_result result;
+	struct crypto_wait wait;
 	void *input;
 	void *output;
 	void *assoc;
@@ -1035,7 +1035,7 @@ static int __test_tls(struct crypto_aead *tfm, int enc,
 	d = diff_dst ? "-ddst" : "";
 	e = enc ? "encryption" : "decryption";
 
-	init_completion(&result.completion);
+	crypto_init_wait(&wait);
 
 	req = aead_request_alloc(tfm, GFP_KERNEL);
 	if (!req) {
@@ -1045,7 +1045,7 @@ static int __test_tls(struct crypto_aead *tfm, int enc,
 	}
 
 	aead_request_set_callback(req, CRYPTO_TFM_REQ_MAY_BACKLOG,
-				  tcrypt_complete, &result);
+				  crypto_req_done, &wait);
 
 	for (i = 0; i < tcount; i++) {
 		input = xbuf[0];
@@ -1111,32 +1111,10 @@ static int __test_tls(struct crypto_aead *tfm, int enc,
 
 		aead_request_set_ad(req, template[i].alen);
 
-		ret = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req);
+		ret = crypto_wait_req(enc ? crypto_aead_encrypt(req) :
+		                      crypto_aead_decrypt(req), &wait);
 
-		switch (ret) {
-		case 0:
-			if (template[i].novrfy) {
-				/* verification was supposed to fail */
-				pr_err("alg: tls%s: %s failed on test %d for %s: ret was 0, expected -EBADMSG\n",
-				       d, e, i, algo);
-				/* so really, we got a bad message */
-				ret = -EBADMSG;
-				goto out;
-			}
-			break;
-		case -EINPROGRESS:
-		case -EBUSY:
-			wait_for_completion(&result.completion);
-			reinit_completion(&result.completion);
-			ret = result.err;
-			if (!ret)
-				break;
-		case -EBADMSG:
-			/* verification failure was expected */
-			if (template[i].novrfy)
-				continue;
-			/* fall through */
-		default:
+		if (ret) {
 			pr_err("alg: tls%s: %s failed on test %d for %s: ret=%d\n",
 			       d, e, i, algo, -ret);
 			goto out;
-- 
1.7.9.5

