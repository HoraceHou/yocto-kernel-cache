From 3b662d72d815542e6743360aa6023b84a63bea4e Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Thu, 7 Sep 2017 14:49:09 +0300
Subject: [PATCH 191/767] sdk_dpaa: update the xmit timestamp to avoid watchdog
 timeouts

Update txq0's trans_start in order to prevent the netdev watchdog from
triggering too quickly. Since we set the LLTX flag, the stack won't update
the jiffies for other tx queues. Prevent the watchdog from checking the
other tx queues by adding the NETIF_HW_ACCEL_MQ flag.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.c    | 3 +++
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 1 +
 include/linux/netdev_features.h                       | 2 ++
 net/sched/sch_generic.c                               | 7 +++++++
 4 files changed, 13 insertions(+)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.c
index e59261b0a807..7026f916741c 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.c
@@ -772,6 +772,9 @@ static int dpa_private_netdev_init(struct net_device *net_dev)
 	/* Advertise GRO support */
 	net_dev->features |= NETIF_F_GRO;
 
+	/* Advertise NETIF_F_HW_ACCEL_MQ to avoid Tx timeout warnings */
+	net_dev->features |= NETIF_F_HW_ACCEL_MQ;
+
 	return dpa_netdev_init(net_dev, mac_addr, tx_timeout);
 }
 
diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 8f1bb87d0c8f..7324e8453774 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -1140,6 +1140,7 @@ int __hot dpa_tx_extended(struct sk_buff *skb, struct net_device *net_dev,
 	if (unlikely(dpa_xmit(priv, percpu_stats, &fd, egress_fq, conf_fq) < 0))
 		goto xmit_failed;
 
+	netif_trans_update(net_dev);
 	return NETDEV_TX_OK;
 
 xmit_failed:
diff --git a/include/linux/netdev_features.h b/include/linux/netdev_features.h
index 623bb8ced060..cbba26e290ea 100644
--- a/include/linux/netdev_features.h
+++ b/include/linux/netdev_features.h
@@ -81,6 +81,7 @@ enum {
 	NETIF_F_HW_TLS_TX_BIT,		/* Hardware TLS TX offload */
 
 	NETIF_F_GRO_HW_BIT,		/* Hardware Generic receive offload */
+	NETIF_F_HW_ACCEL_MQ_BIT,	/* Hardware-accelerated multiqueue */
 	NETIF_F_HW_TLS_RECORD_BIT,	/* Offload TLS record */
 
 	/*
@@ -148,6 +149,7 @@ enum {
 #define NETIF_F_HW_ESP		__NETIF_F(HW_ESP)
 #define NETIF_F_HW_ESP_TX_CSUM	__NETIF_F(HW_ESP_TX_CSUM)
 #define	NETIF_F_RX_UDP_TUNNEL_PORT  __NETIF_F(RX_UDP_TUNNEL_PORT)
+#define NETIF_F_HW_ACCEL_MQ	__NETIF_F(HW_ACCEL_MQ)
 #define NETIF_F_HW_TLS_RECORD	__NETIF_F(HW_TLS_RECORD)
 #define NETIF_F_GSO_UDP_L4	__NETIF_F(GSO_UDP_L4)
 #define NETIF_F_HW_TLS_TX	__NETIF_F(HW_TLS_TX)
diff --git a/net/sched/sch_generic.c b/net/sched/sch_generic.c
index cfa761f2d041..478df682e641 100644
--- a/net/sched/sch_generic.c
+++ b/net/sched/sch_generic.c
@@ -454,6 +454,13 @@ static void dev_watchdog(struct timer_list *t)
 					txq->trans_timeout++;
 					break;
 				}
+
+				/* Devices with HW_ACCEL_MQ have multiple txqs
+				 * but update only the first one's transmission
+				 * timestamp so avoid checking the rest.
+				 */
+				if (dev->features & NETIF_F_HW_ACCEL_MQ)
+					break;
 			}
 
 			if (some_queue_timedout) {
-- 
2.17.0

