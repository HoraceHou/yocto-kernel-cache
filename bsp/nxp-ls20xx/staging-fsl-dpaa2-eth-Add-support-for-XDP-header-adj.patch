From 06bbe8fc4f5a39a735b632f1caabc6062ff10c61 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Thu, 9 Nov 2017 17:59:49 +0200
Subject: [PATCH 142/767] staging: fsl-dpaa2/eth: Add support for XDP header
 adjustment

Allow XDP programs to modify the frame header length. We reserve
XDP_PACKET_HEADROOM bytes for header expansion and reconfigure
the buffer layout to account for the new Rx headroom value.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 .../staging/fsl-dpaa2/ethernet/dpaa2-eth.c    | 24 +++++++++++++++----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index e8842fe636c7..1fa27b7f082d 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -315,12 +315,14 @@ static u32 dpaa2_eth_run_xdp(struct dpaa2_eth_priv *priv,
 
 	xdp.data = vaddr + dpaa2_fd_get_offset(fd);
 	xdp.data_end = xdp.data + dpaa2_fd_get_len(fd);
-	/* for now, we don't support changes in header size */
-	xdp.data_hard_start = xdp.data;
+	/* Allow the XDP program to use the specially reserved headroom */
+	xdp.data_hard_start = xdp.data - XDP_PACKET_HEADROOM;
 
 	xdp_act = bpf_prog_run_xdp(xdp_prog, &xdp);
-	if (xdp.data != xdp.data_hard_start)
-		dev_warn_once(dev, "XDP header adjustment is not supported");
+
+	/* xdp.data pointer may have changed */
+	dpaa2_fd_set_offset(fd, xdp.data - vaddr);
+	dpaa2_fd_set_len(fd, xdp.data_end - xdp.data);
 
 	switch (xdp_act) {
 	case XDP_PASS:
@@ -1745,6 +1747,11 @@ static int set_buffer_layout(struct dpaa2_eth_priv *priv)
 	buf_layout.pass_parser_result = true;
 	buf_layout.data_align = priv->rx_buf_align;
 	buf_layout.data_head_room = dpaa2_eth_rx_headroom(priv);
+	/* If XDP program is attached, reserve extra space for
+	 * potential header expansions
+	 */
+	if (priv->has_xdp_prog)
+		buf_layout.data_head_room += XDP_PACKET_HEADROOM;
 	buf_layout.options = DPNI_BUF_LAYOUT_OPT_PARSER_RESULT |
 			     DPNI_BUF_LAYOUT_OPT_FRAME_STATUS |
 			     DPNI_BUF_LAYOUT_OPT_PRIVATE_DATA_SIZE |
@@ -1765,7 +1772,7 @@ static int dpaa2_eth_set_xdp(struct net_device *net_dev, struct bpf_prog *prog)
 {
 	struct dpaa2_eth_priv *priv = netdev_priv(net_dev);
 	struct dpaa2_eth_channel *ch;
-	struct bpf_prog *old_prog;
+	struct bpf_prog *old_prog = NULL;
 	int i;
 
 	/* No support for SG frames */
@@ -1790,6 +1797,13 @@ static int dpaa2_eth_set_xdp(struct net_device *net_dev, struct bpf_prog *prog)
 			bpf_prog_put(old_prog);
 	}
 
+	/* When turning XDP on/off we need to do some reconfiguring
+	 * of the Rx buffer layout. Buffer pool was drained on dpaa2_eth_stop,
+	 * so we are sure no old format buffers will be used from now on
+	 */
+	if (priv->has_xdp_prog != !!old_prog)
+		set_buffer_layout(priv);
+
 	if (netif_running(net_dev))
 		dpaa2_eth_open(net_dev);
 
-- 
2.17.0

