From f9ff59fa21b7d8f1eec5b9c7ef9f9145c202fd35 Mon Sep 17 00:00:00 2001
From: Bao Xiaowei <xiaowei.bao@nxp.com>
Date: Mon, 5 Feb 2018 16:35:21 +0800
Subject: [PATCH 407/767] PCI: endpoint: fix the request dma buffer failed bug

It is a temporary workaround for fix the request dma buffer failed issue,
when the patch of the pcie endpoint framework on upstream is complete,
this patch will invalid.

[recomposed the title]

Signed-off-by: Bao Xiaowei <xiaowei.bao@nxp.com>
Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/pci/endpoint/pci-epf-core.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/pci/endpoint/pci-epf-core.c b/drivers/pci/endpoint/pci-epf-core.c
index 825fa24427a3..c7eac57dc2d3 100644
--- a/drivers/pci/endpoint/pci-epf-core.c
+++ b/drivers/pci/endpoint/pci-epf-core.c
@@ -95,8 +95,8 @@ void pci_epf_free_space(struct pci_epf *epf, void *addr, enum pci_barno bar)
 	if (!addr)
 		return;
 
-	dma_free_coherent(dev, epf->bar[bar].size, addr,
-			  epf->bar[bar].phys_addr);
+	free_pages((unsigned long)addr,
+		get_order(epf->bar[bar].size));
 
 	epf->bar[bar].phys_addr = 0;
 	epf->bar[bar].size = 0;
@@ -122,7 +122,9 @@ void *pci_epf_alloc_space(struct pci_epf *epf, size_t size, enum pci_barno bar)
 		size = 128;
 	size = roundup_pow_of_two(size);
 
-	space = dma_alloc_coherent(dev, size, &phys_addr, GFP_KERNEL);
+	space = (void *)__get_free_pages(GFP_KERNEL | __GFP_ZERO,
+						get_order(size));
+	phys_addr = virt_to_phys(space);
 	if (!space) {
 		dev_err(dev, "failed to allocate mem space\n");
 		return NULL;
-- 
2.17.0

