From 866e48b99e194f78446d7981a9cd9b76f2eb9411 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Thu, 10 May 2018 18:33:12 +0300
Subject: [PATCH 509/767] staging: fsl-dpaa2/ethernet: Reverse priority mapping
 for mqprio

MC exposes traffic class priorities with 0 being the highest, while
the network stack assumes prio 0 is lowest.

Reverse the mapping between tc ids in the network stack and on our
hardware in order to offer a behaviour consistent with other drivers.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 38a3efd66f22..f3eee4c58fa8 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -850,10 +850,13 @@ static netdev_tx_t dpaa2_eth_tx(struct sk_buff *skb, struct net_device *net_dev)
 	queue_mapping = skb_get_queue_mapping(skb);
 	prio = netdev_txq_to_tc(net_dev, queue_mapping);
 
-	/* need to update based on traffic class offset */
-	if (prio)
-		queue_mapping -= prio * dpaa2_eth_queue_count(priv);
-
+	/* Hardware interprets priority level 0 as being the highest,
+	 * so we need to do a reverse mapping to the netdev tc index
+	 */
+	if (net_dev->num_tc)
+		prio = net_dev->num_tc - prio - 1;
+ 
+	queue_mapping %= dpaa2_eth_queue_count(priv);
 	fq = &priv->fq[queue_mapping];
 
 	/* If we're congested, stop this tx queue; transmission of
-- 
2.17.0

