From ea5d98d15657142d40336eb917513cb0acb1ac6c Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Mon, 15 Jan 2018 17:41:01 +0200
Subject: [PATCH 347/767] sdk_dpaa: update buffer recycling conditions

Guarantee there is enough space inside the skb's headroom to store the
skb back-pointer before recycling the buffer. The back-pointer is stored
right before the buffer's start.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 32e62e6d91da..f73743986183 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -350,7 +350,13 @@ bool dpa_buf_is_recyclable(struct sk_buff *skb,
 	/* left align to the nearest cacheline */
 	new = (unsigned char *)((unsigned long)new & ~(SMP_CACHE_BYTES - 1));
 
-	if (likely(new >= skb->head &&
+	/* Make sure there is enough space to store the skb back-pointer in
+	 * the headroom, right before the start of the buffer.
+	 *
+	 * Guarantee that both maximum size and maximum data offsets aren't
+	 * crossed.
+	 */
+	if (likely(new >= (skb->head + sizeof(void *)) &&
 		   new >= (skb->data - DPA_MAX_FD_OFFSET) &&
 		   skb_end_pointer(skb) - new <= DPA_RECYCLE_MAX_SIZE)) {
 		*new_buf_start = new;
-- 
2.17.0

