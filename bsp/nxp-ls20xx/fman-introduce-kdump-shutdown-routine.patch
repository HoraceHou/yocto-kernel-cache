From bd14f5c324199c4ce9aa425e1143238066b1c266 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Sat, 24 Nov 2018 19:03:00 +0800
Subject: [PATCH 6/8] fman: introduce kdump shutdown routine

We can't reset B/QMAN in dump kernel. So we just free all
the B/Qman resources before booting the dump kernel. We
need to shutdown FMAN before we free these resources.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 .../freescale/sdk_fman/src/wrapper/lnxwrp_fm.c     |   36 ++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c
index a8e576e..664df17 100755
--- a/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/src/wrapper/lnxwrp_fm.c
@@ -2884,6 +2884,42 @@ int fm_macsec_secy_get_txsc_phys_id(struct fm_macsec_secy_dev *fm_macsec_secy_de
 
 static t_Handle h_FmLnxWrp;
 
+#ifdef CONFIG_KEXEC
+static int fm_crash_shutdown(struct device *dev, void *data)
+{
+
+	t_LnxWrpFmDev   *p;
+
+        struct platform_driver *drv = data;
+
+        if (dev->driver != &drv->driver)
+                return 0;
+
+        p = dev_get_drvdata(dev);
+
+        if (p->h_Dev)
+                FM_Free(p->h_Dev);
+
+        return 0;
+}
+
+void fm_crash_shutdown_all(void)
+{
+        bus_for_each_dev(&platform_bus_type, NULL,
+                        &fm_driver, fm_crash_shutdown);
+}
+
+#ifdef CONFIG_PPC
+__init int fman_init_early(void)
+{
+        crash_shutdown_register(&fm_crash_shutdown_all);
+
+        return 0;
+}
+postcore_initcall_sync(fman_init_early);
+#endif
+#endif
+
 static int __init __cold fm_load (void)
 {
     if ((h_FmLnxWrp = LNXWRP_FM_Init()) == NULL)
-- 
1.7.9.5

