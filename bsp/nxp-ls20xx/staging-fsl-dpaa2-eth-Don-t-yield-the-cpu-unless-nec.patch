From ab91992cfa0d6443682d754a7e88e89e3f75c694 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Thu, 12 Oct 2017 20:52:50 +0300
Subject: [PATCH 129/767] staging: fsl-dpaa2/eth: Don't yield the cpu unless
 necessary

When releasing buffers to the hardware pool, don't call
cpu_relax() unless we are actually waiting for the QBMan
portal to finish the previous command.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 1ba47128e142..6af8e7e4f66e 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -287,12 +287,10 @@ static void release_fd_buf(struct dpaa2_eth_priv *priv,
 	if (likely(ch->rel_buf_cnt < DPAA2_ETH_BUFS_PER_CMD))
 		return;
 
- 	do {
-		err = dpaa2_io_service_release(NULL, priv->bpid,
+	while ((err = dpaa2_io_service_release(NULL, priv->bpid,
 					       ch->rel_buf_array,
-					       ch->rel_buf_cnt);
+					       ch->rel_buf_cnt)) == -EBUSY)
  		cpu_relax();
- 	} while (err == -EBUSY);
  
  	if (unlikely(err))
 		free_bufs(priv, ch->rel_buf_array, ch->rel_buf_cnt);
@@ -1007,7 +1005,7 @@ static int add_bufs(struct dpaa2_eth_priv *priv,
 
 release_bufs:
 	/* In case the portal is busy, retry until successful */
-	while ((err = dpaa2_io_service_release(ch->dpio, bpid,
+	while ((err = dpaa2_io_service_release(NULL, bpid,
 					       buf_array, i)) == -EBUSY)
 		cpu_relax();
 
-- 
2.17.0

