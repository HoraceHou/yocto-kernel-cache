From 06d511176e440d707f52133fafd8a3a9d512a87c Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Wed, 18 Jul 2018 13:27:37 +0300
Subject: [PATCH 604/767] staging: fsl-mc/dpio: Change bpid type to u16

In all QBMan registers, the buffer pool id field is two bytes
long. Modify both the high level DPIO APIs and the low level
qbman ones to reflect this, in order to avoid (potentially buggy)
implicit downcasts.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl-mc/bus/dpio/dpio-service.c | 6 +++---
 drivers/staging/fsl-mc/bus/dpio/qbman-portal.c | 2 +-
 drivers/staging/fsl-mc/bus/dpio/qbman-portal.h | 2 +-
 drivers/staging/fsl-mc/include/dpaa2-io.h      | 6 +++---
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/staging/fsl-mc/bus/dpio/dpio-service.c b/drivers/staging/fsl-mc/bus/dpio/dpio-service.c
index dfd9db993c58..273dcdb051cb 100644
--- a/drivers/staging/fsl-mc/bus/dpio/dpio-service.c
+++ b/drivers/staging/fsl-mc/bus/dpio/dpio-service.c
@@ -442,7 +442,7 @@ EXPORT_SYMBOL_GPL(dpaa2_io_service_enqueue_qd);
  * Return 0 for success, and negative error code for failure.
  */
 int dpaa2_io_service_release(struct dpaa2_io *d,
-			     u32 bpid,
+			     u16 bpid,
 			     const u64 *buffers,
 			     unsigned int num_buffers)
 {
@@ -471,7 +471,7 @@ EXPORT_SYMBOL_GPL(dpaa2_io_service_release);
  * Eg. if the buffer pool is empty, this will return zero.
  */
 int dpaa2_io_service_acquire(struct dpaa2_io *d,
-			     u32 bpid,
+			     u16 bpid,
 			     u64 *buffers,
 			     unsigned int num_buffers)
 {
@@ -652,7 +652,7 @@ EXPORT_SYMBOL(dpaa2_io_query_fq_count);
  *
  * Return 0 for a successful query, and negative error code if query fails.
  */
-int dpaa2_io_query_bp_count(struct dpaa2_io *d, u32 bpid, u32 *num)
+int dpaa2_io_query_bp_count(struct dpaa2_io *d, u16 bpid, u32 *num)
 {
 	struct qbman_bp_query_rslt state;
 	struct qbman_swp *swp;
diff --git a/drivers/staging/fsl-mc/bus/dpio/qbman-portal.c b/drivers/staging/fsl-mc/bus/dpio/qbman-portal.c
index 7569b6890f34..2b7d7193e4d5 100644
--- a/drivers/staging/fsl-mc/bus/dpio/qbman-portal.c
+++ b/drivers/staging/fsl-mc/bus/dpio/qbman-portal.c
@@ -1122,7 +1122,7 @@ struct qbman_bp_query_desc {
 	u8 reserved2[60];
 };
 
-int qbman_bp_query(struct qbman_swp *s, u32 bpid,
+int qbman_bp_query(struct qbman_swp *s, u16 bpid,
 		   struct qbman_bp_query_rslt *r)
 {
 	struct qbman_bp_query_desc *p;
diff --git a/drivers/staging/fsl-mc/bus/dpio/qbman-portal.h b/drivers/staging/fsl-mc/bus/dpio/qbman-portal.h
index b55401f194b1..55a23cc89fe6 100644
--- a/drivers/staging/fsl-mc/bus/dpio/qbman-portal.h
+++ b/drivers/staging/fsl-mc/bus/dpio/qbman-portal.h
@@ -497,7 +497,7 @@ struct qbman_bp_query_rslt {
 	u8 reserved3[9];
 };
 
-int qbman_bp_query(struct qbman_swp *s, u32 bpid,
+int qbman_bp_query(struct qbman_swp *s, u16 bpid,
 		   struct qbman_bp_query_rslt *r);
 
 u32 qbman_bp_info_num_free_bufs(struct qbman_bp_query_rslt *a);
diff --git a/drivers/staging/fsl-mc/include/dpaa2-io.h b/drivers/staging/fsl-mc/include/dpaa2-io.h
index 698f54742a20..971bc4735f20 100644
--- a/drivers/staging/fsl-mc/include/dpaa2-io.h
+++ b/drivers/staging/fsl-mc/include/dpaa2-io.h
@@ -108,9 +108,9 @@ int dpaa2_io_service_enqueue_fq(struct dpaa2_io *d, u32 fqid,
 
 int dpaa2_io_service_enqueue_qd(struct dpaa2_io *d, u32 qdid, u8 prio,
 				u16 qdbin, const struct dpaa2_fd *fd);
-int dpaa2_io_service_release(struct dpaa2_io *d, u32 bpid,
+int dpaa2_io_service_release(struct dpaa2_io *d, u16 bpid,
 			     const u64 *buffers, unsigned int num_buffers);
-int dpaa2_io_service_acquire(struct dpaa2_io *d, u32 bpid,
+int dpaa2_io_service_acquire(struct dpaa2_io *d, u16 bpid,
 			     u64 *buffers, unsigned int num_buffers);
 
 struct dpaa2_io_store *dpaa2_io_store_create(unsigned int max_frames,
@@ -175,7 +175,7 @@ static inline bool dpaa2_cscn_state_congested(struct dpaa2_cscn *cscn)
 
 int dpaa2_io_query_fq_count(struct dpaa2_io *d, u32 fqid,
 			    u32 *fcnt, u32 *bcnt);
-int dpaa2_io_query_bp_count(struct dpaa2_io *d, u32 bpid,
+int dpaa2_io_query_bp_count(struct dpaa2_io *d, u16 bpid,
 			    u32 *num);
 
 #endif /* __FSL_DPAA2_IO_H */
-- 
2.17.0

