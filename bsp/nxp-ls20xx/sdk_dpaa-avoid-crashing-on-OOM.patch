From 5a7d8559144379adc0a09d3117a9355cc8f7b501 Mon Sep 17 00:00:00 2001
From: Madalin Bucur <madalin.bucur@nxp.com>
Date: Thu, 31 Aug 2017 17:42:07 +0300
Subject: [PATCH 190/767] sdk_dpaa: avoid crashing on OOM

Signed-off-by: Madalin Bucur <madalin.bucur@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.09.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index f89a60bcc204..8f1bb87d0c8f 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -100,8 +100,12 @@ static int _dpa_bp_add_8_bufs(const struct dpa_bp *dpa_bp)
 		 * an entire cacheline for performance reasons.
 		 */
 #ifndef CONFIG_PPC
-		if (unlikely(dpaa_errata_a010022))
-			new_buf = page_address(alloc_page(GFP_ATOMIC));
+		if (unlikely(dpaa_errata_a010022)) {
+			struct page *new_page = alloc_page(GFP_ATOMIC);
+			if (unlikely(!new_page))
+				goto netdev_alloc_failed;
+			new_buf = page_address(new_page);
+		}
 		else
 #endif
 		new_buf = netdev_alloc_frag(SMP_CACHE_BYTES + DPA_BP_RAW_SIZE);
-- 
2.17.0

