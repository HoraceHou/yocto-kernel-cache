From 2c120fdae14771d334ee9fb48e974f63cc28f712 Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Tue, 30 Oct 2018 17:34:31 +0200
Subject: [PATCH 622/767] sdk_dpaa: ceetm: guard against an out of bounds queue
 index

Make sure the queue mapping recorded in the skb is not larger than our
egress queue count.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
[Xulin: Original patch taken from NXP LSDK-18.12.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c
index 3356d1c6dbf9..f98fcc7ca178 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c
@@ -1976,7 +1976,7 @@ static struct ceetm_class *ceetm_classify(struct sk_buff *skb,
 
 int __hot ceetm_tx(struct sk_buff *skb, struct net_device *net_dev)
 {
-	const int queue_mapping = dpa_get_queue_mapping(skb);
+	int queue_mapping = dpa_get_queue_mapping(skb);
 	struct Qdisc *sch = net_dev->qdisc;
 	struct ceetm_class_stats *cstats;
 	struct ceetm_qdisc_stats *qstats;
@@ -2010,6 +2010,9 @@ int __hot ceetm_tx(struct sk_buff *skb, struct net_device *net_dev)
 		goto drop;
 	}
 
+	if (unlikely(queue_mapping >= DPAA_ETH_TX_QUEUES))
+		queue_mapping = queue_mapping % DPAA_ETH_TX_QUEUES;
+
 	priv_dpa = netdev_priv(net_dev);
 	conf_fq = priv_dpa->conf_fqs[queue_mapping];
 
-- 
2.17.0

