From 5c903c6938dcd77db38b7f273b8f6fe42e4f2c80 Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Tue, 29 Oct 2019 16:12:18 +0200
Subject: [PATCH 17/30] sdk_dpaa: ls1043a errata: check if the page allocation
 is successful

commit cef817cc060afad114fc851d1f81725efcdfdf22 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Avoid a crash by verifying the allocation return status.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 393d7c51f011..77bb62d5446c 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -922,8 +922,13 @@ int __hot skb_to_sg_fd(struct dpa_priv_s *priv,
 	 * is in place and we need to avoid crossing a 4k boundary.
 	 */
 #ifndef CONFIG_PPC
-	if (unlikely(dpaa_errata_a010022))
-		sgt_buf = page_address(alloc_page(GFP_ATOMIC));
+	if (unlikely(dpaa_errata_a010022)) {
+		struct page *new_page = alloc_page(GFP_ATOMIC);
+
+		if (unlikely(!new_page))
+			return -ENOMEM;
+		sgt_buf = page_address(new_page);
+	}
 	else
 #endif
 		sgt_buf = netdev_alloc_frag(priv->tx_headroom + sgt_size);
-- 
2.17.1

