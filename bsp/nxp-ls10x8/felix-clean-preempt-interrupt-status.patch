From 271097aecface38e71d7926b60104328f6a73a7c Mon Sep 17 00:00:00 2001
From: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Date: Sun, 4 Aug 2019 12:18:20 +0800
Subject: [PATCH 185/245] felix: clean preempt interrupt status

commit 380df150f564d3bf0d288a9a64303d6481c131f3 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux.git

The INTB interrupt is used both for 1588 interrupt and preemption status
change interrupt on each port. so clean preempt status interrupt in
handle function.

Signed-off-by: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c | 23 +++++++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index d21a1ffb7bf8..2e743ef73447 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -512,19 +512,34 @@ static void felix_tx_clean(struct ocelot *ocelot)
 		 SYS_PTP_STATUS_PTP_MESS_VLD);
 }
 
+static void felix_preempt_irq_clean(struct ocelot *ocelot)
+{
+	struct ocelot_port *ocelot_port;
+	int port;
+	u32 val;
+
+	val = DEV_GMII_MM_STATISTICS_MM_STATUS_PRMPT_ACTIVE_STICKY;
+	for (port = 0; port < FELIX_MAX_NUM_PHY_PORTS; port++) {
+		ocelot_port = ocelot->ports[port];
+		ocelot_port_rmwl(ocelot_port, val, val,
+				 DEV_GMII_MM_STATISTICS_MM_STATUS);
+	}
+}
+
 static void felix_irq_handle_work(struct work_struct *work)
 {
 	struct ocelot *ocelot = container_of(work, struct ocelot,
 					     irq_handle_work);
 	struct pci_dev *pdev = container_of(ocelot->dev, struct pci_dev, dev);
 
-	/* TODO: TSN preemption handling
-	 * The INTB interrupt is also for preemption event. So there will be
-	 * interrupt storm if preemption is triggered without cleaning
-	 * interrupt status in ISR.
+	/* The INTB interrupt is used both for 1588 interrupt and
+	 * preemption status change interrupt on each port. So check
+	 * which interrupt it is, and clean it.
 	 */
 	if (felix_tx_tstamp_avail(ocelot))
 		felix_tx_clean(ocelot);
+	else
+		felix_preempt_irq_clean(ocelot);
 
 	enable_irq(pdev->irq);
 }
-- 
2.17.1

