From 3f29c618577ea40ae356e50ad39fb84f8509fb61 Mon Sep 17 00:00:00 2001
From: Guanhua Gao <guanhua.gao@nxp.com>
Date: Sat, 31 Aug 2019 01:00:36 +0800
Subject: [PATCH 094/245] soc: fsl: dpio: Remove duplicated definitions

commit f97c48913ef54251aea4de8e580acacb6f579352 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux.git

Remove duplicated definitions.

Signed-off-by: Guanhua Gao <guanhua.gao@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/staging/fsl-mc/include/dpaa2-global.h | 76 +------------------
 drivers/staging/fsl-mc/include/dpaa2-io.h     | 43 -----------
 2 files changed, 1 insertion(+), 118 deletions(-)

diff --git a/drivers/staging/fsl-mc/include/dpaa2-global.h b/drivers/staging/fsl-mc/include/dpaa2-global.h
index 632b73bd59b6..9d5cc676df76 100644
--- a/drivers/staging/fsl-mc/include/dpaa2-global.h
+++ b/drivers/staging/fsl-mc/include/dpaa2-global.h
@@ -182,85 +182,11 @@ static inline const struct dpaa2_fd *dpaa2_dq_fd(const struct dpaa2_dq *dq)
  * dpaa2_cscn_state_congested() - Check congestion state
  * @cscn: congestion SCN (delivered to WQ or memory)
  *
-i * Return true is congested.
+ * Return true is congested.
  */
 static inline bool dpaa2_cscn_state_congested(struct dpaa2_dq *cscn)
 {
 	return !!(cscn->scn.state & DPAA2_CSCN_STATE_CG);
 }
 
-/* Data Path Order Restoration API
- * Contains initialization APIs and runtime APIs for the Order Restoration
- */
-
-/** Order Restoration properties */
-
-/**
- * Create a new Order Point Record option
- */
-#define OPR_OPT_CREATE 0x1
-/**
- * Retire an existing Order Point Record option
- */
-#define OPR_OPT_RETIRE 0x2
-
-/**
- * struct opr_cfg - Structure representing OPR configuration
- * @oprrws: Order point record (OPR) restoration window size (0 to 5)
- *			0 - Window size is 32 frames.
- *			1 - Window size is 64 frames.
- *			2 - Window size is 128 frames.
- *			3 - Window size is 256 frames.
- *			4 - Window size is 512 frames.
- *			5 - Window size is 1024 frames.
- * @oa: OPR auto advance NESN window size (0 disabled, 1 enabled)
- * @olws: OPR acceptable late arrival window size (0 to 3)
- *			0 - Disabled. Late arrivals are always rejected.
- *			1 - Window size is 32 frames.
- *			2 - Window size is the same as the OPR restoration
- *				window size configured in the OPRRWS field.
- *			3 - Window size is 8192 frames. Late arrivals are
- *				always accepted.
- * @oeane: Order restoration list (ORL) resource exhaustion
- *			advance NESN enable (0 disabled, 1 enabled)
- * @oloe: OPR loose ordering enable (0 disabled, 1 enabled)
- */
-struct opr_cfg {
-	u8 oprrws;
-	u8 oa;
-	u8 olws;
-	u8 oeane;
-	u8 oloe;
-};
-
-/**
- * struct opr_qry - Structure representing OPR configuration
- * @enable: Enabled state
- * @rip: Retirement In Progress
- * @ndsn: Next dispensed sequence number
- * @nesn: Next expected sequence number
- * @ea_hseq: Early arrival head sequence number
- * @hseq_nlis: HSEQ not last in sequence
- * @ea_tseq: Early arrival tail sequence number
- * @tseq_nlis: TSEQ not last in sequence
- * @ea_tptr: Early arrival tail pointer
- * @ea_hptr: Early arrival head pointer
- * @opr_id: Order Point Record ID
- * @opr_vid: Order Point Record Virtual ID
- */
-struct opr_qry {
-	char enable;
-	char rip;
-	u16 ndsn;
-	u16 nesn;
-	u16 ea_hseq;
-	char hseq_nlis;
-	u16 ea_tseq;
-	char tseq_nlis;
-	u16 ea_tptr;
-	u16 ea_hptr;
-	u16 opr_id;
-	u16 opr_vid;
-};
-
 #endif /* __FSL_DPAA2_GLOBAL_H */
diff --git a/drivers/staging/fsl-mc/include/dpaa2-io.h b/drivers/staging/fsl-mc/include/dpaa2-io.h
index d0027794094e..7f520faee4fa 100644
--- a/drivers/staging/fsl-mc/include/dpaa2-io.h
+++ b/drivers/staging/fsl-mc/include/dpaa2-io.h
@@ -140,49 +140,6 @@ int dpaa2_io_service_enqueue_orp_qd(struct dpaa2_io *d, u32 qdid, u8 prio,
 int dpaa2_io_service_orp_seqnum_drop(struct dpaa2_io *d, u16 orpid,
 				     u16 seqnum);
 
-/***************/
-/* CSCN        */
-/***************/
-
-/**
- * struct dpaa2_cscn - The CSCN message format
- * @verb: identifies the type of message (should be 0x27).
- * @stat: status bits related to dequeuing response (not used)
- * @state: bit 0 = 0/1 if CG is no/is congested
- * @reserved: reserved byte
- * @cgid: congest grp ID - the first 16 bits
- * @ctx: context data
- *
- * Congestion management can be implemented in software through
- * the use of Congestion State Change Notifications (CSCN). These
- * are messages written by DPAA2 hardware to memory whenever the
- * instantaneous count (I_CNT field in the CG) exceeds the
- * Congestion State (CS) entrance threshold, signifying congestion
- * entrance, or when the instantaneous count returns below exit
- * threshold, signifying congestion exit. The format of the message
- * is given by the dpaa2_cscn structure. Bit 0 of the state field
- * represents congestion state written by the hardware.
- */
-struct dpaa2_cscn {
-	u8 verb;
-	u8 stat;
-	u8 state;
-	u8 reserved;
-	__le32 cgid;
-	__le64 ctx;
-};
-
-#define DPAA2_CSCN_SIZE                        64
-#define DPAA2_CSCN_ALIGN               16
-
-#define DPAA2_CSCN_STATE_MASK          0x1
-#define DPAA2_CSCN_CONGESTED           1
-
-static inline bool dpaa2_cscn_state_congested(struct dpaa2_cscn *cscn)
-{
-	return ((cscn->state & DPAA2_CSCN_STATE_MASK) == DPAA2_CSCN_CONGESTED);
-}
-
 int dpaa2_io_query_fq_count(struct dpaa2_io *d, u32 fqid,
 			    u32 *fcnt, u32 *bcnt);
 int dpaa2_io_query_bp_count(struct dpaa2_io *d, u16 bpid,
-- 
2.17.1

