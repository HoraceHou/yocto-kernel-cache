From 51d92b105b1ae2aa1d786886960a3b3491262a84 Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Thu, 12 Dec 2019 16:55:02 +0200
Subject: [PATCH 23/30] sdk_dpaa: ls1043a errata: fix potential skb memory leak

commit 9820a3ebd83502dc96d60485dc35d4b789899744 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Explicitly remove the old skb outside the w/a, for both successful and
unsuccessful realignments. Make sure the old skb's memory isn't leaked.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 017ce73b65ca..47c15760fc3f 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -917,7 +917,6 @@ static struct sk_buff *a010022_realign_skb(struct sk_buff *skb,
 	skb_set_network_header(nskb, net_offset);
 	skb_set_transport_header(nskb, trans_offset);
 
-	dev_kfree_skb(skb);
 	return nskb;
 
 err:
@@ -1110,6 +1109,7 @@ int __hot dpa_tx_extended(struct sk_buff *skb, struct net_device *net_dev,
 	int err = 0;
 	bool nonlinear, skb_changed, skb_need_wa;
 	int *countptr, offset = 0;
+	struct sk_buff *nskb;
 
 	/* Flags to help optimize the A010022 errata restriction checks.
 	 *
@@ -1195,7 +1195,7 @@ int __hot dpa_tx_extended(struct sk_buff *skb, struct net_device *net_dev,
 
 		/* Code borrowed from skb_unshare(). */
 		if (skb_cloned(skb) && !skb_need_wa) {
-			struct sk_buff *nskb = skb_copy(skb, GFP_ATOMIC);
+			nskb = skb_copy(skb, GFP_ATOMIC);
 			kfree_skb(skb);
 			skb = nskb;
 			skb_changed = true;
@@ -1230,9 +1230,11 @@ int __hot dpa_tx_extended(struct sk_buff *skb, struct net_device *net_dev,
 			skb_need_wa = true;
 
 		if (unlikely(fm_has_errata_a010022()) && skb_need_wa) {
-			skb = a010022_realign_skb(skb, priv);
-			if (!skb)
+			nskb = a010022_realign_skb(skb, priv);
+			if (!nskb)
 				goto skb_to_fd_failed;
+			dev_kfree_skb(skb);
+			skb = nskb;
 		}
 #endif
 
-- 
2.17.1

