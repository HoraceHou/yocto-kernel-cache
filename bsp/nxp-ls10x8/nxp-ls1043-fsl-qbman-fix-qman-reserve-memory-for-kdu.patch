From aa0934d4fcf8477ad5a40635c023092b39bc44d2 Mon Sep 17 00:00:00 2001
From: Zhantao Tang <zhantao.tang@windriver.com>
Date: Thu, 5 Dec 2019 11:15:22 +0800
Subject: [PATCH 238/245] nxp-ls1043: fsl: qbman: fix qman reserve memory for
 kdump

In qman config, when qm memory initialized, qm_reserve_memory will be called.
And in qm_reserve_memory, flush dcache only needed when memset is called, or
there will be a panic when run kdump crashkernel. This patch is to fix the case.

Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index dad117cb5e1a..b831c32642ba 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -417,9 +417,10 @@ static void qm_reserve_memory(struct qman *qm, enum qm_memory memory, int zero)
 	end = min(addr + size, memblock_end_of_DRAM());
 	ret = memblock_reserve(addr, end - addr);
 	vaddr = (unsigned long)phys_to_virt(addr);
-	if (zero)
+	if (zero) {
 		memset((void *)vaddr, 0, end - addr);
-	flush_dcache_range(vaddr, vaddr + (end - addr));
+		flush_dcache_range(vaddr, vaddr + (end - addr));
+	}
 	WARN_ON(ret);
 }
 #else
-- 
2.17.1

