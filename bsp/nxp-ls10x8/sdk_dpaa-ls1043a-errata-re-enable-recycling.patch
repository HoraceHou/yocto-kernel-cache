From eb6c604209d6845feba506d62f8fedfe2c411457 Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Tue, 29 Oct 2019 16:52:40 +0200
Subject: [PATCH 20/30] sdk_dpaa: ls1043a errata: re-enable recycling

commit b840a8adf04707b3de87d3c2dc9d1713b474f860 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Buffers can be recycled, even after realigning the data.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h    | 1 -
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 9 ---------
 2 files changed, 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h
index cf209fa1c915..5c1630e2e3b0 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h
@@ -661,7 +661,6 @@ static inline void _dpa_bp_free_pf(void *addr)
 
 #ifndef CONFIG_PPC
 extern bool dpaa_errata_a010022; /* SoC affected by A010022 errata */
-#define NONREC_MARK	0x01
 #define CROSS_4K(start, size) \
 	(((uintptr_t)(start) + (size)) > \
 	 (((uintptr_t)(start) + 0x1000) & ~0xFFF))
diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index fe6f043ce33e..128300fb257b 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -331,12 +331,6 @@ EXPORT_SYMBOL(_dpa_cleanup_tx_fd);
 #ifndef CONFIG_FSL_DPAA_TS
 bool dpa_skb_is_recyclable(struct sk_buff *skb)
 {
-#ifndef CONFIG_PPC
-	/* Do no recycle skbs realigned by the errata workaround */
-	if (unlikely(dpaa_errata_a010022) && skb->mark == NONREC_MARK)
-		return false;
-#endif
-
 	/* No recycling possible if skb buffer is kmalloc'ed  */
 	if (skb->head_frag == 0)
 		return false;
@@ -922,9 +916,6 @@ static struct sk_buff *a010022_realign_skb(struct sk_buff *skb,
 	skb_set_network_header(nskb, net_offset);
 	skb_set_transport_header(nskb, trans_offset);
 
-	/* We don't want the buffer to be recycled so we mark it accordingly */
-	nskb->mark = NONREC_MARK;
-
 	dev_kfree_skb(skb);
 	return nskb;
 
-- 
2.17.1

