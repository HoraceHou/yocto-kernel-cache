From 1f6c694e280131b72704eedae56bf31aca42e77c Mon Sep 17 00:00:00 2001
From: John Jacques <john.jacques@intel.com>
Date: Wed, 1 Jun 2016 18:12:30 +0300
Subject: [PATCH 130/278] drivers/i2c: Add a Lock to the Axxia Driver

Signed-off-by: John Jacques <john.jacques@intel.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 drivers/i2c/busses/i2c-axxia.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/i2c/busses/i2c-axxia.c b/drivers/i2c/busses/i2c-axxia.c
index 1a73e78..f738270 100644
--- a/drivers/i2c/busses/i2c-axxia.c
+++ b/drivers/i2c/busses/i2c-axxia.c
@@ -128,6 +128,8 @@ struct axxia_i2c_dev {
 	int irq;
 	/* current i2c bus clock rate */
 	u32 bus_clk_rate;
+	/* transaction lock */
+	struct mutex i2c_lock;
 };
 
 static void
@@ -407,6 +409,8 @@ struct axxia_i2c_dev {
 	if (msg->len == 0 || msg->len > 255)
 		return -EINVAL;
 
+	mutex_lock(&idev->i2c_lock);
+
 	idev->msg      = msg;
 	idev->msg_xfrd = 0;
 	idev->msg_err =  0;
@@ -477,6 +481,7 @@ struct axxia_i2c_dev {
 	if (ret == 0) {
 		dev_warn(idev->dev, "xfer timeout (%#x)\n", msg->addr);
 		axxia_i2c_init(idev);
+		mutex_unlock(&idev->i2c_lock);
 		return -ETIMEDOUT;
 	}
 
@@ -485,9 +490,11 @@ struct axxia_i2c_dev {
 
 	if (unlikely(idev->msg_err != 0)) {
 		axxia_i2c_init(idev);
+		mutex_unlock(&idev->i2c_lock);
 		return -EIO;
 	}
 
+	mutex_unlock(&idev->i2c_lock);
 	return 0;
 }
 
@@ -637,6 +644,8 @@ static int axxia_i2c_probe(struct platform_device *pdev)
 	idev->adapter.dev.parent = &pdev->dev;
 	idev->adapter.dev.of_node = pdev->dev.of_node;
 
+	mutex_init(&idev->i2c_lock);
+
 	ret = i2c_add_adapter(&idev->adapter);
 	if (ret) {
 		clk_disable_unprepare(idev->i2c_clk);
-- 
1.8.5.2.233.g932f7e4

