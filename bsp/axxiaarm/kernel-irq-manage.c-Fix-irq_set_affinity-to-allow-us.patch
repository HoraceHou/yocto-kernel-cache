From 6cb5af05a9c2a37a4e73a58e791014747c0642e0 Mon Sep 17 00:00:00 2001
From: David Mercado <david.mercado@windriver.com>
Date: Wed, 5 Feb 2014 15:16:12 -0500
Subject: [PATCH 077/278] kernel/irq/manage.c: Fix irq_set_affinity to allow
 use with buslocks

Modify irq_set_affinity() to allow usage of bus locks with "slow bus" IRQ
controllers.  This only affects those BSPs that use bus locks in their IRQ
controllers, such as the LSI Axxia GIC.  The recommendation for this
change originated from Thomax Gleixner at Linutronix.

Signed-off-by: David Mercado <david.mercado@windriver.com>
Signed-off-by: Daniel Dragomir <daniel.dragomir@windriver.com>
---
 kernel/irq/manage.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/kernel/irq/manage.c b/kernel/irq/manage.c
index e2ce3d6..d15f2a4 100644
--- a/kernel/irq/manage.c
+++ b/kernel/irq/manage.c
@@ -249,6 +249,22 @@ int irq_set_affinity_locked(struct irq_data *data, const struct cpumask *mask,
 	return ret;
 }
 
+#ifdef CONFIG_ARCH_AXXIA
+int __irq_set_affinity(unsigned int irq, const struct cpumask *mask, bool force)
+{
+	unsigned long flags;
+	struct irq_desc *desc = irq_get_desc_buslock(irq, &flags,
+			IRQ_GET_DESC_CHECK_GLOBAL);
+	int ret;
+
+	if (!desc)
+		return -EINVAL;
+
+	ret = irq_set_affinity_locked(irq_desc_get_irq_data(desc), mask, force);
+	irq_put_desc_busunlock(desc, flags);
+	return ret;
+}
+#else
 int __irq_set_affinity(unsigned int irq, const struct cpumask *mask, bool force)
 {
 	struct irq_desc *desc = irq_to_desc(irq);
@@ -263,6 +279,7 @@ int __irq_set_affinity(unsigned int irq, const struct cpumask *mask, bool force)
 	raw_spin_unlock_irqrestore(&desc->lock, flags);
 	return ret;
 }
+#endif
 
 int irq_set_affinity_hint(unsigned int irq, const struct cpumask *m)
 {
-- 
1.8.5.2.233.g932f7e4

