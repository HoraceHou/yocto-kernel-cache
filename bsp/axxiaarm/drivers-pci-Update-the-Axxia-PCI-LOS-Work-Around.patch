From 8ed8c322ffdfc7fe71829ae7a06e446a2ac3015a Mon Sep 17 00:00:00 2001
From: John Jacques <john.jacques@intel.com>
Date: Tue, 14 Nov 2017 16:34:04 -0600
Subject: [PATCH 261/278] drivers/pci: Update the Axxia PCI LOS Work Around

Make sure everything gets put back to normal when the
speed changes from Gen1 to Gen2/Gen3.

Signed-off-by: John Jacques <john.jacques@intel.com>
---
 drivers/pci/host/pcie-axxia.c | 55 ++++++++++++++++++++++---------------------
 1 file changed, 28 insertions(+), 27 deletions(-)

diff --git a/drivers/pci/host/pcie-axxia.c b/drivers/pci/host/pcie-axxia.c
index 3862818..94e893a 100644
--- a/drivers/pci/host/pcie-axxia.c
+++ b/drivers/pci/host/pcie-axxia.c
@@ -905,10 +905,10 @@ int axxia_pcie_link_up(struct pcie_port *pp)
 	int max_target;
 	unsigned int lane0_dig_asic_rx_asic_in_0;
 	unsigned int lane0_dig_asic_rx_asic_out_0;
-	unsigned int lane0_idg_asic_rx_ovrd_in_0;
+	unsigned int lane0_dig_asic_rx_ovrd_in_0;
 	unsigned int lane1_dig_asic_rx_asic_in_0;
 	unsigned int lane1_dig_asic_rx_asic_out_0;
-	unsigned int lane1_idg_asic_rx_ovrd_in_0;
+	unsigned int lane1_dig_asic_rx_ovrd_in_0;
 
 	if (0 == axxia_pei_is_control_set())
 		return -1;
@@ -1059,18 +1059,18 @@ int axxia_pcie_link_up(struct pcie_port *pp)
 		max_target = 4;
 		lane0_dig_asic_rx_asic_in_0 = 0x2022;
 		lane0_dig_asic_rx_asic_out_0 = 0x202e;
-		lane0_idg_asic_rx_ovrd_in_0 = 0x200a;
+		lane0_dig_asic_rx_ovrd_in_0 = 0x200a;
 		lane1_dig_asic_rx_asic_in_0 = 0x2222;
 		lane1_dig_asic_rx_asic_out_0 = 0x222e;
-		lane1_idg_asic_rx_ovrd_in_0 = 0x220a;
+		lane1_dig_asic_rx_ovrd_in_0 = 0x220a;
 	} else {
 		max_target = 1;
 		lane0_dig_asic_rx_asic_in_0 = 0x4044;
 		lane0_dig_asic_rx_asic_out_0 = 0x405c;
-		lane0_idg_asic_rx_ovrd_in_0 = 0x4014;
+		lane0_dig_asic_rx_ovrd_in_0 = 0x4014;
 		lane1_dig_asic_rx_asic_in_0 = 0x4444;
 		lane1_dig_asic_rx_asic_out_0 = 0x445c;
-		lane1_idg_asic_rx_ovrd_in_0 = 0x4414;
+		lane1_dig_asic_rx_ovrd_in_0 = 0x4414;
 	}
 
 	do_gettimeofday(&start);
@@ -1078,6 +1078,7 @@ int axxia_pcie_link_up(struct pcie_port *pp)
 	for (;;) {
 		int i;
 		unsigned short temp;
+		unsigned int region;
 
 		/*
 		   In all cases (see the initialization of lane_mask
@@ -1089,41 +1090,41 @@ int axxia_pcie_link_up(struct pcie_port *pp)
 			if (0 == (lane_mask & (0xff << ((i - 1) * 8))))
 				continue;
 
-			ncr_read(NCP_REGION_ID(0x115, i),
-				 lane0_dig_asic_rx_asic_in_0, 2, &temp);
+			region = NCP_REGION_ID(0x115, i);
+			ncr_read(region, lane0_dig_asic_rx_asic_in_0, 2, &temp);
 
 			if (2 == ((temp & 0x180) >> 7)) {
-				ncr_read(NCP_REGION_ID(0x115, i),
-					 lane0_dig_asic_rx_asic_out_0,
+				ncr_read(region, lane0_dig_asic_rx_asic_out_0,
 					 2, &temp);
 
-				if (0 != (temp & 2))
+				if (0 != (temp & 2)) {
 					temp = 0x4700;
-				else
+					ncr_write(region,
+						  lane0_dig_asic_rx_ovrd_in_0,
+						  2, &temp);
 					temp = 0x0700;
-
-				ncr_write(NCP_REGION_ID(0x115, i),
-					  lane0_idg_asic_rx_ovrd_in_0,
-					  2, &temp);
+					ncr_write(region,
+						  lane0_dig_asic_rx_ovrd_in_0,
+						  2, &temp);
+				}
 			}
 
-			ncr_read(NCP_REGION_ID(0x115, i),
-				 lane1_dig_asic_rx_asic_in_0,
-				 2, &temp);
+			ncr_read(region, lane1_dig_asic_rx_asic_in_0, 2, &temp);
 
 			if (2 == ((temp & 0x180) >> 7)) {
-				ncr_read(NCP_REGION_ID(0x115, i),
-					 lane1_dig_asic_rx_asic_out_0,
+				ncr_read(region, lane1_dig_asic_rx_asic_out_0,
 					 2, &temp);
 
-				if (0 != (temp & 2))
+				if (0 != (temp & 2)) {
 					temp = 0x4700;
-				else
+					ncr_write(region,
+						  lane1_dig_asic_rx_ovrd_in_0,
+						  2, &temp);
 					temp = 0x0700;
-
-				ncr_write(NCP_REGION_ID(0x115, i),
-					  lane1_idg_asic_rx_ovrd_in_0,
-					  2, &temp);
+					ncr_write(region,
+						  lane1_dig_asic_rx_ovrd_in_0,
+						  2, &temp);
+				}
 			}
 		}
 
-- 
1.8.5.2.233.g932f7e4

