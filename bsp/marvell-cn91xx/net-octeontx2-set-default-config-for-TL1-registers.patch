From 3dd3c9daf59a6ae8b18fc1f686cda7dc7877bb93 Mon Sep 17 00:00:00 2001
From: Nithin Dabilpuram <ndabilpuram@marvell.com>
Date: Thu, 23 Aug 2018 20:41:20 +0530
Subject: [PATCH 0156/1051] net: octeontx2: set default config for TL1
 registers

PF driver sets default parameters to TL1 for userspace
application to use VF's.

Signed-off-by: Krzysztof Kanas <kkanas@marvell.com>
Signed-off-by: Nithin Dabilpuram <ndabilpuram@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../ethernet/marvell/octeontx2/otx2_common.c  | 21 +++++++++++++++++--
 .../net/ethernet/marvell/octeontx2/otx2_reg.h |  1 +
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/otx2_common.c
index 2a9e9df83dc2..b572581a94de 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_common.c
@@ -406,10 +406,26 @@ int otx2_txschq_config(struct otx2_nic *pfvf, int lvl)
 		parent =  hw->txschq_list[NIX_TXSCH_LVL_TL1][0];
 		req->reg[0] = NIX_AF_TL2X_PARENT(schq);
 		req->regval[0] = parent << 16;
+
+		req->num_regs++;
+		req->reg[1] = NIX_AF_TL2X_SCHEDULE(schq);
+		req->regval[1] = TXSCH_TL1_DFLT_RR_PRIO << 24;
 	} else if (lvl == NIX_TXSCH_LVL_TL1) {
+		/* Default config for TL1.
+		 * For VF this is always ignored.
+		 */
+
 		/* Set DWRR quantum */
 		req->reg[0] = NIX_AF_TL1X_SCHEDULE(schq);
-		req->regval[0] = pfvf->netdev->mtu;
+		req->regval[0] = TXSCH_TL1_DFLT_RR_QTM;
+
+		req->num_regs++;
+		req->reg[1] = NIX_AF_TL1X_TOPOLOGY(schq);
+		req->regval[1] = (TXSCH_TL1_DFLT_RR_PRIO << 1);
+
+		req->num_regs++;
+		req->reg[2] = NIX_AF_TL1X_CIR(schq);
+		req->regval[2] = 0;
 	}
 
 	return otx2_sync_mbox_msg(&pfvf->mbox);
@@ -434,7 +450,7 @@ int otx2_txsch_alloc(struct otx2_nic *pfvf)
 
 int otx2_txschq_stop(struct otx2_nic *pfvf)
 {
-	struct msg_req *free_req;
+	struct nix_txsch_free_req *free_req;
 	int lvl, schq;
 
 	/* Free the transmit schedulers */
@@ -442,6 +458,7 @@ int otx2_txschq_stop(struct otx2_nic *pfvf)
 	if (!free_req)
 		return -ENOMEM;
 
+	free_req->flags = TXSCHQ_FREE_ALL;
 	WARN_ON(otx2_sync_mbox_msg(&pfvf->mbox));
 
 	/* Clear the txschq list */
diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_reg.h b/drivers/net/ethernet/marvell/octeontx2/otx2_reg.h
index db8d93e4cd7a..be4ab69cf70a 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_reg.h
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_reg.h
@@ -140,6 +140,7 @@
 #define NIX_AF_TL1X_CIR(a)		(0xC20 | (a) << 16)
 #define NIX_AF_TL1X_TOPOLOGY(a)		(0xC80 | (a) << 16)
 #define NIX_AF_TL2X_PARENT(a)		(0xE88 | (a) << 16)
+#define NIX_AF_TL2X_SCHEDULE(a)		(0xE00 | (a) << 16)
 #define NIX_AF_TL3X_PARENT(a)		(0x1088 | (a) << 16)
 #define NIX_AF_TL4X_PARENT(a)		(0x1288 | (a) << 16)
 #define NIX_AF_MDQX_SCHEDULE(a)		(0x1400 | (a) << 16)
-- 
2.17.1

