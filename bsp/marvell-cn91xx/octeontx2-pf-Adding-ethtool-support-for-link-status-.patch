From f1830f4a99677dcd6a18bc90af458f35e6017236 Mon Sep 17 00:00:00 2001
From: Christina Jacob <cjacob@marvell.com>
Date: Mon, 18 Feb 2019 09:47:29 +0530
Subject: [PATCH 1009/1051] octeontx2-pf: Adding ethtool support for link
 status information.

Adding ethtool support to display link status information for pf
interfaces. Also Displays speed and duplex mode on ifconfig up
of pf interfaces.

Change-Id: Ia0fba251daeb7733486b2e69c50c49ee545e941b
Signed-off-by: Christina Jacob <cjacob@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/4244
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.h        |  1 +
 .../marvell/octeontx2/nic/otx2_ethtool.c       | 18 ++++++++++++++++++
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c   |  6 ++++--
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index b7c003e3d045..c4ff21f97227 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -168,6 +168,7 @@ struct otx2_nic {
 	u64			reset_count;
 	u8			hw_rx_tstamp;
 	u8			hw_tx_tstamp;
+	struct cgx_link_user_info linfo;
 	struct otx2_ptp		*ptp;
 };
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index f8aa48dd9fa7..e117dbe67266 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -620,6 +620,23 @@ static int otx2_get_ts_info(struct net_device *netdev,
 	return 0;
 }
 
+static int otx2_get_link_ksettings(struct net_device *netdev,
+				   struct ethtool_link_ksettings *cmd)
+{
+	struct otx2_nic *pfvf = netdev_priv(netdev);
+	bool if_up = netif_running(netdev);
+
+	if (!if_up) {
+		cmd->base.duplex = DUPLEX_UNKNOWN;
+		cmd->base.speed = SPEED_UNKNOWN;
+		return 0;
+	}
+	cmd->base.duplex = pfvf->linfo.full_duplex;
+	cmd->base.speed = pfvf->linfo.speed;
+
+	return 0;
+}
+
 static const struct ethtool_ops otx2_ethtool_ops = {
 	.get_drvinfo		= otx2_get_drvinfo,
 	.get_strings		= otx2_get_strings,
@@ -638,6 +655,7 @@ static const struct ethtool_ops otx2_ethtool_ops = {
 	.get_rxfh		= otx2_get_rxfh,
 	.set_rxfh		= otx2_set_rxfh,
 	.get_ts_info		= otx2_get_ts_info,
+	.get_link_ksettings     = otx2_get_link_ksettings,
 };
 
 void otx2_set_ethtool_ops(struct net_device *netdev)
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 5a59e03d2e56..96c63657739b 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -122,8 +122,10 @@ int otx2_mbox_up_handler_cgx_link_event(struct otx2_nic *pf,
 	struct cgx_link_user_info *linfo = &msg->link_info;
 	struct net_device *netdev = pf->netdev;
 
-	pr_info("%s NIC Link is %s\n",
-		netdev->name, linfo->link_up ? "UP" : "DOWN");
+	pf->linfo = msg->link_info;
+	pr_info("%s NIC Link is %s %d Mbps %s duplex\n", netdev->name,
+		linfo->link_up ? "UP" : "DOWN", linfo->speed,
+		linfo->full_duplex ? "Full" : "Half");
 	if (linfo->link_up) {
 		netif_carrier_on(netdev);
 		netif_tx_start_all_queues(netdev);
-- 
2.17.1

