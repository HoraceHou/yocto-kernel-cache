From f53a057a6fff0a9e31a06520897fb33ac1c1c7ad Mon Sep 17 00:00:00 2001
From: "Baranwal, Sujeet" <Sujeet.Baranwal@cavium.com>
Date: Tue, 27 Nov 2018 04:01:10 +0300
Subject: [PATCH 0779/1051] mmc: octeontx2: incorporate hw interface io ctl
 params

T9xxx added a register to control the current driver strength and
clock skew rate for the emmc interface. The patch nherits the
value from device tree else puts the default value of high clk
skew and a current driver strength at maxiumim of 16mA.

Signed-off-by: Sujeet Baranwal <sbaranwal@caviumnetworks.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/mmc/host/cavium.c     | 34 +++++++++++++++++++++++++++++++++-
 drivers/mmc/host/cavium.h     | 18 ++++++++++++++++++
 drivers/mmc/host/cavium_mmc.h | 17 +++++++++++++++++
 3 files changed, 68 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/host/cavium.c b/drivers/mmc/host/cavium.c
index e47050bc5619..a7fa197264a7 100644
--- a/drivers/mmc/host/cavium.c
+++ b/drivers/mmc/host/cavium.c
@@ -250,6 +250,23 @@ static void set_wdog(struct cvm_mmc_slot *slot, unsigned int ns)
 	writeq(timeout, slot->host->base + MIO_EMM_WDOG(slot->host));
 }
 
+static void emmc_io_drive_setup(struct cvm_mmc_slot *slot)
+{
+	u64 ioctl_cfg;
+	struct cvm_mmc_host *host = slot->host;
+
+	if (!is_mmc_8xxx(slot->host)) {
+		if ((slot->drive < 0) || (slot->slew < 0))
+			return;
+		/* Setup the emmc interface current drive
+		 * strength & clk slew rate.
+		 */
+		ioctl_cfg = FIELD_PREP(MIO_EMM_IO_CTL_DRIVE, slot->drive) |
+			FIELD_PREP(MIO_EMM_IO_CTL_SLEW, slot->slew);
+		writeq(ioctl_cfg, host->base + MIO_EMM_IO_CTL(host));
+	}
+}
+
 static void cvm_mmc_reset_bus(struct cvm_mmc_slot *slot)
 {
 	struct cvm_mmc_host *host = slot->host;
@@ -302,6 +319,8 @@ static void cvm_mmc_switch_to(struct cvm_mmc_slot *slot)
 		     FIELD_PREP(MIO_EMM_SAMPLE_DAT_CNT, slot->dat_cnt);
 	writeq(emm_sample, host->base + MIO_EMM_SAMPLE(host));
 
+	emmc_io_drive_setup(slot);
+
 	host->last_slot = slot->bus_id;
 }
 
@@ -1010,7 +1029,7 @@ static int cvm_mmc_of_parse(struct device *dev, struct cvm_mmc_slot *slot)
 	u32 id, cmd_skew = 0, dat_skew = 0, bus_width = 0;
 	struct device_node *node = dev->of_node;
 	struct mmc_host *mmc = slot->mmc;
-	u32 max_frequency;
+	u32 max_frequency, current_drive, clk_slew;
 	int ret;
 
 	ret = of_property_read_u32(node, "reg", &id);
@@ -1069,6 +1088,19 @@ static int cvm_mmc_of_parse(struct device *dev, struct cvm_mmc_slot *slot)
 	slot->cmd_cnt = cmd_skew;
 	slot->dat_cnt = dat_skew;
 
+	/* Get current drive and clk skew */
+	ret = of_property_read_u32(node, "cavium,drv-strength", &current_drive);
+	if (ret)
+		slot->drive = -1;
+	else
+		slot->drive = current_drive;
+
+	ret = of_property_read_u32(node, "cavium,clk-slew", &clk_slew);
+	if (ret)
+		slot->slew = -1;
+	else
+		slot->slew = clk_slew;
+
 	return id;
 }
 
diff --git a/drivers/mmc/host/cavium.h b/drivers/mmc/host/cavium.h
index 8c2c3d87b892..d9fe26e00375 100644
--- a/drivers/mmc/host/cavium.h
+++ b/drivers/mmc/host/cavium.h
@@ -35,6 +35,16 @@
 #define MHZ_100 (100000000)
 #define MHZ_200 (200000000)
 
+/* octtx2: emmc interface io current drive strength */
+#define	MILLI_AMP_2	(0x0)
+#define	MILLI_AMP_4	(0x1)
+#define	MILLI_AMP_8	(0x2)
+#define	MILLI_AMP_16	(0x3)
+
+/* octtx2: emmc interface io clk skew */
+#define	LOW_SLEW_RATE	(0x0)
+#define	HIGH_SLEW_RATE	(0x1)
+
 /* DMA register addresses */
 #define MIO_EMM_DMA_FIFO_CFG(x)	(0x00 + x->reg_off_dma)
 #define MIO_EMM_DMA_FIFO_ADR(x)	(0x10 + x->reg_off_dma)
@@ -48,6 +58,8 @@
 
 /* register addresses */
 #define MIO_EMM_CFG(x)		(0x00 + x->reg_off)
+/* octtx2 specific register */
+#define MIO_EMM_IO_CTL(x)	(0x40 + x->reg_off)
 #define MIO_EMM_SWITCH(x)	(0x48 + x->reg_off)
 #define MIO_EMM_DMA(x)		(0x50 + x->reg_off)
 #define MIO_EMM_CMD(x)		(0x58 + x->reg_off)
@@ -118,6 +130,9 @@ struct cvm_mmc_slot {
 	unsigned int cmd_cnt;		/* sample delay */
 	unsigned int dat_cnt;		/* sample delay */
 
+	unsigned int drive;		/* Current drive */
+	unsigned int slew;		/* clock skew */
+
 	int bus_id;
 };
 
@@ -176,6 +191,9 @@ struct cvm_mmc_cr_mods {
 #define MIO_EMM_DMA_CFG_SIZE		GENMASK_ULL(55, 36)
 #define MIO_EMM_DMA_CFG_ADR		GENMASK_ULL(35, 0)
 
+#define MIO_EMM_IO_CTL_DRIVE		GENMASK_ULL(3, 2)
+#define MIO_EMM_IO_CTL_SLEW		BIT_ULL(0)
+
 #define MIO_EMM_INT_NCB_FLT		BIT_ULL(7)
 #define MIO_EMM_INT_SWITCH_ERR		BIT_ULL(6)
 #define MIO_EMM_INT_SWITCH_DONE		BIT_ULL(5)
diff --git a/drivers/mmc/host/cavium_mmc.h b/drivers/mmc/host/cavium_mmc.h
index 31ec52421e58..481cb0e8293f 100644
--- a/drivers/mmc/host/cavium_mmc.h
+++ b/drivers/mmc/host/cavium_mmc.h
@@ -182,6 +182,23 @@ union mio_emm_dma_cfg {
 	} s;
 };
 
+union mio_emm_io_ctl {
+	u64 val;
+	struct mio_emm_io_ctl_s {
+#ifdef __BIG_ENDIAN_BITFIELD
+		u64:60;
+		u64 drive:2;
+		u64:1;
+		u64 slew:1;
+#else
+		u64 slew:1;
+		u64:1;
+		u64 drive:2;
+		u64:60;
+#endif
+	} s;
+};
+
 union mio_emm_int {
 	u64 val;
 	struct mio_emm_int_s {
-- 
2.17.1

