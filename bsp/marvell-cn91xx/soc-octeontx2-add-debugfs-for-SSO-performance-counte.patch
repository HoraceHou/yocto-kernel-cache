From 9d723187ed3037f421c0a06a091465322e1087c0 Mon Sep 17 00:00:00 2001
From: Pavan Nikhilesh <pbhagavatula@marvell.com>
Date: Wed, 5 Dec 2018 02:55:37 +0300
Subject: [PATCH 0850/1051] soc: octeontx2: add debugfs for SSO performance
 counters

Add SSO global performance counters to debugfs.

Change-Id: I1953af35600ddca6df018977745fadf0ca959409
Signed-off-by: Pavan Nikhilesh <pbhagavatula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/1757
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu_debugfs.c | 60 +++++++++++++++++++++
 drivers/soc/marvell/octeontx2/rvu_reg.h     |  7 +++
 2 files changed, 67 insertions(+)

diff --git a/drivers/soc/marvell/octeontx2/rvu_debugfs.c b/drivers/soc/marvell/octeontx2/rvu_debugfs.c
index d87cd7f58194..10e64e82844e 100644
--- a/drivers/soc/marvell/octeontx2/rvu_debugfs.c
+++ b/drivers/soc/marvell/octeontx2/rvu_debugfs.c
@@ -1359,6 +1359,52 @@ static void sso_hwgrp_display_taq_list(struct rvu *rvu, int ssolf, u8 wae_head,
 	} while (ent_head && wae_used);
 }
 
+static int read_sso_pc(struct rvu *rvu)
+{
+	int blkaddr;
+	u64 reg;
+
+	blkaddr = rvu_get_blkaddr(rvu, BLKTYPE_SSO, 0);
+	if (blkaddr < 0)
+		return -ENODEV;
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_ACTIVE_CYCLES0);
+	pr_info("SSO Add-Work active cycles		%lld\n", reg);
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_ACTIVE_CYCLES1);
+	pr_info("SSO Get-Work active cycles		%lld\n", reg);
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_ACTIVE_CYCLES2);
+	pr_info("SSO Work-Slot active cycles		%lld\n", reg);
+	pr_info("\n");
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_NOS_CNT) & 0x1FFF;
+	pr_info("SSO work-queue entries on the no-schedule list	%lld\n", reg);
+	pr_info("\n");
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_AW_READ_ARB);
+	pr_info("SSO XAQ reads outstanding		%lld\n",
+		(reg & 0x3F) >> 24);
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_XAQ_REQ_PC);
+	pr_info("SSO XAQ reads requests			%lld\n", reg);
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_XAQ_LATENCY_PC);
+	pr_info("SSO XAQ read latency cycles		%lld\n", reg);
+	pr_info("\n");
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_AW_WE);
+	pr_info("SSO IAQ reserved			%lld\n",
+		(reg & 0x3FFF) >> 16);
+	pr_info("SSO IAQ total				%lld\n", reg & 0x3FFF);
+	pr_info("\n");
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_TAQ_CNT);
+	pr_info("SSO TAQ reserved			%lld\n",
+		(reg & 0x7FF) >> 16);
+	pr_info("SSO TAQ total				%lld\n", reg & 0x7FF);
+	pr_info("\n");
+
+	return 0;
+}
+
 /* Reads SSO hwgrp perfomance counters */
 static void read_sso_hwgrp_pc(struct rvu *rvu, int ssolf, bool all)
 {
@@ -1761,6 +1807,13 @@ static ssize_t rvu_dbg_sso_cmd_parser(struct file *filp,
 }
 
 /* SSO debugfs APIs */
+static ssize_t rvu_dbg_sso_pc_display(struct file *filp,
+				      char __user *buffer,
+				      size_t count, loff_t *ppos)
+{
+	return read_sso_pc(filp->private_data);
+}
+
 static ssize_t rvu_dbg_sso_hwgrp_pc_display(struct file *filp,
 					    const char __user *buffer,
 					    size_t count, loff_t *ppos)
@@ -1815,6 +1868,7 @@ static ssize_t rvu_dbg_sso_hws_info_display(struct file *filp,
 			"sso_hws_info", read_sso_hws_info);
 }
 
+RVU_DEBUG_FOPS(sso_pc, sso_pc_display, NULL);
 RVU_DEBUG_FOPS(sso_hwgrp_pc, NULL, sso_hwgrp_pc_display);
 RVU_DEBUG_FOPS(sso_hwgrp_thresh, NULL, sso_hwgrp_thresh_display);
 RVU_DEBUG_FOPS(sso_hwgrp_taq_wlk, NULL, sso_hwgrp_taq_wlk_display);
@@ -1840,6 +1894,12 @@ static void rvu_dbg_sso_init(struct rvu *rvu)
 	if (!rvu->rvu_dbg.sso_hws)
 		return;
 
+	pfile = debugfs_create_file("sso_pc", 0600,
+				    rvu->rvu_dbg.sso, rvu,
+			&rvu_dbg_sso_pc_fops);
+	if (!pfile)
+		goto create_failed;
+
 	pfile = debugfs_create_file("sso_hwgrp_pc", 0600,
 				    rvu->rvu_dbg.sso_hwgrp, rvu,
 			&rvu_dbg_sso_hwgrp_pc_fops);
diff --git a/drivers/soc/marvell/octeontx2/rvu_reg.h b/drivers/soc/marvell/octeontx2/rvu_reg.h
index 2e2c8d79725d..125ffa04a55b 100644
--- a/drivers/soc/marvell/octeontx2/rvu_reg.h
+++ b/drivers/soc/marvell/octeontx2/rvu_reg.h
@@ -408,15 +408,22 @@
 /* SSO */
 #define SSO_AF_CONST			(0x1000)
 #define SSO_AF_CONST1			(0x1008)
+#define SSO_AF_NOS_CNT			(0x1050)
 #define SSO_AF_AW_WE			(0x1080)
 #define SSO_AF_LF_HWGRP_RST		(0x10e0)
 #define SSO_AF_AW_CFG			(0x10f0)
 #define SSO_AF_BLK_RST			(0x10f8)
+#define SSO_AF_ACTIVE_CYCLES0		(0x1100)
+#define SSO_AF_ACTIVE_CYCLES1		(0x1108)
+#define SSO_AF_ACTIVE_CYCLES2		(0x1110)
 #define SSO_AF_ERR0			(0x1220)
 #define SSO_AF_ERR0_W1S			(0x1228)
 #define SSO_AF_ERR0_ENA_W1C		(0x1230)
 #define SSO_AF_ERR0_ENA_W1S		(0x1238)
 #define SSO_AF_AW_ADD			(0x2080)
+#define SSO_AF_AW_READ_ARB		(0x2090)
+#define SSO_AF_XAQ_REQ_PC		(0x20B0)
+#define SSO_AF_XAQ_LATENCY_PC		(0x20B8)
 #define SSO_AF_TAQ_CNT			(0x20c0)
 #define SSO_AF_TAQ_ADD			(0x20e0)
 #define SSO_AF_RVU_LF_CFG_DEBUG		(0x3800)
-- 
2.17.1

