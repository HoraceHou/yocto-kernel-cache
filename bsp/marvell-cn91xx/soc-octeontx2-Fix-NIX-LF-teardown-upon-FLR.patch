From 3a3b22e671253fd1203f9357032b093e34886c49 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Mon, 27 Aug 2018 14:49:38 +0530
Subject: [PATCH 0158/1051] soc: octeontx2: Fix NIX LF teardown upon FLR

Upon receiving FLR when NIX LF teardown is called
and if that LF is not yet initialized then dumps
a 'Failed to disable HW context' msg. This patch
fixes this by calling context disable only if
context memories are allocated for that NIX LF.

Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu_nix.c | 30 +++++++++++++++----------
 1 file changed, 18 insertions(+), 12 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2/rvu_nix.c b/drivers/soc/marvell/octeontx2/rvu_nix.c
index c92e0970ef56..863347512699 100644
--- a/drivers/soc/marvell/octeontx2/rvu_nix.c
+++ b/drivers/soc/marvell/octeontx2/rvu_nix.c
@@ -2578,20 +2578,26 @@ void rvu_nix_lf_teardown(struct rvu *rvu, u16 pcifunc, int blkaddr, int nixlf)
 	nix_rx_sync(rvu, blkaddr);
 	nix_txschq_free(rvu, pcifunc);
 
-	ctx_req.ctype = NIX_AQ_CTYPE_SQ;
-	err = nix_lf_hwctx_disable(rvu, &ctx_req);
-	if (err)
-		dev_err(rvu->dev, "SQ ctx disable failed\n");
+	if (pfvf->sq_ctx) {
+		ctx_req.ctype = NIX_AQ_CTYPE_SQ;
+		err = nix_lf_hwctx_disable(rvu, &ctx_req);
+		if (err)
+			dev_err(rvu->dev, "SQ ctx disable failed\n");
+	}
 
-	ctx_req.ctype = NIX_AQ_CTYPE_RQ;
-	err = nix_lf_hwctx_disable(rvu, &ctx_req);
-	if (err)
-		dev_err(rvu->dev, "RQ ctx disable failed\n");
+	if (pfvf->rq_ctx) {
+		ctx_req.ctype = NIX_AQ_CTYPE_RQ;
+		err = nix_lf_hwctx_disable(rvu, &ctx_req);
+		if (err)
+			dev_err(rvu->dev, "RQ ctx disable failed\n");
+	}
 
-	ctx_req.ctype = NIX_AQ_CTYPE_CQ;
-	err = nix_lf_hwctx_disable(rvu, &ctx_req);
-	if (err)
-		dev_err(rvu->dev, "CQ ctx disable failed\n");
+	if (pfvf->cq_ctx) {
+		ctx_req.ctype = NIX_AQ_CTYPE_CQ;
+		err = nix_lf_hwctx_disable(rvu, &ctx_req);
+		if (err)
+			dev_err(rvu->dev, "CQ ctx disable failed\n");
+	}
 
 	nix_ctx_free(rvu, pfvf);
 }
-- 
2.17.1

