From 5c2cd845b899ee877cea4f3a2e21cd96fc2b816c Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Mon, 27 Aug 2018 14:49:37 +0530
Subject: [PATCH 0157/1051] soc: octeontx2: Fix mbox and FLR interrupt naming

Change AF's (PF0's) VF mbox interrupt naming to
'RVUAFVF Mbox0/1' to match with VF's mailbox interrupt
name which is 'RVUVFAF Mbox'.

Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2/rvu.c b/drivers/soc/marvell/octeontx2/rvu.c
index 530df9961853..77b6cda419cd 100644
--- a/drivers/soc/marvell/octeontx2/rvu.c
+++ b/drivers/soc/marvell/octeontx2/rvu.c
@@ -1956,7 +1956,7 @@ static int rvu_register_interrupts(struct rvu *rvu)
 
 	/* Register FLR interrupt handler */
 	sprintf(&rvu->irq_name[RVU_AF_INT_VEC_PFFLR * NAME_SIZE],
-		"RVUPFAF FLR");
+		"RVUAF FLR");
 	ret = request_irq(pci_irq_vector(rvu->pdev, RVU_AF_INT_VEC_PFFLR),
 			  rvu_flr_intr_handler, 0,
 			  &rvu->irq_name[RVU_AF_INT_VEC_PFFLR * NAME_SIZE],
@@ -1983,14 +1983,14 @@ static int rvu_register_interrupts(struct rvu *rvu)
 
 	/* Register MBOX0 interrupt. */
 	offset += RVU_PF_INT_VEC_VFPF_MBOX0;
-	sprintf(&rvu->irq_name[offset * NAME_SIZE], "RVUVFPF MBOX0");
+	sprintf(&rvu->irq_name[offset * NAME_SIZE], "RVUAFVF Mbox0");
 	ret = request_irq(pci_irq_vector(rvu->pdev, offset),
 			  rvu_mbox_intr_handler, 0,
 			  &rvu->irq_name[offset * NAME_SIZE],
 			  rvu);
 	if (ret)
 		dev_err(rvu->dev,
-			"RVUAF: IRQ registration failed for MBOX0\n");
+			"RVUAF: IRQ registration failed for Mbox0\n");
 
 	rvu->irq_allocated[offset] = true;
 
@@ -1998,14 +1998,14 @@ static int rvu_register_interrupts(struct rvu *rvu)
 	 * simply increment current offset by 1.
 	 */
 	offset += 1;
-	sprintf(&rvu->irq_name[offset * NAME_SIZE], "RVUVFPF MBOX1");
+	sprintf(&rvu->irq_name[offset * NAME_SIZE], "RVUAFVF Mbox1");
 	ret = request_irq(pci_irq_vector(rvu->pdev, offset),
 			  rvu_mbox_intr_handler, 0,
 			  &rvu->irq_name[offset * NAME_SIZE],
 			  rvu);
 	if (ret)
 		dev_err(rvu->dev,
-			"RVUAF: IRQ registration failed for MBOX1\n");
+			"RVUAF: IRQ registration failed for Mbox1\n");
 
 	rvu->irq_allocated[offset] = true;
 
-- 
2.17.1

