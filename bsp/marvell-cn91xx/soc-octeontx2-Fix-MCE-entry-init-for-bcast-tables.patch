From 0e176719effbb4aaa44d143f9b9a4ebf8048bdf9 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Tue, 18 Sep 2018 11:38:57 +0530
Subject: [PATCH 0202/1051] soc: octeontx2: Fix MCE entry init for bcast tables

Currently bcast tables are not being initialized as
cgx probe is done after nix_init and hence number of
PFs mapped to CGX LMACs are zero. This patch fixes
this issue by initializing bcast table entries for
maximum number CGX links possible on the silicon.
Also fixes NIXLF dependency on submitting AQ instruction
submission for MCE entry init.

Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu_nix.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2/rvu_nix.c b/drivers/soc/marvell/octeontx2/rvu_nix.c
index 5e7048bb1629..1650254ded7b 100644
--- a/drivers/soc/marvell/octeontx2/rvu_nix.c
+++ b/drivers/soc/marvell/octeontx2/rvu_nix.c
@@ -432,9 +432,8 @@ static int rvu_nix_aq_enq_inst(struct rvu *rvu, struct nix_aq_enq_req *req,
 	bool ena;
 	u64 cfg;
 
-	pfvf = rvu_get_pfvf(rvu, pcifunc);
 	blkaddr = rvu_get_blkaddr(rvu, BLKTYPE_NIX, pcifunc);
-	if (!pfvf->nixlf || (blkaddr < 0))
+	if (blkaddr < 0)
 		return NIX_AF_ERR_AF_LF_INVALID;
 
 	block = &hw->block[blkaddr];
@@ -444,9 +443,14 @@ static int rvu_nix_aq_enq_inst(struct rvu *rvu, struct nix_aq_enq_req *req,
 		return NIX_AF_ERR_AQ_ENQUEUE;
 	}
 
+	pfvf = rvu_get_pfvf(rvu, pcifunc);
 	nixlf = rvu_get_lf(rvu, block, pcifunc, 0);
-	if (nixlf < 0)
-		return NIX_AF_ERR_AF_LF_INVALID;
+
+	/* Skip NIXLF check for broadcast MCE entry init */
+	if (!(!rsp && (req->ctype == NIX_AQ_CTYPE_MCE))) {
+		if (!pfvf->nixlf || (nixlf < 0))
+			return NIX_AF_ERR_AF_LF_INVALID;
+	}
 
 	switch (req->ctype) {
 	case NIX_AQ_CTYPE_RQ:
@@ -1570,7 +1574,7 @@ static int nix_setup_mce(struct rvu *rvu, int mce, u8 op,
 	int err;
 	struct nix_aq_enq_req aq_req;
 
-	aq_req.hdr.pcifunc = pcifunc;
+	aq_req.hdr.pcifunc = 0;
 	aq_req.ctype = NIX_AQ_CTYPE_MCE;
 	aq_req.op = op;
 	aq_req.qidx = mce;
@@ -1714,7 +1718,7 @@ static int nix_setup_bcast_tables(struct rvu *rvu, struct nix_hw *nix_hw)
 	u64 cfg;
 
 	/* Skip PF0 (i.e AF) */
-	for (pf = 1; pf < (rvu->cgx_mapped_pfs + 1); pf++) {
+	for (pf = 1; pf < (rvu->hw->cgx_links + 1); pf++) {
 		cfg = rvu_read64(rvu, BLKADDR_RVUM, RVU_PRIV_PFX_CFG(pf));
 		/* If PF is not enabled, nothing to do */
 		if (!((cfg >> 20) & 0x01))
-- 
2.17.1

