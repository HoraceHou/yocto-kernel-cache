From 95abcad0acd13627d95a8faad859541646cfebca Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Tue, 17 Apr 2018 14:45:57 +0200
Subject: [PATCH 0589/1051] pcie: armada8k: add support for comphy
 initialization

On armada8k platforms the comphy (common phy) must be configured to work
in appropriate mode. Hitherto comphy configuration for pcie was done by
bootloader. As a comphy driver was extended to support pcie comphy
configuration, this patch uses it in pcie driver. Thanks to that there
is no need to relay on the bootloader configuration which could
configured the comphy to different mode.

Change-Id: Ibc78b0411898fd908f95ed6d524bc3e0c9de3bdc
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/pci/controller/dwc/pcie-armada8k.c | 60 ++++++++++++++++++++++
 1 file changed, 60 insertions(+)

diff --git a/drivers/pci/controller/dwc/pcie-armada8k.c b/drivers/pci/controller/dwc/pcie-armada8k.c
index 072fd7ecc29f..c01cf2b59b6b 100644
--- a/drivers/pci/controller/dwc/pcie-armada8k.c
+++ b/drivers/pci/controller/dwc/pcie-armada8k.c
@@ -201,6 +201,60 @@ static const struct dw_pcie_ops dw_pcie_ops = {
 	.link_up = armada8k_pcie_link_up,
 };
 
+static int armada8k_phy_config(struct platform_device *pdev,
+			       struct armada8k_pcie *pcie)
+{
+	struct phy *comphy;
+	char phy_name[10];
+	int err, phy_count;
+	char i;
+
+	phy_count = of_property_count_strings(pdev->dev.of_node, "phy-names");
+
+	if (phy_count <= 0)
+		return 0;
+
+	dev_err(&pdev->dev, "after phy count");
+	for (i = 0; i < phy_count; i++) {
+		snprintf(phy_name, sizeof(phy_name), "pcie-phy%d", i);
+		comphy = devm_phy_get(&pdev->dev, phy_name);
+		if (IS_ERR(comphy))
+			dev_err(&pdev->dev, "Failed to get phy %d\n", i);
+
+		switch (phy_count) {
+		case PCIE_LNK_X1:
+		case PCIE_LNK_X2:
+		case PCIE_LNK_X4:
+			phy_set_bus_width(comphy, phy_count);
+			break;
+		default:
+			dev_err(&pdev->dev, "wrong pcie width %d", phy_count);
+			return -EINVAL;
+		}
+
+		err = phy_set_mode(comphy, PHY_MODE_PCIE);
+		if (err) {
+			dev_err(&pdev->dev, "failed to set comphy\n");
+			return err;
+		}
+
+		err = phy_init(comphy);
+		if (err < 0) {
+			dev_err(&pdev->dev, "phy init failed %d", phy_count);
+			return err;
+		}
+
+		err = phy_power_on(comphy);
+		if (err < 0) {
+			dev_err(&pdev->dev, "phy init failed %d", phy_count);
+			phy_exit(comphy);
+			return err;
+		}
+	}
+
+	return err;
+}
+
 static int armada8k_pcie_probe(struct platform_device *pdev)
 {
 	struct dw_pcie *pci;
@@ -250,6 +304,12 @@ static int armada8k_pcie_probe(struct platform_device *pdev)
 		goto fail_clkreg;
 	}
 
+	ret = armada8k_phy_config(pdev, pcie);
+	if (ret < 0) {
+		dev_err(dev, "PHYs config failed: %d\n", ret);
+		goto fail;
+	}
+
 	platform_set_drvdata(pdev, pcie);
 
 	ret = armada8k_add_pcie_port(pcie, pdev);
-- 
2.17.1

