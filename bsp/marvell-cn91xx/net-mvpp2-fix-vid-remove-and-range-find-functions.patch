From f11cd87ab32161c10d8d9345f012b535b3f98fc8 Mon Sep 17 00:00:00 2001
From: yuric <yuric@marvell.com>
Date: Mon, 4 Feb 2019 15:16:57 +0200
Subject: [PATCH 0952/1051] net: mvpp2: fix vid remove and range find functions

mvpp2_prs_vid_range_find() function accepted port as parameter,
but didn't look for <vid,port> match.
It removed vid from parser regardless of the port it belongs to.
The fix limits the scanned range according to the port boundaries.

mvpp2_prs_vid_remove_all() passed tcam index instead of vlan id
to mvpp2_prs_vid_entry_remove() function.
The fix removes TCAM entry according to the tid.

Change-Id: I557b6e6548522c510ee889680348b41aba69f454
Signed-off-by: Yuri Chipchev <yuric@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/3432
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_prs.c | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_prs.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_prs.c
index 8a79b3c3372d..a5fba7a6f060 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_prs.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_prs.c
@@ -1902,7 +1902,7 @@ static int mvpp2_prs_ip6_init(struct mvpp2 *priv)
 }
 
 /* Find tcam entry with matched pair <vid,port> */
-static int mvpp2_prs_vid_range_find(struct mvpp2 *priv, int pmap, u16 vid,
+static int mvpp2_prs_vid_range_find(struct mvpp2 *priv, int port_id, u16 vid,
 				    u16 mask)
 {
 	unsigned char byte[2], enable[2];
@@ -1911,8 +1911,8 @@ static int mvpp2_prs_vid_range_find(struct mvpp2 *priv, int pmap, u16 vid,
 	int tid;
 
 	/* Go through the all entries with MVPP2_PRS_LU_VID */
-	for (tid = MVPP2_PE_VID_FILT_RANGE_START;
-	     tid <= MVPP2_PE_VID_FILT_RANGE_END; tid++) {
+	for (tid = MVPP2_PRS_VID_PORT_FIRST(port_id);
+	     tid <= MVPP2_PRS_VID_PORT_LAST(port_id); tid++) {
 		if (!priv->prs_shadow[tid].valid ||
 		    priv->prs_shadow[tid].lu != MVPP2_PRS_LU_VID)
 			continue;
@@ -1947,7 +1947,7 @@ int mvpp2_prs_vid_entry_add(struct mvpp2_port *port, u16 vid)
 	memset(&pe, 0, sizeof(pe));
 
 	/* Scan TCAM and see if entry with this <vid,port> already exist */
-	tid = mvpp2_prs_vid_range_find(priv, (1 << port->id), vid, mask);
+	tid = mvpp2_prs_vid_range_find(priv, port->id, vid, mask);
 
 	reg_val = mvpp2_read(priv, MVPP2_MH_REG(port->id));
 	if (reg_val & MVPP2_DSA_EXTENDED)
@@ -2005,7 +2005,7 @@ void mvpp2_prs_vid_entry_remove(struct mvpp2_port *port, u16 vid)
 	int tid;
 
 	/* Scan TCAM and see if entry with this <vid,port> already exist */
-	tid = mvpp2_prs_vid_range_find(priv, (1 << port->id), vid, 0xfff);
+	tid = mvpp2_prs_vid_range_find(priv, port->id, vid, 0xfff);
 
 	/* No such entry */
 	if (tid < 0)
@@ -2023,8 +2023,11 @@ void mvpp2_prs_vid_remove_all(struct mvpp2_port *port)
 
 	for (tid = MVPP2_PRS_VID_PORT_FIRST(port->id);
 	     tid <= MVPP2_PRS_VID_PORT_LAST(port->id); tid++) {
-		if (priv->prs_shadow[tid].valid)
-			mvpp2_prs_vid_entry_remove(port, tid);
+		if (priv->prs_shadow[tid].valid &&
+		    priv->prs_shadow[tid].lu == MVPP2_PRS_LU_VID) {
+			mvpp2_prs_hw_inv(priv, tid);
+			priv->prs_shadow[tid].valid = false;
+		}
 	}
 }
 
-- 
2.17.1

