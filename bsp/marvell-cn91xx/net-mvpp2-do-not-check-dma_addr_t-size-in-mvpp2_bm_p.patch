From 6ae58ee3bf6552f4d1395734820905d5dfae8c36 Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Wed, 20 Feb 2019 02:25:51 +0100
Subject: [PATCH 1015/1051] net: mvpp2: do not check dma_addr_t size in
 mvpp2_bm_pool_put

Spare some cycles in data path by replacing checking
dma_addr_t size with 64-bit dependent ifdef.

Change-Id: Ic3d134e178fc7bc740c01af67d384b0576a37c28
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/4353
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
Tested-by: sa_ip-sw-jenkins
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index af4ea6e8029b..c067e309f92f 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -842,14 +842,15 @@ static inline void mvpp2_bm_pool_put(struct mvpp2_port *port, int pool,
 	 * For performance reasons don't store VA|PA and don't use "cookie".
 	 * VA/PA obtained faster from dma_to_phys(dma-addr) and phys_to_virt.
 	 */
-	if (!static_branch_unlikely(&mvpp21_variant) &&
-	    sizeof(dma_addr_t) == 8) {
+#if defined(CONFIG_ARCH_DMA_ADDR_T_64BIT) && defined(CONFIG_PHYS_ADDR_T_64BIT)
+	if (!static_branch_unlikely(&mvpp21_variant)) {
 		u32 val = upper_32_bits(buf_dma_addr) &
 				MVPP22_BM_ADDR_HIGH_PHYS_RLS_MASK;
 
 		mvpp2_thread_write_relaxed(port->priv, thread,
 					   MVPP22_BM_ADDR_HIGH_RLS_REG, val);
 	}
+#endif
 
 	mvpp2_thread_write_relaxed(port->priv, thread,
 				   MVPP2_BM_PHY_RLS_REG(pool), buf_dma_addr);
-- 
2.17.1

