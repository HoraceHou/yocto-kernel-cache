From 4bd22babe3055a3a9fe9c08caa24c042611b8d0c Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Fri, 12 Oct 2018 11:58:08 +0530
Subject: [PATCH 0235/1051] soc: octeontx2: Use dma_map_resource to create
 IOMMU mapping for MSIX base

dma_map_single() expects virtual address as input. Though even
physical address also works it might throw warning when
CONFIG_DEBUG_VIRTUAL is enabled in kernel. Hence instead
use dma_map_resource() api which accepts physcial address to
create a IOMMU mapping for MSIX vector base.

Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2/rvu.c b/drivers/soc/marvell/octeontx2/rvu.c
index 608c476fbe33..c62009b25c4b 100644
--- a/drivers/soc/marvell/octeontx2/rvu.c
+++ b/drivers/soc/marvell/octeontx2/rvu.c
@@ -561,9 +561,9 @@ static int rvu_setup_msix_resources(struct rvu *rvu)
 	cfg = rvu_read64(rvu, BLKADDR_RVUM, RVU_PRIV_CONST);
 	max_msix = cfg & 0xFFFFF;
 	phy_addr = rvu_read64(rvu, BLKADDR_RVUM, RVU_AF_MSIXTR_BASE);
-	iova = dma_map_single(rvu->dev, (void *)phy_addr,
-			      max_msix * PCI_MSIX_ENTRY_SIZE,
-			      DMA_BIDIRECTIONAL);
+	iova = dma_map_resource(rvu->dev, phy_addr,
+				max_msix * PCI_MSIX_ENTRY_SIZE,
+				DMA_BIDIRECTIONAL, 0);
 	if (dma_mapping_error(rvu->dev, iova))
 		return -ENOMEM;
 
@@ -607,9 +607,9 @@ static void rvu_free_hw_resources(struct rvu *rvu)
 		return;
 	cfg = rvu_read64(rvu, BLKADDR_RVUM, RVU_PRIV_CONST);
 	max_msix = cfg & 0xFFFFF;
-	dma_unmap_single(rvu->dev, rvu->msix_base_iova,
-			 max_msix * PCI_MSIX_ENTRY_SIZE,
-			 DMA_BIDIRECTIONAL);
+	dma_unmap_resource(rvu->dev, rvu->msix_base_iova,
+			   max_msix * PCI_MSIX_ENTRY_SIZE,
+			   DMA_BIDIRECTIONAL, 0);
 
 	mutex_destroy(&rvu->rsrc_lock);
 }
-- 
2.17.1

