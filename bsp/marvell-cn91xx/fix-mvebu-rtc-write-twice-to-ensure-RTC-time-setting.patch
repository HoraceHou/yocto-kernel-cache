From 07a84cdca5ad93bc9e98198350d604563807dc3f Mon Sep 17 00:00:00 2001
From: Terry Zhou <bjzhou@marvell.com>
Date: Thu, 28 Dec 2017 14:20:22 +0800
Subject: [PATCH 0572/1051] fix: mvebu: rtc: write twice to ensure RTC time
 setting

When rapidly writing to RTC register and reading it back,
sometimes the new time value didn't take effect and keep
with the existing value. According to the datasheet, the
RTC time register should be written twice to guarantee
the write is performed correctly.

Change-Id: I5ddf33f4d986457f3e92bcd8d538b190739dbe25
Signed-off-by: Terry Zhou <bjzhou@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/rtc/rtc-armada38x.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/rtc/rtc-armada38x.c b/drivers/rtc/rtc-armada38x.c
index bde53c8ccee2..dc3a1c2db912 100644
--- a/drivers/rtc/rtc-armada38x.c
+++ b/drivers/rtc/rtc-armada38x.c
@@ -104,6 +104,8 @@ struct armada38x_rtc_data {
  * may fail. As a workaround, before writing to RTC
  * register, issue a dummy write of 0x0 twice to RTC Status
  * register.
+ * According to the datasheet, the RTC time register should be written
+ * twice to guarantee the write is performed correctly
  */
 
 static void rtc_delayed_write(u32 val, struct armada38x_rtc *rtc, int offset)
@@ -112,6 +114,8 @@ static void rtc_delayed_write(u32 val, struct armada38x_rtc *rtc, int offset)
 	writel(0, rtc->regs + RTC_STATUS);
 	writel(val, rtc->regs + offset);
 	udelay(5);
+	writel(val, rtc->regs + offset);
+	udelay(5);
 }
 
 /* Update RTC-MBUS bridge timing parameters */
-- 
2.17.1

