From 2650522eca81104a9cc0fd1e5ef0f55cc69c11a2 Mon Sep 17 00:00:00 2001
From: Aakash Sasidharan <Aakash.Sasidharan@cavium.com>
Date: Wed, 13 Jun 2018 16:42:28 +0530
Subject: [PATCH 0350/1051] octeontx: use "pci" as the port type instead of
 host/sdp

Rename host/sdp port type to "pci"

Signed-off-by: Aakash Sasidharan <Aakash.Sasidharan@cavium.com>
Signed-off-by: Yury Norov <ynorov@caviumnetworks.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../cavium/octeontx-83xx/octeontx_main.c      |  4 +--
 .../cavium/octeontx-83xx/octeontx_mbox.h      |  4 +--
 .../cavium/octeontx-83xx/pki_config.c         | 26 +++++++++----------
 3 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
index 76b206e56ea4..1aaf4e32d026 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
@@ -269,7 +269,7 @@ static ssize_t octtx_create_domain_store(struct device *dev,
 				goto error;
 			if (kstrtol(start, 10, &dpi_count))
 				goto error;
-		} else if (!strncmp(strim(start), "sdp", sizeof("sdp") - 1)) {
+		} else if (!strncmp(strim(start), "pci", sizeof("pci") - 1)) {
 			temp = strsep(&start, ":");
 			if (!start)
 				goto error;
@@ -430,7 +430,7 @@ static int octtx_master_receive_message(struct mbox_hdr *hdr,
 			dcfg->tim_count = domain->tim_vf_count;
 			dcfg->net_port_count = domain->bgx_count;
 			dcfg->virt_port_count = domain->lbk_count;
-			dcfg->host_port_count = domain->sdp_count;
+			dcfg->pci_port_count = domain->sdp_count;
 			resp->data = sizeof(struct dcfg_resp);
 			hdr->res_code = MBOX_RET_SUCCESS;
 			break;
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h
index 88899c6f4728..7b3df3ac682a 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h
@@ -225,7 +225,7 @@ struct __attribute__((__packed__)) dcfg_resp {
 	u8	tim_count;
 	u8	net_port_count;
 	u8	virt_port_count;
-	u8	host_port_count;
+	u8	pci_port_count;
 };
 
 /* FPA specific */
@@ -289,7 +289,7 @@ union mbox_data {
 enum {
 	OCTTX_PORT_TYPE_NET, /* Network interface ports */
 	OCTTX_PORT_TYPE_INT, /* CPU internal interface ports */
-	OCTTX_PORT_TYPE_HOST, /* Host interface(SDP) ports */
+	OCTTX_PORT_TYPE_PCI, /* DPI/PCIe interface ports */
 	OCTTX_PORT_TYPE_MAX
 };
 
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/pki_config.c b/drivers/net/ethernet/cavium/octeontx-83xx/pki_config.c
index 4055b3b65c75..7982503f17c0 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/pki_config.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/pki_config.c
@@ -242,7 +242,7 @@ int pki_port_open(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -297,7 +297,7 @@ int pki_port_open(struct pkipf_vf *vf, u16 vf_id,
 			pki_reg_write(pki,
 				      PKI_CLX_STYLEX_CFG2(i, port->init_style),
 				      cfg);
-	} else { /* For OCTTX_PORT_TYPE_HOST */
+	} else { /* For OCTTX_PORT_TYPE_PCI */
 		for (i = 0; i < pki->max_cls; i++) {
 			cfg = pki_reg_read(pki,
 					   PKI_CLX_PKINDX_CFG(i, port->pkind));
@@ -312,7 +312,7 @@ int pki_port_open(struct pkipf_vf *vf, u16 vf_id,
 				      PKI_CLX_STYLEX_CFG(i, port->init_style),
 				      cfg);
 		}
-	} /* END OCTTX_PORT_TYPE_HOST */
+	} /* END OCTTX_PORT_TYPE_PCI */
 
 	port->state = PKI_PORT_OPEN;
 	port->qpg_base = QPG_INVALID;
@@ -334,7 +334,7 @@ int pki_port_alloc_qpg(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -374,7 +374,7 @@ int pki_port_free_qpg(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -418,7 +418,7 @@ int pki_port_create_qos(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -512,7 +512,7 @@ int pki_set_port_config(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -638,7 +638,7 @@ int pki_port_start(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -678,7 +678,7 @@ int pki_port_stop(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -709,7 +709,7 @@ int pki_port_close(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -747,7 +747,7 @@ int pki_port_pktbuf_cfg(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -855,7 +855,7 @@ int pki_port_errchk(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
@@ -952,7 +952,7 @@ int pki_port_hashcfg(struct pkipf_vf *vf, u16 vf_id,
 	case OCTTX_PORT_TYPE_NET:
 		port = &vf->bgx_port[vf_id];
 		break;
-	case OCTTX_PORT_TYPE_HOST:
+	case OCTTX_PORT_TYPE_PCI:
 		port = &vf->sdp_port[vf_id];
 		break;
 	case OCTTX_PORT_TYPE_INT:
-- 
2.17.1

