From 4f8312e8394787862caa89a801b19482ca8ee6e6 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Fri, 7 Sep 2018 17:43:43 +0200
Subject: [PATCH 0690/1051] phy: marvell: comphy: extend support for a3700
 comphy

In Armada 37xx SoC the common phy must be configured by controllers
which use them (network, SATA, USB and PCIe) either at boot time or
when controllers demands such change (e.g. changing eth speed from 1000
to 2500 at runtime).

Comparing to cp110 comphy support, the a3700 comphy address space is
divided into 4 ranges:
- South Bridge PHY Configuration Registers
- PCIe and GbE 0 PHY Registers
- USB3 and GbE 1 PHY Registers
- AHCI vendor specific indirect Registers
which all are used during comphy initialization.

Additionally there are 3 lanes instead of 6 and the max port number is
2. All changes and possible modes are reflected in
mvebu_comphy_a3700_modes table.

Change-Id: I2d6fa6c59364aa6bc29c42129e8837106cfacd79
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/phy/marvell/phy-mvebu-cp110-comphy.c | 36 ++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
index 73da64a69a1b..d7e2802e72f0 100644
--- a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
+++ b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
@@ -77,6 +77,30 @@ static unsigned long cp110_comphy_smc(unsigned long function_id,
 	return res.a0;
 }
 
+static unsigned long a3700_comphy_smc(unsigned long function_id,
+				      phys_addr_t comphy_phys_addr,
+				      unsigned long lane, unsigned long mode)
+{
+	struct arm_smccc_res res;
+
+	arm_smccc_smc(function_id, lane, mode, 0, 0, 0, 0, 0, &res);
+	return res.a0;
+}
+
+static const struct mvebu_comhy_conf mvebu_comphy_a3700_modes[] = {
+	/* lane 0 */
+	MVEBU_COMPHY_CONF(0, 1, PHY_MODE_SGMII),
+	MVEBU_COMPHY_CONF(0, 0, PHY_MODE_USB_HOST),
+	MVEBU_COMPHY_CONF(0, 0, PHY_MODE_USB_DEVICE),
+	/* lane 1 */
+	MVEBU_COMPHY_CONF(1, 0, PHY_MODE_PCIE),
+	MVEBU_COMPHY_CONF(1, 0, PHY_MODE_SGMII),
+	/* lane 2 */
+	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_SATA),
+	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_USB_HOST),
+	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_USB_DEVICE),
+};
+
 static const struct mvebu_comhy_conf mvebu_comphy_cp110_modes[] = {
 	/* lane 0 */
 	MVEBU_COMPHY_CONF(0, 1, PHY_MODE_SGMII),
@@ -137,6 +161,14 @@ struct mvebu_comphy_lane {
 	int port;
 };
 
+static const struct mvebu_comphy_data a3700_data = {
+	.comphy_smc = a3700_comphy_smc,
+	.modes = mvebu_comphy_a3700_modes,
+	.modes_size = ARRAY_SIZE(mvebu_comphy_a3700_modes),
+	.lanes = 3,
+	.ports = 2,
+};
+
 static const struct mvebu_comphy_data cp110_data = {
 	.comphy_smc = cp110_comphy_smc,
 	.modes = mvebu_comphy_cp110_modes,
@@ -382,6 +414,10 @@ static const struct of_device_id mvebu_comphy_of_match_table[] = {
 		.compatible = "marvell,comphy-cp110",
 		.data = &cp110_data,
 	},
+	{
+		.compatible = "marvell,comphy-a3700",
+		.data = &a3700_data,
+	},
 	{ },
 };
 MODULE_DEVICE_TABLE(of, mvebu_comphy_of_match_table);
-- 
2.17.1

