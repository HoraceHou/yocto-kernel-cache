From f11dc933c8febcdece3c6a797e7b898c07287ed5 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Tue, 16 Oct 2018 15:06:42 +0200
Subject: [PATCH 0743/1051] phy: cp110-comphy: add support for RXAUI comphy
 initialization

The RXAUI configuration is performed by firmware, therefore the comphy
driver only triggers appropriate smc call with argument understood by
fw.

Change-Id: I8dffb77a22b473f29c3ade197bd35b9139d03984
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/60493
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/phy/marvell/phy-mvebu-cp110-comphy.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
index 6f25ba6e64f0..8fd063bf26cc 100644
--- a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
+++ b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
@@ -121,12 +121,14 @@ static const struct mvebu_comhy_conf mvebu_comphy_cp110_modes[] = {
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_PCIE),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_USB_HOST),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_SATA),
+	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_RXAUI),
 	/* lane 3 */
 	MVEBU_COMPHY_CONF(3, 1, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(3, 1, PHY_MODE_2500SGMII),
 	MVEBU_COMPHY_CONF(3, 0, PHY_MODE_PCIE),
 	MVEBU_COMPHY_CONF(3, 1, PHY_MODE_SATA),
 	MVEBU_COMPHY_CONF(3, 1, PHY_MODE_USB_HOST),
+	MVEBU_COMPHY_CONF(3, 0, PHY_MODE_RXAUI),
 	/* lane 4 */
 	MVEBU_COMPHY_CONF(4, 0, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(4, 0, PHY_MODE_2500SGMII),
@@ -134,11 +136,13 @@ static const struct mvebu_comhy_conf mvebu_comphy_cp110_modes[] = {
 	MVEBU_COMPHY_CONF(4, 1, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(4, 1, PHY_MODE_PCIE),
 	MVEBU_COMPHY_CONF(4, 1, PHY_MODE_USB_HOST),
+	MVEBU_COMPHY_CONF(4, 0, PHY_MODE_RXAUI),
 	/* lane 5 */
 	MVEBU_COMPHY_CONF(5, 2, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(5, 2, PHY_MODE_2500SGMII),
 	MVEBU_COMPHY_CONF(5, 2, PHY_MODE_PCIE),
 	MVEBU_COMPHY_CONF(5, 1, PHY_MODE_SATA),
+	MVEBU_COMPHY_CONF(5, 0, PHY_MODE_RXAUI),
 };
 
 struct mvebu_comphy_data {
@@ -242,6 +246,11 @@ static int mvebu_comphy_power_on(struct phy *phy)
 				 lane->id,
 				 COMPHY_FW_MODE_FORMAT(COMPHY_SATA_MODE));
 		break;
+	case PHY_MODE_RXAUI:
+		ret = data->comphy_smc(MV_SIP_COMPHY_POWER_ON, priv->phys,
+				 lane->id,
+				 COMPHY_FW_MODE_FORMAT(COMPHY_RXAUI_MODE));
+		break;
 	case PHY_MODE_USB_HOST:
 		ret = data->comphy_smc(MV_SIP_COMPHY_POWER_ON, priv->phys,
 				 lane->id,
-- 
2.17.1

