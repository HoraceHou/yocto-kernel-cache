From 9f1796bf32e5e736095b3c6cd0007f55f6f7026f Mon Sep 17 00:00:00 2001
From: Angela Czubak <aczubak@caviumnetworks.com>
Date: Thu, 18 Oct 2018 10:45:17 +0300
Subject: [PATCH 0312/1051] octeontx: mbox: prevent erroneous tag mismatch by
 casting addition result to u16

Even though mbox->tag_own is u16, mbox->tag_own + 1 is promoted to
int and this causes mismatch when mbox->tag_own = 0xffff and it gets
compared to 0 (ram_hdr.tag). Solved by casting the result to u16.

Signed-off-by: Angela Czubak <aczubak@caviumnetworks.com>
Signed-off-by: Yury Norov <ynorov@marvell.com>
Signed-off-by: Yury Norov <ynorov@caviumnetworks.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c
index 84d8d27d599f..33e78e6c683b 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c
@@ -127,7 +127,7 @@ int mbox_send(struct mbox *mbox, struct mbox_hdr *hdr, const void *txmsg,
 	}
 	if (!wait)
 		return -1; /* timeout */
-	if ((mbox->tag_own + 1) != ram_hdr.tag)
+	if ((u16)(mbox->tag_own + 1) != ram_hdr.tag)
 		return -1; /* tag mismatch */
 	(mbox->tag_own)++;
 
-- 
2.17.1

