From 515992cf2879907b555ce1730133ec7be558c992 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Thu, 9 Aug 2018 10:54:37 +0300
Subject: [PATCH 0554/1051] net: mvpp2: timer-scheduled flag name with prefix
 tx-done

Extend existing boolean flag name timer_scheduled into the name
tx_done_timer_scheduled.
This is needed for 2 reasons:
- New timer to be added with "bulk-timer" feature, so the prefix
  would make the code clear/readable.
- Other objects (timer, callback, tasklet) already have tx_done prefix

Change-Id: Ia822c233b52e0fd294eee19e2405cab594a5a05e
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/59484
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Tested-by: Stefan Chulski <stefanc@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2.h      |  2 +-
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2.h b/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
index 800d8dabe86c..8743f5a74f66 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
@@ -803,7 +803,7 @@ struct mvpp2_pcpu_stats {
 /* Per-CPU port control */
 struct mvpp2_port_pcpu {
 	struct hrtimer tx_done_timer;
-	bool timer_scheduled;
+	bool tx_done_timer_scheduled;
 	/* Tasklet for egress finalization */
 	struct tasklet_struct tx_done_tasklet;
 };
diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 14c01706a994..4f419169e9ca 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -2571,8 +2571,8 @@ static void mvpp2_timer_set(struct mvpp2_port_pcpu *port_pcpu)
 {
 	ktime_t interval;
 
-	if (!port_pcpu->timer_scheduled) {
-		port_pcpu->timer_scheduled = true;
+	if (!port_pcpu->tx_done_timer_scheduled) {
+		port_pcpu->tx_done_timer_scheduled = true;
 		interval = MVPP2_TXDONE_HRTIMER_PERIOD_NS;
 		hrtimer_start(&port_pcpu->tx_done_timer, interval,
 			      HRTIMER_MODE_REL_PINNED);
@@ -2591,7 +2591,7 @@ static void mvpp2_tx_proc_cb(unsigned long data)
 
 	if (!netif_running(dev))
 		return;
-	port_pcpu->timer_scheduled = false;
+	port_pcpu->tx_done_timer_scheduled = false;
 
 	/* Process all the Tx queues */
 	cause = (1 << port->ntxqs) - 1;
@@ -3813,7 +3813,7 @@ static int mvpp2_stop(struct net_device *dev)
 			port_pcpu = per_cpu_ptr(port->pcpu, thread);
 
 			hrtimer_cancel(&port_pcpu->tx_done_timer);
-			port_pcpu->timer_scheduled = false;
+			port_pcpu->tx_done_timer_scheduled = false;
 			tasklet_kill(&port_pcpu->tx_done_tasklet);
 		}
 	}
@@ -5218,7 +5218,7 @@ static int mvpp2_port_probe(struct platform_device *pdev,
 			hrtimer_init(&port_pcpu->tx_done_timer, CLOCK_MONOTONIC,
 				     HRTIMER_MODE_REL_PINNED);
 			port_pcpu->tx_done_timer.function = mvpp2_hr_timer_cb;
-			port_pcpu->timer_scheduled = false;
+			port_pcpu->tx_done_timer_scheduled = false;
 
 			tasklet_init(&port_pcpu->tx_done_tasklet,
 				     mvpp2_tx_proc_cb,
-- 
2.17.1

