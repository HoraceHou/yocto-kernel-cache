From 1bd8a0bb2eb3b0cd4ad93cb34bbad666c6f353ef Mon Sep 17 00:00:00 2001
From: Tomasz Duszynski <tomasz.duszynski@cavium.com>
Date: Tue, 4 Sep 2018 08:23:01 +0200
Subject: [PATCH 0184/1051] net: octeontx2: fix skb fragment add

Currently kernel crashes every time we send a packet which does not
fit into one fragment buffer (any jumbo would do). This happens since
during adding skb fragment we first remove iova mapping and then use
the very same iova address (which is bogus at this point) to get page
va address.

This fixes that by removing iova mapping after we are done with
appending data fragment to skb.

Signed-off-by: Tomasz Duszynski <tduszynski@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/otx2_txrx.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/otx2_txrx.c
index 90fc85a2a7be..7e5819aa14d3 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_txrx.c
@@ -143,13 +143,13 @@ static void otx2_skb_add_frag(struct otx2_nic *pfvf,
 	struct page *page;
 	void *va;
 
-	dma_unmap_page_attrs(pfvf->dev, iova, RCV_FRAG_LEN,
-			     DMA_FROM_DEVICE, DMA_ATTR_SKIP_CPU_SYNC);
-
 	va = phys_to_virt(otx2_iova_to_phys(pfvf->iommu_domain, iova));
 	page = virt_to_page(va);
 	skb_add_rx_frag(skb, skb_shinfo(skb)->nr_frags, page,
 			va - page_address(page), len, RCV_FRAG_LEN);
+
+	dma_unmap_page_attrs(pfvf->dev, iova, RCV_FRAG_LEN,
+			     DMA_FROM_DEVICE, DMA_ATTR_SKIP_CPU_SYNC);
 }
 
 static inline struct sk_buff *
-- 
2.17.1

