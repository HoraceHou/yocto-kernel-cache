From 9663dcba75aff0619b3a8e267664cbe75f8520c2 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Wed, 8 Aug 2018 20:00:38 +0300
Subject: [PATCH 0551/1051] net: mvpp2: set fields hash queue-select napi in
 skb rx

Set fields hash queue-select napi in a SKB created on RX.
This setting slightly improves the RX-to-TX performance and
sets an identification for RX-TX fast-forward path.

The unique hash size is 32 bits but 16 Most-Significant-bits are
Zero for next reason: the hash-value could be built by compiler
directly into arm-thumb code without additional load/store arm-thumb
instructions.

Change-Id: Ia9b817b297131e24b8c42fbd95681ac47c64d57c
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/59481
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Tested-by: Stefan Chulski <stefanc@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 2b81de6a854a..dd84fa8ec18d 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -38,6 +38,7 @@
 #include <net/ipv6.h>
 #include <net/tso.h>
 #include <linux/dma-direct.h>
+#include <net/busy_poll.h>
 
 #include "mvpp2.h"
 #include "mvpp2_prs.h"
@@ -55,6 +56,10 @@ static struct {
 	int buf_num;
 } mvpp2_pools[MVPP2_BM_POOLS_NUM];
 
+/* RX-TX fast-forwarding path optimization */
+#define MVPP2_RXTX_HASH			0xbac0
+#define MVPP2_RXTX_HASH_BMID_MASK	0xf
+
 /* The prototype is added here to be used in start_dev when using ACPI. This
  * will be removed once phylink is used for all modes (dt+ACPI).
  */
@@ -2662,7 +2667,16 @@ static inline void mvpp2_skb_set_extra(struct sk_buff *skb,
 				       u8 rxq_id,
 				       struct mvpp2_bm_pool *bm_pool)
 {
-	/* Set hash, queue_mapping, napi, bm-pool-id ... */
+	u32 hash;
+	enum pkt_hash_types hash_type;
+
+	/* Improve performance and set identification for RX-TX fast-forward */
+	hash = MVPP2_RXTX_HASH | bm_pool->id;
+	hash_type = (status & (MVPP2_RXD_L4_UDP | MVPP2_RXD_L4_TCP)) ?
+		PKT_HASH_TYPE_L4 : PKT_HASH_TYPE_L3;
+	skb_set_hash(skb, hash, hash_type);
+	skb_mark_napi_id(skb, napi);
+	skb_record_rx_queue(skb, (u16)rxq_id);
 }
 
 /* This is "fast inline" clone of __build_skb+build_skb,
-- 
2.17.1

