From d7f8ef4c38837bf6bff4d3de9cfcd5d2638e0762 Mon Sep 17 00:00:00 2001
From: David Sniatkiwicz <davidsn@marvell.com>
Date: Tue, 20 Mar 2018 10:39:40 +0200
Subject: [PATCH 0582/1051] dts: ap810: add multi APs support

This patch updates AP810 DT as part
of the preparations for armada8k-plus support.

Change-Id: I3275362cb200d0e84ebe9cc4127577036c5c8b2e
Signed-off-by: David Sniatkiwicz <davidsn@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/arm64/boot/dts/marvell/armada-8080.dtsi  |  17 +-
 arch/arm64/boot/dts/marvell/armada-ap806.dtsi |   3 +
 .../boot/dts/marvell/armada-ap810-ap0.dtsi    | 136 +++++-----------
 ...-core.dtsi => armada-ap810-octa-core.dtsi} |  46 +++---
 arch/arm64/boot/dts/marvell/armada-ap810.dtsi | 152 ++++++++++++++++++
 .../arm64/boot/dts/marvell/armada-common.dtsi |   2 +
 arch/arm64/boot/dts/marvell/armada-cp110.dtsi |   4 +-
 include/dt-bindings/soc/ap810-stream-id.h     |  23 +++
 8 files changed, 270 insertions(+), 113 deletions(-)
 rename arch/arm64/boot/dts/marvell/{armada-ap810-ap0-octa-core.dtsi => armada-ap810-octa-core.dtsi} (63%)
 create mode 100644 arch/arm64/boot/dts/marvell/armada-ap810.dtsi
 create mode 100644 include/dt-bindings/soc/ap810-stream-id.h

diff --git a/arch/arm64/boot/dts/marvell/armada-8080.dtsi b/arch/arm64/boot/dts/marvell/armada-8080.dtsi
index 299e814d1ded..798c772c389d 100644
--- a/arch/arm64/boot/dts/marvell/armada-8080.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-8080.dtsi
@@ -5,10 +5,25 @@
  * Device Tree file for Marvell Armada-8080 SoC, made of an AP810 OCTA.
  */
 
-#include "armada-ap810-ap0-octa-core.dtsi"
+#include "armada-ap810-ap0.dtsi"
+
+#define AP_NUM				0
+#define AP810_BASE			0xe8000000
+#define AP810_GIC_ITS_BASE		0xf040000
+#define AP810_EIP197_INDEX		0
+#include "armada-ap810-octa-core.dtsi"
+#undef AP_NUM
+#undef AP810_BASE
+#undef AP810_GIC_ITS_BASE
+#undef AP810_EIP197_INDEX
 
 / {
 	model = "Marvell 8080 board";
 	compatible = "marvell,armada-8080", "marvell,armada-ap810-octa",
 				"marvell,armada-ap810";
+
+	aliases {
+		serial0 = &ap0_uart0;
+		serial1 = &ap0_uart1;
+	};
 };
diff --git a/arch/arm64/boot/dts/marvell/armada-ap806.dtsi b/arch/arm64/boot/dts/marvell/armada-ap806.dtsi
index ec0da5b3d7fd..24f99a8acbaa 100644
--- a/arch/arm64/boot/dts/marvell/armada-ap806.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-ap806.dtsi
@@ -7,6 +7,9 @@
 
 #include <dt-bindings/interrupt-controller/arm-gic.h>
 
+/* GIC-v2m in this AP is the XOR MSI parent for CPs south-bridges connected to this AP */
+#define XOR_MSI_PARENT(XOR_NUM) <&gic_v2m0>
+
 /dts-v1/;
 
 / {
diff --git a/arch/arm64/boot/dts/marvell/armada-ap810-ap0.dtsi b/arch/arm64/boot/dts/marvell/armada-ap810-ap0.dtsi
index 39322a1386f2..db7a65840856 100644
--- a/arch/arm64/boot/dts/marvell/armada-ap810-ap0.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-ap810-ap0.dtsi
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: (GPL-2.0+ OR MIT)
 /*
- * Copyright (C) 2017 Marvell Technology Group Ltd.
+ * Copyright (C) 2018 Marvell Technology Group Ltd.
  *
  * Device Tree file for Marvell Armada AP810.
  */
@@ -15,110 +15,62 @@
 	#address-cells = <2>;
 	#size-cells = <2>;
 
-	aliases {
-		serial0 = &ap0_uart0;
-		serial1 = &ap0_uart1;
-	};
-
 	psci {
 		compatible = "arm,psci-0.2";
 		method = "smc";
 	};
 
-	ap810-ap0 {
+	reserved-memory {
 		#address-cells = <2>;
 		#size-cells = <2>;
+		ranges;
+
+		psci-area@4000000 {
+			reg = <0 0x4000000 0 0x200000>;
+			no-map;
+		};
+	};
+
+	config-space {
+		#address-cells = <1>;
+		#size-cells = <1>;
 		compatible = "simple-bus";
+		ranges = <0x0 0x0 0xdc000000 0x14000000>;
 		interrupt-parent = <&gic>;
-		ranges;
 
-		config-space@e8000000 {
+		/* Every AP810 die includes GIC Distributor.
+		 * As GIC-600 feature there is no need to initialize
+		 * every distributor in multi-die system, since GIC-600
+		 * broadcast the distributor configuration for other dies,
+		 * (this is done from AP0 in ATF firmware).
+		 * The above explains why we need to describe the
+		 * following interrupt controller node only for AP0
+		 */
+		gic: interrupt-controller@13000000 {
+			compatible = "arm,gic-v3";
+			#interrupt-cells = <3>;
 			#address-cells = <1>;
 			#size-cells = <1>;
-			compatible = "simple-bus";
-			ranges = <0x0 0x0 0xe8000000 0x4000000>;
-			interrupt-parent = <&gic>;
-
-			gic: interrupt-controller@3000000 {
-				compatible = "arm,gic-v3";
-				#interrupt-cells = <3>;
-				#address-cells = <1>;
-				#size-cells = <1>;
-				interrupt-controller;
-				interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH>;
-				ranges;
-
-				reg = <0x3000000 0x10000>,	/* GICD */
-				      <0x3060000 0x100000>,	/* GICR */
-				      <0x00c0000 0x2000>,	/* GICC */
-				      <0x00d0000 0x1000>,	/* GICH */
-				      <0x00e0000 0x2000>;	/* GICV */
-
-				ap0_gic_its: interrupt-controller@3040000 {
-					compatible = "arm,gic-v3-its";
-					msi-controller;
-					#msi-cells = <1>;
-					reg = <0x3040000 0x20000>;
-				};
-			};
-
-			timer {
-				compatible = "arm,armv8-timer";
-				interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_LOW>,
-					     <GIC_PPI 14 IRQ_TYPE_LEVEL_LOW>,
-					     <GIC_PPI 11 IRQ_TYPE_LEVEL_LOW>,
-					     <GIC_PPI 10 IRQ_TYPE_LEVEL_LOW>;
-			};
-
-			ap0_xor@400000 {
-				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
-				reg = <0x400000 0x1000>,
-				      <0x410000 0x1000>;
-				msi-parent = <&ap0_gic_its 0xa0>;
-				dma-coherent;
-			};
-
-			ap0_xor@420000 {
-				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
-				reg = <0x420000 0x1000>,
-				      <0x430000 0x1000>;
-				msi-parent = <&ap0_gic_its 0xa1>;
-				dma-coherent;
-			};
-
-			ap0_xor@440000 {
-				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
-				reg = <0x440000 0x1000>,
-				      <0x450000 0x1000>;
-				msi-parent = <&ap0_gic_its 0xa2>;
-				dma-coherent;
-			};
-
-			ap0_xor@460000 {
-				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
-				reg = <0x460000 0x1000>,
-				      <0x470000 0x1000>;
-				msi-parent = <&ap0_gic_its 0xa3>;
-				dma-coherent;
-			};
-
-			ap0_uart0: serial@512000 {
-				compatible = "snps,dw-apb-uart";
-				reg = <0x512000 0x100>;
-				reg-shift = <2>;
-				interrupts = <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>;
-				reg-io-width = <1>;
-				status = "disabled";
-			};
+			interrupt-controller;
+			interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH>;
+			ranges;
+
+			reg = <0x13000000 0x10000>,	/* GICD */
+			      <0x13060000 0x100000>,	/* GICR */
+			      <0x100c0000 0x2000>,	/* GICC */
+			      <0x100d0000 0x1000>,	/* GICH */
+			      <0x100e0000 0x2000>;	/* GICV */
+		};
 
-			ap0_uart1: serial@512100 {
-				compatible = "snps,dw-apb-uart";
-				reg = <0x512100 0x100>;
-				reg-shift = <2>;
-				interrupts = <GIC_SPI 23 IRQ_TYPE_LEVEL_HIGH>;
-				reg-io-width = <1>;
-				status = "disabled";
-			};
+		/* All APs are synced in relevance to AP0 timer,
+		 * so we describe timer node only for AP0.
+		 */
+		timer {
+			compatible = "arm,armv8-timer";
+			interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_LOW>,
+				     <GIC_PPI 14 IRQ_TYPE_LEVEL_LOW>,
+				     <GIC_PPI 11 IRQ_TYPE_LEVEL_LOW>,
+				     <GIC_PPI 10 IRQ_TYPE_LEVEL_LOW>;
 		};
 	};
 };
diff --git a/arch/arm64/boot/dts/marvell/armada-ap810-ap0-octa-core.dtsi b/arch/arm64/boot/dts/marvell/armada-ap810-octa-core.dtsi
similarity index 63%
rename from arch/arm64/boot/dts/marvell/armada-ap810-ap0-octa-core.dtsi
rename to arch/arm64/boot/dts/marvell/armada-ap810-octa-core.dtsi
index 7d00ae78fc79..09c3c61481de 100644
--- a/arch/arm64/boot/dts/marvell/armada-ap810-ap0-octa-core.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-ap810-octa-core.dtsi
@@ -5,61 +5,71 @@
  * Device Tree file for Marvell Armada AP810 OCTA cores.
  */
 
-#include "armada-ap810-ap0.dtsi"
+#define CPU_NUM(x)			(AP_NUM << 16 | x)
+
+#include "armada-ap810.dtsi"
 
 / {
-	cpus {
+	cpus@AP_NUM {
 		#address-cells = <1>;
 		#size-cells = <0>;
 		compatible = "marvell,armada-ap810-octa";
 
-		cpu@0 {
+		cpu0@000 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x000>;
+			reg = <CPU_NUM(0x0)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@1 {
+		cpu1@001 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x001>;
+			reg = <CPU_NUM(0x1)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@100 {
+		cpu2@100 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x100>;
+			reg = <CPU_NUM(0x100)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@101 {
+		cpu3@101 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x101>;
+			reg = <CPU_NUM(0x101)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@200 {
+		cpu4@200 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x200>;
+			reg = <CPU_NUM(0x200)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@201 {
+		cpu5@201 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x201>;
+			reg = <CPU_NUM(0x201)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@300 {
+		cpu6@300 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x300>;
+			reg = <CPU_NUM(0x300)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
-		cpu@301 {
+		cpu7@301 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a72", "arm,armv8";
-			reg = <0x301>;
+			reg = <CPU_NUM(0x301)>;
 			enable-method = "psci";
+			numa-node-id = <AP_NUM>;
 		};
 	};
 };
diff --git a/arch/arm64/boot/dts/marvell/armada-ap810.dtsi b/arch/arm64/boot/dts/marvell/armada-ap810.dtsi
new file mode 100644
index 000000000000..64b90ed7bb07
--- /dev/null
+++ b/arch/arm64/boot/dts/marvell/armada-ap810.dtsi
@@ -0,0 +1,152 @@
+/*
+ * Copyright (C) 2018 Marvell Technology Group Ltd.
+ *
+ * This file is dual-licensed: you can use it either under the terms
+ * of the GPLv2 or the X11 license, at your option. Note that this dual
+ * licensing only applies to this file, and not this project as a
+ * whole.
+ *
+ *  a) This library is free software; you can redistribute it and/or
+ *     modify it under the terms of the GNU General Public License as
+ *     published by the Free Software Foundation; either version 2 of the
+ *     License, or (at your option) any later version.
+ *
+ *     This library is distributed in the hope that it will be useful,
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ * Or, alternatively,
+ *
+ *  b) Permission is hereby granted, free of charge, to any person
+ *     obtaining a copy of this software and associated documentation
+ *     files (the "Software"), to deal in the Software without
+ *     restriction, including without limitation the rights to use,
+ *     copy, modify, merge, publish, distribute, sublicense, and/or
+ *     sell copies of the Software, and to permit persons to whom the
+ *     Software is furnished to do so, subject to the following
+ *     conditions:
+ *
+ *     The above copyright notice and this permission notice shall be
+ *     included in all copies or substantial portions of the Software.
+ *
+ *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+ *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ *     OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+/*
+ * Device Tree file for Marvell Armada AP810.
+ */
+
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/soc/ap810-stream-id.h>
+#include "armada-common.dtsi"
+
+/* For every AP810, include ITS unit (part of GICv3),
+ * the ITS node should be part of GIC generic node.
+ * This node describe the ITS (Interrupt translation service)
+ * of AP-x.
+ * ITS does not have broadcast configuration (every ITS have his own)
+ * interrupt and configuration.
+ */
+
+/* General settings related to AP, to be used in CP south-bridges connected to this AP */
+#define AP810_GIC_BASE		0x3000000
+#define AP_ICU_SET_SPI_HIGH	((AP810_BASE >> 32) & 0xffffffff)
+#define AP_ICU_SET_SPI_LOW	((AP810_BASE & 0xffffffff) + AP810_GIC_BASE + 0x40)
+
+#define AP_ICU_CLR_SPI_HIGH	((AP810_BASE >> 32) & 0xffffffff)
+#define AP_ICU_CLR_SPI_LOW	((AP810_BASE & 0xffffffff) + AP810_GIC_BASE + 0x48)
+
+&gic{
+	AP810_LABEL(gic_its): interrupt-controller@AP810_GIC_ITS_BASE {
+		compatible = "arm,gic-v3-its";
+		msi-controller;
+		#msi-cells = <1>;
+		reg = <AP810_GIC_ITS_BASE 0x20000>;
+	};
+};
+
+/* GIC ITS in this AP is MSI parent for XOR engines in CPs south-bridges connected to this AP  */
+#define XOR_MSI_PARENT(XOR_NUM) <&AP810_LABEL(gic_its) MVEBU_STREAM_ID_CP_XORx(XOR_NUM)>
+
+/ {
+	AP810_NAME {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		compatible = "simple-bus";
+		interrupt-parent = <&gic>;
+		ranges;
+
+		config-space {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "simple-bus";
+			ranges = <0x0 0x0 AP810_BASE 0x4000000>;
+			interrupt-parent = <&gic>;
+
+			AP810_LABEL(gicp): gicp@3000040 {
+				compatible = "marvell,ap806-gicp";
+				reg = <0x3000040 0x10>;
+				marvell,spi-ranges = <92 64>, <156 64>;
+				msi-controller;
+			};
+
+			AP810_LABEL(xor0): xor0@400000 {
+				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
+				reg = <0x400000 0x1000>,
+				      <0x410000 0x1000>;
+				msi-parent = <&AP810_LABEL(gic_its) MVEBU_STREAM_ID_APx_XORx(0, AP_NUM)>;
+				dma-coherent;
+			};
+
+			AP810_LABEL(xor1): xor1@420000 {
+				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
+				reg = <0x420000 0x1000>,
+				      <0x430000 0x1000>;
+				msi-parent = <&AP810_LABEL(gic_its) MVEBU_STREAM_ID_APx_XORx(1, AP_NUM)>;
+				dma-coherent;
+			};
+
+			AP810_LABEL(xor2): xor2@440000 {
+				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
+				reg = <0x440000 0x1000>,
+				      <0x450000 0x1000>;
+				msi-parent = <&AP810_LABEL(gic_its) MVEBU_STREAM_ID_APx_XORx(2, AP_NUM)>;
+				dma-coherent;
+			};
+
+			AP810_LABEL(xor3): xor3@460000 {
+				compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
+				reg = <0x460000 0x1000>,
+				      <0x470000 0x1000>;
+				msi-parent = <&AP810_LABEL(gic_its) MVEBU_STREAM_ID_APx_XORx(3, AP_NUM)>;
+				dma-coherent;
+			};
+
+			AP810_LABEL(uart0): serial0@512000 {
+				compatible = "snps,dw-apb-uart";
+				reg = <0x512000 0x100>;
+				reg-shift = <2>;
+				interrupts = <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>;
+				reg-io-width = <1>;
+				status = "disabled";
+			};
+
+			AP810_LABEL(uart1): serial1@512100 {
+				compatible = "snps,dw-apb-uart";
+				reg = <0x512100 0x100>;
+				reg-shift = <2>;
+				interrupts = <GIC_SPI 23 IRQ_TYPE_LEVEL_HIGH>;
+				reg-io-width = <1>;
+				status = "disabled";
+			};
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/marvell/armada-common.dtsi b/arch/arm64/boot/dts/marvell/armada-common.dtsi
index 222b65c2c1fa..cefb26d2f7b7 100644
--- a/arch/arm64/boot/dts/marvell/armada-common.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-common.dtsi
@@ -8,3 +8,5 @@
 #define EVALUATOR(x, y) PASTER(x, y)
 #define CP110_NAME EVALUATOR(cp, CP110_NUM)
 #define CP110_LABEL(name) EVALUATOR(CP110_NAME, EVALUATOR(_, name))
+#define AP810_NAME EVALUATOR(ap, AP_NUM)
+#define AP810_LABEL(name) EVALUATOR(AP810_NAME, EVALUATOR(_, name))
diff --git a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
index ea216bad4262..1535761e47f1 100644
--- a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
@@ -264,7 +264,7 @@
 			compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
 			reg = <0x6a0000 0x1000>, <0x6b0000 0x1000>;
 			dma-coherent;
-			msi-parent = <&gic_v2m0>;
+			msi-parent = XOR_MSI_PARENT(0);
 			clock-names = "core", "reg";
 			clocks = <&CP110_LABEL(clk) 1 8>,
 				 <&CP110_LABEL(clk) 1 14>;
@@ -274,7 +274,7 @@
 			compatible = "marvell,armada-7k-xor", "marvell,xor-v2";
 			reg = <0x6c0000 0x1000>, <0x6d0000 0x1000>;
 			dma-coherent;
-			msi-parent = <&gic_v2m0>;
+			msi-parent = XOR_MSI_PARENT(1);
 			clock-names = "core", "reg";
 			clocks = <&CP110_LABEL(clk) 1 7>,
 				 <&CP110_LABEL(clk) 1 14>;
diff --git a/include/dt-bindings/soc/ap810-stream-id.h b/include/dt-bindings/soc/ap810-stream-id.h
new file mode 100644
index 000000000000..ef347558d760
--- /dev/null
+++ b/include/dt-bindings/soc/ap810-stream-id.h
@@ -0,0 +1,23 @@
+/*
+ * All the Stream id calculation based on ATF configuration.
+ * Reference for this calculation can be found under
+ * <atf root dir>/drivers/marvell/mochi/<required setup>.h
+ */
+
+/* AP XOR stream IDs: 0x100-0xFFF */
+#define MVEBU_STREAM_ID_AP0_XOR0		0x100
+/* max stream IDs per AP */
+#define MVEBU_STREAM_ID_AP_MAX			0x200
+#define MVEBU_STREAM_ID_APx_XORx(x, ap)		(MVEBU_STREAM_ID_AP0_XOR0 + \
+						(ap * MVEBU_STREAM_ID_AP_MAX) + x)
+
+/* CP stream ID base */
+#define MVEBU_STREAM_ID_BASE			0x80
+
+/* CP XOR0 stream ID offset */
+#define MVEBU_STREAM_ID_CP_XOR0_OFFSET		0x9
+
+/* CP XOR0 stream ID: 0x89 */
+#define MVEBU_STREAM_ID_CP_XOR0			(MVEBU_STREAM_ID_BASE + MVEBU_STREAM_ID_CP_XOR0_OFFSET)
+
+#define MVEBU_STREAM_ID_CP_XORx(xor_num)	(MVEBU_STREAM_ID_CP_XOR0 + xor_num)
-- 
2.17.1

