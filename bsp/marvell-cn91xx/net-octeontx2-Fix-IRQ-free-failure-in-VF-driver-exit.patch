From c4614a09a6009ce97af4534037c90c7e3b9341fc Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Mon, 7 Jan 2019 10:19:43 +0530
Subject: [PATCH 0884/1051] net: octeontx2: Fix IRQ free failure in VF driver
 exit

Not freeing MBOX irq when AF is not responding to
READY message is resulting in a kernel crash upon
driver exit.

Change-Id: Iff0615fb931712ef3a4831ca4383a30f8f6f6500
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/1793
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/otx2_vf.c  | 23 +++++++++++--------
 1 file changed, 13 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_vf.c b/drivers/net/ethernet/marvell/octeontx2/otx2_vf.c
index 0c2fbf2c950f..a07f5853f060 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_vf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_vf.c
@@ -147,6 +147,15 @@ static irqreturn_t otx2vf_vfaf_mbox_intr_handler(int irq, void *vf_irq)
 	return IRQ_HANDLED;
 }
 
+static void otx2vf_disable_mbox_intr(struct otx2_nic *vf)
+{
+	int vector = pci_irq_vector(vf->pdev, RVU_VF_INT_VEC_MBOX);
+
+	/* Disable VF => PF mailbox IRQ */
+	otx2_write64(vf, RVU_VF_INT_ENA_W1C, BIT_ULL(0));
+	free_irq(vector, vf);
+}
+
 static int otx2vf_register_mbox_intr(struct otx2_nic *vf)
 {
 	struct otx2_hw *hw = &vf->hw;
@@ -173,27 +182,21 @@ static int otx2vf_register_mbox_intr(struct otx2_nic *vf)
 
 	/* Check mailbox communication with PF */
 	req = otx2_mbox_alloc_msg_ready(&vf->mbox);
-	if (!req)
+	if (!req) {
+		otx2vf_disable_mbox_intr(vf);
 		return -ENOMEM;
+	}
 
 	err = otx2_sync_mbox_msg(&vf->mbox);
 	if (err) {
 		dev_warn(vf->dev,
 			 "AF not responding to mailbox, deferring probe\n");
+		otx2vf_disable_mbox_intr(vf);
 		return -EPROBE_DEFER;
 	}
 	return 0;
 }
 
-static void otx2vf_disable_mbox_intr(struct otx2_nic *vf)
-{
-	int vector = pci_irq_vector(vf->pdev, RVU_VF_INT_VEC_MBOX);
-
-	/* Disable VF => PF mailbox IRQ */
-	otx2_write64(vf, RVU_VF_INT_ENA_W1C, BIT_ULL(0));
-	free_irq(vector, vf);
-}
-
 static void otx2vf_vfaf_mbox_destroy(struct otx2_nic *vf)
 {
 	struct mbox *mbox = &vf->mbox;
-- 
2.17.1

