From 81a69b36c69d4a8460e3522cfd652957ed9b72b8 Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Thu, 21 Feb 2019 12:15:13 +0530
Subject: [PATCH 1019/1051] octeontx2-af: Fix accessing rvu->tx_stall pointer

Currently rvu->tx_stall is initialized only for T96
A0 platform where the workaround is applied. This patch
fixes kernel crash caused due to accessing this pointer
on T95.

Change-Id: I4f97955383e2b67f9ffc580107cd6fdbdd9e51bf
Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/4424
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
index 8005b06e7f9d..5bbabb2f6173 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
@@ -86,21 +86,24 @@ void rvu_nix_txsch_lock(struct nix_hw *nix_hw)
 {
 	struct nix_tx_stall *tx_stall = nix_hw->tx_stall;
 
-	mutex_lock(&tx_stall->txsch_lock);
+	if (tx_stall)
+		mutex_lock(&tx_stall->txsch_lock);
 }
 
 void rvu_nix_txsch_unlock(struct nix_hw *nix_hw)
 {
 	struct nix_tx_stall *tx_stall = nix_hw->tx_stall;
 
-	mutex_unlock(&tx_stall->txsch_lock);
+	if (tx_stall)
+		mutex_unlock(&tx_stall->txsch_lock);
 }
 
 void rvu_nix_txsch_config_changed(struct nix_hw *nix_hw)
 {
 	struct nix_tx_stall *tx_stall = nix_hw->tx_stall;
 
-	tx_stall->txsch_config_changed = true;
+	if (tx_stall)
+		tx_stall->txsch_config_changed = true;
 }
 
 static inline struct nix_hw *get_nix_hw(struct rvu_hwinfo *hw, int blkaddr)
-- 
2.17.1

