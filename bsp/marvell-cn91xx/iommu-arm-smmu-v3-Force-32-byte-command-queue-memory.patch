From a87d4d94c345b868d58732bd3752bb8d02410f24 Mon Sep 17 00:00:00 2001
From: Linu Cherian <lcherian@marvell.com>
Date: Wed, 9 Jan 2019 18:09:14 +0530
Subject: [PATCH 0904/1051] iommu/arm-smmu-v3: Force 32 byte command queue
 memory reads on CN96XX SMMU

SMMU block issues unsupported 64 byte memory reads under certain
conditions for reading commands from the command queue.
Hence force SMMU to issue 32 byte memory reads always.

Change-Id: Ic60b5e09e2e9975fd27382e362b2e9007a19f6bf
Signed-off-by: Linu Cherian <lcherian@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/2825
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06.
Just some minor context mods in order to port to wrlinux]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/iommu/arm-smmu-v3.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c
index 91a5e324faf9..ab2e4398c413 100644
--- a/drivers/iommu/arm-smmu-v3.c
+++ b/drivers/iommu/arm-smmu-v3.c
@@ -96,6 +96,9 @@
 #define IDR5_VAX			GENMASK(11, 10)
 #define IDR5_VAX_52_BIT			1
 
+#define ARM_SMMU_IIDR			0x18
+#define IIDR_CN96XX_A0			0x2b20034c
+
 #define ARM_SMMU_CR0			0x20
 #define CR0_CMDQEN			(1 << 3)
 #define CR0_EVTQEN			(1 << 2)
@@ -559,6 +562,7 @@ struct arm_smmu_device {
 
 #define ARM_SMMU_OPT_SKIP_PREFETCH	(1 << 0)
 #define ARM_SMMU_OPT_PAGE0_REGS_ONLY	(1 << 1)
+#define ARM_SMMU_OPT_FORCE_QDRAIN	(1 << 2)
 	u32				options;
 
 	struct arm_smmu_cmdq		cmdq;
@@ -936,6 +940,13 @@ static void arm_smmu_cmdq_issue_cmd(struct arm_smmu_device *smmu,
 	}
 
 	spin_lock_irqsave(&smmu->cmdq.lock, flags);
+	if (smmu->options & ARM_SMMU_OPT_FORCE_QDRAIN) {
+		struct arm_smmu_queue *q = &smmu->cmdq.q;
+		/* Ensure command queue has atmost two entries */
+		if (!(q->prod & 0x1)  && queue_poll_cons(q, true, false))
+			dev_err(smmu->dev, "command drain timeout\n");
+	}
+
 	arm_smmu_cmdq_insert_cmd(smmu, cmd);
 	spin_unlock_irqrestore(&smmu->cmdq.lock, flags);
 }
@@ -2723,6 +2734,22 @@ static int arm_smmu_device_hw_probe(struct arm_smmu_device *smmu)
 
 	dev_info(smmu->dev, "ias %lu-bit, oas %lu-bit (features 0x%08x)\n",
 		 smmu->ias, smmu->oas, smmu->features);
+
+	/* Options based on implementation */
+	reg = readl_relaxed(smmu->base + ARM_SMMU_IIDR);
+
+	switch (reg) {
+	case IIDR_CN96XX_A0:
+		/* Marvell Octeontx2 SMMU wrongly issues unsupported
+		 * 64 byte memory reads under certain conditions for
+		 * reading commands from the command queue.
+		 * Force command queue drain for every two writes,
+		 * so that SMMU issues only 32 byte reads.
+		 */
+		smmu->options |= ARM_SMMU_OPT_FORCE_QDRAIN;
+		break;
+	}
+
 	return 0;
 }
 
-- 
2.17.1

