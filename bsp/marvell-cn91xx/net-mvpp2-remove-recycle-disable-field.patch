From 275c0aec9a0d211a7b20f1fa0faf2be83a52614d Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Tue, 4 Sep 2018 17:40:13 +0300
Subject: [PATCH 0566/1051] net: mvpp2: remove recycle-disable field

Recycle-shared struct is used by all CPUs. To avoid side-effects on
CPU's cache-line remove recycle-disable field and align size-of-struct.

Change-Id: I357c462c8aafe6b82c9f53f1df573cc44b1597ce
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/59726
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Tested-by: Stefan Chulski <stefanc@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 16 ++--------------
 1 file changed, 2 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 87f4f6d7f311..fd4f98c8b4ec 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -95,12 +95,9 @@ struct mvpp2_share {
 	struct mvpp2_recycle_pcpu *recycle;
 	void *recycle_base;
 
-	/* Run-time Debug disable capability */
-	bool recycle_dis;
-
 	/* Counters set by Probe/Init/Open */
 	int num_open_ports;
-};
+} __aligned(L1_CACHE_BYTES);
 
 struct mvpp2_share mvpp2_share;
 
@@ -2867,12 +2864,6 @@ static u32 mvpp2_skb_tx_csum(struct mvpp2_port *port, struct sk_buff *skb)
 	return MVPP2_TXD_L4_CSUM_NOT | MVPP2_TXD_IP_CSUM_DISABLE;
 }
 
-/* Global may be called by debugfs */
-void mvpp2_recycle_dis_cfg(bool disable)
-{
-	mvpp2_share.recycle_dis = disable;
-}
-
 void mvpp2_recycle_stats(void)
 {
 	int cpu;
@@ -3034,9 +3025,6 @@ static struct sk_buff *mvpp2_recycle_get(struct mvpp2_port *port,
 	struct sk_buff *skb;
 	dma_addr_t dma_addr;
 
-	if (unlikely(mvpp2_share.recycle_dis))
-		goto end;
-
 	cpu = smp_processor_id();
 	pcpu = mvpp2_share.recycle + cpu;
 
@@ -3077,7 +3065,7 @@ static struct sk_buff *mvpp2_recycle_get(struct mvpp2_port *port,
 		pcpu->idx[MVPP2_BM_POOLS_NUM]--;
 		return skb;
 	}
-end:
+
 	return kmem_cache_alloc(skbuff_head_cache, GFP_ATOMIC);
 }
 
-- 
2.17.1

