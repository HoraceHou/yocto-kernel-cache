From 9cb677e065387cce774715d7b476368819121eda Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Tue, 4 Sep 2018 17:35:55 +0300
Subject: [PATCH 0565/1051] net: mvpp2: sync rx buffer before unmap

This patch fixes the "RCU stall on cpu".
The stall always occurred by TX in iperf-TCP(TSO)-bidirectional
scenario. The stall is inspired by bad TCP RX ack buffer.
Finding:
The RX buffer _unmap_ is asynchroneous and further data processing
may be incorrect.
FIX:
Make _sync_ operation before _unmap_ to guaranty the data coherency.

Change-Id: I75d754780ca5b35eabf4138bbed506120b67a304
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/59725
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Tested-by: Stefan Chulski <stefanc@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 524228b68306..87f4f6d7f311 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -3205,6 +3205,10 @@ static int mvpp2_rx(struct mvpp2_port *port, struct napi_struct *napi,
 		else
 			frag_size = bm_pool->frag_size;
 
+		/* _sync_ for coherency (_unmap_ is asynchroneous) */
+		dma_sync_single_for_cpu(dev->dev.parent, dma_addr,
+					MVPP2_RX_BUF_SIZE(rx_bytes),
+					DMA_FROM_DEVICE);
 		prefetch(data + NET_SKB_PAD); /* packet header */
 
 		dma_unmap_single(dev->dev.parent, dma_addr,
-- 
2.17.1

