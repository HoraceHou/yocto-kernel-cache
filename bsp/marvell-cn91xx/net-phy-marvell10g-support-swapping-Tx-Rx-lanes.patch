From 59717204496e785f1c3cd5cc80258f53570c9898 Mon Sep 17 00:00:00 2001
From: Antoine Tenart <antoine.tenart@bootlin.com>
Date: Mon, 24 Sep 2018 14:38:21 +0200
Subject: [PATCH 0735/1051] net: phy: marvell10g: support swapping Tx/Rx lanes

This patch adds support for the enet-phy-lane-swap device tree property,
allowing to describe a PHY which has its Tx and Rx lanes swapped. When
probed the PHY driver configures the hardware taking this into account.

Change-Id: I8c1df54ec8c247b2b53f8d5c431cb11d44ef5e21
Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/60545
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/phy/marvell10g.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/net/phy/marvell10g.c b/drivers/net/phy/marvell10g.c
index f77a2d9e7f9d..f7a20b76efc7 100644
--- a/drivers/net/phy/marvell10g.c
+++ b/drivers/net/phy/marvell10g.c
@@ -24,6 +24,7 @@
 #include <linux/ctype.h>
 #include <linux/hwmon.h>
 #include <linux/marvell_phy.h>
+#include <linux/of.h>
 #include <linux/phy.h>
 
 enum {
@@ -36,6 +37,8 @@ enum {
 	MV_PCS_PAIRSWAP_AB	= 0x0002,
 	MV_PCS_PAIRSWAP_NONE	= 0x0003,
 
+	MV_PMAPMD_XG_EXT	= 0xc000,
+
 	/* These registers appear at 0x800X and 0xa00X - the 0xa00X control
 	 * registers appear to set themselves to the 0x800X when AN is
 	 * restarted, but status registers appear readable from either.
@@ -57,6 +60,8 @@ struct mv3310_priv {
 	char *hwmon_name;
 };
 
+#define MV_PMAPMD_XG_EXT_SWAP_PAIRS	BIT(0)
+
 static int mv3310_modify(struct phy_device *phydev, int devad, u16 reg,
 			 u16 mask, u16 bits)
 {
@@ -239,6 +244,26 @@ static int mv3310_probe(struct phy_device *phydev)
 	return 0;
 }
 
+#ifdef CONFIG_OF_MDIO
+static void mv3310_of_config_init(struct phy_device *phydev)
+{
+	struct device_node *of_node = phydev->mdio.dev.of_node;
+
+	if (!of_node)
+		return;
+
+	if (of_property_read_bool(of_node, "enet-phy-lane-swap")) {
+		mv3310_modify(phydev, MDIO_MMD_PMAPMD, MV_PMAPMD_XG_EXT,
+			      MV_PMAPMD_XG_EXT_SWAP_PAIRS,
+			      MV_PMAPMD_XG_EXT_SWAP_PAIRS);
+	}
+}
+#else
+static void mv3310_of_config_init(struct phy_device *phydev)
+{
+}
+#endif
+
 static int mv3310_suspend(struct phy_device *phydev)
 {
 	return 0;
@@ -262,6 +287,8 @@ static int mv3310_config_init(struct phy_device *phydev)
 	    phydev->interface != PHY_INTERFACE_MODE_10GKR)
 		return -ENODEV;
 
+	mv3310_of_config_init(phydev);
+
 	__set_bit(ETHTOOL_LINK_MODE_Pause_BIT, supported);
 	__set_bit(ETHTOOL_LINK_MODE_Asym_Pause_BIT, supported);
 
-- 
2.17.1

