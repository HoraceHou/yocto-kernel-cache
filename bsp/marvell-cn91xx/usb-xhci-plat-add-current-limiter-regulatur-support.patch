From 9749e0930c7fda3912b018a53239f15bff457ee4 Mon Sep 17 00:00:00 2001
From: Alex Leibovich <alexl@marvell.com>
Date: Thu, 3 Jan 2019 11:01:51 +0200
Subject: [PATCH 0833/1051] usb: xhci-plat: add current-limiter regulatur
 support

On Armada-70x0/80x0-db current_limit signal controls the usb current limit.
When enabled, the signal configures the current limit to 900mA (for USB3)
otherwise, the current limit is 500mA.
This patch adds support that allows us to configure the
current limit using current-limiter regulator.

Change-Id: I00006d669cd8d2fbc15c2cca5b71176e1d278211
Signed-off-by: Alex Leibovich <alexl@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/62383
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/1563
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06.
Just some minor context mods in order to port to wrlinux]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../devicetree/bindings/usb/usb-nop-xceiv.txt          |  3 +++
 drivers/usb/host/xhci-plat.c                           | 10 ++++++++++
 2 files changed, 13 insertions(+)

diff --git a/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt b/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt
index 4dc6a8ee3071..7406e1f86c83 100644
--- a/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt
+++ b/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt
@@ -16,6 +16,8 @@ Optional properties:
 
 - vcc-supply: phandle to the regulator that provides power to the PHY.
 
+- current-limiter-supply: phandle to the regulator that set the current limit to the PHY.
+
 - reset-gpios: Should specify the GPIO for reset.
 
 - vbus-detect-gpio: should specify the GPIO detecting a VBus insertion
@@ -31,6 +33,7 @@ Example:
 		clocks = <&osc 0>;
 		clock-names = "main_clk";
 		vcc-supply = <&hsusb1_vcc_regulator>;
+		current-limiter-supply = <&hsusb1_current_limiter_regulator>;
 		reset-gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;
 		vbus-detect-gpio = <&gpio2 13 GPIO_ACTIVE_HIGH>;
 		vbus-regulator = <&vbus_regulator>;
diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index b4d576a66d87..f0e3fa1af92e 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -18,6 +18,7 @@
 #include <linux/usb/phy.h>
 #include <linux/slab.h>
 #include <linux/acpi.h>
+#include <linux/regulator/consumer.h>
 
 #include "xhci.h"
 #include "xhci-plat.h"
@@ -160,6 +161,7 @@ static int xhci_plat_probe(struct platform_device *pdev)
 	struct clk              *reg_clk;
 	int			ret;
 	int			irq;
+	struct regulator	*current_limiter_regulator;
 
 	if (usb_disabled())
 		return -ENODEV;
@@ -302,6 +304,14 @@ static int xhci_plat_probe(struct platform_device *pdev)
 		if (ret)
 			goto put_usb3_hcd;
 		hcd->skip_phy_initialization = 1;
+		current_limiter_regulator =
+			devm_regulator_get_optional((hcd->usb_phy)->dev,
+							"current-limiter");
+		if (!IS_ERR(current_limiter_regulator)) {
+			if (regulator_enable(current_limiter_regulator))
+				dev_err(&pdev->dev,
+					"Failed to enable Current-limiter regulator\n");
+		}
 	}
 
 	ret = usb_add_hcd(hcd, irq, IRQF_SHARED);
-- 
2.17.1

