From c9358bf7614d30d7c6b53a720774b39f43942200 Mon Sep 17 00:00:00 2001
From: Peter Swain <pswain@marvell.com>
Date: Fri, 25 Jan 2019 22:01:39 -0800
Subject: [PATCH 0917/1051] mmc: cavium: avoid single-slot startup issues

Previous code relied on particular state left by u-boot,
or a previous _probe attempt aborted with EPROBE_DEFER,
else it would program a clock-divisor of zero and hang MMC.

Do not cache emm_switch setting if it has clock divisor zero.
Do not use frequency params before they have been extracted
from devtree.
Do enforce lower frequency bound (400KHz) from mmc/core.

Change-Id: I2d19084d1ab57d0f98e2ce1ffcd6fb918228f53c
Signed-off-by: Peter Swain <pswain@marvell.com>
Depends-On: I36c8368406ee41da0cd227957515971340b60a21
Reviewed-on: https://sj1git1.cavium.com/2883
Tested-by: Nadav Haklai <Nadav.Haklai@cavium.com>
Reviewed-by: Peter Swain <pswain@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/mmc/host/cavium.c | 9 ++++++---
 drivers/mmc/host/cavium.h | 1 +
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/drivers/mmc/host/cavium.c b/drivers/mmc/host/cavium.c
index 79f073fc5a7c..834d56f1fd29 100644
--- a/drivers/mmc/host/cavium.c
+++ b/drivers/mmc/host/cavium.c
@@ -300,7 +300,7 @@ static void do_switch(struct cvm_mmc_host *host, u64 emm_switch)
 
 	check_switch_errors(host);
 
-	if (slot) {
+	if (slot && (emm_switch & MIO_EMM_SWITCH_CLK)) {
 		slot->cmd6_pending = false;
 		slot->cached_switch = emm_switch;
 	}
@@ -390,7 +390,7 @@ static void cvm_mmc_switch_to(struct cvm_mmc_slot *slot)
 	 * bus_id is non-zero.
 	 */
 	set_bus_id(&emm_switch, 0);
-	do_switch(host, emm_switch & GENMASK_ULL(0, 31));
+	do_switch(host, emm_switch & MIO_EMM_SWITCH_CLK);
 	set_bus_id(&emm_switch, slot->bus_id);
 	do_switch(host, emm_switch);
 	host->powered = true;
@@ -1297,6 +1297,8 @@ static void cvm_mmc_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 	clock = ios->clock;
 	max_f = max_supported_frequency(host);
 
+	if (clock < mmc->f_min)
+		clock = mmc->f_min;
 	if (clock > max_f)
 		clock = max_f;
 	slot->clock = clock;
@@ -1450,6 +1452,7 @@ static int cvm_mmc_init_lowlevel(struct cvm_mmc_slot *slot)
 	/* Make the changes take effect on this bus slot. */
 	set_bus_id(&emm_switch, slot->bus_id);
 	do_switch(host, emm_switch);
+	slot->cached_switch = emm_switch;
 	host->powered = true;
 
 	/*
@@ -1599,8 +1602,8 @@ int cvm_mmc_of_slot_probe(struct device *dev, struct cvm_mmc_host *host)
 
 	host->acquire_bus(host);
 	host->slot[id] = slot;
-	cvm_mmc_switch_to(slot);
 	cvm_mmc_init_lowlevel(slot);
+	cvm_mmc_switch_to(slot);
 	host->release_bus(host);
 
 	ret = mmc_add_host(mmc);
diff --git a/drivers/mmc/host/cavium.h b/drivers/mmc/host/cavium.h
index f1fdc93a0c45..fe284207f506 100644
--- a/drivers/mmc/host/cavium.h
+++ b/drivers/mmc/host/cavium.h
@@ -275,6 +275,7 @@ struct cvm_mmc_cr_mods {
 #define MIO_EMM_SWITCH_TIMING		GENMASK_ULL(50, 48)
 #define MIO_EMM_SWITCH_BUS_WIDTH	GENMASK_ULL(42, 40)
 #define MIO_EMM_SWITCH_POWER_CLASS	GENMASK_ULL(35, 32)
+#define MIO_EMM_SWITCH_CLK		GENMASK_ULL(31, 0)
 #define MIO_EMM_SWITCH_CLK_HI		GENMASK_ULL(31, 16)
 #define MIO_EMM_SWITCH_CLK_LO		GENMASK_ULL(15, 0)
 
-- 
2.17.1

