From 62a13db7e31e66c4c79d66b0382eb2b1403de483 Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Tue, 19 Feb 2019 00:34:48 +0100
Subject: [PATCH 1013/1051] net: mvpp2: fix branch prediction in
 mvpp2_bm_pool_put

The static branch condition introduced in recent commit was wrong,
however allowing 64B L3FWD test to pass. More tests with bigger packets
and iperf RX terminated traffic caused errors, as a part of
the mvpp2_bm_pool_put code was not executed at all. Fix that.

Fixes: b68d10c67e ("net: mvpp2: add configurable branch prediction...")
Change-Id: I42972664175bf2d4037cfcf7db6501298fe0271b
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/4303
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 4d54510af341..af4ea6e8029b 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -842,7 +842,8 @@ static inline void mvpp2_bm_pool_put(struct mvpp2_port *port, int pool,
 	 * For performance reasons don't store VA|PA and don't use "cookie".
 	 * VA/PA obtained faster from dma_to_phys(dma-addr) and phys_to_virt.
 	 */
-	if (static_branch_likely(&mvpp21_variant) && sizeof(dma_addr_t) == 8) {
+	if (!static_branch_unlikely(&mvpp21_variant) &&
+	    sizeof(dma_addr_t) == 8) {
 		u32 val = upper_32_bits(buf_dma_addr) &
 				MVPP22_BM_ADDR_HIGH_PHYS_RLS_MASK;
 
-- 
2.17.1

