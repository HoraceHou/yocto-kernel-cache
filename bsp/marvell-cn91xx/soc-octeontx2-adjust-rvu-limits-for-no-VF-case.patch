From 0c680d8485e691a1264235c272660ac25abb6418 Mon Sep 17 00:00:00 2001
From: Stanislaw Kardach <skardach@marvell.com>
Date: Tue, 27 Nov 2018 14:04:08 +0300
Subject: [PATCH 0775/1051] soc: octeontx2: adjust rvu limits for no-VF case

Ensure that there can be at least 1 NPA LF allocated SSO/TIM or NPA RVU
PFs, irrespectively of whether VFs were provisioned or not. This way
those devices may be initialized functionally along with their VFs or
if there are no VFs provisioned.

Signed-off-by: Stanislaw Kardach <skardach@marvell.com>
Reviewed-by: Jerin Jacob <jerin.jacob@caviumnetworks.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu_validation.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2/rvu_validation.c b/drivers/soc/marvell/octeontx2/rvu_validation.c
index ea95518694cd..0128eaa070ff 100644
--- a/drivers/soc/marvell/octeontx2/rvu_validation.c
+++ b/drivers/soc/marvell/octeontx2/rvu_validation.c
@@ -493,7 +493,7 @@ static void rvu_set_default_limits(struct rvu *rvu)
 				nix_rvus;
 			break;
 		case PCI_DEVID_OCTEONTX2_SSO_RVU_PF:
-			rvu->pf_limits.npa->a[i].val = totalvfs;
+			rvu->pf_limits.npa->a[i].val = 1 + totalvfs;
 			rvu->pf_limits.sso->a[i].val =
 				rvu->hw->block[BLKADDR_SSO].lf.max / sso_rvus;
 			rvu->pf_limits.ssow->a[i].val =
@@ -507,7 +507,7 @@ static void rvu_set_default_limits(struct rvu *rvu)
 				num_online_cpus() / sso_rvus;
 			break;
 		case PCI_DEVID_OCTEONTX2_NPA_RVU_PF:
-			rvu->pf_limits.npa->a[i].val = totalvfs;
+			rvu->pf_limits.npa->a[i].val = 1 + totalvfs;
 			break;
 		case PCI_DEVID_OCTEONTX2_CPT_RVU_PF:
 			rvu->pf_limits.cpt->a[i].val = num_online_cpus();
-- 
2.17.1

