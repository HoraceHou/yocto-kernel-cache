From c482931f48034c1fee1cb6440d2e1e14b83ef2e3 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Tue, 24 Apr 2018 11:06:02 +0200
Subject: [PATCH 0588/1051] phy: cp110-comphy: add support for pcie comphy
 initialization

The pcie comphy configuration is performed by firmware, therefore the
comphy driver only triggers appropriate smc call with argument understood
by fw.

Change-Id: I4fda9803a5bcc7cd10cf328c9d9478933410c25e
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/phy/marvell/phy-mvebu-cp110-comphy.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
index 45ebad580142..89414838cfdf 100644
--- a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
+++ b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
@@ -40,6 +40,9 @@ struct mvebu_comhy_conf {
 #define COMPHY_FW_FORMAT(mode, idx, speeds)	\
 			(((mode) << 12) | ((idx) << 8) | ((speeds) << 2))
 
+#define COMPHY_FW_PCIE_FORMAT(pcie_width, mode, idx, speeds)	\
+		    (((pcie_width) << 18) | COMPHY_FW_FORMAT(mode, idx, speeds))
+
 #define COMPHY_SATA_MODE	0x1
 #define COMPHY_SGMII_MODE	0x2	/* SGMII 1G */
 #define COMPHY_HS_SGMII_MODE	0x3	/* SGMII 2.5G */
@@ -75,24 +78,30 @@ static const struct mvebu_comhy_conf mvebu_comphy_cp110_modes[] = {
 	/* lane 0 */
 	MVEBU_COMPHY_CONF(0, 1, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(0, 1, PHY_MODE_2500SGMII),
+	MVEBU_COMPHY_CONF(0, 0, PHY_MODE_PCIE),
 	/* lane 1 */
 	MVEBU_COMPHY_CONF(1, 2, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(1, 2, PHY_MODE_2500SGMII),
+	MVEBU_COMPHY_CONF(1, 0, PHY_MODE_PCIE),
 	/* lane 2 */
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_2500SGMII),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_10GKR),
+	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_PCIE),
 	/* lane 3 */
 	MVEBU_COMPHY_CONF(3, 1, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(3, 1, PHY_MODE_2500SGMII),
+	MVEBU_COMPHY_CONF(3, 0, PHY_MODE_PCIE),
 	/* lane 4 */
 	MVEBU_COMPHY_CONF(4, 0, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(4, 0, PHY_MODE_2500SGMII),
 	MVEBU_COMPHY_CONF(4, 0, PHY_MODE_10GKR),
 	MVEBU_COMPHY_CONF(4, 1, PHY_MODE_SGMII),
+	MVEBU_COMPHY_CONF(4, 1, PHY_MODE_PCIE),
 	/* lane 5 */
 	MVEBU_COMPHY_CONF(5, 2, PHY_MODE_SGMII),
 	MVEBU_COMPHY_CONF(5, 2, PHY_MODE_2500SGMII),
+	MVEBU_COMPHY_CONF(5, 2, PHY_MODE_PCIE),
 };
 
 struct mvebu_comphy_priv {
@@ -154,6 +163,14 @@ static int mvebu_comphy_power_on(struct phy *phy)
 						  lane->port,
 						  COMPHY_SPEED_10_3125G));
 		break;
+	case PHY_MODE_PCIE:
+		ret = comphy_smc(MV_SIP_COMPHY_POWER_ON, priv->phys,
+				 lane->id,
+				 COMPHY_FW_PCIE_FORMAT(phy->attrs.bus_width,
+						       COMPHY_PCIE_MODE,
+						       lane->port,
+						       COMPHY_SPEED_5G));
+		break;
 	default:
 		return -ENOTSUPP;
 	}
-- 
2.17.1

