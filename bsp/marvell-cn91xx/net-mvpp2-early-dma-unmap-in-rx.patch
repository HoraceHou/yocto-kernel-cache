From 0854678f49f075d2986267b2a4f130d3ba9fd20f Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Wed, 8 Aug 2018 19:48:39 +0300
Subject: [PATCH 0549/1051] net: mvpp2: early dma-unmap in rx

According to the Documentation/DMA-API.txt DMA-API-HOWTO.txt,
the dma-unmap for DMA_FROM_DEVICE memory area should be called
"when the DMA activity is finished" and before any writing by driver/CPU.

The patch modifies the _rx() procedure with EARLY call dma_unmap_single
since:
- this is more correct
- free MMU memory-translation table (which improves the performance)
- adds Write capability to the frame/data buffer area

Change-Id: Icd18a1606e04ca2262d9b9aaccc5ed6ad7bb21a5
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/59479
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Tested-by: Stefan Chulski <stefanc@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index efbd1273fa8e..52cc888461da 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -2714,6 +2714,10 @@ static int mvpp2_rx(struct mvpp2_port *port, struct napi_struct *napi,
 			frag_size = bm_pool->frag_size;
 
 		prefetch(data + NET_SKB_PAD); /* packet header */
+
+		dma_unmap_single(dev->dev.parent, dma_addr,
+				 bm_pool->buf_size, DMA_FROM_DEVICE);
+
 		skb = build_skb(data, frag_size);
 		if (!skb) {
 			netdev_warn(port->dev, "skb build failed\n");
@@ -2726,9 +2730,6 @@ static int mvpp2_rx(struct mvpp2_port *port, struct napi_struct *napi,
 			goto err_drop_frame;
 		}
 
-		dma_unmap_single(dev->dev.parent, dma_addr,
-				 bm_pool->buf_size, DMA_FROM_DEVICE);
-
 		rcvd_pkts++;
 		rcvd_bytes += rx_bytes;
 
-- 
2.17.1

