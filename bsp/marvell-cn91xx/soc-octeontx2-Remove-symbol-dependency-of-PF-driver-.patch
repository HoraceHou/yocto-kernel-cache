From 571f73a479dab708a41a6fe9e08f553a1682e2e7 Mon Sep 17 00:00:00 2001
From: Linu Cherian <lcherian@marvell.com>
Date: Wed, 30 Jan 2019 14:29:08 +0530
Subject: [PATCH 0941/1051] soc: octeontx2: Remove symbol dependency of PF
 driver on AF

1. Move qmem_alloc/free to common header files
2. Build mbox driver as independent module
so that PF driver do not have dependency on symbols exported
from AF driver.

Change-Id: I87e83a16f2fd76b2ef0e5fda54eb643d63ba2ff5
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Signed-off-by: Linu Cherian <lcherian@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/3481
Tested-by: sa_ip-sw-jenkins
Tested-by: Linu Cherian <Linu.Cherian@cavium.com>
Reviewed-by: Linu Cherian <Linu.Cherian@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/Kconfig   |  1 +
 drivers/soc/marvell/Kconfig            |  4 +++
 drivers/soc/marvell/octeontx2/Makefile |  4 ++-
 drivers/soc/marvell/octeontx2/common.h | 43 +++++++++++++++++++++++--
 drivers/soc/marvell/octeontx2/mbox.c   |  3 ++
 drivers/soc/marvell/octeontx2/rvu.c    | 44 --------------------------
 6 files changed, 52 insertions(+), 47 deletions(-)

diff --git a/drivers/net/ethernet/marvell/Kconfig b/drivers/net/ethernet/marvell/Kconfig
index d4cac4886892..96fc1cab3f51 100644
--- a/drivers/net/ethernet/marvell/Kconfig
+++ b/drivers/net/ethernet/marvell/Kconfig
@@ -169,6 +169,7 @@ config SKY2_DEBUG
 
 config OCTEONTX2_PF
 	tristate "Marvell OcteonTX2 NIC physical function driver"
+	select OCTEONTX2_MBOX
 	depends on PCI && ARM64 && ARM64_LSE_ATOMICS
 	---help---
 	  This driver supports Marvell's OcteonTX2 NIC physical function.
diff --git a/drivers/soc/marvell/Kconfig b/drivers/soc/marvell/Kconfig
index 9abddb3ffb8d..5886c1e040f2 100644
--- a/drivers/soc/marvell/Kconfig
+++ b/drivers/soc/marvell/Kconfig
@@ -4,8 +4,12 @@
 
 menu "Marvell SoC drivers"
 
+config OCTEONTX2_MBOX
+	tristate
+
 config OCTEONTX2_AF
 	tristate "OcteonTX2 RVU Admin Function driver"
+	select OCTEONTX2_MBOX
 	depends on ARM64 && PCI
 	---help---
 	  This driver supports Marvell's OcteonTX2 Resource Virtualization
diff --git a/drivers/soc/marvell/octeontx2/Makefile b/drivers/soc/marvell/octeontx2/Makefile
index e48f3d1e130a..07751ecd6020 100644
--- a/drivers/soc/marvell/octeontx2/Makefile
+++ b/drivers/soc/marvell/octeontx2/Makefile
@@ -3,8 +3,10 @@
 # Makefile for Marvell's OcteonTX2 RVU Admin Function driver
 #
 
+obj-$(CONFIG_OCTEONTX2_MBOX) += octeontx2_mbox.o
 obj-$(CONFIG_OCTEONTX2_AF) += octeontx2_af.o
 
-octeontx2_af-y := cgx.o rvu.o mbox.o ptp.o rvu_ptp.o rvu_cgx.o rvu_npa.o rvu_sso.o \
+octeontx2_mbox-y := mbox.o
+octeontx2_af-y := cgx.o rvu.o ptp.o rvu_ptp.o rvu_cgx.o rvu_npa.o rvu_sso.o \
 		  rvu_nix.o rvu_reg.o rvu_npc.o rvu_ndc.o rvu_debugfs.o \
 		  rvu_validation.o rvu_tim.o rvu_cpt.o
diff --git a/drivers/soc/marvell/octeontx2/common.h b/drivers/soc/marvell/octeontx2/common.h
index 0d0e4cb2bed0..87e412b18b81 100644
--- a/drivers/soc/marvell/octeontx2/common.h
+++ b/drivers/soc/marvell/octeontx2/common.h
@@ -48,8 +48,47 @@ struct qmem {
 	u32		qsize;
 };
 
-void qmem_free(struct device *dev, struct qmem *qmem);
-int qmem_alloc(struct device *dev, struct qmem **q, int qsize, int entry_sz);
+static inline int qmem_alloc(struct device *dev, struct qmem **q,
+			     int qsize, int entry_sz)
+{
+	struct qmem *qmem;
+	int aligned_addr;
+
+	if (!qsize)
+		return -EINVAL;
+
+	*q = devm_kzalloc(dev, sizeof(*qmem), GFP_KERNEL);
+	if (!*q)
+		return -ENOMEM;
+	qmem = *q;
+
+	qmem->entry_sz = entry_sz;
+	qmem->alloc_sz = (qsize * entry_sz) + OTX2_ALIGN;
+	qmem->base = dma_zalloc_coherent(dev, qmem->alloc_sz,
+					 &qmem->iova, GFP_KERNEL);
+	if (!qmem->base)
+		return -ENOMEM;
+
+	qmem->qsize = qsize;
+
+	aligned_addr = ALIGN((u64)qmem->iova, OTX2_ALIGN);
+	qmem->align = (aligned_addr - qmem->iova);
+	qmem->base += qmem->align;
+	qmem->iova += qmem->align;
+	return 0;
+}
+
+static inline void qmem_free(struct device *dev, struct qmem *qmem)
+{
+	if (!qmem)
+		return;
+
+	if (qmem->base)
+		dma_free_coherent(dev, qmem->alloc_sz,
+				  qmem->base - qmem->align,
+				  qmem->iova - qmem->align);
+	devm_kfree(dev, qmem);
+}
 
 struct admin_queue {
 	struct qmem	*inst;
diff --git a/drivers/soc/marvell/octeontx2/mbox.c b/drivers/soc/marvell/octeontx2/mbox.c
index 61bac091c9e4..e8090075c929 100644
--- a/drivers/soc/marvell/octeontx2/mbox.c
+++ b/drivers/soc/marvell/octeontx2/mbox.c
@@ -348,3 +348,6 @@ const char *otx2_mbox_id2name(u16 id)
 	}
 }
 EXPORT_SYMBOL(otx2_mbox_id2name);
+
+MODULE_AUTHOR("Marvell International Ltd.");
+MODULE_LICENSE("GPL v2");
diff --git a/drivers/soc/marvell/octeontx2/rvu.c b/drivers/soc/marvell/octeontx2/rvu.c
index ecfc77948c5c..708af2bb4f3a 100644
--- a/drivers/soc/marvell/octeontx2/rvu.c
+++ b/drivers/soc/marvell/octeontx2/rvu.c
@@ -866,50 +866,6 @@ static int rvu_setup_hw_resources(struct rvu *rvu)
 }
 
 /* NPA and NIX admin queue APIs */
-int qmem_alloc(struct device *dev, struct qmem **q,
-	       int qsize, int entry_sz)
-{
-	struct qmem *qmem;
-	int aligned_addr;
-
-	if (!qsize)
-		return -EINVAL;
-
-	*q = devm_kzalloc(dev, sizeof(*qmem), GFP_KERNEL);
-	if (!*q)
-		return -ENOMEM;
-	qmem = *q;
-
-	qmem->entry_sz = entry_sz;
-	qmem->alloc_sz = (qsize * entry_sz) + OTX2_ALIGN;
-	qmem->base = dma_zalloc_coherent(dev, qmem->alloc_sz,
-					 &qmem->iova, GFP_KERNEL);
-	if (!qmem->base)
-		return -ENOMEM;
-
-	qmem->qsize = qsize;
-
-	aligned_addr = ALIGN((u64)qmem->iova, OTX2_ALIGN);
-	qmem->align = (aligned_addr - qmem->iova);
-	qmem->base += qmem->align;
-	qmem->iova += qmem->align;
-	return 0;
-}
-EXPORT_SYMBOL(qmem_alloc);
-
-void qmem_free(struct device *dev, struct qmem *qmem)
-{
-	if (!qmem)
-		return;
-
-	if (qmem->base)
-		dma_free_coherent(dev, qmem->alloc_sz,
-				  qmem->base - qmem->align,
-				  qmem->iova - qmem->align);
-	devm_kfree(dev, qmem);
-}
-EXPORT_SYMBOL(qmem_free);
-
 void rvu_aq_free(struct rvu *rvu, struct admin_queue *aq)
 {
 	if (!aq)
-- 
2.17.1

