From ca72fc521f7538dd49d6dd2db1faeb431ab5c633 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Fri, 15 Feb 2019 15:16:18 +0530
Subject: [PATCH 1022/1051] octeontx2-pf: Use OTX2_DATA_ALIGN() to align net
 SKB data

SKB_DATA_ALIGN/NET_SKB_PAD depends on L1_CACHE_SHIFT macro for
cache line size. This macro may changes for different kernel versions.
Hence defining OTX2_DATA_ALIGN() to align SKB data to match OCTEONTX2
cache line size of 128.

Change-Id: Ie5436eb51de2a89a3d8b2b04077ff25a3e4bbc9d
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/4359
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c | 5 +++--
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c   | 8 ++++----
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h   | 8 ++++++--
 3 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index 223b6366c649..0ded5db800e2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -737,7 +737,7 @@ void otx2_free_aura_ptr(struct otx2_nic *pfvf, int type)
 		iova = otx2_aura_allocptr(pfvf, pool_id);
 		while (iova) {
 			if (type == AURA_NIX_RQ)
-				iova -= NET_SKB_PAD;
+				iova -= OTX2_HEAD_ROOM;
 
 			pa = otx2_iova_to_phys(pfvf->iommu_domain, iova);
 			dma_unmap_page_attrs(pfvf->dev, iova, size,
@@ -962,7 +962,8 @@ int otx2_rq_aura_pool_init(struct otx2_nic *pfvf)
 			bufptr = otx2_alloc_rbuf(pfvf, pool, GFP_KERNEL);
 			if (bufptr <= 0)
 				return bufptr;
-			otx2_aura_freeptr(pfvf, pool_id, bufptr + NET_SKB_PAD);
+			otx2_aura_freeptr(pfvf, pool_id,
+					  bufptr + OTX2_HEAD_ROOM);
 		}
 		otx2_get_page(pool);
 	}
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
index 41b70d315782..b4fa706cefb1 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
@@ -167,7 +167,7 @@ static void otx2_skb_add_frag(struct otx2_nic *pfvf,
 	struct page *page;
 	void *va;
 
-	iova -= NET_SKB_PAD;
+	iova -= OTX2_HEAD_ROOM;
 	va = phys_to_virt(otx2_iova_to_phys(pfvf->iommu_domain, iova));
 	page = virt_to_page(va);
 	skb_add_rx_frag(skb, skb_shinfo(skb)->nr_frags, page,
@@ -183,7 +183,7 @@ otx2_get_rcv_skb(struct otx2_nic *pfvf, u64 iova, int len, int apad)
 	struct sk_buff *skb;
 	void *va;
 
-	iova -= NET_SKB_PAD;
+	iova -= OTX2_HEAD_ROOM;
 	va = phys_to_virt(otx2_iova_to_phys(pfvf->iommu_domain, iova));
 	skb = build_skb(va, RCV_FRAG_LEN);
 	if (!skb) {
@@ -191,7 +191,7 @@ otx2_get_rcv_skb(struct otx2_nic *pfvf, u64 iova, int len, int apad)
 		return NULL;
 	}
 
-	skb_reserve(skb, apad + NET_SKB_PAD);
+	skb_reserve(skb, apad + OTX2_HEAD_ROOM);
 	skb_put(skb, len);
 
 	dma_unmap_page_attrs(pfvf->dev, iova - apad, RCV_FRAG_LEN,
@@ -397,7 +397,7 @@ int otx2_napi_handler(struct otx2_cq_queue *cq,
 		bufptr = otx2_alloc_rbuf(pfvf, rbpool, GFP_ATOMIC);
 		if (bufptr <= 0)
 			break;
-		otx2_aura_freeptr(pfvf, cq->cq_idx, bufptr + NET_SKB_PAD);
+		otx2_aura_freeptr(pfvf, cq->cq_idx, bufptr + OTX2_HEAD_ROOM);
 		pool_ptrs--;
 	}
 	otx2_get_page(rbpool);
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h
index ac49ec7f42dc..60ea88382702 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h
@@ -20,8 +20,12 @@
 #define CGX_CHAN_BASE	0x800
 
 #define DMA_BUFFER_LEN	1536 /* In multiples of 128bytes */
-#define RCV_FRAG_LEN	(SKB_DATA_ALIGN(DMA_BUFFER_LEN + NET_SKB_PAD) + \
-			 SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
+#define OTX2_DATA_ALIGN(X)	ALIGN(X, OTX2_ALIGN)
+#define RCV_FRAG_LEN		\
+	((OTX2_DATA_ALIGN(DMA_BUFFER_LEN + NET_SKB_PAD)) + \
+	(OTX2_DATA_ALIGN(sizeof(struct skb_shared_info))))
+
+#define OTX2_HEAD_ROOM		OTX2_ALIGN
 
 #define	OTX2_ETH_HLEN		(VLAN_ETH_HLEN + VLAN_HLEN)
 #define OTX2_MIN_MTU		ETH_MIN_MTU
-- 
2.17.1

