From 86494ecc84d8d49d07424529b873fb3d5f85f2f7 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Mon, 29 Oct 2018 11:29:28 +0200
Subject: [PATCH 0745/1051] net: mvpp2: fix fragment free

PROBLEM: panic in slub.c::kfree upon condition
address given for kfree is Not PageSlab but is also Not PageCompound.
where the kfree() is called from mvpp2_recycle_put.

DIAGNOSE: Incorrect condition and as result incorrect free pair
for a fragment allocated by mvpp2_frag_alloc.
The skb->head_frag=1 is not always means jumbo buffer.

SOLUTION: Use pool_id instead of the head_frag in the condition.

Change-Id: Idb4bbc343d94b61112d8231b9cebb5cbe020ef9d
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/60575
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 8642e713117c..74bd8747c181 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -3296,10 +3296,10 @@ static inline void mvpp2_recycle_put(struct mvpp2_txq_pcpu *txq_pcpu,
 		pool->pbuf[++idx] = skb;
 		pcpu->idx[MVPP2_BM_POOLS_NUM] = idx;
 		if (skb->head) {
-			if (skb->head_frag) /* frag_size > PAGE_SIZE */
-				kfree(skb->head);
-			else
+			if (pool_id < MVPP2_BM_JUMBO)
 				skb_free_frag(skb->head);
+			else
+				kfree(skb->head);
 		}
 		tx_buf->skb = NULL;
 	}
-- 
2.17.1

