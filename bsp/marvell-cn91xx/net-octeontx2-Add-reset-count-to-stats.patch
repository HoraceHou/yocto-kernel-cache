From 11c5f8bc97afe21f5772597e512696d192a65210 Mon Sep 17 00:00:00 2001
From: Aleksey Makarov <amakarov@marvell.com>
Date: Fri, 12 Oct 2018 08:00:59 +0300
Subject: [PATCH 0240/1051] net: octeontx2: Add reset count to stats

Add a new stat "reset_count" which is incremented each time
the device was reset, for example from watchdog or
from QINT handler.

Signed-off-by: Aleksey Makarov <amakarov@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/otx2_common.h  | 1 +
 drivers/net/ethernet/marvell/octeontx2/otx2_ethtool.c | 5 ++++-
 drivers/net/ethernet/marvell/octeontx2/otx2_pf.c      | 1 +
 3 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/otx2_common.h
index 40d3db9ff5dd..a88e3d44acbe 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_common.h
@@ -156,6 +156,7 @@ struct otx2_nic {
 	u8			cq_time_wait;
 	u32			cq_ecount_wait;
 	struct work_struct	reset_task;
+	u64			reset_count;
 };
 
 static inline bool is_9xxx_pass1_silicon(struct pci_dev *pdev)
diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/otx2_ethtool.c
index 4fd55bea864f..abe3d99b10a8 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_ethtool.c
@@ -127,6 +127,8 @@ static void otx2_get_strings(struct net_device *netdev, u32 sset, u8 *data)
 		sprintf(data, "cgx_txstat%d: ", stats);
 		data += ETH_GSTRING_LEN;
 	}
+
+	strcpy(data, "reset_count");
 }
 
 static void otx2_get_qset_stats(struct otx2_nic *pfvf,
@@ -185,6 +187,7 @@ static void otx2_get_ethtool_stats(struct net_device *netdev,
 		*(data++) = pfvf->hw.cgx_rx_stats[stat];
 	for (stat = 0; stat < CGX_TX_STATS_COUNT; stat++)
 		*(data++) = pfvf->hw.cgx_tx_stats[stat];
+	*(data++) = pfvf->reset_count;
 }
 
 static int otx2_get_sset_count(struct net_device *netdev, int sset)
@@ -198,7 +201,7 @@ static int otx2_get_sset_count(struct net_device *netdev, int sset)
 	qstats_count = otx2_n_queue_stats *
 		       (pfvf->hw.rx_queues + pfvf->hw.tx_queues);
 	return otx2_n_dev_stats + otx2_n_pcpu_stats + qstats_count +
-		CGX_RX_STATS_COUNT + CGX_TX_STATS_COUNT;
+		CGX_RX_STATS_COUNT + CGX_TX_STATS_COUNT + 1;
 }
 
 /* Get no of queues device supports and current queue count */
diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c
index aa0d38625960..e3e864557aef 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c
@@ -904,6 +904,7 @@ static void otx2_reset_task(struct work_struct *work)
 		return;
 
 	otx2_stop(pf->netdev);
+	pf->reset_count++;
 	otx2_open(pf->netdev);
 	netif_trans_update(pf->netdev);
 }
-- 
2.17.1

