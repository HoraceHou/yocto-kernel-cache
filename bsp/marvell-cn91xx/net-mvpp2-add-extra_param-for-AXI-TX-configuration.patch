From 5b131fcdbc722328867a9c3ed8df908f76c4eb89 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 10 Feb 2019 22:18:42 +0200
Subject: [PATCH 0972/1051] net: mvpp2: add extra_param for AXI TX
 configuration

This patch add extra_param for AXI TX data read prioritization.
Also this patch do not force AXI TX data read prioritization by
default since such configurations cause 5% performance degradations
in US networking benchmarks.

Change-Id: I51b36dcf3f2753f35dce77c484174943fbf6f7f0
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/3775
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Marcin Wojtas <Marcin.Wojtas@cavium.com>
Reviewed-by: Alan Winkowski
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 1b8b870662da..37591e3d2985 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -130,10 +130,14 @@ static void mvpp2_mac_link_up(struct net_device *dev, unsigned int mode,
 #define MVPP2_QDIST_MULTI_MODE	1
 
 static int queue_mode = MVPP2_QDIST_MULTI_MODE;
+static int tx_fifo_protection;
 
 module_param(queue_mode, int, 0444);
 MODULE_PARM_DESC(queue_mode, "Set queue_mode (single=0, multi=1)");
 
+module_param(tx_fifo_protection, int, 0444);
+MODULE_PARM_DESC(tx_fifo_protection, "Set tx_fifo_protection (off=0, on=1)");
+
 static dma_addr_t mvpp2_txdesc_dma_addr_get(struct mvpp2_port *port,
 					    struct mvpp2_tx_desc *tx_desc)
 {
@@ -6236,8 +6240,10 @@ static void mvpp2_axi_init(struct mvpp2 *priv)
 
 	/* Buffer Data */
 	/* Force TX FIFO transactions priority on the AXI QOS bus */
-	mvpp2_write(priv, MVPP22_AXI_TX_DATA_RD_ATTR_REG,
-		    rdval | MVPP22_AXI_TX_DATA_RD_QOS_ATTRIBUTE);
+	if (tx_fifo_protection)
+		rdval |= MVPP22_AXI_TX_DATA_RD_QOS_ATTRIBUTE;
+
+	mvpp2_write(priv, MVPP22_AXI_TX_DATA_RD_ATTR_REG, rdval);
 	mvpp2_write(priv, MVPP22_AXI_RX_DATA_WR_ATTR_REG, wrval);
 
 	val = MVPP22_AXI_CODE_CACHE_NON_CACHE
-- 
2.17.1

