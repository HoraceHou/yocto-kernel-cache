From edb451db2e6335e4d90ec68d9ca4587b3cb60254 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Tue, 11 Sep 2018 11:43:13 +0200
Subject: [PATCH 0686/1051] phy: cp110-comphy: rely on bootloader settings in
 case of deprecated fw

If the deprecated fw is used (one which doesn't support comphy handling
at runtime) switch to empty ops and warn user about deprecated firmware.

Change-Id: I930cdec7d12a97926065b66273811e84ecdee82f
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/phy/marvell/phy-mvebu-cp110-comphy.c | 23 +++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

diff --git a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
index cf305e92e9ec..76f0c6b4c2b3 100644
--- a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
+++ b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
@@ -65,6 +65,8 @@ struct mvebu_comhy_conf {
 #define COMPHY_SPEED_10_3125G		6 /* XFI 10G */
 #define COMPHY_SPEED_MAX		0x3F
 
+#define COMPHY_FW_NOT_SUPPORTED		(-1)
+
 static unsigned long comphy_smc(unsigned long function_id,
 				phys_addr_t comphy_phys_addr,
 				unsigned long lane, unsigned long mode)
@@ -227,6 +229,10 @@ static const struct phy_ops mvebu_comphy_ops = {
 	.owner		= THIS_MODULE,
 };
 
+static const struct phy_ops mvebu_comphy_ops_depricated = {
+	.owner		= THIS_MODULE,
+};
+
 static struct phy *mvebu_comphy_xlate(struct device *dev,
 				      struct of_phandle_args *args)
 {
@@ -299,7 +305,22 @@ static int mvebu_comphy_probe(struct platform_device *pdev)
 		 * To avoid relying on the bootloader/firmware configuration,
 		 * power off all comphys.
 		 */
-		mvebu_comphy_power_off(phy);
+		ret = mvebu_comphy_power_off(phy);
+		if (ret == COMPHY_FW_NOT_SUPPORTED) {
+			dev_warn(&pdev->dev, "RELYING ON BOTLOADER SETTINGS\n");
+			dev_WARN(&pdev->dev, "firmware updated needed\n");
+
+			/*
+			 * If comphy power off fails it means that the
+			 * deprecated firmware is used and we should rely on
+			 * bootloader settings, therefore we are switching to
+			 * empty ops.
+			 */
+			phy_destroy(phy);
+			phy = devm_phy_create(&pdev->dev, child,
+					      &mvebu_comphy_ops_depricated);
+			phy_set_drvdata(phy, lane);
+		}
 	}
 
 	dev_set_drvdata(&pdev->dev, priv);
-- 
2.17.1

