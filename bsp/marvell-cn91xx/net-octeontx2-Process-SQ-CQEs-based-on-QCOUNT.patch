From 2fb81170bf69ff02b44ee8a84c14f0eed3932432 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Tue, 5 Feb 2019 11:40:34 +0530
Subject: [PATCH 0955/1051] net: octeontx2: Process SQ CQEs based on QCOUNT

Present logic checks CQ status of both SQ and RQ on CQ interrupts.
Instead, skip checking CQ status of SQ if CQ of RQ is nonempty and
NIX_LFCINTX_CNT.QCOUNT = 1. This is done to avoid unnecessary
costly CQ_STATUS read which is like close to 1000cycles.

Change-Id: I629d1163fcad5b2546118067e5efc205864265a4
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/3569
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
index 03241e9d5614..5a8451e6a7eb 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
@@ -412,6 +412,7 @@ int otx2_poll(struct napi_struct *napi, int budget)
 	struct otx2_cq_queue *cq;
 	struct otx2_qset *qset;
 	struct otx2_nic *pfvf;
+	u64 qcount;
 
 	cq_poll = container_of(napi, struct otx2_cq_poll, napi);
 	pfvf = (struct otx2_nic *)cq_poll->dev;
@@ -422,7 +423,11 @@ int otx2_poll(struct napi_struct *napi, int budget)
 		if (cq_idx == CINT_INVALID_CQ)
 			continue;
 		cq = &qset->cq[cq_idx];
+		qcount = otx2_read64(pfvf, NIX_LF_CINTX_CNT(cq_poll->cint_idx));
+		qcount = (qcount >> 32) & 0xFFFF;
 		workdone += otx2_napi_handler(cq, pfvf, budget);
+		if (workdone && qcount == 1)
+			break;
 	}
 
 	/* Clear the IRQ */
-- 
2.17.1

