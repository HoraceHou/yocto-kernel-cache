From fdd68a8594d88ca0b07aaa9f14f6e805a6c0696a Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Tue, 4 Sep 2018 17:47:48 +0300
Subject: [PATCH 0568/1051] net: mvpp2: extend tx done timer tasklet with
 tx-done prefix

This patch doesn't change any functionality but only extends
tx-done timer and tasklet callbacks with tx-done prefix

Change-Id: I7f0d71ee3f7809a5fc334b08317a69a3a0092dfd
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/59728
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Tested-by: Stefan Chulski <stefanc@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index fd4f98c8b4ec..e9970b9e1646 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -2648,7 +2648,7 @@ static irqreturn_t mvpp2_link_status_isr(int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
-static void mvpp2_timer_set(struct mvpp2_port_pcpu *port_pcpu)
+static void mvpp2_tx_done_timer_set(struct mvpp2_port_pcpu *port_pcpu)
 {
 	ktime_t interval;
 
@@ -2660,7 +2660,7 @@ static void mvpp2_timer_set(struct mvpp2_port_pcpu *port_pcpu)
 	}
 }
 
-static void mvpp2_tx_proc_cb(unsigned long data)
+static void mvpp2_tx_done_proc_cb(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
 	struct mvpp2_port *port = netdev_priv(dev);
@@ -2681,10 +2681,10 @@ static void mvpp2_tx_proc_cb(unsigned long data)
 
 	/* Set the timer in case not all the packets were processed */
 	if (tx_todo)
-		mvpp2_timer_set(port_pcpu);
+		mvpp2_tx_done_timer_set(port_pcpu);
 }
 
-static enum hrtimer_restart mvpp2_hr_timer_cb(struct hrtimer *timer)
+static enum hrtimer_restart mvpp2_tx_done_timer_cb(struct hrtimer *timer)
 {
 	struct mvpp2_port_pcpu *port_pcpu = container_of(timer,
 							 struct mvpp2_port_pcpu,
@@ -3547,7 +3547,7 @@ static netdev_tx_t mvpp2_tx(struct sk_buff *skb, struct net_device *dev)
 	    txq_pcpu->count > 0) {
 		struct mvpp2_port_pcpu *port_pcpu = per_cpu_ptr(port->pcpu, thread);
 
-		mvpp2_timer_set(port_pcpu);
+		mvpp2_tx_done_timer_set(port_pcpu);
 	}
 
 	if (test_bit(thread, &port->priv->lock_map))
@@ -5420,11 +5420,12 @@ static int mvpp2_port_probe(struct platform_device *pdev,
 
 			hrtimer_init(&port_pcpu->tx_done_timer, CLOCK_MONOTONIC,
 				     HRTIMER_MODE_REL_PINNED);
-			port_pcpu->tx_done_timer.function = mvpp2_hr_timer_cb;
+			port_pcpu->tx_done_timer.function =
+							mvpp2_tx_done_timer_cb;
 			port_pcpu->tx_done_timer_scheduled = false;
 
 			tasklet_init(&port_pcpu->tx_done_tasklet,
-				     mvpp2_tx_proc_cb,
+				     mvpp2_tx_done_proc_cb,
 				     (unsigned long)dev);
 		}
 	}
-- 
2.17.1

