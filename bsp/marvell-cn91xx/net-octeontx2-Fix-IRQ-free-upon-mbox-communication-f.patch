From fe8efc7f15ae0d9cc51979476b19f548aa239826 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Tue, 11 Dec 2018 19:29:02 +0530
Subject: [PATCH 0858/1051] net: octeontx2: Fix IRQ free upon mbox
 communication failure

Not freeing MBOX irq when AF is not responding to
READY message is resulting in a kernel crash upon
driver exit.

Change-Id: Ia5cefade3ec48dc0f728b253902e60baadf0accf
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/1765
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/otx2_pf.c  | 23 +++++++++++--------
 1 file changed, 13 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c
index ad64b7d543d0..20e6204c8167 100644
--- a/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/otx2_pf.c
@@ -239,6 +239,15 @@ static irqreturn_t otx2_pfaf_mbox_intr_handler(int irq, void *pf_irq)
 	return IRQ_HANDLED;
 }
 
+static void otx2_disable_mbox_intr(struct otx2_nic *pf)
+{
+	int vector = pci_irq_vector(pf->pdev, RVU_PF_INT_VEC_AFPF_MBOX);
+
+	/* Disable AF => PF mailbox IRQ */
+	otx2_write64(pf, RVU_PF_INT_ENA_W1C, BIT_ULL(0));
+	free_irq(vector, pf);
+}
+
 static int otx2_register_mbox_intr(struct otx2_nic *pf)
 {
 	struct otx2_hw *hw = &pf->hw;
@@ -265,27 +274,21 @@ static int otx2_register_mbox_intr(struct otx2_nic *pf)
 
 	/* Check mailbox communication with AF */
 	req = otx2_mbox_alloc_msg_ready(&pf->mbox);
-	if (!req)
+	if (!req) {
+		otx2_disable_mbox_intr(pf);
 		return -ENOMEM;
+	}
 
 	err = otx2_sync_mbox_msg(&pf->mbox);
 	if (err) {
 		dev_warn(pf->dev,
 			 "AF not responding to mailbox, deferring probe\n");
+		otx2_disable_mbox_intr(pf);
 		return -EPROBE_DEFER;
 	}
 	return 0;
 }
 
-static void otx2_disable_mbox_intr(struct otx2_nic *pf)
-{
-	int vector = pci_irq_vector(pf->pdev, RVU_PF_INT_VEC_AFPF_MBOX);
-
-	/* Disable AF => PF mailbox IRQ */
-	otx2_write64(pf, RVU_PF_INT_ENA_W1C, BIT_ULL(0));
-	free_irq(vector, pf);
-}
-
 static void otx2_pfaf_mbox_destroy(struct otx2_nic *pf)
 {
 	struct mbox *mbox = &pf->mbox;
-- 
2.17.1

