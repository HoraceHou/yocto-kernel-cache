From e269bc41896771b2d304733554e641478ad08d31 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Mon, 15 Oct 2018 18:49:34 +0300
Subject: [PATCH 0727/1051] net: mvpp2: rx dma sync optimization

DMA coherency SYNC operation is not required
when more than 1 packet is received and handled with 2 loops
(where loop-1 prepares SKBs but loop-2 sends them to net-stack)
The SYNC is done asynchronously by DMA-UNMAP at time of loop-1.

Change-Id: I91dfd06ab01182ce2c0ee79832e9225aefe400a0
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/60519
Reviewed-by: Igal Liberman <igall@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 77a16c9be063..4533b377481b 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -3479,9 +3479,11 @@ static int mvpp2_rx(struct mvpp2_port *port, struct napi_struct *napi,
 			frag_size = bm_pool->frag_size;
 
 		/* _sync_ for coherency (_unmap_ is asynchroneous) */
-		dma_sync_single_for_cpu(dev->dev.parent, dma_addr,
-					MVPP2_RX_BUF_SIZE(rx_bytes),
-					DMA_FROM_DEVICE);
+		if (rx_todo == 1)
+			dma_sync_single_for_cpu(dev->dev.parent, dma_addr,
+						MVPP2_RX_BUF_SIZE(rx_bytes),
+						DMA_FROM_DEVICE);
+
 		prefetch(data + NET_SKB_PAD); /* packet header */
 
 		dma_unmap_single(dev->dev.parent, dma_addr,
-- 
2.17.1

