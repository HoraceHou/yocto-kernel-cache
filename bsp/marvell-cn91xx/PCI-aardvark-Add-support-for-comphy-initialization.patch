From 34bce4527b0c989b34957b4f31f6e688d8854972 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Wed, 5 Sep 2018 11:58:26 +0200
Subject: [PATCH 0697/1051] PCI: aardvark: Add support for comphy
 initialization

On Armada 37xx platforms the comphy (common phy) must be configured to
work in appropriate mode. Hitherto comphy configuration for pcie was
done by bootloader. As a comphy driver was extended to support pcie
comphy configuration, this patch uses it in pcie driver. Thanks to that
there is no need to rely on the bootloader configuration which could
configured the comphy to different mode.

Change-Id: I3c51d30e90c91debfa0d87f0ed015057e783f878
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/pci/controller/pci-aardvark.c | 45 +++++++++++++++++++++++++--
 1 file changed, 42 insertions(+), 3 deletions(-)

diff --git a/drivers/pci/controller/pci-aardvark.c b/drivers/pci/controller/pci-aardvark.c
index 54f3b80e78b5..1723a0c0b963 100644
--- a/drivers/pci/controller/pci-aardvark.c
+++ b/drivers/pci/controller/pci-aardvark.c
@@ -9,15 +9,16 @@
  */
 
 #include <linux/delay.h>
+#include <linux/init.h>
 #include <linux/interrupt.h>
 #include <linux/irq.h>
 #include <linux/irqdomain.h>
 #include <linux/kernel.h>
-#include <linux/pci.h>
-#include <linux/init.h>
-#include <linux/platform_device.h>
 #include <linux/of_address.h>
 #include <linux/of_pci.h>
+#include <linux/pci.h>
+#include <linux/phy/phy.h>
+#include <linux/platform_device.h>
 
 #include "../pci.h"
 
@@ -838,6 +839,38 @@ static int advk_pcie_parse_request_of_pci_ranges(struct advk_pcie *pcie)
 	return err;
 }
 
+static int advk_phy_config(struct platform_device *pdev)
+{
+	struct phy *comphy;
+	int err;
+
+	comphy = devm_of_phy_get(&pdev->dev, pdev->dev.of_node, NULL);
+	if (IS_ERR(comphy))
+		/* Skip phy initialization and continue normally */
+		return 0;
+
+	err = phy_set_mode(comphy, PHY_MODE_PCIE);
+	if (err) {
+		dev_err(&pdev->dev, "failed to set comphy\n");
+		return err;
+	}
+
+	err = phy_init(comphy);
+	if (err < 0) {
+		dev_err(&pdev->dev, "phy init failed\n");
+		return err;
+	}
+
+	err = phy_power_on(comphy);
+	if (err < 0) {
+		dev_err(&pdev->dev, "phy power on failed\n");
+		phy_exit(comphy);
+		return err;
+	}
+
+	return err;
+}
+
 static int advk_pcie_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -858,6 +891,12 @@ static int advk_pcie_probe(struct platform_device *pdev)
 	if (IS_ERR(pcie->base))
 		return PTR_ERR(pcie->base);
 
+	ret = advk_phy_config(pdev);
+	if (ret < 0) {
+		dev_err(dev, "PHYs config failed: %d\n", ret);
+		return ret;
+	}
+
 	irq = platform_get_irq(pdev, 0);
 	ret = devm_request_irq(dev, irq, advk_pcie_irq_handler,
 			       IRQF_SHARED | IRQF_NO_THREAD, "advk-pcie",
-- 
2.17.1

