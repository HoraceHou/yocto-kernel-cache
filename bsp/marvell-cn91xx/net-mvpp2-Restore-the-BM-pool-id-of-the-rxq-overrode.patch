From 15f11c8f2fd564f84ba57882492c47006dba8e09 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 19 Jun 2019 09:12:29 +0800
Subject: [PATCH] net: mvpp2: Restore the BM pool id of the rxq overrode by the
 MUSDK

When a port is hijacked by the MUSDK, the BM pool id of the rxq will
be set to the one created by the MUSDK, so we should restore the BM
pool id when switching back to kernel. Otherwise the kernel would panic
due to the buffs from MUSDK are used.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index ab9dd882be8a..a845539e71b4 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -5296,6 +5296,8 @@ static int mvpp2_port_musdk_cfg(struct net_device *dev, bool ena)
 		}
 	} else {
 		/* Back to Kernel mode */
+		int queue;
+
 		us = port->us_cfg;
 		port->nqvecs = us->nqvecs;
 		port->nrxqs  = us->nrxqs;
@@ -5306,6 +5308,14 @@ static int mvpp2_port_musdk_cfg(struct net_device *dev, bool ena)
 		}
 		kfree(us);
 		port->us_cfg = NULL;
+
+		/* Restore the BM pool id of the rxq overrode by the MUSDK */
+		for (queue = 0; queue < port->nrxqs; queue++) {
+			mvpp2_rxq_short_pool_set(port, queue,
+						 port->pool_short->id);
+			mvpp2_rxq_long_pool_set(port, queue,
+						port->pool_long->id);
+		}
 	}
 	return 0;
 }
-- 
2.17.1

