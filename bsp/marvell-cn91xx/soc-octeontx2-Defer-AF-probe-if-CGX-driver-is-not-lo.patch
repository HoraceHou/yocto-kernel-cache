From a377e88e96c1eadac5ee13930c9ec0ff28d1af5e Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Sat, 18 Aug 2018 14:39:32 +0530
Subject: [PATCH 0134/1051] soc: octeontx2: Defer AF probe if CGX driver is not
 loaded

If CGX device is available in the system and if driver
is not yet probed then defer RVU AF driver probe so that
correct CGX LMAC count can be retrieved.

Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[Kevin: The original patch got from Marvell sdk10.0_19.06]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2/rvu.c     |  4 ++++
 drivers/soc/marvell/octeontx2/rvu.h     |  1 +
 drivers/soc/marvell/octeontx2/rvu_cgx.c | 22 ++++++++++++++++++++++
 3 files changed, 27 insertions(+)

diff --git a/drivers/soc/marvell/octeontx2/rvu.c b/drivers/soc/marvell/octeontx2/rvu.c
index 5f06b86307e7..530df9961853 100644
--- a/drivers/soc/marvell/octeontx2/rvu.c
+++ b/drivers/soc/marvell/octeontx2/rvu.c
@@ -2228,6 +2228,10 @@ static int rvu_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 		goto err_release_regions;
 	}
 
+	err = rvu_check_cgx_driver(rvu);
+	if (err)
+		goto err_release_regions;
+
 	/* Map Admin function CSRs */
 	rvu->afreg_base = pcim_iomap(pdev, PCI_AF_REG_BAR_NUM, 0);
 	rvu->pfreg_base = pcim_iomap(pdev, PCI_PF_REG_BAR_NUM, 0);
diff --git a/drivers/soc/marvell/octeontx2/rvu.h b/drivers/soc/marvell/octeontx2/rvu.h
index 135eda98f0ab..42c5f4c3ef0d 100644
--- a/drivers/soc/marvell/octeontx2/rvu.h
+++ b/drivers/soc/marvell/octeontx2/rvu.h
@@ -339,6 +339,7 @@ static inline void rvu_get_cgx_lmac_id(u8 map, u8 *cgx_id, u8 *lmac_id)
 }
 
 int rvu_cgx_probe(struct rvu *rvu);
+int rvu_check_cgx_driver(struct rvu *rvu);
 void rvu_cgx_wq_destroy(struct rvu *rvu);
 void *rvu_cgx_pdata(u8 cgx_id, struct rvu *rvu);
 int rvu_cgx_config_rxtx(struct rvu *rvu, u16 pcifunc, bool start);
diff --git a/drivers/soc/marvell/octeontx2/rvu_cgx.c b/drivers/soc/marvell/octeontx2/rvu_cgx.c
index da3f46c156c0..8231d8703bb1 100644
--- a/drivers/soc/marvell/octeontx2/rvu_cgx.c
+++ b/drivers/soc/marvell/octeontx2/rvu_cgx.c
@@ -285,6 +285,28 @@ int rvu_cgx_probe(struct rvu *rvu)
 	return 0;
 }
 
+int rvu_check_cgx_driver(struct rvu *rvu)
+{
+	struct pci_dev *pdev;
+	void *cgx;
+
+	pdev = pci_get_device(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_OCTEONTX2_CGX,
+			      NULL);
+	if (!pdev)
+		return 0;
+
+	cgx = pci_get_drvdata(pdev);
+	if (!cgx) {
+		dev_warn(rvu->dev,
+			 "CGX driver is not init'ed, deferring RVU AF probe\n");
+		pci_dev_put(pdev);
+		return -EPROBE_DEFER;
+	}
+
+	pci_dev_put(pdev);
+	return 0;
+}
+
 int rvu_cgx_config_rxtx(struct rvu *rvu, u16 pcifunc, bool start)
 {
 	int pf = rvu_get_pf(pcifunc);
-- 
2.17.1

