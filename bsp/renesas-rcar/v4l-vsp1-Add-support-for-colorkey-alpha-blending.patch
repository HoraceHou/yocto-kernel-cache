From 1e774e594fc1c24d35cdd3f81ee664404f50b429 Mon Sep 17 00:00:00 2001
From: Alexandru Gheorghe <Alexandru_Gheorghe@mentor.com>
Date: Wed, 15 Nov 2017 10:12:57 +0900
Subject: [PATCH 297/909] v4l: vsp1: Add support for colorkey alpha blending

commit 6bde2d8086281081bbe1417320c2cbc3aea35a40 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

The vsp2 hw supports changing of the alpha of pixels that match a color
key, this patch adds support for this feature in order to be used by
the rcar-du driver.
The colorkey is interpreted different depending of the pixel format:
	* RGB   - all color components have to match.
	* YCbCr - only the Y component has to match.

Reported-by: Alexandru Gheorghe <Alexandru_Gheorghe@mentor.com>
Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/vsp1/vsp1_drm.c  | 4 +++-
 drivers/media/platform/vsp1/vsp1_rpf.c  | 9 ++++++++-
 drivers/media/platform/vsp1/vsp1_rwpf.h | 3 +++
 include/media/vsp1.h                    | 3 +++
 4 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/vsp1/vsp1_drm.c b/drivers/media/platform/vsp1/vsp1_drm.c
index 14a5d5c56dad..8ff03512156f 100644
--- a/drivers/media/platform/vsp1/vsp1_drm.c
+++ b/drivers/media/platform/vsp1/vsp1_drm.c
@@ -867,7 +867,9 @@ int vsp1_du_atomic_update(struct device *dev, unsigned int pipe_index,
 	else
 		rpf->format.plane_fmt[1].bytesperline = cfg->pitch;
 	rpf->alpha = cfg->alpha;
-
+	rpf->colorkey = cfg->colorkey;
+	rpf->colorkey_en = cfg->colorkey_en;
+	rpf->colorkey_alpha = cfg->colorkey_alpha;
 	rpf->interlaced = cfg->interlaced;
 
 	if ((vsp1->ths_quirks & VSP1_AUTO_FLD_NOT_SUPPORT) &&
diff --git a/drivers/media/platform/vsp1/vsp1_rpf.c b/drivers/media/platform/vsp1/vsp1_rpf.c
index a486c9589cba..bb24a42e0cdd 100644
--- a/drivers/media/platform/vsp1/vsp1_rpf.c
+++ b/drivers/media/platform/vsp1/vsp1_rpf.c
@@ -200,8 +200,15 @@ static void rpf_configure_stream(struct vsp1_entity *entity,
 	}
 
 	vsp1_rpf_write(rpf, dlb, VI6_RPF_MSK_CTRL, 0);
-	vsp1_rpf_write(rpf, dlb, VI6_RPF_CKEY_CTRL, 0);
 
+	if (rpf->colorkey_en) {
+		vsp1_rpf_write(rpf, dlb, VI6_RPF_CKEY_SET0,
+			       (rpf->colorkey_alpha << 24) | rpf->colorkey);
+		vsp1_rpf_write(rpf, dlb, VI6_RPF_CKEY_CTRL,
+			       VI6_RPF_CKEY_CTRL_SAPE0);
+	} else {
+		vsp1_rpf_write(rpf, dlb, VI6_RPF_CKEY_CTRL, 0);
+	}
 }
 
 static void rpf_configure_frame(struct vsp1_entity *entity,
diff --git a/drivers/media/platform/vsp1/vsp1_rwpf.h b/drivers/media/platform/vsp1/vsp1_rwpf.h
index 745c403f3ace..58d882ed249f 100644
--- a/drivers/media/platform/vsp1/vsp1_rwpf.h
+++ b/drivers/media/platform/vsp1/vsp1_rwpf.h
@@ -44,6 +44,9 @@ struct vsp1_rwpf {
 	unsigned int brx_input;
 
 	unsigned int alpha;
+	u32 colorkey;
+	bool colorkey_en;
+	u32 colorkey_alpha;
 
 	u32 mult_alpha;
 	u32 outfmt;
diff --git a/include/media/vsp1.h b/include/media/vsp1.h
index 54f0e8a8896b..08d02dec71f8 100644
--- a/include/media/vsp1.h
+++ b/include/media/vsp1.h
@@ -67,6 +67,9 @@ struct vsp1_du_atomic_config {
 	struct v4l2_rect dst;
 	unsigned int alpha;
 	unsigned int zpos;
+	u32 colorkey;
+	u32 colorkey_alpha;
+	bool colorkey_en;
 	bool interlaced;
 };
 
-- 
2.17.1

