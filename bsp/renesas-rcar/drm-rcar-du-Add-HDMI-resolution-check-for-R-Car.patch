From bce603fdb5a1e1485876cd1d6a9e24f33d652e2f Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Thu, 26 Oct 2017 14:23:03 +0900
Subject: [PATCH 281/909] drm: rcar-du: Add HDMI resolution check for R-Car

commit 628daa03f3176714295209c8637e96a5ae08c4da from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

Because the maximum resolution of HDMI built in Gen3 is
3840x2160@30Hz (dotclock is up to 297MHz), the resolution
exceeding that is to return MODE_BAD.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/rcar-du/rcar_dw_hdmi.c | 28 +++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/rcar-du/rcar_dw_hdmi.c b/drivers/gpu/drm/rcar-du/rcar_dw_hdmi.c
index 76210ae25094..18724b1a88c3 100644
--- a/drivers/gpu/drm/rcar-du/rcar_dw_hdmi.c
+++ b/drivers/gpu/drm/rcar-du/rcar_dw_hdmi.c
@@ -1,7 +1,7 @@
 /*
  * R-Car Gen3 HDMI PHY
  *
- * Copyright (C) 2016 Renesas Electronics Corporation
+ * Copyright (C) 2016-2017 Renesas Electronics Corporation
  *
  * Contact: Laurent Pinchart (laurent.pinchart@ideasonboard.com)
  *
@@ -16,6 +16,8 @@
 
 #include <drm/bridge/dw_hdmi.h>
 
+#include "rcar_du_drv.h"
+
 #define RCAR_HDMI_PHY_OPMODE_PLLCFG	0x06	/* Mode of operation and PLL dividers */
 #define RCAR_HDMI_PHY_PLLCURRGMPCTRL	0x10	/* PLL current and Gmp (conductance) */
 #define RCAR_HDMI_PHY_PLLDIVCTRL	0x11	/* PLL dividers */
@@ -62,8 +64,32 @@ static int rcar_hdmi_phy_configure(struct dw_hdmi *hdmi,
 	return 0;
 }
 
+static enum drm_mode_status rcar_hdmi_mode_valid(
+				struct drm_connector *connector,
+				const struct drm_display_mode *mode)
+{
+	struct drm_device *ddev = connector->dev;
+	struct rcar_du_device *rcdu = ddev->dev_private;
+
+	if (rcdu->info->gen != 3)
+		return MODE_OK;
+
+	if (mode->hdisplay > 3840 || mode->vdisplay > 2160)
+		return MODE_BAD;
+
+	if (mode->hdisplay == 3840 && mode->vdisplay == 2160 &&
+	    mode->vrefresh > 30)
+		return MODE_BAD;
+
+	if (mode->clock > 297000)
+		return MODE_BAD;
+
+	return MODE_OK;
+}
+
 static const struct dw_hdmi_plat_data rcar_dw_hdmi_plat_data = {
 	.configure_phy	= rcar_hdmi_phy_configure,
+	.mode_valid	= rcar_hdmi_mode_valid,
 };
 
 static int rcar_dw_hdmi_probe(struct platform_device *pdev)
-- 
2.17.1

