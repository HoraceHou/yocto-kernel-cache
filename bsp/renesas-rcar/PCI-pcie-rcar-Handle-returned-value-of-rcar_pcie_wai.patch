From 7f75142c01c00d142438aec3805dc01e61989054 Mon Sep 17 00:00:00 2001
From: Tho Vu <tho.vu.wh@rvc.renesas.com>
Date: Wed, 1 Aug 2018 11:18:57 +0700
Subject: [PATCH 234/909] PCI: pcie-rcar: Handle returned value of
 rcar_pcie_wait_for_dl

commit a860c564527572e4b8c4e458b826d5e59852de88 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

This patch fixes below QAC warning.
QAC warning(3200): 'rcar_pcie_wait_for_dl' returns a value which
is not being used.

rcar_pcie_wait_for_dl() can fail and return time-out error code,
but this is not checked nor handled.
Fix this by adding the missing error handling.

Signed-off-by: Tho Vu <tho.vu.wh@rvc.renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/controller/pcie-rcar.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/controller/pcie-rcar.c b/drivers/pci/controller/pcie-rcar.c
index 08f482d86180..fda24d937d9c 100644
--- a/drivers/pci/controller/pcie-rcar.c
+++ b/drivers/pci/controller/pcie-rcar.c
@@ -202,7 +202,7 @@ static int rcar_pcie_config_access(struct rcar_pcie *pcie,
 		unsigned char access_type, struct pci_bus *bus,
 		unsigned int devfn, int where, u32 *data)
 {
-	int dev, func, reg, index;
+	int dev, func, reg, index, ret;
 	u32 val;
 
 	dev = PCI_SLOT(devfn);
@@ -255,7 +255,9 @@ static int rcar_pcie_config_access(struct rcar_pcie *pcie,
 		/* Wait PCI Express link is re-initialized */
 		dev_info(&bus->dev, "Wait PCI Express link is re-initialized\n");
 		rcar_pci_write_reg(pcie, CFINIT, PCIETCTLR);
-		rcar_pcie_wait_for_dl(pcie);
+		ret = rcar_pcie_wait_for_dl(pcie);
+		if (ret)
+			return ret;
 	}
 
 	if ((val & PM_ENTER_L1RX) && ((val & PMSTATE) != PMSTATE_L1)) {
-- 
2.17.1

