From 2dc094a922e3e3abe95708d446d4da9bdab83799 Mon Sep 17 00:00:00 2001
From: Kazufumi Ikeda <kaz-ikeda@xc.jp.nec.com>
Date: Mon, 30 Jan 2017 20:24:19 +0900
Subject: [PATCH 232/909] PCI: pcie-rcar: HACK: Add the initialization of PCIe
 link in resume_noirq

commit d3468b2d62a00e51bea689d8ed004a5cf4b6e7e4 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

In PM noirq resume, it calls the read function of pci_ops from
pci framework. Thus, it needs to initialize the rcar-pcie register
in case there is calling in noirq resume. But it must be revised
the structure of rcar-pcie before this is fixed.

Therefore, it will make interim fix in this patch until changing
the structure of rcar-pcie. Also it fixes msleep together since
it can't be used msleep in noirq phase.

Signed-off-by: Kazufumi Ikeda <kaz-ikeda@xc.jp.nec.com>
Signed-off-by: Gaku Inami <gaku.inami.xw@bp.renesas.com>
Signed-off-by: Tho Vu <tho.vu.wh@rvc.renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/controller/pcie-rcar.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/pci/controller/pcie-rcar.c b/drivers/pci/controller/pcie-rcar.c
index 20b2778f3831..da58ccbf7661 100644
--- a/drivers/pci/controller/pcie-rcar.c
+++ b/drivers/pci/controller/pcie-rcar.c
@@ -46,6 +46,7 @@
 
 /* Transfer control */
 #define PCIETCTLR		0x02000
+#define  DL_DOWN		BIT(3)
 #define  CFINIT			1
 #define PCIETSTR		0x02004
 #define  DATA_LINK_ACTIVE	1
@@ -159,6 +160,8 @@ struct rcar_pcie {
 	struct			rcar_msi msi;
 };
 
+static int rcar_pcie_wait_for_dl(struct rcar_pcie *pcie);
+
 static void rcar_pci_write_reg(struct rcar_pcie *pcie, unsigned long val,
 			       unsigned long reg)
 {
@@ -247,6 +250,14 @@ static int rcar_pcie_config_access(struct rcar_pcie *pcie,
 	 * transition to L1 link state. The HW will handle coming of of L1.
 	 */
 	val = rcar_pci_read_reg(pcie, PMSR);
+
+	if (val == 0 || (rcar_pci_read_reg(pcie, PCIETCTLR) & DL_DOWN)) {
+		/* Wait PCI Express link is re-initialized */
+		dev_info(&bus->dev, "Wait PCI Express link is re-initialized\n");
+		rcar_pci_write_reg(pcie, CFINIT, PCIETCTLR);
+		rcar_pcie_wait_for_dl(pcie);
+	}
+
 	if ((val & PM_ENTER_L1RX) && ((val & PMSTATE) != PMSTATE_L1)) {
 		rcar_pci_write_reg(pcie, L1_INIT, PMCTLR);
 
-- 
2.17.1

