From a5610e4d1e1b9a44be4b9419163fae25149398cb Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Thu, 30 Nov 2017 19:58:37 +0900
Subject: [PATCH 381/909] media: i2c: adv748x: Add power management

commit 033d6be21b6dbd2fe1c8f8f24b140e5ffbd750b7 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

In order to support suspend to ram, this patch registers the
resume and suspend function in adv748x driver.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/i2c/adv748x/adv748x-core.c | 50 ++++++++++++++++++++++++
 drivers/media/i2c/adv748x/adv748x-hdmi.c | 19 +++++++++
 drivers/media/i2c/adv748x/adv748x.h      |  3 ++
 3 files changed, 72 insertions(+)

diff --git a/drivers/media/i2c/adv748x/adv748x-core.c b/drivers/media/i2c/adv748x/adv748x-core.c
index b469ae9156c4..9c8d17aa962e 100644
--- a/drivers/media/i2c/adv748x/adv748x-core.c
+++ b/drivers/media/i2c/adv748x/adv748x-core.c
@@ -809,6 +809,53 @@ static int adv748x_remove(struct i2c_client *client)
 	return 0;
 }
 
+#ifdef CONFIG_PM_SLEEP
+static int adv748x_suspend(struct device *dev)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct adv748x_state *state = i2c_get_clientdata(client);
+	struct adv748x_csi2 *txa = &state->txa;
+	struct adv748x_csi2 *txb = &state->txb;
+
+	txa->vc_ch = 0x03 & (tx_read(txa, ADV748X_CSI_VC_REF) >>
+		    ADV748X_CSI_VC_REF_SHIFT);
+	txb->vc_ch = 0x03 & (tx_read(txb, ADV748X_CSI_VC_REF) >>
+		    ADV748X_CSI_VC_REF_SHIFT);
+
+	io_write(state, ADV748X_IO_PD, ADV748X_IO_PD_HDMI);
+
+	return 0;
+}
+
+static int adv748x_resume(struct device *dev)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct adv748x_state *state = i2c_get_clientdata(client);
+	struct adv748x_csi2 *txa = &state->txa;
+	struct adv748x_csi2 *txb = &state->txb;
+	int ret;
+
+	/* SW reset ADV748X to its default values */
+	ret = adv748x_reset(state);
+	if (ret)
+		adv_err(state, "Failed to reset hardware");
+
+	/* Initialise the virtual channel */
+	tx_write(txa, ADV748X_CSI_VC_REF,
+		 txa->vc_ch << ADV748X_CSI_VC_REF_SHIFT);
+	tx_write(txb, ADV748X_CSI_VC_REF,
+		 txb->vc_ch << ADV748X_CSI_VC_REF_SHIFT);
+
+	ret = adv748x_hdmi_set_resume_edid(&state->hdmi);
+
+	return ret;
+}
+
+static const struct dev_pm_ops adv748x_pm_ops = {
+	SET_LATE_SYSTEM_SLEEP_PM_OPS(adv748x_suspend, adv748x_resume)
+};
+#endif
+
 static const struct i2c_device_id adv748x_id[] = {
 	{ "adv7481", 0 },
 	{ "adv7482", 0 },
@@ -826,6 +873,9 @@ MODULE_DEVICE_TABLE(of, adv748x_of_table);
 static struct i2c_driver adv748x_driver = {
 	.driver = {
 		.name = "adv748x",
+#ifdef CONFIG_PM_SLEEP
+		.pm = &adv748x_pm_ops,
+#endif
 		.of_match_table = adv748x_of_table,
 	},
 	.probe = adv748x_probe,
diff --git a/drivers/media/i2c/adv748x/adv748x-hdmi.c b/drivers/media/i2c/adv748x/adv748x-hdmi.c
index 6da8a20b92f4..9b667fa4aca8 100644
--- a/drivers/media/i2c/adv748x/adv748x-hdmi.c
+++ b/drivers/media/i2c/adv748x/adv748x-hdmi.c
@@ -636,6 +636,25 @@ static int adv748x_hdmi_set_edid(struct v4l2_subdev *sd, struct v4l2_edid *edid)
 	return 0;
 }
 
+int adv748x_hdmi_set_resume_edid(struct adv748x_hdmi *hdmi)
+{
+	struct v4l2_edid g_edid;
+	int err;
+
+	g_edid.pad = 0;
+	g_edid.start_block = 0;
+	g_edid.blocks = 2;
+	g_edid.edid = (__u8 *)g_edid_data;
+
+	err = adv748x_hdmi_set_edid(&hdmi->sd, &g_edid);
+	if (err < 0) {
+		v4l2_err(&hdmi->sd, "edid set error %d\n", err);
+		return err;
+	}
+
+	return 0;
+}
+
 static bool adv748x_hdmi_check_dv_timings(const struct v4l2_dv_timings *timings,
 					  void *hdl)
 {
diff --git a/drivers/media/i2c/adv748x/adv748x.h b/drivers/media/i2c/adv748x/adv748x.h
index 5421a1455884..e98c35eb1803 100644
--- a/drivers/media/i2c/adv748x/adv748x.h
+++ b/drivers/media/i2c/adv748x/adv748x.h
@@ -87,6 +87,7 @@ struct adv748x_csi2 {
 	struct v4l2_ctrl_handler ctrl_hdl;
 	struct v4l2_ctrl *pixel_rate;
 	struct v4l2_subdev sd;
+	unsigned int vc_ch;
 };
 
 #define notifier_to_csi2(n) container_of(n, struct adv748x_csi2, notifier)
@@ -191,6 +192,7 @@ struct adv748x_state {
 
 /* IO Map */
 #define ADV748X_IO_PD			0x00	/* power down controls */
+#define ADV748X_IO_PD_HDMI		BIT(5)
 #define ADV748X_IO_PD_RX_EN		BIT(6)
 
 #define ADV748X_IO_REG_04		0x04
@@ -412,5 +414,6 @@ int adv748x_csi2_set_pixelrate(struct v4l2_subdev *sd, s64 rate);
 
 int adv748x_hdmi_init(struct adv748x_hdmi *hdmi);
 void adv748x_hdmi_cleanup(struct adv748x_hdmi *hdmi);
+int adv748x_hdmi_set_resume_edid(struct adv748x_hdmi *hdmi);
 
 #endif /* _ADV748X_H_ */
-- 
2.17.1

