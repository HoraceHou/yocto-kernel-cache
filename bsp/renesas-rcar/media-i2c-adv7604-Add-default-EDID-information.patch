From 0b162dd18e8dd41e841195970625754d96917923 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Thu, 7 Dec 2017 20:00:34 +0900
Subject: [PATCH 387/909] media: i2c: adv7604: Add default EDID information

commit c8cc9feda8243768ca7dbd8a6508b783d62696d3 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

Depending on the input device, if video decoder device do not have
EDID, communication may fail and data transfer may not be possible.
Therefore, This patch set default EDID information as initial value
and solve the problem.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/i2c/adv7604.c | 69 +++++++++++++++++++++++++++++++++++++
 1 file changed, 69 insertions(+)

diff --git a/drivers/media/i2c/adv7604.c b/drivers/media/i2c/adv7604.c
index dcf23a880689..d13c1b10ceba 100644
--- a/drivers/media/i2c/adv7604.c
+++ b/drivers/media/i2c/adv7604.c
@@ -312,6 +312,61 @@ static const struct v4l2_event adv76xx_ev_fmt = {
 	.u.src_change.changes = V4L2_EVENT_SRC_CH_RESOLUTION,
 };
 
+static const __u8 g_edid_data[256] = {
+/* Header information(0-19th byte) */ /* Fixed header pattern */
+	0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
+	0x34, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+	0x01, 0x0C, 0x01, 0x03,
+/* Basic display parameters(20-24th byte) */
+	0x80, 0x50, 0x2D, 0x78, 0x0A,
+/* Chromaticity coordinates(25-34th byte) */
+	0x0D, 0xC9, 0xA0, 0x57, 0x47, 0x98, 0x27, 0x12,
+	0x48, 0x4C,
+/* Established timing bitmap(35-37th byte) */
+	0x23, 0x09, 0x00,
+/* Standard timing information(38-53th byte) */
+/* Because they are unused, in this field, all values are 0101h. */
+	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
+	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
+/* Descriptor blocks of Descriptor 1(54-71th byte) */
+	0x01, 0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20,
+	0x58, 0x2C, 0x25, 0x00, 0x20, 0xC2, 0x31, 0x00,
+	0x00, 0x98,
+/* Descriptor blocks of Descriptor 2(72-89th byte) */
+	0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10,
+	0x10, 0x3E, 0x96, 0x00, 0x58, 0xC2, 0x21, 0x00,
+	0x00, 0x18,
+/* Descriptor blocks of Descriptor 3(90-107th byte) */
+	0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D, 0x59, 0x20,
+	0x48, 0x44, 0x54, 0x56, 0x0A, 0x20, 0x20, 0x20,
+	0x20, 0x20,
+/* Descriptor blocks of Descriptor 4(108-125th byte) */
+	0x00, 0x00, 0x00, 0xFD, 0x00, 0x3B, 0x3D, 0x0F,
+	0x2E, 0x08, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20,
+	0x20, 0x20,
+/* Number of extensions to follow(126th byte) */
+	0x01,	/* Extension enable */
+/* Checksum(127th byte) */
+	0x65,
+/* CEA EDID Timing Extension Version 3 */
+	0x02, 0x03, 0x34, 0x40, 0x83, 0x7F, 0x00, 0x00,
+	0x35, 0x0F, 0x06, 0x07, 0x17, 0x1F, 0x38, 0x1F,
+	0x07, 0x30, 0x2F, 0x07, 0x72, 0x3F, 0x7F, 0x72,
+	0x57, 0x7F, 0x00, 0x37, 0x7F, 0x72, 0x67, 0x03,
+	0x0C, 0x00, 0x10, 0x00, 0x88, 0x2D, 0x4D, 0x82,
+	0x03, 0x11, 0x12, 0x04, 0x13, 0x10, 0x1F, 0x05,
+	0x14, 0x22, 0x43, 0x00, 0x00, 0x00, 0x00, 0xFF,
+	0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00,
+	0x00, 0xFF, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20,
+	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+	0x00, 0x00, 0x00, 0xFF, 0x00, 0x0A, 0x20, 0x20,
+	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+	0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B,
+};
+
 /* ----------------------------------------------------------------------- */
 
 static inline struct adv76xx_state *to_state(struct v4l2_subdev *sd)
@@ -2762,6 +2817,20 @@ static int adv76xx_core_init(struct v4l2_subdev *sd)
 	struct adv76xx_state *state = to_state(sd);
 	const struct adv76xx_chip_info *info = state->info;
 	struct adv76xx_platform_data *pdata = &state->pdata;
+	int err;
+	struct v4l2_edid g_edid;
+	__u8 edid[256];
+
+	g_edid.pad = 0;
+	g_edid.start_block = 0;
+	g_edid.blocks = 2;
+	memcpy(edid, g_edid_data, 256);
+	g_edid.edid = (__u8 *)edid;
+	err = adv76xx_set_edid(sd, &g_edid);
+	if (err < 0) {
+		v4l2_err(sd, "edid set error %d\n", err);
+		return err;
+	}
 
 	hdmi_write(sd, 0x48,
 		(pdata->disable_pwrdnb ? 0x80 : 0) |
-- 
2.17.1

