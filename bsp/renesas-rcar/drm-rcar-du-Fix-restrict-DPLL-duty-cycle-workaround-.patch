From 0aad49d99fdc92db09d4ceec86c5151da2799849 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Thu, 23 Aug 2018 18:23:14 +0900
Subject: [PATCH 295/909] drm: rcar-du: Fix restrict DPLL duty cycle workaround
 to H3 ES1.x

commit 9b4c579cd456bbca13db1b0172f9553721c19155 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

The caluculation for 4k size is wrong and not displaying in H3 ES1.x.
This patch corrects it.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/rcar-du/rcar_du_crtc.c | 26 ++++++++++++++++----------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
index c6b813415104..a39167c8b735 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
@@ -107,6 +107,11 @@ static void rcar_du_crtc_put(struct rcar_du_crtc *rcrtc)
  * Hardware Setup
  */
 
+static const struct soc_device_attribute rcar_du_r8a7795_es1[] = {
+	{ .soc_id = "r8a7795", .revision = "ES1.*" },
+	{ /* sentinel */ }
+};
+
 struct dpll_info {
 	unsigned int output;
 	unsigned int fdpll;
@@ -175,8 +180,14 @@ static void rcar_du_dpll_divider(struct rcar_du_crtc *rcrtc,
 
 			for (fdpll = 1; fdpll < 32; fdpll++) {
 				unsigned long output;
+				unsigned long wa_div;
 
-				output = fout / (fdpll + 1);
+				if (soc_device_match(rcar_du_r8a7795_es1))
+					wa_div = 2;
+				else
+					wa_div = 1;
+
+				output = fout / (fdpll + 1) / wa_div;
 				if (output >= 400 * 1000 * 1000)
 					continue;
 
@@ -205,11 +216,6 @@ static void rcar_du_dpll_divider(struct rcar_du_crtc *rcrtc,
 		 best_diff);
 }
 
-static const struct soc_device_attribute rcar_du_r8a7795_es1[] = {
-	{ .soc_id = "r8a7795", .revision = "ES1.*" },
-	{ /* sentinel */ }
-};
-
 static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 {
 	const struct drm_display_mode *mode = &rcrtc->crtc.state->adjusted_mode;
@@ -241,6 +247,9 @@ static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 		if (rcdu->info->dpll_ch & (1 << rcrtc->index)) {
 			unsigned long target = mode_clock;
 
+			rcar_du_dpll_divider(rcrtc, &dpll, extclk, target);
+			extclk = dpll.output;
+
 			/*
 			 * The H3 ES1.x exhibits dot clock duty cycle stability
 			 * issues. We can work around them by configuring the
@@ -250,10 +259,7 @@ static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 			 * reason, so restrict the workaround to H3 ES1.x.
 			 */
 			if (soc_device_match(rcar_du_r8a7795_es1))
-				target *= 2;
-
-			rcar_du_dpll_divider(rcrtc, &dpll, extclk, target);
-			extclk = dpll.output;
+				extclk *= 2;
 		}
 
 		extdiv = DIV_ROUND_CLOSEST(extclk, mode_clock);
-- 
2.17.1

