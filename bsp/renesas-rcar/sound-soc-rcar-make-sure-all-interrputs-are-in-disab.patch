From bfa884e45d3e5ba72638b4504791d79b2d412b2a Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Tue, 24 Sep 2019 16:21:13 +0800
Subject: [PATCH] sound: soc: rcar: make sure all interrputs are in disable
 status

When run kexec/kdump feature, some audio interrupt are in enable
status during the second kernel boots up. In this way, after ISR is
registered, it is invoked crazily, and then cause kernel doesn't
boot up normally.
Therefore, disable all interrupts during sound driver initialization
function.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/sh/rcar/core.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/sound/soc/sh/rcar/core.c b/sound/soc/sh/rcar/core.c
index b492db94d867..90c9b1787f91 100644
--- a/sound/soc/sh/rcar/core.c
+++ b/sound/soc/sh/rcar/core.c
@@ -1514,6 +1514,8 @@ static int rsnd_probe(struct platform_device *pdev)
 		rsnd_dai_probe,
 	};
 	int ret, i;
+	struct rsnd_mod *ssi_mod;
+	struct rsnd_mod *src_mod;
 
 	/*
 	 *	init priv data
@@ -1535,6 +1537,28 @@ static int rsnd_probe(struct platform_device *pdev)
 			return ret;
 	}
 
+	/*
+	 * Disable interrupt, make sure all interrupts are
+	 * in disable status before registering ISR.
+	 */
+	for_each_rsnd_dai(rdai, priv, i) {
+		ssi_mod = rsnd_io_to_mod_ssi(&rdai->playback);
+		if (ssi_mod)
+			rsnd_mod_write(ssi_mod, SSI_INT_ENABLE, 0);
+
+		src_mod = rsnd_io_to_mod_src(&rdai->playback);
+		if (src_mod)
+			rsnd_mod_write(src_mod, SRC_INT_ENABLE0, 0);
+
+		ssi_mod = rsnd_io_to_mod_ssi(&rdai->capture);
+		if (ssi_mod)
+			rsnd_mod_write(ssi_mod, SSI_INT_ENABLE, 0);
+
+		src_mod = rsnd_io_to_mod_src(&rdai->capture);
+		if (src_mod)
+			rsnd_mod_write(src_mod, SRC_INT_ENABLE0, 0);
+	}
+
 	for_each_rsnd_dai(rdai, priv, i) {
 		ret = rsnd_rdai_continuance_probe(priv, &rdai->playback);
 		if (ret)
-- 
2.17.1

