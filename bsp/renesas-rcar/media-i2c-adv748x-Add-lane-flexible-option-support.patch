From de64524cd67e5e5bb0992d314c3a4529adfc03de Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Wed, 22 Nov 2017 16:57:54 +0900
Subject: [PATCH 376/909] media: i2c: adv748x: Add lane flexible option support

commit ccf72ac2fd6970442b4b9aba8699573371c97af4 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

Add an option that can be changed to 1 or 2 or 4 lanes at txa.
Change it by making the following modifications in dts file.

 adv7482_txa: endpoint {
 	clock-lanes = <0>;
	data-lanes = <1 2 3 4>;    <- change 1 or 2 or 4
 	remote-endpoint = <&csi40_in>;
 };

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../devicetree/bindings/media/i2c/adv748x.txt |  2 +
 drivers/media/i2c/adv748x/adv748x-core.c      | 88 ++++++++++++++++++-
 drivers/media/i2c/adv748x/adv748x.h           |  1 +
 3 files changed, 88 insertions(+), 3 deletions(-)

diff --git a/Documentation/devicetree/bindings/media/i2c/adv748x.txt b/Documentation/devicetree/bindings/media/i2c/adv748x.txt
index 21ffb5ed8183..9a74db585796 100644
--- a/Documentation/devicetree/bindings/media/i2c/adv748x.txt
+++ b/Documentation/devicetree/bindings/media/i2c/adv748x.txt
@@ -18,6 +18,8 @@ Optional Properties:
 		     "intrq3". All interrupts are optional. The "intrq3" interrupt
 		     is only available on the adv7481
   - interrupts: Specify the interrupt lines for the ADV748x
+  - data-lanes: Specify the data-lanes for the adv7482_txa of ADV748x as follows,
+		data-lanes = <1> or data-lanes = <1,2> data-lanes = <1,2,3,4>
 
 The device node must contain one 'port' child node per device input and output
 port, in accordance with the video interface bindings defined in
diff --git a/drivers/media/i2c/adv748x/adv748x-core.c b/drivers/media/i2c/adv748x/adv748x-core.c
index 6ca88daa0ecd..b469ae9156c4 100644
--- a/drivers/media/i2c/adv748x/adv748x-core.c
+++ b/drivers/media/i2c/adv748x/adv748x-core.c
@@ -28,6 +28,7 @@
 #include <media/v4l2-device.h>
 #include <media/v4l2-dv-timings.h>
 #include <media/v4l2-ioctl.h>
+#include <media/v4l2-fwnode.h>
 
 #include "adv748x.h"
 
@@ -252,6 +253,42 @@ static const struct adv748x_reg_value adv748x_power_up_txa_4lane[] = {
 	{ADV748X_PAGE_EOR, 0xff, 0xff}	/* End of register table */
 };
 
+static const struct adv748x_reg_value adv748x_power_up_txa_2lane[] = {
+
+	{ADV748X_PAGE_TXA, 0x00, 0x82},	/* Enable 2-lane MIPI */
+	{ADV748X_PAGE_TXA, 0x00, 0xa2},	/* Set Auto DPHY Timing */
+
+	{ADV748X_PAGE_TXA, 0x31, 0x82},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0x1e, 0x40},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0xda, 0x01},	/* i2c_mipi_pll_en - 1'b1 */
+	{ADV748X_PAGE_WAIT, 0x00, 0x02},/* delay 2 */
+	{ADV748X_PAGE_TXA, 0x00, 0x22},	/* Power-up CSI-TX */
+	{ADV748X_PAGE_WAIT, 0x00, 0x01},/* delay 1 */
+	{ADV748X_PAGE_TXA, 0xc1, 0x2b},	/* ADI Required Write */
+	{ADV748X_PAGE_WAIT, 0x00, 0x01},/* delay 1 */
+	{ADV748X_PAGE_TXA, 0x31, 0x80},	/* ADI Required Write */
+
+	{ADV748X_PAGE_EOR, 0xff, 0xff}	/* End of register table */
+};
+
+static const struct adv748x_reg_value adv748x_power_up_txa_1lane[] = {
+
+	{ADV748X_PAGE_TXA, 0x00, 0x81},	/* Enable 1-lane MIPI */
+	{ADV748X_PAGE_TXA, 0x00, 0xa1},	/* Set Auto DPHY Timing */
+
+	{ADV748X_PAGE_TXA, 0x31, 0x82},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0x1e, 0x40},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0xda, 0x01},	/* i2c_mipi_pll_en - 1'b1 */
+	{ADV748X_PAGE_WAIT, 0x00, 0x02},/* delay 2 */
+	{ADV748X_PAGE_TXA, 0x00, 0x21},	/* Power-up CSI-TX */
+	{ADV748X_PAGE_WAIT, 0x00, 0x01},/* delay 1 */
+	{ADV748X_PAGE_TXA, 0xc1, 0x2b},	/* ADI Required Write */
+	{ADV748X_PAGE_WAIT, 0x00, 0x01},/* delay 1 */
+	{ADV748X_PAGE_TXA, 0x31, 0x80},	/* ADI Required Write */
+
+	{ADV748X_PAGE_EOR, 0xff, 0xff}	/* End of register table */
+};
+
 static const struct adv748x_reg_value adv748x_power_down_txa_4lane[] = {
 
 	{ADV748X_PAGE_TXA, 0x31, 0x82},	/* ADI Required Write */
@@ -263,6 +300,28 @@ static const struct adv748x_reg_value adv748x_power_down_txa_4lane[] = {
 	{ADV748X_PAGE_EOR, 0xff, 0xff}	/* End of register table */
 };
 
+static const struct adv748x_reg_value adv748x_power_down_txa_2lane[] = {
+
+	{ADV748X_PAGE_TXA, 0x31, 0x82},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0x1e, 0x00},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0x00, 0x82},	/* Enable 2-lane MIPI */
+	{ADV748X_PAGE_TXA, 0xda, 0x01},	/* i2c_mipi_pll_en - 1'b1 */
+	{ADV748X_PAGE_TXA, 0xc1, 0x3b},	/* ADI Required Write */
+
+	{ADV748X_PAGE_EOR, 0xff, 0xff}	/* End of register table */
+};
+
+static const struct adv748x_reg_value adv748x_power_down_txa_1lane[] = {
+
+	{ADV748X_PAGE_TXA, 0x31, 0x82},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0x1e, 0x00},	/* ADI Required Write */
+	{ADV748X_PAGE_TXA, 0x00, 0x81},	/* Enable 1-lane MIPI */
+	{ADV748X_PAGE_TXA, 0xda, 0x01},	/* i2c_mipi_pll_en - 1'b1 */
+	{ADV748X_PAGE_TXA, 0xc1, 0x3b},	/* ADI Required Write */
+
+	{ADV748X_PAGE_EOR, 0xff, 0xff}	/* End of register table */
+};
+
 static const struct adv748x_reg_value adv748x_power_up_txb_1lane[] = {
 
 	{ADV748X_PAGE_TXB, 0x00, 0x81},	/* Enable 1-lane MIPI */
@@ -295,6 +354,8 @@ static const struct adv748x_reg_value adv748x_power_down_txb_1lane[] = {
 int adv748x_txa_power(struct adv748x_state *state, bool on)
 {
 	int val;
+	const struct adv748x_reg_value *txa_on;
+	const struct adv748x_reg_value *txa_off;
 
 	val = txa_read(state, ADV748X_CSI_FS_AS_LS);
 	if (val < 0)
@@ -308,10 +369,25 @@ int adv748x_txa_power(struct adv748x_state *state, bool on)
 	WARN_ONCE((on && val & ADV748X_CSI_FS_AS_LS_UNKNOWN),
 			"Enabling with unknown bit set");
 
-	if (on)
-		return adv748x_write_regs(state, adv748x_power_up_txa_4lane);
+	if (on) {
+		if (state->hdmi.use_lane == 1)
+			txa_on = adv748x_power_up_txa_1lane;
+		else if (state->hdmi.use_lane == 2)
+			txa_on = adv748x_power_up_txa_2lane;
+		else
+			txa_on = adv748x_power_up_txa_4lane;
+
+		return adv748x_write_regs(state, txa_on);
+	}
+
+	if (state->hdmi.use_lane == 1)
+		txa_off = adv748x_power_down_txa_1lane;
+	else if (state->hdmi.use_lane == 2)
+		txa_off = adv748x_power_down_txa_2lane;
+	else
+		txa_off = adv748x_power_down_txa_4lane;
 
-	return adv748x_write_regs(state, adv748x_power_down_txa_4lane);
+	return adv748x_write_regs(state, txa_off);
 }
 
 int adv748x_txb_power(struct adv748x_state *state, bool on)
@@ -570,9 +646,12 @@ static int adv748x_parse_dt(struct adv748x_state *state)
 	struct device_node *ep_np = NULL;
 	struct of_endpoint ep;
 	bool found = false;
+	struct v4l2_fwnode_endpoint v4l2_ep;
 
 	for_each_endpoint_of_node(state->dev->of_node, ep_np) {
 		of_graph_parse_endpoint(ep_np, &ep);
+
+		v4l2_fwnode_endpoint_parse(of_fwnode_handle(ep_np), &v4l2_ep);
 		adv_info(state, "Endpoint %pOF on port %d", ep.local_node,
 			 ep.port);
 
@@ -591,6 +670,9 @@ static int adv748x_parse_dt(struct adv748x_state *state)
 
 		of_node_get(ep_np);
 		state->endpoints[ep.port] = ep_np;
+		if (ep.port == ADV748X_PORT_TXA)
+			state->hdmi.use_lane =
+				v4l2_ep.bus.mipi_csi2.num_data_lanes;
 
 		found = true;
 	}
diff --git a/drivers/media/i2c/adv748x/adv748x.h b/drivers/media/i2c/adv748x/adv748x.h
index 65f83741277e..8776fff6f7fd 100644
--- a/drivers/media/i2c/adv748x/adv748x.h
+++ b/drivers/media/i2c/adv748x/adv748x.h
@@ -112,6 +112,7 @@ struct adv748x_hdmi {
 		u32 present;
 		unsigned int blocks;
 	} edid;
+	unsigned int use_lane;
 };
 
 #define adv748x_ctrl_to_hdmi(ctrl) \
-- 
2.17.1

