From ccc458ec9deb788c656bc259072ef53fa678d628 Mon Sep 17 00:00:00 2001
From: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Date: Wed, 14 Nov 2018 17:28:02 +0900
Subject: [PATCH 196/909] ravb: Avoid unsupported internal delay mode for R-Car
 E3/D3

commit da44dfbbf4a29cc07ad9a6f73e7b07eb156899dd from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

According to the R-Car Gen3 Hardware Manual Errata for Rev 1.00 of
August 24, 2018, the TX clock internal Delay mode does'nt support
on R-Car E3 and D3. If the TX clock internal Delay mode does'nt
support, It communication at 1Gbps may fail because optimum
delay setting can not be performed. This patch limits R-Car
E3 and D3 to 100Mbps.

Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/renesas/ravb_main.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/renesas/ravb_main.c b/drivers/net/ethernet/renesas/ravb_main.c
index 2ac08b2f8aa6..2d0a5eddfc6c 100644
--- a/drivers/net/ethernet/renesas/ravb_main.c
+++ b/drivers/net/ethernet/renesas/ravb_main.c
@@ -992,6 +992,12 @@ static const struct soc_device_attribute r8a7795es10[] = {
 	{ /* sentinel */ }
 };
 
+static const struct soc_device_attribute ravb_quirks_match[] = {
+	{ .soc_id = "r8a77990", .revision = "ES1.*" },
+	{ .soc_id = "r8a77995", .revision = "ES1.*" },
+	{ /* sentinel */ }
+};
+
 /* PHY init function */
 static int ravb_phy_init(struct net_device *ndev)
 {
@@ -1030,7 +1036,8 @@ static int ravb_phy_init(struct net_device *ndev)
 	/* This driver only support 10/100Mbit speeds on R-Car H3 ES1.0
 	 * at this time.
 	 */
-	if (soc_device_match(r8a7795es10)) {
+	if (soc_device_match(r8a7795es10) ||
+	    soc_device_match(ravb_quirks_match)) {
 		err = phy_set_max_speed(phydev, SPEED_100);
 		if (err) {
 			netdev_err(ndev, "failed to limit PHY to 100Mbit/s\n");
@@ -1896,6 +1903,9 @@ static void ravb_set_delay_mode(struct net_device *ndev)
 	struct ravb_private *priv = netdev_priv(ndev);
 	int set = 0;
 
+	if (soc_device_match(ravb_quirks_match))
+		return;
+
 	if (priv->phy_interface == PHY_INTERFACE_MODE_RGMII_ID ||
 	    priv->phy_interface == PHY_INTERFACE_MODE_RGMII_RXID)
 		set |= APSR_DM_RDM;
-- 
2.17.1

