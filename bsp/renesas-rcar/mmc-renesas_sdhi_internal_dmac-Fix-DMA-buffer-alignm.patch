From 18d6a9fff36b7e743339b4460aea7b873984aac6 Mon Sep 17 00:00:00 2001
From: Takeshi Saito <takeshi.saito.xv@renesas.com>
Date: Fri, 18 Jan 2019 17:42:36 +0900
Subject: [PATCH 736/909] mmc: renesas_sdhi_internal_dmac: Fix DMA buffer
 alignment from 8 to 128-bytes

commit 6331c5f1c6a6f543ab27d12dfe8112b3959d2edd from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

The internal DMAC buffer alignment condition of R-Car Gen3 SDHI
HW is 128 bytes before. It is correct, but HW manual have had a
mistake as 8 bytes. The driver is fixed with 128 bytes according
to the modification of HW manual, this time.

Signed-off-by: Takeshi Saito <takeshi.saito.xv@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mmc/host/renesas_sdhi_internal_dmac.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/mmc/host/renesas_sdhi_internal_dmac.c b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
index e2d845c628b2..bec75928b60a 100644
--- a/drivers/mmc/host/renesas_sdhi_internal_dmac.c
+++ b/drivers/mmc/host/renesas_sdhi_internal_dmac.c
@@ -175,6 +175,13 @@ renesas_sdhi_internal_dmac_start_dma(struct tmio_mmc_host *host,
 	if (!tmio_mmc_pre_dma_transfer(host, data, COOKIE_MAPPED))
 		goto force_pio;
 
+	/*
+	 * In case of Gen3, this DMAC cannot handle if buffer is
+	 * not 128-bytes alignment
+	 */
+	if (!IS_ALIGNED(sg_dma_address(sg), 128))
+		goto force_pio_with_unmap;
+
 	if (data->flags & MMC_DATA_READ) {
 		dtran_mode |= DTRAN_MODE_CH_NUM_CH1;
 		if (test_bit(SDHI_INTERNAL_DMAC_ONE_RX_ONLY, &global_flags) &&
@@ -197,6 +204,7 @@ renesas_sdhi_internal_dmac_start_dma(struct tmio_mmc_host *host,
 
 force_pio_with_unmap:
 	dma_unmap_sg(&host->pdev->dev, sg, host->sg_len, mmc_get_dma_dir(data));
+	data->host_cookie = COOKIE_UNMAPPED;
 
 force_pio:
 	host->force_pio = true;
-- 
2.17.1

