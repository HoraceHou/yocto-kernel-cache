From 981a1f92d127f167f8cdfd0f0afc56fe1ec6ddb9 Mon Sep 17 00:00:00 2001
From: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
Date: Wed, 22 Nov 2017 20:49:54 +0900
Subject: [PATCH 216/909] mmc: tmio: Add support for pre_req and post_req

commit bc6ecd4154b765cf565b96a6c970ba64f46e05c0 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

This patch implements pre_req and post_req to support
asynchronous mmc request.

Signed-off-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
[saito: adjust context.]
Signed-off-by: Takeshi Saito <takeshi.saito.xv@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mmc/host/tmio_mmc.h      |  8 ++++
 drivers/mmc/host/tmio_mmc_core.c | 63 +++++++++++++++++++++++++++++++-
 2 files changed, 70 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/host/tmio_mmc.h b/drivers/mmc/host/tmio_mmc.h
index 049ec0f7a386..412b1fe3ee87 100644
--- a/drivers/mmc/host/tmio_mmc.h
+++ b/drivers/mmc/host/tmio_mmc.h
@@ -123,6 +123,12 @@
 struct tmio_mmc_data;
 struct tmio_mmc_host;
 
+enum tmio_cookie {
+	COOKIE_UNMAPPED,
+	COOKIE_PRE_MAPPED,
+	COOKIE_MAPPED,
+};
+
 struct tmio_mmc_dma_ops {
 	void (*start)(struct tmio_mmc_host *host, struct mmc_data *data);
 	void (*enable)(struct tmio_mmc_host *host, bool enable);
@@ -234,6 +240,8 @@ void tmio_mmc_do_data_irq(struct tmio_mmc_host *host);
 
 void tmio_mmc_set_transtate(struct tmio_mmc_host *host, unsigned int state);
 void tmio_mmc_clear_transtate(struct tmio_mmc_host *host);
+int tmio_mmc_pre_dma_transfer(struct tmio_mmc_host *host,
+			      struct mmc_data *data, int cookie);
 
 void tmio_mmc_enable_mmc_irqs(struct tmio_mmc_host *host, u32 i);
 void tmio_mmc_disable_mmc_irqs(struct tmio_mmc_host *host, u32 i);
diff --git a/drivers/mmc/host/tmio_mmc_core.c b/drivers/mmc/host/tmio_mmc_core.c
index 898e631c50c7..181bd7adb58d 100644
--- a/drivers/mmc/host/tmio_mmc_core.c
+++ b/drivers/mmc/host/tmio_mmc_core.c
@@ -29,6 +29,7 @@
 
 #include <linux/delay.h>
 #include <linux/device.h>
+#include <linux/dma-mapping.h>
 #include <linux/highmem.h>
 #include <linux/interrupt.h>
 #include <linux/io.h>
@@ -139,6 +140,34 @@ void tmio_mmc_clear_transtate(struct tmio_mmc_host *host)
 }
 EXPORT_SYMBOL_GPL(tmio_mmc_clear_transtate);
 
+int tmio_mmc_pre_dma_transfer(struct tmio_mmc_host *host,
+			      struct mmc_data *data, int cookie)
+{
+	unsigned int sg_len;
+
+	if (data->host_cookie == COOKIE_PRE_MAPPED)
+		return data->sg_len;
+
+	sg_len = dma_map_sg(&host->pdev->dev, data->sg, data->sg_len,
+			    mmc_get_dma_dir(data));
+	if (sg_len == 0) {
+		dev_err(&host->pdev->dev,
+			"%s: dma_map_sg failed\n", __func__);
+		return 0;
+	}
+	/* This DMAC cannot handle if buffer is not 8-bytes alignment */
+	if (!IS_ALIGNED(sg_dma_address(data->sg), 8)) {
+		dma_unmap_sg(&host->pdev->dev, data->sg, data->sg_len,
+			     mmc_get_dma_dir(data));
+		return 0;
+	}
+
+	data->host_cookie = cookie;
+
+	return sg_len;
+}
+EXPORT_SYMBOL_GPL(tmio_mmc_pre_dma_transfer);
+
 static void tmio_mmc_ack_mmc_irqs(struct tmio_mmc_host *host, u32 i)
 {
 	sd_ctrl_write32_as_16_and_16(host, CTL_STATUS, ~i);
@@ -838,6 +867,36 @@ static int tmio_mmc_start_data(struct tmio_mmc_host *host,
 	return 0;
 }
 
+static void tmio_mmc_post_req(struct mmc_host *mmc, struct mmc_request *req,
+			      int err)
+{
+	struct tmio_mmc_host *host = mmc_priv(mmc);
+	struct mmc_data *data = req->data;
+
+	if (!host->chan_tx || !host->chan_rx || !data)
+		return;
+
+	if (data->host_cookie != COOKIE_UNMAPPED)
+		dma_unmap_sg(&host->pdev->dev, data->sg, data->sg_len,
+			     mmc_get_dma_dir(data));
+
+	data->host_cookie = COOKIE_UNMAPPED;
+}
+
+static void tmio_mmc_pre_req(struct mmc_host *mmc, struct mmc_request *req)
+{
+	struct tmio_mmc_host *host = mmc_priv(mmc);
+	struct mmc_data *data = req->data;
+
+	if (!host->chan_tx || !host->chan_rx || !data)
+		return;
+
+	data->host_cookie = COOKIE_UNMAPPED;
+
+	if (tmio_mmc_pre_dma_transfer(host, data, COOKIE_PRE_MAPPED) <= 0)
+		data->host_cookie = COOKIE_UNMAPPED;
+}
+
 static void tmio_mmc_hw_reset(struct mmc_host *mmc)
 {
 	struct tmio_mmc_host *host = mmc_priv(mmc);
@@ -1180,9 +1239,11 @@ static int tmio_multi_io_quirk(struct mmc_card *card,
 }
 
 static const struct mmc_host_ops tmio_mmc_ops = {
+	.post_req	= tmio_mmc_post_req,
+	.pre_req	= tmio_mmc_pre_req,
 	.request	= tmio_mmc_request,
 	.set_ios	= tmio_mmc_set_ios,
-	.get_ro         = tmio_mmc_get_ro,
+	.get_ro		= tmio_mmc_get_ro,
 	.get_cd		= tmio_mmc_get_cd,
 	.enable_sdio_irq = tmio_mmc_enable_sdio_irq,
 	.multi_io_quirk	= tmio_multi_io_quirk,
-- 
2.17.1

