From 6c0a3831c1a09129df79f5eaeacaaf9f98df8822 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Tue, 4 Sep 2018 18:54:50 +0900
Subject: [PATCH 370/909] rcar-vin: rcar-csi2: Add interrupt error handling in
 transfer

commit 2a44ab52539f891130cca2451d52354c314a6c39 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

Add error handling when an error occurs by Interrupt Error Status
Monitor Register. If the concerned error was occurred, it is
necessary to stop capture and reinitialize, so execute CPG reset of
CSI2 and stop the capture and notify the user that the capture
completion interrupt does not come.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/rcar-vin/rcar-csi2.c | 33 ++++++++++++++++++++-
 1 file changed, 32 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/rcar-vin/rcar-csi2.c b/drivers/media/platform/rcar-vin/rcar-csi2.c
index 6649fb7b2a8d..2a815b03d99b 100644
--- a/drivers/media/platform/rcar-vin/rcar-csi2.c
+++ b/drivers/media/platform/rcar-vin/rcar-csi2.c
@@ -84,6 +84,9 @@ struct rcar_csi2;
 
 /* Interrupt Enable */
 #define INTEN_REG			0x30
+#define INTEN_INT_AFIFO_OF		BIT(27)
+#define INTEN_INT_ERRSOTHS		BIT(4)
+#define INTEN_INT_ERRSOTSYNCHS		BIT(3)
 
 /* Interrupt Source Mask */
 #define INTCLOSE_REG			0x34
@@ -388,6 +391,29 @@ static void rcsi2_write(struct rcar_csi2 *priv, unsigned int reg, u32 data)
 	iowrite32(data, priv->base + reg);
 }
 
+static irqreturn_t rcsi2_irq(int irq, void *data)
+{
+	struct rcar_csi2 *priv = data;
+	u32 int_status, int_err_status;
+	unsigned int handled = 0;
+
+	int_status = rcsi2_read(priv, INTSTATE_REG);
+	int_err_status = rcsi2_read(priv, INTERRSTATE_REG);
+
+	if (int_status) {
+		rcsi2_write(priv, INTSTATE_REG, int_status);
+		if (int_err_status) {
+			rcsi2_write(priv, INTERRSTATE_REG, int_err_status);
+			dev_err(priv->dev,
+				"Reinitialize for transfer error.\n");
+			reset_control_assert(priv->rstc);
+		}
+		handled = 1;
+	}
+
+	return IRQ_RETVAL(handled);
+}
+
 static int rcsi2_wait_phy_start(struct rcar_csi2 *priv)
 {
 	unsigned int timeout;
@@ -520,6 +546,10 @@ static int rcsi2_start(struct rcar_csi2 *priv, struct v4l2_subdev *nextsd)
 	rcsi2_write(priv, TREF_REG, TREF_TREF);
 	rcsi2_write(priv, PHTC_REG, 0);
 
+	/* Enable interrupt */
+	rcsi2_write(priv, INTEN_REG, INTEN_INT_AFIFO_OF |
+		    INTEN_INT_ERRSOTHS | INTEN_INT_ERRSOTSYNCHS);
+
 	/* Configure */
 	rcsi2_write(priv, VCDT_REG, vcdt);
 	rcsi2_write(priv, VCDT2_REG, vcdt2);
@@ -976,7 +1006,8 @@ static int rcsi2_probe_resources(struct rcar_csi2 *priv,
 	if (irq < 0)
 		return irq;
 
-	return 0;
+	return devm_request_irq(&pdev->dev, irq, rcsi2_irq, IRQF_SHARED,
+				dev_name(&pdev->dev), priv);
 }
 
 static const struct rcar_csi2_info rcar_csi2_info_r8a7795 = {
-- 
2.17.1

