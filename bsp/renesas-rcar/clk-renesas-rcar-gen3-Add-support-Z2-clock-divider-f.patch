From f1a0c33fa6ff0f4efb4c9f865c9b431f35df42ee Mon Sep 17 00:00:00 2001
From: Takeshi Kihara <takeshi.kihara.df@renesas.com>
Date: Wed, 5 Sep 2018 15:41:37 +0530
Subject: [PATCH 126/909] clk: renesas: rcar-gen3: Add support Z2 clock divider
 for R8A77990

commit 11a8254d0dea1642c4ce369fe3c53f6679a17c8e from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

This patch supports the Z2 clock divider for the R8A77990 SoC. In this
SoC, the Z2 clock divider bits of the FRQCRC register is bit[12:8].

Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/renesas/rcar-gen3-cpg.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/clk/renesas/rcar-gen3-cpg.c b/drivers/clk/renesas/rcar-gen3-cpg.c
index 89937e7c57af..2afc85e11e2a 100644
--- a/drivers/clk/renesas/rcar-gen3-cpg.c
+++ b/drivers/clk/renesas/rcar-gen3-cpg.c
@@ -42,6 +42,7 @@ static u32 cpg_quirks;
 
 #define PLL_ERRATA		BIT(0)	/* Missing PLL0/2/4 post-divider */
 #define RCKCR_CKSEL		BIT(1)	/* Resverd RCLK clock soruce select */
+#define Z2FC_BIT_MASK_SFT_8	BIT(2)	/* Use Z2FC bit mask range to [12:8] */
 
 struct cpg_simple_notifier {
 	struct notifier_block nb;
@@ -205,6 +206,7 @@ static struct clk * __init cpg_pll_clk_register(const char *name,
 #define CPG_FRQCRB_ZGFC_MASK		GENMASK(28, 24)
 #define CPG_FRQCRC			0x000000e0
 #define CPG_FRQCRC_ZFC_MASK		GENMASK(12, 8)
+#define CPG_FRQCRC_Z2FC_SFT_8_MASK	GENMASK(12, 8)
 #define CPG_FRQCRC_Z2FC_MASK		GENMASK(4, 0)
 
 #define Z_CLK_ROUND(f)	(100000000 * DIV_ROUND_CLOSEST_ULL((f), 100000000))
@@ -616,6 +618,10 @@ static const struct soc_device_attribute cpg_quirks_match[] __initconst = {
 		.soc_id = "r8a7796", .revision = "ES1.0",
 		.data = (void *)RCKCR_CKSEL,
 	},
+	{
+		.soc_id = "r8a77990",
+		.data = (void *)Z2FC_BIT_MASK_SFT_8,
+	},
 	{ /* sentinel */ }
 };
 
@@ -730,6 +736,12 @@ struct clk * __init rcar_gen3_cpg_clk_register(struct device *dev,
 					  base, CPG_FRQCRC_ZFC_MASK, core->div);
 
 	case CLK_TYPE_GEN3_Z2:
+		if (cpg_quirks & Z2FC_BIT_MASK_SFT_8)
+			return cpg_z_clk_register(core->name,
+						  __clk_get_name(parent), base,
+						  CPG_FRQCRC_Z2FC_SFT_8_MASK,
+						  core->div);
+
 		return cpg_z_clk_register(core->name, __clk_get_name(parent),
 					  base, CPG_FRQCRC_Z2FC_MASK,
 					  core->div);
-- 
2.17.1

