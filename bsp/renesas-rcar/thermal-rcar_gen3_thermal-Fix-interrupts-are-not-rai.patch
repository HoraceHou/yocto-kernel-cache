From 7f29e59be7f6d6d28129aeced0971c5f420c4dcf Mon Sep 17 00:00:00 2001
From: Van Do <van.do.xw@rvc.renesas.com>
Date: Thu, 29 Mar 2018 10:15:56 +0700
Subject: [PATCH 168/909] thermal: rcar_gen3_thermal: Fix interrupts are not
 raised issue on E3

commit fb8efb8bac29a1c865897729dc51ddacb9ce3c0d from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

In current code, the thermal interrupts
are not raised when temperature is changed.

The cause is that, software reads temperature (CTEMP)
right after changing interrupt control register.
During that time, the hardware temperature is changing
and still unstable. It leads to wrong value on software.

This patch updates so that software checks
and waits for hardware changing become stably.

Signed-off-by: Van Do <van.do.xw@rvc.renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/thermal/rcar_gen3_thermal.c | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/drivers/thermal/rcar_gen3_thermal.c b/drivers/thermal/rcar_gen3_thermal.c
index 8e38ae857b57..b27bcdec427e 100644
--- a/drivers/thermal/rcar_gen3_thermal.c
+++ b/drivers/thermal/rcar_gen3_thermal.c
@@ -227,8 +227,26 @@ static int rcar_gen3_thermal_convert_temp(struct rcar_gen3_thermal_tsc *tsc)
 		mcelsius = rcar_gen3_thermal_round(FIXPT_TO_MCELSIUS(
 							(val1 + val2) / 2));
 	} else {
-		reg = rcar_gen3_thermal_read(tsc, REG_GEN3_B_THSSR)
-					& CTEMP_B_MASK;
+		int i;
+		u32 old, new;
+
+		reg = 0;
+		old = ~0;
+		for (i = 0; i < 128; i++) {
+			/*
+			 * As hardware description, it needs to wait 300us after
+			 * changing comparator offset to get stable temperature.
+			 */
+			usleep_range(300, 350);
+			new = rcar_gen3_thermal_read(tsc, REG_GEN3_B_THSSR)
+						& CTEMP_B_MASK;
+
+			if (new == old) {
+				reg = new;
+				break;
+			}
+			old = new;
+		}
 		mcelsius = MCELSIUS((reg * 5) - 65);
 	}
 
-- 
2.17.1

