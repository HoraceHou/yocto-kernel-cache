From 69425f4d608df0d85e5b6e746eef58bf856b0c02 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Tue, 4 Sep 2018 18:38:38 +0900
Subject: [PATCH 369/909] rcar-vin: rcar-csi2: Fix sequence of start and stop

commit ced5f67d888b1e115e22d18e22c8579770c92fee from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

According to latest H/W manual v1.00, start and stop sequence
of CSI2 is changed from SRST register to reset/release of CPG
register. This patch fixes it.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/rcar-vin/rcar-csi2.c | 23 +++++++++++----------
 1 file changed, 12 insertions(+), 11 deletions(-)

diff --git a/drivers/media/platform/rcar-vin/rcar-csi2.c b/drivers/media/platform/rcar-vin/rcar-csi2.c
index 304b8211675b..6649fb7b2a8d 100644
--- a/drivers/media/platform/rcar-vin/rcar-csi2.c
+++ b/drivers/media/platform/rcar-vin/rcar-csi2.c
@@ -14,6 +14,7 @@
 #include <linux/of_graph.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
+#include <linux/reset.h>
 #include <linux/sys_soc.h>
 
 #include <media/v4l2-ctrls.h>
@@ -349,6 +350,7 @@ struct rcar_csi2 {
 	struct device *dev;
 	void __iomem *base;
 	const struct rcar_csi2_info *info;
+	struct reset_control *rstc;
 
 	struct v4l2_subdev subdev;
 	struct media_pad pads[NR_OF_RCAR_CSI2_PAD];
@@ -386,13 +388,6 @@ static void rcsi2_write(struct rcar_csi2 *priv, unsigned int reg, u32 data)
 	iowrite32(data, priv->base + reg);
 }
 
-static void rcsi2_reset(struct rcar_csi2 *priv)
-{
-	rcsi2_write(priv, SRST_REG, SRST_SRST);
-	usleep_range(100, 150);
-	rcsi2_write(priv, SRST_REG, 0);
-}
-
 static int rcsi2_wait_phy_start(struct rcar_csi2 *priv)
 {
 	unsigned int timeout;
@@ -523,7 +518,6 @@ static int rcsi2_start(struct rcar_csi2 *priv, struct v4l2_subdev *nextsd)
 
 	/* Init */
 	rcsi2_write(priv, TREF_REG, TREF_TREF);
-	rcsi2_reset(priv);
 	rcsi2_write(priv, PHTC_REG, 0);
 
 	/* Configure */
@@ -588,10 +582,9 @@ static int rcsi2_start(struct rcar_csi2 *priv, struct v4l2_subdev *nextsd)
 static void rcsi2_stop(struct rcar_csi2 *priv)
 {
 	rcsi2_write(priv, PHYCNT_REG, 0);
-
-	rcsi2_reset(priv);
-
 	rcsi2_write(priv, PHTC_REG, PHTC_TESTCLR);
+	reset_control_assert(priv->rstc);
+	usleep_range(100, 150);
 }
 
 static int rcsi2_s_stream(struct v4l2_subdev *sd, int enable)
@@ -611,6 +604,7 @@ static int rcsi2_s_stream(struct v4l2_subdev *sd, int enable)
 
 	if (enable && priv->stream_count == 0) {
 		pm_runtime_get_sync(priv->dev);
+		reset_control_deassert(priv->rstc);
 
 		ret = rcsi2_start(priv, nextsd);
 		if (ret) {
@@ -1085,6 +1079,13 @@ static int rcsi2_probe(struct platform_device *pdev)
 		return ret;
 	}
 
+	priv->rstc = devm_reset_control_get(&pdev->dev, NULL);
+	if (IS_ERR(priv->rstc)) {
+		dev_err(&pdev->dev, "failed to get cpg reset %s\n",
+			dev_name(priv->dev));
+		return PTR_ERR(priv->rstc);
+	}
+
 	platform_set_drvdata(pdev, priv);
 
 	ret = rcsi2_parse_dt(priv);
-- 
2.17.1

