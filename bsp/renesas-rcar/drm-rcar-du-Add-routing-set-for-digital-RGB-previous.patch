From a4575613d17744e6774ec1472adcb77f312b6b40 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Fri, 24 Aug 2018 18:54:59 +0900
Subject: [PATCH 299/909] drm: rcar-du: Add routing set for digital RGB
 previously

commit cc7ea9a03c0cea98825f0a84c85a2cb01085a4f5 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

When using only DU0 without DRGBS register setting, DU0 outputs to LVDS
and Digital RGB. By setting DRGBS register for the routing of digital RGB
previously, DU0 outputs to LVDS only.

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/rcar-du/rcar_du_group.c | 22 ++++++++++++++++++++++
 drivers/gpu/drm/rcar-du/rcar_du_group.h |  6 ++++--
 drivers/gpu/drm/rcar-du/rcar_du_kms.c   |  6 +++++-
 3 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/rcar-du/rcar_du_group.c b/drivers/gpu/drm/rcar-du/rcar_du_group.c
index d539cb290a35..62794d61577a 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_group.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_group.c
@@ -143,6 +143,28 @@ static void rcar_du_group_setup(struct rcar_du_group *rgrp)
 	mutex_unlock(&rgrp->lock);
 }
 
+void rcar_du_pre_group_set_routing(struct rcar_du_group *rgrp,
+				   struct rcar_du_crtc *rcrtc,
+				   unsigned int swindex)
+{
+	unsigned int possible_crtcs =
+		rgrp->dev->info->routes[RCAR_DU_OUTPUT_DPAD0].possible_crtcs;
+	u32 crtc = ffs(possible_crtcs) - 1;
+
+	if (swindex != crtc)
+		return;
+
+	clk_prepare_enable(rcrtc->clock);
+	rcar_du_group_setup(rgrp);
+	rcar_du_group_write(rgrp, DSYSR,
+			    (rcar_du_group_read(rgrp, DSYSR) &
+			    ~(DSYSR_DRES | DSYSR_DEN)) | DSYSR_DEN);
+	rcar_du_group_write(rgrp, DSYSR,
+			    (rcar_du_group_read(rgrp, DSYSR) &
+			    ~(DSYSR_DRES | DSYSR_DEN)) | DSYSR_DRES);
+	clk_disable_unprepare(rcrtc->clock);
+}
+
 /*
  * rcar_du_group_get - Acquire a reference to the DU channels group
  *
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_group.h b/drivers/gpu/drm/rcar-du/rcar_du_group.h
index 42105aedecc8..88743c21fb5b 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_group.h
+++ b/drivers/gpu/drm/rcar-du/rcar_du_group.h
@@ -1,7 +1,7 @@
 /*
  * rcar_du_group.c  --  R-Car Display Unit Planes and CRTCs Group
  *
- * Copyright (C) 2013-2014 Renesas Electronics Corporation
+ * Copyright (C) 2013-2018 Renesas Electronics Corporation
  *
  * Contact: Laurent Pinchart (laurent.pinchart@ideasonboard.com)
  *
@@ -61,7 +61,9 @@ void rcar_du_group_put(struct rcar_du_group *rgrp);
 void rcar_du_group_start_stop(struct rcar_du_group *rgrp, bool start);
 void rcar_du_group_restart(struct rcar_du_group *rgrp);
 int rcar_du_group_set_routing(struct rcar_du_group *rgrp);
-
+void rcar_du_pre_group_set_routing(struct rcar_du_group *rgrp,
+				   struct rcar_du_crtc *rcrtc,
+				   unsigned int swindex);
 int rcar_du_set_dpad0_vsp1_routing(struct rcar_du_device *rcdu);
 
 #endif /* __RCAR_DU_GROUP_H__ */
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_kms.c b/drivers/gpu/drm/rcar-du/rcar_du_kms.c
index 53c1d009ad95..45de72a51b4d 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_kms.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_kms.c
@@ -684,9 +684,13 @@ int rcar_du_modeset_init(struct rcar_du_device *rcdu)
 
 		rgrp = &rcdu->groups[hwindex / 2];
 
-		ret = rcar_du_crtc_create(rgrp, swindex++, hwindex);
+		ret = rcar_du_crtc_create(rgrp, swindex, hwindex);
 		if (ret < 0)
 			return ret;
+
+		rcar_du_pre_group_set_routing(rgrp, &rcdu->crtcs[swindex],
+					      swindex);
+		swindex++;
 	}
 
 	/* Initialize the encoders. */
-- 
2.17.1

