From b16f22dbd9b986557e251d95c60e5c43ed95ebca Mon Sep 17 00:00:00 2001
From: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
Date: Wed, 22 Nov 2017 12:59:25 +0900
Subject: [PATCH 210/909] mmc: core: Disable retuning with card removal

commit 87dbbcec554af8c9639941963367147c7c0ff263 from
git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git

fixes ("mmc: core: Add timeout errors to retuning condition")

If re-tuning is executed at timeout error, re-tuning will be
executed even when the card is removed.

When the card is removed, the command becomes an error.
However, during the re-tuning, even if an error occurs,
the processing is continued and the optimum TAP is searched.
Command transmission is repeated unnecessarily.
Since all TAP fails, a warning message by dev_warn() is output.
So, when card is removed, re-tuning flag should be cleared.

ex) tmio_mmc_core.c
dev_warn("Tuning procedure failed\n");

Signed-off-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
[saito: rework commit message.]
Signed-off-by: Takeshi Saito <takeshi.saito.xv@renesas.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mmc/core/core.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index ba1847d47540..414480dcf750 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -2539,6 +2539,7 @@ int _mmc_detect_card_removed(struct mmc_host *host)
 	if (!host->card || mmc_card_removed(host->card))
 		return 1;
 
+	mmc_retune_disable(host);
 	ret = host->bus_ops->alive(host);
 
 	/*
-- 
2.17.1

