From a00219eb2a9ceaf4b8133526706224628b780d57 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Thu, 13 Jul 2017 15:04:50 -0500
Subject: [PATCH 098/205] remoteproc: deny sysfs operations with MPM userspace
 loader

This commit comes from:
  git://git.ti.com/processor-sdk/processor-sdk-linux.git

The remoteproc framework provides sysfs interfaces for changing
the firmware name and for starting/stopping a remote processor
through the sysfs files 'state' and 'firmware'. The Keystone
remoteproc driver also supports a custom userspace-driven load
and boot mechanism called Multi Proc Manager (MPM) through a
char device and custom ioctls supporting a userspace daemon.

The sysfs interface does conflict with the MPM state-machine and
the corresponding state variables within the keystone remoteproc
driver. So, add a check to the sysfs interface operations to fix
this by obstructing any changes to the remoteproc state-machine
when a remote processor is configured for supporting the userspace
loader/boot mechanism.

Signed-off-by: Suman Anna <s-anna@ti.com>
(cherry picked from commit 31a445cde86e9b9d6e8b2d65e7aebdee99ed68de)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/remoteproc/remoteproc_sysfs.c |    8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/remoteproc/remoteproc_sysfs.c b/drivers/remoteproc/remoteproc_sysfs.c
index 6cf04a7..029f99c 100644
--- a/drivers/remoteproc/remoteproc_sysfs.c
+++ b/drivers/remoteproc/remoteproc_sysfs.c
@@ -34,6 +34,10 @@ static ssize_t firmware_store(struct device *dev,
 	struct rproc *rproc = to_rproc(dev);
 	int err;
 
+	/* restrict sysfs operation for userspace-based loader */
+	if (rproc->use_userspace_loader)
+		return -EPERM;
+
 	err = rproc_set_firmware(rproc, buf);
 
 	return err ? err : count;
@@ -72,6 +76,10 @@ static ssize_t state_store(struct device *dev,
 	struct rproc *rproc = to_rproc(dev);
 	int ret = 0;
 
+	/* restrict sysfs operation for userspace-based loader */
+	if (rproc->use_userspace_loader)
+		return -EPERM;
+
 	if (sysfs_streq(buf, "start")) {
 		if (rproc->state == RPROC_RUNNING)
 			return -EBUSY;
-- 
1.7.9.5

