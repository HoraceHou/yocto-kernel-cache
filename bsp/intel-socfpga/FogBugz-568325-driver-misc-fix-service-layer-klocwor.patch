From 58493d4a5f5dc1ed1bf73b2d0ac8ab7906b5571b Mon Sep 17 00:00:00 2001
From: Richard Gong <richard.gong@intel.com>
Date: Tue, 19 Jun 2018 10:41:56 -0500
Subject: [PATCH 3/5] FogBugz #568325: driver: misc: fix service layer
 klocwork errors

commit dde690e497686a125a263422ff4f07971eaa87af from
https://github.com/altera-opensource/linux-socfpga.git

Klocwork reports the following errors:

/home/yves/linux/intel/linux-bringup/drivers/misc/intel-service.c:275 --
-- MLK.MIGHT (2:Error) Analyze Possible memory leak. Dynamic memory stored
in 'p_data' allocated through function 'kmalloc' at line 262 can be lost
at line 275

/home/yves/linux/intel/linux-bringup/drivers/misc/intel-service.c:569 --
-- MLK.MIGHT (2:Error) Analyze Possible memory leak. Dynamic memory stored
in 'pdata' allocated through function 'kmalloc' at line 563 can be lost
at line 569

/home/yves/linux/intel/linux-bringup/drivers/misc/intel-service.c:284 --
-- INFINITE_LOOP.LOCAL (2:Error) Analyze Infinite loop

Fix those errors

Signed-off-by: Richard Gong <richard.gong@intel.com>
Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 drivers/misc/intel-service.c |   11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/misc/intel-service.c b/drivers/misc/intel-service.c
index d80d8e0..c9a939d 100644
--- a/drivers/misc/intel-service.c
+++ b/drivers/misc/intel-service.c
@@ -272,6 +272,7 @@ int intel_svc_send(struct intel_svc_chan *chan, void *msg)
 			if (IS_ERR(chan->ctrl->task)) {
 				dev_err(chan->ctrl->dev,
 					"fails to create svc_smc_hvc_thread\n");
+				kfree(p_data);
 				return -EINVAL;
 			}
 			wake_up_process(chan->ctrl->task);
@@ -281,12 +282,11 @@ int intel_svc_send(struct intel_svc_chan *chan, void *msg)
 		 p_msg->payload, p_msg->command,
 		 (unsigned int)p_msg->payload_length);
 
-	list_for_each_entry(p_mem, &svc_data_mem, node) {
+	list_for_each_entry(p_mem, &svc_data_mem, node)
 		if (p_mem->vaddr == p_msg->payload) {
 			p_data->paddr = p_mem->paddr;
 			break;
 		}
-	}
 
 	p_data->command = p_msg->command;
 	p_data->arg[0] = p_msg->arg[0];
@@ -406,10 +406,9 @@ static void *svc_pa_to_va(unsigned long addr)
 	struct intel_svc_data_mem *pmem;
 
 	pr_debug("claim back P-addr=0x%016x\n", (unsigned int)addr);
-	list_for_each_entry(pmem, &svc_data_mem, node) {
+	list_for_each_entry(pmem, &svc_data_mem, node)
 		if (pmem->paddr == addr)
 			return pmem->vaddr;
-	}
 
 	/* physical address is not found */
 	return NULL;
@@ -566,8 +565,10 @@ static int svc_normal_to_secure_thread(void *data)
 		return -ENOMEM;
 
 	cdata = kmalloc(sizeof(*cdata), GFP_KERNEL);
-	if (!cdata)
+	if (!cdata) {
+		kfree(pdata);
 		return -ENOMEM;
+	}
 
 	/* default set, to remove build warning */
 	a0 = INTEL_SIP_SMC_FPGA_CONFIG_LOOPBACK;
-- 
1.7.9.5

