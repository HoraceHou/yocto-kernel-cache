From 5867ff088fab0f544d59076948ee8a8a402e9627 Mon Sep 17 00:00:00 2001
From: Wenlin Kang <wenlin.kang@windriver.com>
Date: Thu, 9 Jan 2020 07:10:56 +0000
Subject: [PATCH] driver: edac: altera: Fix build warning

Fix below build warning:
drivers/edac/altera_edac.c: In function 's10_is_ecc_enable':
drivers/edac/altera_edac.c:286:38: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
  286 |  if (A10_ECCCTRL1_ECC_EN & result.a1 == A10_ECCCTRL1_ECC_EN)
In file included from drivers/edac/edac_module.h:14,
                 from drivers/edac/altera_edac.c:28:
include/linux/kern_levels.h:5:18: warning: format '%X' expects argument of type 'unsigned int', but argument 2 has type 'long unsigned int' [-Wformat=]
    5 | #define KERN_SOH "\001"  /* ASCII Start Of Header */
      |                  ^~~~~~
drivers/edac/edac_mc.h:49:9: note: in definition of macro 'edac_printk'
   49 |  printk(level "EDAC " prefix ": " fmt, ##arg)
      |         ^~~~~
include/linux/kern_levels.h:11:18: note: in expansion of macro 'KERN_SOH'
   11 | #define KERN_ERR KERN_SOH "3" /* error conditions */
      |                  ^~~~~~~~
drivers/edac/altera_edac.c:289:15: note: in expansion of macro 'KERN_ERR'
  289 |   edac_printk(KERN_ERR, EDAC_MC,
      |               ^~~~~~~~
drivers/edac/altera_edac.c:290:35: note: format string is defined here
  290 |        "No ECC/ECC disabled [0x%08X]\n", result.a1);
      |                                ~~~^
      |                                   |
      |                                   unsigned int
      |                                %08lX
  CC      fs/lockd/xdr4.o

Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/edac/altera_edac.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/edac/altera_edac.c b/drivers/edac/altera_edac.c
index e35682548f55..b78c08ad19cb 100644
--- a/drivers/edac/altera_edac.c
+++ b/drivers/edac/altera_edac.c
@@ -283,11 +283,11 @@ static bool s10_is_ecc_enable(void)
 	arm_smccc_smc(INTEL_SIP_SMC_REG_READ, S10_ECCCTRL1_OFST, 0, 0, 0,
 		      0, 0, 0, &result);
 
-	if (A10_ECCCTRL1_ECC_EN & result.a1 == A10_ECCCTRL1_ECC_EN)
+	if ((A10_ECCCTRL1_ECC_EN & result.a1) == A10_ECCCTRL1_ECC_EN)
 		return true;
 	else {
 		edac_printk(KERN_ERR, EDAC_MC,
-			    "No ECC/ECC disabled [0x%08X]\n", result.a1);
+			    "No ECC/ECC disabled [0x%08lX]\n", result.a1);
 		return false;
 	}
 }
-- 
2.17.1

