From f5b8e897f8b17089ea796beedb85ae9d6e7e9a1d Mon Sep 17 00:00:00 2001
From: Richard Gong <richard.gong@intel.com>
Date: Fri, 6 Jul 2018 13:10:37 -0500
Subject: [PATCH 5/5] FogBugz #574552: misc: intel-service: resolve a possible
 memory exception

commit 103d053ac5948f43806a85c2b991270fa749ec11 from
https://github.com/altera-opensource/linux-socfpga.git

S10 service layer has a potential bug at its routine
request_svc_channel_byname(), where service layer driver doesn't validate
the name passed by service client so there is no guarantee to get an
valid pointer. As a result a memory access exception may occur.

Signed-off-by: Richard Gong <richard.gong@intel.com>
Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 drivers/misc/intel-service.c |   12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/drivers/misc/intel-service.c b/drivers/misc/intel-service.c
index 5b31f95..ea32db7 100644
--- a/drivers/misc/intel-service.c
+++ b/drivers/misc/intel-service.c
@@ -192,13 +192,13 @@ struct intel_svc_chan *request_svc_channel_byname(
 {
 	struct device *dev = client->dev;
 	struct intel_svc_controller *controller;
-	struct intel_svc_chan *chan;
+	struct intel_svc_chan *chan = NULL;
 	unsigned long flag;
 	int i;
 
-	chan = ERR_PTR(-EPROBE_DEFER);
+	/* if probe was called after client's, or error on probe */
 	if (list_empty(&svc_ctrl))
-		return ERR_PTR(-ENODEV);
+		return ERR_PTR(-EPROBE_DEFER);
 
 	controller = list_first_entry(&svc_ctrl,
 				      struct intel_svc_controller, node);
@@ -209,6 +209,12 @@ struct intel_svc_chan *request_svc_channel_byname(
 		}
 	}
 
+	/* if there was no channel match */
+	if (i == SVC_NUM_CHANNEL) {
+		dev_err(dev, "%s: channel not allocated\n", __func__);
+		return ERR_PTR(-EINVAL);
+	}
+
 	if (chan->scl || !try_module_get(controller->dev->driver->owner)) {
 		dev_dbg(dev, "%s: svc not free\n", __func__);
 		return ERR_PTR(-EBUSY);
-- 
1.7.9.5

