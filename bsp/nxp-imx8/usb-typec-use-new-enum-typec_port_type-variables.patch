From 6601419f9a807b71d6a045ca6e1623db5f76e508 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Fri, 10 May 2019 10:35:03 +0800
Subject: [PATCH 28/30] usb: typec: use new enum typec_port_type variables

Because of upstream commit ceeb162500c3 ("usb: typec: Separate the definitions
for data and power roles"), enum typec_port_type has changes as below:
		TYPEC_PORT_DFP -> TYPEC_PORT_SRC
		TYPEC_PORT_UFP -> TYPEC_PORT_SNK

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
---
 drivers/staging/typec/tcpci.c | 6 +++---
 drivers/usb/typec/tcpm.c      | 4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/typec/tcpci.c b/drivers/staging/typec/tcpci.c
index dbdb318d557a..4c8ef688b180 100644
--- a/drivers/staging/typec/tcpci.c
+++ b/drivers/staging/typec/tcpci.c
@@ -694,7 +694,7 @@ static int tcpci_parse_config(struct tcpci *tcpci)
 		return -EINVAL;
 	}
 
-	if (tcfg->type == TYPEC_PORT_UFP)
+	if (tcfg->type == TYPEC_PORT_SNK)
 		goto sink;
 
 	/* Check source pdo array size */
@@ -720,7 +720,7 @@ static int tcpci_parse_config(struct tcpci *tcpci)
 		return -EINVAL;
 	}
 
-	if (tcfg->type == TYPEC_PORT_DFP)
+	if (tcfg->type == TYPEC_PORT_SRC)
 		return 0;
 
 	/* Get the default-role */
@@ -805,7 +805,7 @@ static int tcpci_parse_config(struct tcpci *tcpci)
 
 snk_setting_wrong:
 	if (tcfg->type == TYPEC_PORT_DRP ||
-			tcfg->type == TYPEC_PORT_UFP)
+			tcfg->type == TYPEC_PORT_SNK)
 		dev_err(tcpci->dev, "Failed to read snk setting!\n");
 
 	return ret;
diff --git a/drivers/usb/typec/tcpm.c b/drivers/usb/typec/tcpm.c
index f92c4ce5732b..75ba32e06cb2 100644
--- a/drivers/usb/typec/tcpm.c
+++ b/drivers/usb/typec/tcpm.c
@@ -888,9 +888,9 @@ static void tcpm_qos_handling(struct tcpm_port *port)
 {
 	enum tcpm_state idle_state;
 
-	if (port->typec_caps.type == TYPEC_PORT_UFP)
+	if (port->typec_caps.type == TYPEC_PORT_SNK)
 		idle_state = SNK_UNATTACHED;
-	else if (port->typec_caps.type == TYPEC_PORT_DFP)
+	else if (port->typec_caps.type == TYPEC_PORT_SRC)
 		idle_state = SNK_UNATTACHED;
 	else if (port->typec_caps.type == TYPEC_PORT_DRP)
 		idle_state = DRP_TOGGLING;
-- 
2.17.1

