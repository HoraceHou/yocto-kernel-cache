From 48b0e7ec1a67404045fbca0734c19839b6783827 Mon Sep 17 00:00:00 2001
From: Yangbo Lu <yangbo.lu@nxp.com>
Date: Fri, 14 Sep 2018 16:38:42 +0800
Subject: [PATCH 2/7] mmc: sdhci-of-esdhc: apply clock division erratum
 workaround for hs400 tuning

Erratum A-011334 description:
There are timing violations in case of few division ratio options
are selected for card clock frequency. prescaler*divisor options
/3,/5,/6,/7,/9,/10,/11,/13,/14 and /15 are not available in LX2
Rev1.0. prescaler*divisor options /4,/8 and /12 only available in
LX2 Rev1.0. Applicable only for HS400 mode.

Althouth workaround patch had been applied on setting HS400 clock,
but it missed to apply the workaround when HS400 tuning at target
operating frequency before setting HS400 clock. This patch is to
fix this issue.

Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
[Xulin: Original patch taken from NXP lx2160a-early-access-bsp0.4-p1.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/mmc/host/sdhci-of-esdhc.c |   11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/sdhci-of-esdhc.c b/drivers/mmc/host/sdhci-of-esdhc.c
index 67a77d06..0b658d2 100644
--- a/drivers/mmc/host/sdhci-of-esdhc.c
+++ b/drivers/mmc/host/sdhci-of-esdhc.c
@@ -522,8 +522,9 @@ static void esdhc_of_set_clock(struct sdhci_host *host, unsigned int clock)
 		div++;
 
 	if (esdhc->quirk_limited_clk_division &&
-	    host->mmc->ios.timing == MMC_TIMING_MMC_HS400 &&
-	    clock == MMC_HS200_MAX_DTR) {
+	    clock == MMC_HS200_MAX_DTR &&
+	    (host->mmc->ios.timing == MMC_TIMING_MMC_HS400 ||
+	     host->flags & SDHCI_HS400_TUNING)) {
 		division = pre_div * div;
 		if (division <= 4) {
 			pre_div = 4;
@@ -744,6 +745,12 @@ static void esdhc_tuning_block_enable(struct sdhci_host *host, bool enable)
 static int esdhc_execute_tuning(struct mmc_host *mmc, u32 opcode)
 {
 	struct sdhci_host *host = mmc_priv(mmc);
+	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
+	struct sdhci_esdhc *esdhc = sdhci_pltfm_priv(pltfm_host);
+
+	if (esdhc->quirk_limited_clk_division &&
+	    host->flags & SDHCI_HS400_TUNING)
+		esdhc_of_set_clock(host, host->clock);
 
 	esdhc_tuning_block_enable(host, true);
 	return sdhci_execute_tuning(mmc, opcode);
-- 
1.7.9.5

