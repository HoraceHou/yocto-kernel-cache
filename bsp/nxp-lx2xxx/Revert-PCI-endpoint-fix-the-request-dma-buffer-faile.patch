From b2eb609f476be29b7b8d19a93b79f3aa1cc99d70 Mon Sep 17 00:00:00 2001
From: Xiaowei Bao <xiaowei.bao@nxp.com>
Date: Wed, 9 Jan 2019 18:15:02 +0800
Subject: [PATCH 021/235] Revert "PCI: endpoint: fix the request dma buffer
 failed bug"

This reverts commit 3846410bbd6bdb6f9d85870518579997184bbcac.
[Xulin: Original patch taken from NXP LSDK-19.06.]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/pci/endpoint/pci-epf-core.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/endpoint/pci-epf-core.c b/drivers/pci/endpoint/pci-epf-core.c
index c7eac57dc2d3..825fa24427a3 100644
--- a/drivers/pci/endpoint/pci-epf-core.c
+++ b/drivers/pci/endpoint/pci-epf-core.c
@@ -95,8 +95,8 @@ void pci_epf_free_space(struct pci_epf *epf, void *addr, enum pci_barno bar)
 	if (!addr)
 		return;
 
-	free_pages((unsigned long)addr,
-		get_order(epf->bar[bar].size));
+	dma_free_coherent(dev, epf->bar[bar].size, addr,
+			  epf->bar[bar].phys_addr);
 
 	epf->bar[bar].phys_addr = 0;
 	epf->bar[bar].size = 0;
@@ -122,9 +122,7 @@ void *pci_epf_alloc_space(struct pci_epf *epf, size_t size, enum pci_barno bar)
 		size = 128;
 	size = roundup_pow_of_two(size);
 
-	space = (void *)__get_free_pages(GFP_KERNEL | __GFP_ZERO,
-						get_order(size));
-	phys_addr = virt_to_phys(space);
+	space = dma_alloc_coherent(dev, size, &phys_addr, GFP_KERNEL);
 	if (!space) {
 		dev_err(dev, "failed to allocate mem space\n");
 		return NULL;
-- 
2.17.1

