From 8fdd6c8f83c8a6423d990ec6825a82827531ecc2 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Tue, 19 Nov 2019 13:42:16 +0800
Subject: [PATCH 06/40] Revert "can: xilinx: defer the probe if clock is not
 found"

This reverts commit 6de8f2cb04255f2b7e06a6af38ccad9f08b21608.

In wrlinux1018, BSP xilinx-zynqmp is created based on SDK
kernel 4.14. The xilinx can/canfd driver only support canfd
1.0, and doesn't work fine with latest canfd FPGA LogiCORE IP.
So, revert all the patches related with can/canfd driver that
are from SDK kernel 4.14, and then upgrade can/canfd driver to
support both canfd 1.0 and 2.0 based on latest SDK kernel 4.19.
The reason why don't upgrade can/canfd driver based on current
code is that the patches from SDK kernel 4.14 are very different
from SDK kernel 4.19. So, we decide to revert old patches
firstly, and then get patches from SDK kernel 4.19.
There are 11 patches need to be reverted. Beside this patch, the
following 10 patches reverted is the same reason with this one.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/can/xilinx_can.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

diff --git a/drivers/net/can/xilinx_can.c b/drivers/net/can/xilinx_can.c
index 2e5197099892..11776ba650cd 100644
--- a/drivers/net/can/xilinx_can.c
+++ b/drivers/net/can/xilinx_can.c
@@ -1730,8 +1730,7 @@ static int xcan_probe(struct platform_device *pdev)
 	/* Getting the CAN can_clk info */
 	priv->can_clk = devm_clk_get(&pdev->dev, "can_clk");
 	if (IS_ERR(priv->can_clk)) {
-		if (PTR_ERR(priv->can_clk) != -EPROBE_DEFER)
-			dev_err(&pdev->dev, "Device clock not found.\n");
+		dev_err(&pdev->dev, "Device clock not found.\n");
 		ret = PTR_ERR(priv->can_clk);
 		goto err_free;
 	}
@@ -1740,16 +1739,14 @@ static int xcan_probe(struct platform_device *pdev)
 				    "xlnx,zynq-can-1.0")) {
 		priv->bus_clk = devm_clk_get(&pdev->dev, "pclk");
 		if (IS_ERR(priv->bus_clk)) {
-			if (PTR_ERR(priv->can_clk) != -EPROBE_DEFER)
-				dev_err(&pdev->dev, "bus clock not found\n");
+			dev_err(&pdev->dev, "bus clock not found\n");
 			ret = PTR_ERR(priv->bus_clk);
 			goto err_free;
 		}
 	} else {
 		priv->bus_clk = devm_clk_get(&pdev->dev, "s_axi_aclk");
 		if (IS_ERR(priv->bus_clk)) {
-			if (PTR_ERR(priv->bus_clk) != -EPROBE_DEFER)
-				dev_err(&pdev->dev, "bus clock not found\n");
+			dev_err(&pdev->dev, "bus clock not found\n");
 			ret = PTR_ERR(priv->bus_clk);
 			goto err_free;
 		}
-- 
2.17.1

