From 908eb5b9787a14c6187ccbfc13e35e66bb94376e Mon Sep 17 00:00:00 2001
From: Yue Tao <Yue.Tao@windriver.com>
Date: Tue, 11 Jun 2019 14:44:05 +0800
Subject: [PATCH 2/3] Revert "mtd: nand: Fix oob write operation failures in
 ddr mode"

This reverts commit 95d340562b16a67149eafaab3ded2a0ffca07cc0.
---
 drivers/mtd/nand/raw/nand_base.c | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/drivers/mtd/nand/raw/nand_base.c b/drivers/mtd/nand/raw/nand_base.c
index 96b2bd695494..3ce943253f30 100644
--- a/drivers/mtd/nand/raw/nand_base.c
+++ b/drivers/mtd/nand/raw/nand_base.c
@@ -4552,16 +4552,6 @@ static int nand_do_write_oob(struct mtd_info *mtd, loff_t to,
 	 * if we don't do this. I have no clue why, but I seem to have 'fixed'
 	 * it in the doc2000 driver in August 1999.  dwmw2.
 	 */
-	/*
-	 * Nand onfi compatible devices may support different data interface
-	 * modes like SDR, NVDDR and NVDDR2. Giving reset to device places the
-	 * device in to power-up state and places the target in the SDR data
-	 * interface mode. This will be the problem for devices configured for
-	 * NVDDR modes. So, limiting the reset operation to Toshiba devices.
-	 */
-	if (chip->onfi_params.jedec_id == NAND_MFR_TOSHIBA)
-		chip->cmdfunc(mtd, NAND_CMD_RESET, -1, -1);
-
 	nand_reset(chip, chipnr);
 
 	chip->select_chip(mtd, chipnr);
-- 
2.17.1

