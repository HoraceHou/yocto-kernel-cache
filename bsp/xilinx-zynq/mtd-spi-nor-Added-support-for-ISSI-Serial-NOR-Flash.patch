From 86bcd7541bb1822899c3c0394436e473bde4a21d Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Fri, 15 Mar 2019 20:38:22 +0530
Subject: [PATCH 3/3] mtd: spi-nor: Added support for ISSI Serial NOR Flash

For ISSI flash connected in dual parallel mode, the stripe
was getting enabled while writing configuration data to the
flashes.

So the configuration register of only one of the two flashes
was getting updated.

Due to this flash read/write operation was failing in dual
parallel mode.

This patch fixed the issue by disabling stripe while writing
configuration data to the flash in dual parallel mode.

Upstream-Status: Backport

commit: c93784c2cd017ad648f494e2daaf0146454e71ea

Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Jiping Ma <jiping.ma2@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index f2536dd09ae0..9a36f3c5bdd6 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -109,7 +109,12 @@ bool update_stripe(const u8 opcode)
 	    opcode ==  SPINOR_OP_SE ||
 	    opcode ==  SPINOR_OP_BE_32K_4B ||
 	    opcode ==  SPINOR_OP_SE_4B ||
-	    opcode == SPINOR_OP_BE_4K_4B)
+            opcode == SPINOR_OP_BE_4K_4B ||
+            opcode ==  SPINOR_OP_WRSR ||
+            opcode ==  SPINOR_OP_WREAR ||
+            opcode ==  SPINOR_OP_BRWR ||
+            opcode ==  SPINOR_OP_WRSR2)
+
 		return false;
 
 	return true;
@@ -1427,6 +1432,10 @@ static const struct flash_info spi_nor_ids[] = {
 	{ "is25lp128f", INFO(0x9d6018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ | SPI_NOR_HAS_LOCK) },
 	{ "is25wp128f", INFO(0x9d7018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ | SPI_NOR_HAS_LOCK) },
 	{ "is25lp256d", INFO(0x9d6019, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ | SPI_NOR_HAS_LOCK) },
+        { "is25wp256d", INFO(0x9d7019, 0, 64 * 1024, 512,
+                        SECT_4K | SPI_NOR_DUAL_READ |
+                        SPI_NOR_QUAD_READ | SPI_NOR_HAS_LOCK |
+                        SPI_NOR_4B_OPCODES) },
 	{ "is25wp256d", INFO(0x9d7019, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ | SPI_NOR_HAS_LOCK) },
 	{ "is25cd512",  INFO(0x7f9d20, 0, 32 * 1024,   2, SECT_4K) },
 	{ "is25lq040b", INFO(0x9d4013, 0, 64 * 1024,   8,
@@ -2710,6 +2719,9 @@ static int spi_nor_parse_bfpt(struct spi_nor *nor,
 	}
 	params->size >>= 3; /* Convert to bytes. */
 
+        if (params->size > 0x1000000 && nor->addr_width == 3)
+                return -EINVAL;
+
 	/* Fast Read settings. */
 	for (i = 0; i < ARRAY_SIZE(sfdp_bfpt_reads); i++) {
 		const struct sfdp_bfpt_read *rd = &sfdp_bfpt_reads[i];
@@ -3110,7 +3122,16 @@ static int spi_nor_select_erase(struct spi_nor *nor,
 	struct mtd_info *mtd = &nor->mtd;
 
 	/* Do nothing if already configured from SFDP. */
+
+       /*
+        * For ISSI flashes with size > 16MB connected in dual
+        * parallel mode, the erasesize is set to sector size but
+        * erase_opcode is NULL, so to assign an erase_ opcode,
+        * !nor->isparallel check is added.
+        */
+
 	if (mtd->erasesize &&
+	    !nor->isparallel &&
 	    JEDEC_MFR(info) != SNOR_MFR_SPANSION)
 		return 0;
 
-- 
2.17.1

