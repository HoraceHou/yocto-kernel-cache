From b4b97e7e78cd9971d1071b3181fa96bdc3840389 Mon Sep 17 00:00:00 2001
From: Bai Ping <ping.bai@nxp.com>
Date: Fri, 29 Jul 2016 15:25:26 +0800
Subject: [PATCH 1116/5242] MLK-13014 ARM: imx: fix system hang when run
 cpufreq-info in low bus mode

commit  85617a9c9ed54222f8ca3d028a9d2a913dbc3a88 from
https://source.codeaurora.org/external/imx/linux-imx.git

On i.MX6ULL, when the system entering the low bus mode, system will enter
low power run mode in which the cpufreq is at 24MHz. If we run
'cpufreq-info' until, the cpu frequency will be change from 24MHz to 99MHz,
this will lead to system enter low power idle wrong, and system will hang
in low power idle.

Add the ARM core clock handling code to fix this issue.

Signed-off-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/cpufreq/imx6q-cpufreq.c |   12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/cpufreq/imx6q-cpufreq.c b/drivers/cpufreq/imx6q-cpufreq.c
index e7befaf..9c67264 100644
--- a/drivers/cpufreq/imx6q-cpufreq.c
+++ b/drivers/cpufreq/imx6q-cpufreq.c
@@ -26,6 +26,8 @@
 #define FREQ_1P2_GHZ		1200000000
 #define FREQ_396_MHZ		396000
 #define FREQ_696_MHZ		696000
+#define FREQ_99_MHZ		99000
+#define FREQ_24_MHZ		24000
 
 static struct regulator *arm_reg;
 static struct regulator *pu_reg;
@@ -84,6 +86,16 @@ static int imx6q_set_target(struct cpufreq_policy *policy, unsigned int index)
 	freq_hz = new_freq * 1000;
 	old_freq = policy->cur;
 
+	/*
+	 * ON i.MX6ULL, the 24MHz setpoint is not seen by cpufreq
+	 * so we neet to prevent the cpufreq change frequency
+	 * from 24MHz to 99Mhz directly. busfreq will handle this
+	 * when exit from low bus mode.
+	 */
+	if (old_freq == FREQ_24_MHZ && new_freq == FREQ_99_MHZ) {
+		return 0;
+	};
+
 	opp = dev_pm_opp_find_freq_ceil(cpu_dev, &freq_hz);
 	if (IS_ERR(opp)) {
 		dev_err(cpu_dev, "failed to find OPP for %ld\n", freq_hz);
-- 
1.7.9.5

