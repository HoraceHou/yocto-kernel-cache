From e4c4ccff2bbae6772991df77c9436ae93f4f9022 Mon Sep 17 00:00:00 2001
From: Dong Aisheng <aisheng.dong@nxp.com>
Date: Thu, 7 Sep 2017 13:18:29 +0800
Subject: [PATCH 3322/5242] MLK-17491-27 clk: imx: clk-pllv4: need wait lock
 stable for PLL

commit  6990bebd16de1cd8742e6ec8b71e9794590570fd from
https://source.codeaurora.org/external/imx/linux-imx.git

Add the required wait lock stable for PLL.

Fixes: 78ef764871d6 ("MLK-13441-5 ARM: imx: add new clk types")
Cc: Anson Huang <Anson.Huang@nxp.com>
Reviewed-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-pllv4.c |   17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/clk/imx/clk-pllv4.c b/drivers/clk/imx/clk-pllv4.c
index 36b16c9..b3159c0 100644
--- a/drivers/clk/imx/clk-pllv4.c
+++ b/drivers/clk/imx/clk-pllv4.c
@@ -12,10 +12,14 @@
 #include <linux/clk.h>
 #include <linux/clk-provider.h>
 #include <linux/err.h>
+#include <linux/iopoll.h>
 #include <linux/slab.h>
 
 #include "clk.h"
 
+/* PLL Control Status Register (xPLLCSR) */
+#define PLL_CSR_OFFSET		0x0
+#define PLL_VLD			BIT(24)
 #define PLL_EN			BIT(0)
 #define BP_PLL_MULT		16
 #define BM_PLL_MULT		(0x7f << 16)
@@ -33,6 +37,17 @@ struct clk_pllv4 {
 
 #define to_clk_pllv4(__hw) container_of(__hw, struct clk_pllv4, hw)
 
+#define LOCK_TIMEOUT_US		USEC_PER_MSEC
+
+static inline int clk_pllv4_wait_lock(struct clk_pllv4 *pll)
+{
+	u32 csr;
+
+	return readl_poll_timeout(pll->base  + PLL_CSR_OFFSET,
+				  csr, csr & PLL_VLD, 0, LOCK_TIMEOUT_US);
+}
+
+
 static unsigned long clk_pllv4_recalc_rate(struct clk_hw *hw,
 					      unsigned long parent_rate)
 {
@@ -139,7 +154,7 @@ static int clk_pllv4_enable(struct clk_hw *hw)
 	val |= PLL_EN;
 	writel_relaxed(val, pll->base);
 
-	return 0;
+	return clk_pllv4_wait_lock(pll);
 }
 
 static void clk_pllv4_disable(struct clk_hw *hw)
-- 
1.7.9.5

