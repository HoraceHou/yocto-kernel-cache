From 196638f6b46071187d39b7dc8887d9383fff7c35 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Fri, 19 Apr 2019 12:44:54 +0800
Subject: [PATCH] driver: pincrtl: pinctrl-imx: remove attaching dev for
 regmap

There is defect in regmap_attach_dev() function, so there will
be bebow memory leak when attch dev for regmap that is created
previously.
    [<2e1e8d97>] kmemleak_alloc+0x40/0x74
    [<ae086429>] __kmalloc_track_caller+0x32c/0x418
    [<08021c90>] kvasprintf+0x5c/0xc0
    [<c11e0d25>] kasprintf+0x30/0x50
    [<a18420e4>] regmap_debugfs_init+0x2c0/0x320
    [<6c3da1eb>] __regmap_init+0x9cc/0xafc
    [<2c73a1eb>] __regmap_init_mmio_clk+0x50/0x5c
    [<bfcb3f5d>] of_syscon_register+0x188/0x244
    [<2cda948c>] syscon_node_to_regmap+0x58/0x84
    [<5073d0dd>] syscon_regmap_lookup_by_compatible+0x30/0x3c
    [<52935fba>] imx6sx_init_machine+0x70/0x100
    [<337febc2>] customize_machine+0x2c/0x38
    [<9f2413ce>] do_one_initcall+0x1bc/0x45c
    [<865b5a2e>] kernel_init_freeable+0x5a4/0x698
    [<0e6fc6e9>] kernel_init+0x18/0x120
    [<8ef2326a>] ret_from_fork+0x14/0x20
Because the regmap_debugfs_init is invoked 2 times, the
debugfs_name is allocated 2 times, this cause the first
debugfs_name memory is missed.

Therefore, delete attaching related code and will not
affect pinctrl driver feature.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pinctrl/freescale/pinctrl-imx.c |    6 ------
 1 file changed, 6 deletions(-)

diff --git a/drivers/pinctrl/freescale/pinctrl-imx.c b/drivers/pinctrl/freescale/pinctrl-imx.c
index 3bbb882..96cef23 100644
--- a/drivers/pinctrl/freescale/pinctrl-imx.c
+++ b/drivers/pinctrl/freescale/pinctrl-imx.c
@@ -584,12 +584,6 @@ int imx_pinctrl_probe(struct platform_device *pdev,
 		return -EINVAL;
 	}
 
-	if (info->gpr_compatible) {
-		gpr = syscon_regmap_lookup_by_compatible(info->gpr_compatible);
-		if (!IS_ERR(gpr))
-			regmap_attach_dev(&pdev->dev, gpr, &config);
-	}
-
 	/* Create state holders etc for this driver */
 	ipctl = devm_kzalloc(&pdev->dev, sizeof(*ipctl), GFP_KERNEL);
 	if (!ipctl)
-- 
1.7.9.5

