From 0e4dc3e629b90004c436f5569d6ff68447814379 Mon Sep 17 00:00:00 2001
From: Huang Chaofan <chaofan.huang@nxp.com>
Date: Mon, 2 Apr 2018 10:35:26 +0800
Subject: [PATCH 3556/5242] MLK-17963[IMX8QXP B0] Send stop command to stop
 vpu firmware when do close

commit  ffbbec92e5dad44b19d8e3f307a957634a3d3f91 from
https://source.codeaurora.org/external/imx/linux-imx.git

send VID_API_CMD_STOP to stop vpu firmware when do close action

Signed-off-by: Huang Chaofan <chaofan.huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-decoder-b0/vpu_b0.c |    7 +++++++
 drivers/mxc/vpu-decoder-b0/vpu_b0.h |    1 +
 2 files changed, 8 insertions(+)

diff --git a/drivers/mxc/vpu-decoder-b0/vpu_b0.c b/drivers/mxc/vpu-decoder-b0/vpu_b0.c
index 5067e97..f836063 100755
--- a/drivers/mxc/vpu-decoder-b0/vpu_b0.c
+++ b/drivers/mxc/vpu-decoder-b0/vpu_b0.c
@@ -1326,6 +1326,7 @@ static void vpu_api_event_handler(struct vpu_ctx *ctx, u_int32 uStrIdx, u_int32
 		};
 		v4l2_event_queue_fh(&ctx->fh, &ev);
 		ctx->firmware_stopped = true;
+		complete(&ctx->stop_cmp);
 		vpu_dbg(LVL_INFO, "send V4L2_EVENT_EOS\n");
 		}
 		break;
@@ -2078,6 +2079,7 @@ static int v4l2_open(struct file *filp)
 	}
 	set_bit(idx, &dev->instance_mask);
 	init_completion(&ctx->completion);
+	init_completion(&ctx->stop_cmp);
 
 	v4l2_fh_init(&ctx->fh, video_devdata(filp));
 	filp->private_data = &ctx->fh;
@@ -2167,6 +2169,11 @@ static int v4l2_release(struct file *filp)
 	struct vpu_ctx *ctx = v4l2_fh_to_ctx(filp->private_data);
 	u_int32 i;
 
+	if (!ctx->firmware_stopped && ctx->start_flag == false) {
+		v4l2_vpu_send_cmd(ctx, ctx->str_index, VID_API_CMD_STOP, 0, NULL);
+		wait_for_completion(&ctx->stop_cmp);
+	}
+
 	release_queue_data(ctx);
 	ctrls_delete_decoder(ctx);
 	v4l2_fh_del(&ctx->fh);
diff --git a/drivers/mxc/vpu-decoder-b0/vpu_b0.h b/drivers/mxc/vpu-decoder-b0/vpu_b0.h
index 1ab00c8..4705cf0 100644
--- a/drivers/mxc/vpu-decoder-b0/vpu_b0.h
+++ b/drivers/mxc/vpu-decoder-b0/vpu_b0.h
@@ -218,6 +218,7 @@ struct vpu_ctx {
 	struct queue_data q_data[2];
 //	struct work_struct msg_work;
 	struct completion completion;
+	struct completion stop_cmp;
 	MediaIPFW_Video_SeqInfo *pSeqinfo;
 	bool b_firstseq;
 	bool start_flag;
-- 
1.7.9.5

