From bd9f097bd208031f858036599815e8237027e373 Mon Sep 17 00:00:00 2001
From: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Date: Wed, 14 Nov 2018 14:43:13 +0200
Subject: [PATCH 5135/5242] MLK-20216-1: drm/imx/dcss: fix suspicious sign
 extension

commit  e03498dcdd4969ac5cfd54c502a595d5b4dbdfe4 from
https://source.codeaurora.org/external/imx/linux-imx.git

This addresses Coverity issues related to "Suspicious sign extension"
when an u16 is promoted to int (32bit signed) and then to u64. If the
resulting int is greater than 0x7fffffff the upper bits of the u64 will
all be 1.

Signed-off-by: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/imx/dcss/dcss-dpr.c |    2 +-
 drivers/gpu/imx/dcss/dcss-ss.c  |    7 ++++---
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/imx/dcss/dcss-dpr.c b/drivers/gpu/imx/dcss/dcss-dpr.c
index cdaf582..0b6bcd4 100644
--- a/drivers/gpu/imx/dcss/dcss-dpr.c
+++ b/drivers/gpu/imx/dcss/dcss-dpr.c
@@ -390,7 +390,7 @@ void dcss_dpr_addr_set(struct dcss_soc *dcss, int ch_num, u32 luma_base_addr,
 		pitch = ch->pitch;
 
 	ch->frame_ctrl &= ~PITCH_MASK;
-	ch->frame_ctrl |= ((pitch << PITCH_POS) & PITCH_MASK);
+	ch->frame_ctrl |= (((u32)pitch << PITCH_POS) & PITCH_MASK);
 }
 EXPORT_SYMBOL(dcss_dpr_addr_set);
 
diff --git a/drivers/gpu/imx/dcss/dcss-ss.c b/drivers/gpu/imx/dcss/dcss-ss.c
index f44fb60..66df49e 100644
--- a/drivers/gpu/imx/dcss/dcss-ss.c
+++ b/drivers/gpu/imx/dcss/dcss-ss.c
@@ -194,19 +194,20 @@ void dcss_ss_sync_set(struct dcss_soc *dcss, struct videomode *vm,
 	hsync_end = vm->hsync_len - 1;
 
 	dcss_ss_write(ss, (phsync ? SYNC_POL : 0) |
-		      (hsync_end << SYNC_END_POS) | hsync_start,
+		      ((u32)hsync_end << SYNC_END_POS) | hsync_start,
 		      DCSS_SS_HSYNC);
 
 	vsync_start = vm->vfront_porch - 1;
 	vsync_end = vm->vfront_porch + vm->vsync_len - 1;
 
 	dcss_ss_write(ss, (pvsync ? SYNC_POL : 0) |
-		      (vsync_end << SYNC_END_POS) | vsync_start, DCSS_SS_VSYNC);
+		      ((u32)vsync_end << SYNC_END_POS) | vsync_start,
+		      DCSS_SS_VSYNC);
 
 	de_ulc_x = vm->hsync_len + vm->hback_porch - 1;
 	de_ulc_y = vm->vsync_len + vm->vfront_porch + vm->vback_porch;
 
-	dcss_ss_write(ss, SYNC_POL | (de_ulc_y << ULC_Y_POS) | de_ulc_x,
+	dcss_ss_write(ss, SYNC_POL | ((u32)de_ulc_y << ULC_Y_POS) | de_ulc_x,
 		      DCSS_SS_DE_ULC);
 
 	de_lrc_x = vm->hsync_len + vm->hback_porch + vm->hactive - 1;
-- 
1.7.9.5

