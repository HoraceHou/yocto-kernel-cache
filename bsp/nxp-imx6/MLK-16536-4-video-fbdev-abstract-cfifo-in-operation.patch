From 648159207abb45df1946f3b6bcbeea6adc792a96 Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Wed, 20 Sep 2017 15:24:13 +0800
Subject: [PATCH 2578/5242] MLK-16536-4 video: fbdev: abstract cfifo 'in'
 operation

commit  b999946b109b5fbc4dd7f65e75efd647aa8c970c from
https://source.codeaurora.org/external/imx/linux-imx.git

Abstract the process that copy data from 'cb' to 'cfifo'
to a separate function from 'commit_to_fifo()'. This is
a refinement.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Reviewed-by: Robby Cai <robby.cai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/imx_dcss.c |   61 +++++++++++++++++++++---------------
 1 file changed, 35 insertions(+), 26 deletions(-)

diff --git a/drivers/video/fbdev/mxc/imx_dcss.c b/drivers/video/fbdev/mxc/imx_dcss.c
index c10c9a6..a66861f 100644
--- a/drivers/video/fbdev/mxc/imx_dcss.c
+++ b/drivers/video/fbdev/mxc/imx_dcss.c
@@ -2284,18 +2284,50 @@ static void dcss_ctxld_config(struct work_struct *work)
 	dev_dbg(&pdev->dev, "finish ctxld config\n");
 }
 
+static void copy_data_to_cfifo(struct ctxld_fifo *cfifo,
+			       struct cbuffer *cb,
+			       struct ctxld_commit *cc)
+{
+	struct ctxld_unit *unit;
+	uint32_t count;
+
+	unit = (struct ctxld_unit *)cb->sb_addr;
+
+	if (cb->sb_data_len) {
+		count = kfifo_in(&cfifo->fifo, cb->sb_addr, cb->sb_data_len);
+		if (count != cb->sb_data_len) {
+			/* TODO: this case should be completely ignored */
+			pr_err("write sb data mismatch\n");
+			count = kfifo_out(&cfifo->fifo, cb->sb_addr, count);
+			WARN_ON(1);
+		}
+		cc->sb_hp_data_len = count;
+		cc->sb_data_len = count;
+	}
+
+	if (cb->db_data_len) {
+		count = kfifo_in(&cfifo->fifo, cb->db_addr, cb->db_data_len);
+		if (count != cb->db_data_len) {
+			/* TODO: this case should be completely ignored */
+			pr_err("write db data mismatch\n");
+			count = kfifo_out(&cfifo->fifo, cb->db_addr, count);
+			WARN_ON(1);
+		}
+		cc->db_data_len = count;
+	}
+}
+
 static int commit_to_fifo(uint32_t channel,
 			  struct dcss_info *info)
 {
 	int ret = 0;
-	uint32_t count = 0, commit_size;
+	uint32_t commit_size;
 	struct platform_device *pdev = info->pdev;
 	struct dcss_channels *chans;
 	struct dcss_channel_info *chan_info;
 	struct ctxld_fifo *cfifo;
 	struct ctxld_commit *cc;
 	struct cbuffer *cb;
-	struct ctxld_unit *unit = NULL;
 
 	if (channel > 2 || !info)
 		return -EINVAL;
@@ -2339,30 +2371,7 @@ static int commit_to_fifo(uint32_t channel,
 			wake_up_locked(&cfifo->cqueue);
 	}
 
-	unit = (struct ctxld_unit *)cb->sb_addr;
-
-	if (cb->sb_data_len) {
-		count = kfifo_in(&cfifo->fifo, cb->sb_addr, cb->sb_data_len);
-		if (count != cb->sb_data_len) {
-			/* TODO: this case should be completely ignored */
-			dev_err(&pdev->dev, "write sb data mismatch\n");
-			count = kfifo_out(&cfifo->fifo, cb->sb_addr, count);
-			BUG_ON(1);
-		}
-		cc->sb_hp_data_len = count;
-		cc->sb_data_len = count;
-	}
-
-	if (cb->db_data_len) {
-		count = kfifo_in(&cfifo->fifo, cb->db_addr, cb->db_data_len);
-		if (count != cb->db_data_len) {
-			/* TODO: this case should be completely ignored */
-			dev_err(&pdev->dev, "write db data mismatch\n");
-			count = kfifo_out(&cfifo->fifo, cb->db_addr, count);
-			BUG_ON(1);
-		}
-		cc->db_data_len = count;
-	}
+	copy_data_to_cfifo(cfifo, cb, cc);
 
 	ctxld_fifo_info_print(cfifo);
 
-- 
1.7.9.5

