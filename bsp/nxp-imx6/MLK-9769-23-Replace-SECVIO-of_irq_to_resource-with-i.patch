From 5db46e2ac7f1bab5e0cd8e75c57aa801a4dd8d0a Mon Sep 17 00:00:00 2001
From: Victoria Milhoan <vicki.milhoan@freescale.com>
Date: Wed, 14 Jan 2015 11:43:12 -0700
Subject: [PATCH 0898/5242] MLK-9769-23 Replace SECVIO of_irq_to_resource()
 with irq_of_parse_and_map()

commit  b516eaa07c030506fe5698ec2fe1e697e4383b3c from
https://source.codeaurora.org/external/imx/linux-imx.git

Replace of_irq_to_resource() in the SECVIO module with the simpler
equivalent irq_of_parse_and_map().  Also, add error checking to
to the SECVIO and Job Ring modules. Based on upstream commit
f7578496a671a96e501f16a5104893275e32c33a.

Signed-off-by: Victoria Milhoan <vicki.milhoan@freescale.com>
Signed-off-by: Dan Douglass <dan.douglass@freescale.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/jr.c     |    4 ++++
 drivers/crypto/caam/secvio.c |    6 +++++-
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/caam/jr.c b/drivers/crypto/caam/jr.c
index d8b8423..d954cf6 100644
--- a/drivers/crypto/caam/jr.c
+++ b/drivers/crypto/caam/jr.c
@@ -522,6 +522,10 @@ static int caam_jr_probe(struct platform_device *pdev)
 
 	/* Identify the interrupt */
 	jrpriv->irq = irq_of_parse_and_map(nprop, 0);
+	if (jrpriv->irq <= 0) {
+		kfree(jrpriv);
+		return -EINVAL;
+	}
 
 	/* Now do the platform independent part */
 	error = caam_jr_init(jrdev); /* now turn on hardware */
diff --git a/drivers/crypto/caam/secvio.c b/drivers/crypto/caam/secvio.c
index 408f89e..bab01fe 100644
--- a/drivers/crypto/caam/secvio.c
+++ b/drivers/crypto/caam/secvio.c
@@ -214,7 +214,11 @@ static int snvs_secvio_probe(struct platform_device *pdev)
 		kfree(svpriv);
 		return -EINVAL;
 	}
-	svpriv->irq = of_irq_to_resource(npirq, 0, NULL);
+	svpriv->irq = irq_of_parse_and_map(npirq, 0);
+	if (svpriv->irq <= 0) {
+		kfree(svpriv);
+		return -EINVAL;
+	}
 
 	snvsregs = of_iomap(np, 0);
 	if (!snvsregs) {
-- 
1.7.9.5

