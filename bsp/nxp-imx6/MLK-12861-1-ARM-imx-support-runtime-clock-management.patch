From dcb9d80f111f4206690fba846afc01eb52148bd3 Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Tue, 31 May 2016 00:34:55 +0800
Subject: [PATCH 1072/5242] MLK-12861-1 ARM: imx: support runtime clock
 management on i.mx7d when M4 is enabled

commit  d774486845acc24fc7edc1549417fb04fa56298d from
https://source.codeaurora.org/external/imx/linux-imx.git

For i.MX7D, current runtime clock management code will skip all
PLL/PFD/GATE enable/disable when M4 is enabled, this is NOT good
for power number in low power idle and audio playback, as M4 only
uses one high speed PFD which is from system PLL, it is never
disabled runtimely, so we can just enable the hardware operation of
PLL/PFD/GATE for A7.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
(cherry picked from commit 02a2e8d73bcb8d2b8362b4328976dfcdc502a19c)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-gate2.c |    2 +-
 drivers/clk/imx/clk-pfd.c   |    2 +-
 drivers/clk/imx/clk-pllv3.c |    2 +-
 drivers/clk/imx/clk.h       |    5 +++++
 4 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/clk/imx/clk-gate2.c b/drivers/clk/imx/clk-gate2.c
index 281a6f5..81f4984 100644
--- a/drivers/clk/imx/clk-gate2.c
+++ b/drivers/clk/imx/clk-gate2.c
@@ -59,7 +59,7 @@ static void clk_gate2_do_shared_clks(struct clk_hw *hw, bool enable)
 {
 	struct clk_gate2 *gate = to_clk_gate2(hw);
 
-	if (imx_src_is_m4_enabled()) {
+	if (imx_src_is_m4_enabled() && clk_on_imx6sx()) {
 #ifdef CONFIG_SOC_IMX6SX
 		if (!amp_power_mutex || !shared_mem) {
 			if (enable)
diff --git a/drivers/clk/imx/clk-pfd.c b/drivers/clk/imx/clk-pfd.c
index 613a0d5..e29bd79 100644
--- a/drivers/clk/imx/clk-pfd.c
+++ b/drivers/clk/imx/clk-pfd.c
@@ -53,7 +53,7 @@ static void clk_pfd_do_shared_clks(struct clk_hw *hw, bool enable)
 {
 	struct clk_pfd *pfd = to_clk_pfd(hw);
 
-	if (imx_src_is_m4_enabled()) {
+	if (imx_src_is_m4_enabled() && clk_on_imx6sx()) {
 #ifdef CONFIG_SOC_IMX6SX
 		if (!amp_power_mutex || !shared_mem) {
 			if (enable)
diff --git a/drivers/clk/imx/clk-pllv3.c b/drivers/clk/imx/clk-pllv3.c
index 6fc82e0..3d0386e 100644
--- a/drivers/clk/imx/clk-pllv3.c
+++ b/drivers/clk/imx/clk-pllv3.c
@@ -110,7 +110,7 @@ static int clk_pllv3_do_hardware(struct clk_hw *hw, bool enable)
 
 static void clk_pllv3_do_shared_clks(struct clk_hw *hw, bool enable)
 {
-	if (imx_src_is_m4_enabled()) {
+	if (imx_src_is_m4_enabled() && clk_on_imx6sx()) {
 #ifdef CONFIG_SOC_IMX6SX
 		if (!amp_power_mutex || !shared_mem) {
 			if (enable)
diff --git a/drivers/clk/imx/clk.h b/drivers/clk/imx/clk.h
index 461a26e..ad16377 100644
--- a/drivers/clk/imx/clk.h
+++ b/drivers/clk/imx/clk.h
@@ -327,4 +327,9 @@ struct clk *imx_clk_cpu(const char *name, const char *parent_name,
 
 int imx_update_shared_mem(struct clk_hw *hw, bool enable);
 
+static inline int clk_on_imx6sx(void)
+{
+	return of_machine_is_compatible("fsl,imx6sx");
+}
+
 #endif
-- 
1.7.9.5

