From 1e3900c920139b632d461a4e699d80242a9e3c05 Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Thu, 7 Sep 2017 12:28:46 +0800
Subject: [PATCH 2564/5242] MLK-16375-1 Revert "MLK-16255-2 video: fbdev:
 dcss: use 'db' of ctxld to config DTG"

commit  b37b283b670d255abd8a993fa073bb8a6cde0438 from
https://source.codeaurora.org/external/imx/linux-imx.git

For A0 soc, on some boards, using double buffer to load
DTG configs may cause ctxld timeout. This may be an IC
bug, so revert this patch to avoid trigger this timeout
isssue.

This reverts commit b9ea3e85d40da5d260b7558a7d3df4ae24db4e8b.

(cherry picked from commit 800911f4befc1ce6bc92e01e2494e61ac69b46e5)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/imx_dcss.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/video/fbdev/mxc/imx_dcss.c b/drivers/video/fbdev/mxc/imx_dcss.c
index c703577..72695e6 100644
--- a/drivers/video/fbdev/mxc/imx_dcss.c
+++ b/drivers/video/fbdev/mxc/imx_dcss.c
@@ -2000,17 +2000,17 @@ static void dtg_channel_timing_config(int blank,
 	switch (blank) {
 	case FB_BLANK_UNBLANK:
 		/* set display window for one channel */
-		fill_db(cb, chans->dtg_addr + ch_ulc_reg,
+		fill_sb(cb, chans->dtg_addr + ch_ulc_reg,
 			pos->ulc_y << 16 | pos->ulc_x);
-		fill_db(cb, chans->dtg_addr + ch_lrc_reg,
+		fill_sb(cb, chans->dtg_addr + ch_lrc_reg,
 			pos->lrc_y << 16 | pos->lrc_x);
 		break;
 	case FB_BLANK_NORMAL:
 	case FB_BLANK_VSYNC_SUSPEND:
 	case FB_BLANK_HSYNC_SUSPEND:
 	case FB_BLANK_POWERDOWN:
-		fill_db(cb, chans->dtg_addr + ch_ulc_reg, 0x0);
-		fill_db(cb, chans->dtg_addr + ch_lrc_reg, 0x0);
+		fill_sb(cb, chans->dtg_addr + ch_ulc_reg, 0x0);
+		fill_sb(cb, chans->dtg_addr + ch_lrc_reg, 0x0);
 		break;
 	default:
 		return;
@@ -2036,19 +2036,19 @@ static void dtg_global_timing_config(struct dcss_info *info)
 		    dmode->right_margin + dmode->hsync_len - 1;
 	dtg_lrc_y = dmode->yres + dmode->upper_margin +
 		    dmode->lower_margin + dmode->vsync_len - 1;
-	fill_db(cb, chans->dtg_addr + 0x4, dtg_lrc_y << 16 | dtg_lrc_x);
+	fill_sb(cb, chans->dtg_addr + 0x4, dtg_lrc_y << 16 | dtg_lrc_x);
 
 	/* Active Region Timing config*/
 	dis_ulc_x = dmode->left_margin  + dmode->hsync_len - 1;
 	dis_ulc_y = dmode->upper_margin + dmode->lower_margin +
 		    dmode->vsync_len - 1;
-	fill_db(cb, chans->dtg_addr + 0x8, dis_ulc_y << 16 | dis_ulc_x);
+	fill_sb(cb, chans->dtg_addr + 0x8, dis_ulc_y << 16 | dis_ulc_x);
 
 	dis_lrc_x = dmode->xres + dmode->left_margin +
 		    dmode->hsync_len - 1;
 	dis_lrc_y = dmode->yres + dmode->upper_margin +
 		    dmode->lower_margin + dmode->vsync_len - 1;
-	fill_db(cb, chans->dtg_addr + 0xc, dis_lrc_y << 16 | dis_lrc_x);
+	fill_sb(cb, chans->dtg_addr + 0xc, dis_lrc_y << 16 | dis_lrc_x);
 }
 
 static int dcss_dtg_config(uint32_t ch_id, struct dcss_info *info)
@@ -2667,7 +2667,7 @@ static int dcss_channel_blank(int blank,
 		return -EINVAL;
 	}
 
-	fill_db(cb, chans->dtg_addr + 0x0, dtg_ctrl);
+	fill_sb(cb, chans->dtg_addr + 0x0, dtg_ctrl);
 
 	return 0;
 }
-- 
1.7.9.5

