From f928dbb876c940ed9caf9f042a9ffcfb918ed032 Mon Sep 17 00:00:00 2001
From: Dong Aisheng <b29396@freescale.com>
Date: Wed, 11 Feb 2015 15:12:44 +0800
Subject: [PATCH 0599/5242] MLK-10211 can: flexcan: fix resume failed issue

commit  1f36d818da495ec9acb7196bdaac88fc214b9e76 from
https://source.codeaurora.org/external/imx/linux-imx.git

We can observe the following error during system resume.
dpm_run_callback(): platform_pm_resume+0x0/0x4c returns -110
PM: Device 2090000.can failed to resume: error -110

It is caused by the flexcan is in disable state and the clock is disabled
by default while the CAN is not up. During resume, the calling of
flexcan_chip_enable will obviously fail due to no clock.

The issue only happened when CAN device is not up. If CAN is up, clock is there
and no issue will happen.

Because the CAN is always in disabled state by default if it's not up.
We don't have to disable it again during suspend and enable it after resume.
This patch simply the suspend/resume to only enter/exit disabled mode if CAN
is up.

Signed-off-by: Dong Aisheng <b29396@freescale.com>
(cherry picked from commit d976d7c9d408c1275075d5870ccf6cb425720434)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/can/flexcan.c |    4 ----
 1 file changed, 4 deletions(-)

diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
index 6cff862..ab9bcbd 100644
--- a/drivers/net/can/flexcan.c
+++ b/drivers/net/can/flexcan.c
@@ -1575,8 +1575,6 @@ static int __maybe_unused flexcan_suspend(struct device *device)
 		} else {
 			err = flexcan_chip_disable(priv);
 		}
-	} else {
-		err = flexcan_chip_disable(priv);
 	}
 	priv->can.state = CAN_STATE_SLEEPING;
 
@@ -1600,8 +1598,6 @@ static int __maybe_unused flexcan_resume(struct device *device)
 		} else {
 			err = flexcan_chip_enable(priv);
 		}
-	} else {
-		err = flexcan_chip_enable(priv);
 	}
 
 	return err;
-- 
1.7.9.5

