From 49888b9d60ba1a4170284cd1adcb6db9f7f279b2 Mon Sep 17 00:00:00 2001
From: Sandor Yu <Sandor.yu@nxp.com>
Date: Fri, 28 Jul 2017 11:08:27 +0800
Subject: [PATCH 2253/5242] MLK-16062-2: i.MX8 imaging: Add debug log to
 imaging SS driver

commit  bccaccb07864637c8b56ed288f78261066d9ed29 from
https://source.codeaurora.org/external/imx/linux-imx.git

Add debug log to imaging SS drivers.

Signed-off-by: Sandor Yu <Sandor.yu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-isi-cap.c  |   13 +++++++++++--
 drivers/media/platform/imx8/mxc-isi-core.c |    4 +++-
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/imx8/mxc-isi-cap.c b/drivers/media/platform/imx8/mxc-isi-cap.c
index 7ecf705..4d21f9f 100644
--- a/drivers/media/platform/imx8/mxc-isi-cap.c
+++ b/drivers/media/platform/imx8/mxc-isi-cap.c
@@ -215,8 +215,11 @@ static int mxc_isi_pipeline_enable(struct mxc_isi_dev *mxc_isi, bool enable)
 		}
 
 		ret = v4l2_subdev_call(subdev, video, s_stream, enable);
-		if (ret < 0 && ret != -ENOIOCTLCMD)
+		if (ret < 0 && ret != -ENOIOCTLCMD) {
+			dev_err(&mxc_isi->pdev->dev,
+					"%s ,subdev %s s_stream failed\n", __func__, subdev->name);
 			break;
+		}
 	}
 	mutex_unlock(&mdev->graph_mutex);
 	media_graph_walk_cleanup(&graph);
@@ -366,6 +369,7 @@ static int cap_vb2_start_streaming(struct vb2_queue *q, unsigned int count)
 	unsigned long flags;
 
 	dev_dbg(&mxc_isi->pdev->dev, "%s\n", __func__);
+
 	spin_lock_irqsave(&mxc_isi->slock, flags);
 
 	mxc_isi->isi_cap.frame_count = 0;
@@ -709,8 +713,10 @@ static int mxc_isi_source_fmt_init(struct mxc_isi_dev *mxc_isi)
 	src_fmt.pad = source_pad->index;
 	src_fmt.which = V4L2_SUBDEV_FORMAT_ACTIVE;
 	ret = v4l2_subdev_call(src_sd, pad, get_fmt, NULL, &src_fmt);
-	if (ret < 0 && ret != -ENOIOCTLCMD)
+	if (ret < 0 && ret != -ENOIOCTLCMD) {
+		v4l2_err(mxc_isi->v4l2_dev, "%s, get remote fmt faile!\n", __func__);
 		return -EINVAL;
+	}
 
 	/* Pixel link master will transfer format to RGB32 or YUV32 */
 	src_f->fmt = mxc_isi_get_src_fmt(&src_fmt);
@@ -1174,6 +1180,7 @@ static int mxc_isi_register_cap_device(struct mxc_isi_dev *mxc_isi,
 	struct mxc_isi_cap_dev *isi_cap = &mxc_isi->isi_cap;
 	int ret = -ENOMEM;
 
+	dev_dbg(&mxc_isi->pdev->dev, "%s\n", __func__);
 	snprintf(vdev->name, sizeof(vdev->name), "mxc_isi.%d.capture", mxc_isi->id);
 	memset(vdev, 0, sizeof(*vdev));
 
@@ -1246,6 +1253,7 @@ static int mxc_isi_capture_subdev_registered(struct v4l2_subdev *sd)
 	if (mxc_isi == NULL)
 		return -ENXIO;
 
+	dev_dbg(&mxc_isi->pdev->dev, "%s\n", __func__);
 #if 0
 	if (mxc_isi->id == 0) {
 		/* ISI channel 0 support source input image from memory  */
@@ -1270,6 +1278,7 @@ static void mxc_isi_capture_subdev_unregistered(struct v4l2_subdev *sd)
 	if (mxc_isi == NULL)
 		return;
 
+	dev_dbg(&mxc_isi->pdev->dev, "%s\n", __func__);
 	mutex_lock(&mxc_isi->lock);
 
 	vdev = &mxc_isi->isi_cap.vdev;
diff --git a/drivers/media/platform/imx8/mxc-isi-core.c b/drivers/media/platform/imx8/mxc-isi-core.c
index fca1496..7f4c2ee 100644
--- a/drivers/media/platform/imx8/mxc-isi-core.c
+++ b/drivers/media/platform/imx8/mxc-isi-core.c
@@ -161,8 +161,10 @@ static int mxc_isi_probe(struct platform_device *pdev)
 	}
 
 	ret = mxc_isi_initialize_capture_subdev(mxc_isi);
-	if (ret < 0)
+	if (ret < 0) {
+		dev_err(dev, "failed to init cap subdev (%d)\n", ret);
 		return -EINVAL;
+	}
 
 	platform_set_drvdata(pdev, mxc_isi);
 
-- 
1.7.9.5

