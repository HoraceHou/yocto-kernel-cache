From 0234244d362344c643f2650219f974f0c8a8162f Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Thu, 6 Jul 2017 13:37:14 +0800
Subject: [PATCH 2072/5242] MLK-15347 clk: imx: correct sccg and frac pll rate
 calculation error

commit  9a9cacc1ac6eebdcee0e467615dfff8401cc645a from
https://source.codeaurora.org/external/imx/linux-imx.git

- For SCCG SCCG_PLL2 type, its parent rate is with round-up,
  using parent rate to calculate its rate will introduce
  some error, like below sys1_pll2, its rate is actually 800M,
  but we got 800000004:

sys1_pll1_ref_sel          1      1    25000000    0 0
  sys1_pll1_ref_div        1      1    25000000    0 0
    sys1_pll1              1      1  1600000000    0 0
      sys1_pll1_out        1      1  1600000000    0 0
        sys1_pll1_out_div  1      1    66666667    0 0
          sys1_pll2        1      1   800000004    0 0

  here we redo the calculation from top reference clk to
  avoid the error, the result will be as below:

sys1_pll1_ref_sel          1      1    25000000    0 0
  sys1_pll1_ref_div        1      1    25000000    0 0
    sys1_pll1              1      1  1600000000    0 0
      sys1_pll1_out        1      1  1600000000    0 0
        sys1_pll1_out_div  1      1    66666667    0 0
          sys1_pll2        1      1   800000000    0 0

- For FRAC PLL, the calculation formula is incorrect, the
  divff should NOT add 1, fix it to get correct rate:

before fix:
arm_pll_ref_sel         1       1    25000000   0 0
  arm_pll_ref_div       1       1     5000000   0 0
    arm_pll             1       1  1200000001   0 0

after fix:
arm_pll_ref_sel         1       1    25000000   0 0
  arm_pll_ref_div       1       1     5000000   0 0
    arm_pll             1       1  1200000000   0 0

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-frac-pll.c |    2 +-
 drivers/clk/imx/clk-sccg-pll.c |   38 +++++++++++++++++++++++++++++++++++---
 2 files changed, 36 insertions(+), 4 deletions(-)

diff --git a/drivers/clk/imx/clk-frac-pll.c b/drivers/clk/imx/clk-frac-pll.c
index 53419a4..7c2614c 100644
--- a/drivers/clk/imx/clk-frac-pll.c
+++ b/drivers/clk/imx/clk-frac-pll.c
@@ -116,7 +116,7 @@ static unsigned long clk_pll_recalc_rate(struct clk_hw *hw,
 	divfi = (val & PLL_INT_DIV_MASK);
 
 	temp64 = (u64)parent_rate * 8;
-	temp64 *= (divff + 1);
+	temp64 *= divff;
 	do_div(temp64, PLL_FRAC_DENOM);
 	temp64 /= divq;
 
diff --git a/drivers/clk/imx/clk-sccg-pll.c b/drivers/clk/imx/clk-sccg-pll.c
index 9f550a9..69b65e2 100644
--- a/drivers/clk/imx/clk-sccg-pll.c
+++ b/drivers/clk/imx/clk-sccg-pll.c
@@ -24,9 +24,19 @@
 #define PLL_DIVF2_SHIFT	7
 #define PLL_DIVF_MASK	0x3f
 
+#define PLL_DIVR1_SHIFT	25
+#define PLL_DIVR2_SHIFT	19
+#define PLL_DIVR1_MASK	0x3
+#define PLL_DIVR2_MASK	0x3f
+#define PLL_REF_SHIFT	0
+#define PLL_REF_MASK	0x3
+
 #define PLL_LOCK	31
 #define PLL_PD		7
 
+#define OSC_25M		25000000
+#define OSC_27M		27000000
+
 struct clk_sccg_pll {
 	struct clk_hw	hw;
 	void __iomem	*base;
@@ -112,12 +122,34 @@ static unsigned long clk_pll2_recalc_rate(struct clk_hw *hw,
 					 unsigned long parent_rate)
 {
 	struct clk_sccg_pll *pll = to_clk_sccg_pll(hw);
-	u32 val, divf;
+	u32 val, ref, divr1, divf1, divr2, divf2;
+	u64 temp64;
+
+	val = readl_relaxed(pll->base + PLL_CFG0);
+	switch ((val >> PLL_REF_SHIFT) & PLL_REF_MASK) {
+	case 0:
+		ref = OSC_25M;
+		break;
+	case 1:
+		ref = OSC_27M;
+		break;
+	default:
+		ref = OSC_25M;
+		break;
+	}
 
 	val = readl_relaxed(pll->base + PLL_CFG2);
-	divf = (val >> PLL_DIVF2_SHIFT) & PLL_DIVF_MASK;
+	divr1 = (val >> PLL_DIVR1_SHIFT) & PLL_DIVR1_MASK;
+	divr2 = (val >> PLL_DIVR2_SHIFT) & PLL_DIVR2_MASK;
+	divf1 = (val >> PLL_DIVF1_SHIFT) & PLL_DIVF_MASK;
+	divf2 = (val >> PLL_DIVF2_SHIFT) & PLL_DIVF_MASK;
+
+	temp64 = ref * 2;
+	temp64 *= (divf1 + 1) * (divf2 + 1);
+
+	do_div(temp64, (divr1 + 1) * (divr2 + 1));
 
-	return parent_rate * (divf + 1);
+	return (unsigned long)temp64;
 }
 
 static long clk_pll2_round_rate(struct clk_hw *hw, unsigned long rate,
-- 
1.7.9.5

