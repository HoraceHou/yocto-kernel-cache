From d3e88e992e79b0e929122334934439002245bb77 Mon Sep 17 00:00:00 2001
From: Robert Chiras <robert.chiras@nxp.com>
Date: Mon, 27 Feb 2017 15:19:50 +0200
Subject: [PATCH 1544/5242] MLK-14283: mxsfb: fix clock definitions for lcdif

commit  594d88bf937dca6d9ff5a067d9c115808362a444 from
https://source.codeaurora.org/external/imx/linux-imx.git

The mxsfb framebuffer driver uses three clock definitions, but only two
are defined in DTS for imx7s (also used by imx7d); because of this,
driver fails in probe. Since iMX7D uses only one clock, add the third clock
and make two of them dummy.
Also, add additional error messages for better identification of a
failing probe.

Signed-off-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/boot/dts/imx7s.dtsi |    5 +++--
 drivers/video/fbdev/mxsfb.c  |    7 ++++++-
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/arm/boot/dts/imx7s.dtsi b/arch/arm/boot/dts/imx7s.dtsi
index 0ef2a39..77acaf1 100644
--- a/arch/arm/boot/dts/imx7s.dtsi
+++ b/arch/arm/boot/dts/imx7s.dtsi
@@ -712,8 +712,9 @@
 				reg = <0x30730000 0x10000>;
 				interrupts = <GIC_SPI 5 IRQ_TYPE_LEVEL_HIGH>;
 				clocks = <&clks IMX7D_LCDIF_PIXEL_ROOT_CLK>,
-					<&clks IMX7D_LCDIF_PIXEL_ROOT_CLK>;
-				clock-names = "pix", "axi";
+					<&clks IMX7D_CLK_DUMMY>,
+					<&clks IMX7D_CLK_DUMMY>;
+				clock-names = "pix", "axi", "disp_axi";
 				status = "disabled";
 			};
 		};
diff --git a/drivers/video/fbdev/mxsfb.c b/drivers/video/fbdev/mxsfb.c
index 7c725c2..663f1e6 100644
--- a/drivers/video/fbdev/mxsfb.c
+++ b/drivers/video/fbdev/mxsfb.c
@@ -2133,6 +2133,7 @@ static int mxsfb_probe(struct platform_device *pdev)
 	if (IS_ERR(host->clk_axi)) {
 		host->clk_axi = NULL;
 		ret = PTR_ERR(host->clk_axi);
+		dev_err(&pdev->dev, "Failed to get axi clock: %d\n", ret);
 		goto fb_release;
 	}
 
@@ -2140,6 +2141,7 @@ static int mxsfb_probe(struct platform_device *pdev)
 	if (IS_ERR(host->clk_disp_axi)) {
 		host->clk_disp_axi = NULL;
 		ret = PTR_ERR(host->clk_disp_axi);
+		dev_err(&pdev->dev, "Failed to get disp_axi clock: %d\n", ret);
 		goto fb_release;
 	}
 
@@ -2151,6 +2153,7 @@ static int mxsfb_probe(struct platform_device *pdev)
 					       GFP_KERNEL);
 	if (!fb_info->pseudo_palette) {
 		ret = -ENOMEM;
+		dev_err(&pdev->dev, "Failed to allocate pseudo_palette memory\n");
 		goto fb_release;
 	}
 
@@ -2159,8 +2162,10 @@ static int mxsfb_probe(struct platform_device *pdev)
 	pm_runtime_enable(&host->pdev->dev);
 
 	ret = mxsfb_init_fbinfo(fb_info);
-	if (ret != 0)
+	if (ret != 0) {
+		dev_err(&pdev->dev, "Failed to initialize fbinfo: %d\n", ret);
 		goto fb_pm_runtime_disable;
+	}
 
 	ret = mxsfb_dispdrv_init(pdev, fb_info);
 	if (ret != 0) {
-- 
1.7.9.5

