From 258a2b3dcf596042feaa34965077fa2de21beea4 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Thu, 8 Nov 2018 17:01:56 +0800
Subject: [PATCH 5065/5242] MLK-20287 drm/imx: ldb: Check retval of
 sc_misc_set_control in ldb_pixel_link_init

commit  ab7892a38802b4499cf36a8ff6a026614405d223 from
https://source.codeaurora.org/external/imx/linux-imx.git

The return value of sc_misc_set_control() should be checked in
ldb_pixel_link_init(), instead of being ignored.  This patch
fixes this issue.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/imx-ldb.c |   18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/imx/imx-ldb.c b/drivers/gpu/drm/imx/imx-ldb.c
index c566de8..72e612a6 100644
--- a/drivers/gpu/drm/imx/imx-ldb.c
+++ b/drivers/gpu/drm/imx/imx-ldb.c
@@ -1182,23 +1182,29 @@ static void ldb_pixel_link_init(int id, bool dual)
 
 again:
 	if (id == 0) {
-		sc_misc_set_control(ipcHndl, SC_R_MIPI_0, SC_C_MODE, 1);
+		sciErr = sc_misc_set_control(ipcHndl, SC_R_MIPI_0,
+						SC_C_MODE, 1);
 		if (sciErr != SC_ERR_NONE)
 			pr_err("SC_R_MIPI_%d MODE failed %d!\n", id, sciErr);
-		sc_misc_set_control(ipcHndl, SC_R_MIPI_0, SC_C_DUAL_MODE, is_aux);
+		sciErr = sc_misc_set_control(ipcHndl, SC_R_MIPI_0,
+						SC_C_DUAL_MODE, is_aux);
 		if (sciErr != SC_ERR_NONE)
 			pr_err("SC_R_MIPI_%d DUAL_MODE failed %d!\n", id, sciErr);
-		sc_misc_set_control(ipcHndl, SC_R_MIPI_0, SC_C_PXL_LINK_SEL, is_aux);
+		sciErr = sc_misc_set_control(ipcHndl, SC_R_MIPI_0,
+						SC_C_PXL_LINK_SEL, is_aux);
 		if (sciErr != SC_ERR_NONE)
 			pr_err("SC_R_MIPI_%d PXL_LINK_SEL failed %d!\n", id, sciErr);
 	} else {
-		sc_misc_set_control(ipcHndl, SC_R_MIPI_1, SC_C_MODE, 1);
+		sciErr = sc_misc_set_control(ipcHndl, SC_R_MIPI_1,
+						SC_C_MODE, 1);
 		if (sciErr != SC_ERR_NONE)
 			pr_err("SC_R_MIPI_%d MODE failed %d!\n", id, sciErr);
-		sc_misc_set_control(ipcHndl, SC_R_MIPI_1, SC_C_DUAL_MODE, is_aux);
+		sciErr = sc_misc_set_control(ipcHndl, SC_R_MIPI_1,
+						SC_C_DUAL_MODE, is_aux);
 		if (sciErr != SC_ERR_NONE)
 			pr_err("SC_R_MIPI_%d DUAL_MODE failed %d!\n", id, sciErr);
-		sc_misc_set_control(ipcHndl, SC_R_MIPI_1, SC_C_PXL_LINK_SEL, is_aux);
+		sciErr = sc_misc_set_control(ipcHndl, SC_R_MIPI_1,
+						SC_C_PXL_LINK_SEL, is_aux);
 		if (sciErr != SC_ERR_NONE)
 			pr_err("SC_R_MIPI_%d PXL_LINK_SEL failed %d!\n", id, sciErr);
 	}
-- 
1.7.9.5

