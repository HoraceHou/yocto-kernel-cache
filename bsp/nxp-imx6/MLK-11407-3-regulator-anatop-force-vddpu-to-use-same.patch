From a3080cdf857f68c7dce2a2b75714d902e8efdde5 Mon Sep 17 00:00:00 2001
From: Shawn Guo <shawn.guo@freescale.com>
Date: Mon, 16 Jun 2014 14:11:51 +0800
Subject: [PATCH 0463/5242] MLK-11407-3: regulator: anatop: force vddpu to use
 same voltage level as vddsoc

commit  142b83ce984594588c808a8b47a7e466bf7502f5 from
https://source.codeaurora.org/external/imx/linux-imx.git

The anatop on i.MX6 requires that vddpu use the same voltage level as
vddsoc.  It's a quick hacking to force the check whenever vddpu is
about to be enabled.

Signed-off-by: Shawn Guo <shawn.guo@freescale.com>
Signed-off-by: Robin Gong <b38343@freescale.com>

Also take into consideration bypass mode when using the vddsoc selector
for vddpu.

Signed-off-by: Irina Tirdea <irina.tirdea@nxp.com>
Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/regulator/anatop-regulator.c |   15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/drivers/regulator/anatop-regulator.c b/drivers/regulator/anatop-regulator.c
index f9929b5..c2e168c 100644
--- a/drivers/regulator/anatop-regulator.c
+++ b/drivers/regulator/anatop-regulator.c
@@ -40,6 +40,9 @@ struct anatop_regulator {
 	u32 enable_bit;
 };
 
+static struct anatop_regulator *vddpu;
+static struct anatop_regulator *vddsoc;
+
 static int anatop_regmap_set_voltage_time_sel(struct regulator_dev *reg,
 	unsigned int old_sel,
 	unsigned int new_sel)
@@ -71,6 +74,13 @@ static int anatop_core_regmap_enable(struct regulator_dev *reg)
 	struct anatop_regulator *anatop_reg = rdev_get_drvdata(reg);
 	int sel;
 
+	/*
+	 * The vddpu has to stay at the same voltage level as vddsoc
+	 * whenever it's about to be enabled.
+	 */
+	if (anatop_reg == vddpu && vddsoc)
+		anatop_reg->sel = vddsoc->bypass ? LDO_FET_FULL_ON : vddsoc->sel;
+
 	sel = anatop_reg->bypass ? LDO_FET_FULL_ON : anatop_reg->sel;
 	return regulator_set_voltage_sel_regmap(reg, sel);
 }
@@ -232,6 +242,11 @@ static int anatop_regulator_probe(struct platform_device *pdev)
 	initdata->supply_regulator = "vin";
 	sreg->initdata = initdata;
 
+	if (strcmp(rdesc->name, "vddpu") == 0)
+		vddpu = sreg;
+	else if (strcmp(rdesc->name, "vddsoc") == 0)
+		vddsoc = sreg;
+
 	anatop_np = of_get_parent(np);
 	if (!anatop_np)
 		return -ENODEV;
-- 
1.7.9.5

