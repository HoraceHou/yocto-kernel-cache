From 4e4fdc5435acd9dc33951b222375e4cd14d01730 Mon Sep 17 00:00:00 2001
From: Dong Aisheng <aisheng.dong@nxp.com>
Date: Thu, 7 Sep 2017 13:02:53 +0800
Subject: [PATCH 3320/5242] MLK-17491-25 clk: imx: clk-pllv4: remove
 meaningless register members

commit  a03c1a416c1782fa02dc1d9a74a8c0fb4422b9f8 from
https://source.codeaurora.org/external/imx/linux-imx.git

There's no meaning to add members for fixed register offset and mask.
This using seems to be derived from MX6 PLL code but not suitable for
ULP up till now.

Cc: Anson Huang <Anson.Huang@nxp.com>
Fixes: 78ef764871d6 ("MLK-13441-5 ARM: imx: add new clk types")
Reviewed-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-pllv4.c |   31 ++++++++++---------------------
 1 file changed, 10 insertions(+), 21 deletions(-)

diff --git a/drivers/clk/imx/clk-pllv4.c b/drivers/clk/imx/clk-pllv4.c
index ba886d0..84f22f6 100644
--- a/drivers/clk/imx/clk-pllv4.c
+++ b/drivers/clk/imx/clk-pllv4.c
@@ -26,11 +26,6 @@
 struct clk_pllv4 {
 	struct clk_hw	hw;
 	void __iomem	*base;
-	u32		div_mask;
-	u32		div_shift;
-	u32		cfg_offset;
-	u32		num_offset;
-	u32		denom_offset;
 };
 
 /* Valid PLL MULT Table */
@@ -42,10 +37,10 @@ static unsigned long clk_pllv4_recalc_rate(struct clk_hw *hw,
 					      unsigned long parent_rate)
 {
 	struct clk_pllv4 *pll = to_clk_pllv4(hw);
-	u32 mfn = readl_relaxed(pll->base + pll->num_offset);
-	u32 mfd = readl_relaxed(pll->base + pll->denom_offset);
-	u32 div = (readl_relaxed(pll->base + pll->cfg_offset)
-		& pll->div_mask) >> pll->div_shift;
+	u32 mfn = readl_relaxed(pll->base + PLL_NUM_OFFSET);
+	u32 mfd = readl_relaxed(pll->base + PLL_DENOM_OFFSET);
+	u32 div = (readl_relaxed(pll->base + PLL_CFG_OFFSET)
+		& BM_PLL_DIV) >> BP_PLL_DIV;
 	u64 temp64 = (u64)parent_rate;
 
 	temp64 *= mfn;
@@ -125,12 +120,12 @@ static int clk_pllv4_set_rate(struct clk_hw *hw, unsigned long rate,
 	do_div(temp64, parent_rate);
 	mfn = temp64;
 
-	val = readl_relaxed(pll->base + pll->cfg_offset);
-	val &= ~pll->div_mask;
-	val |= (div << pll->div_shift);
-	writel_relaxed(val, pll->base + pll->cfg_offset);
-	writel_relaxed(mfn, pll->base + pll->num_offset);
-	writel_relaxed(mfd, pll->base + pll->denom_offset);
+	val = readl_relaxed(pll->base + PLL_CFG_OFFSET);
+	val &= ~BM_PLL_DIV;
+	val |= (div << BP_PLL_DIV);
+	writel_relaxed(val, pll->base + PLL_CFG_OFFSET);
+	writel_relaxed(mfn, pll->base + PLL_NUM_OFFSET);
+	writel_relaxed(mfd, pll->base + PLL_DENOM_OFFSET);
 
 	return 0;
 }
@@ -188,12 +183,6 @@ struct clk *imx_clk_pllv4(const char *name, const char *parent_name,
 		return ERR_PTR(-ENOMEM);
 
 	pll->base = base;
-	pll->div_mask = BM_PLL_DIV;
-	pll->div_shift = BP_PLL_DIV;
-	pll->cfg_offset = PLL_CFG_OFFSET;
-	pll->num_offset = PLL_NUM_OFFSET;
-	pll->denom_offset = PLL_DENOM_OFFSET;
-
 	init.name = name;
 	init.ops = &clk_pllv4_ops;
 	init.parent_names = &parent_name;
-- 
1.7.9.5

