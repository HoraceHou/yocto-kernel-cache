From 02c2e6cde4e6b0ee2367c16ee792e44f5130bb50 Mon Sep 17 00:00:00 2001
From: Han Xu <han.xu@nxp.com>
Date: Tue, 7 Nov 2017 16:25:17 -0600
Subject: [PATCH 2733/5242] MLK-16769-5: mtd: gpmi-nand runtime pm code change

commit  a374e6d52b4b3ec7cfd1ddeffb3364397c78fd95 from
https://source.codeaurora.org/external/imx/linux-imx.git

acquire/release dma in runtime pm resume/suspend to proper get/put dma
resources.

 BuildInfo:
  - SCFW 60e110f9, IMX-MKIMAGE e131af10, ATF
  - U-Boot 2017.03-imx_4.9.51_8qm_beta1_8qxp_alpha+gfcc9bdc

Signed-off-by: Han Xu <han.xu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c |   32 +++++++++++++++++-----------
 1 file changed, 20 insertions(+), 12 deletions(-)

diff --git a/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c b/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
index 57a7081..bb52f67 100644
--- a/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
+++ b/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
@@ -28,6 +28,7 @@
 #include <linux/of_device.h>
 #include <linux/busfreq-imx.h>
 #include <linux/pm_runtime.h>
+#include <linux/pinctrl/consumer.h>
 #include "gpmi-nand.h"
 #include "bch-regs.h"
 
@@ -802,7 +803,7 @@ static int acquire_dma_channels(struct gpmi_nand_data *this)
 	struct dma_chan *dma_chan;
 	struct device_node *np = pdev->dev.of_node;
 
-	of_dma_configure(&pdev->dev, np);
+	of_dma_configure(&pdev->dev, np, true);
 
 	/* request dma channel */
 	dma_chan = dma_request_slave_channel(&pdev->dev, "rx-tx");
@@ -876,10 +877,6 @@ static int acquire_resources(struct gpmi_nand_data *this)
 	if (ret)
 		goto exit_regs;
 
-	ret = acquire_dma_channels(this);
-	if (ret)
-		goto exit_regs;
-
 	ret = gpmi_get_clks(this);
 	if (ret)
 		goto exit_clock;
@@ -2357,11 +2354,12 @@ static int gpmi_nand_remove(struct platform_device *pdev)
 #ifdef CONFIG_PM_SLEEP
 static int gpmi_pm_suspend(struct device *dev)
 {
-	struct gpmi_nand_data *this = dev_get_drvdata(dev);
+	int ret;
 
-	release_dma_channels(this);
 	pinctrl_pm_select_sleep_state(dev);
-	return 0;
+	ret = pm_runtime_force_suspend(dev);
+
+	return ret;
 }
 
 static int gpmi_pm_resume(struct device *dev)
@@ -2369,11 +2367,14 @@ static int gpmi_pm_resume(struct device *dev)
 	struct gpmi_nand_data *this = dev_get_drvdata(dev);
 	int ret;
 
-	pinctrl_pm_select_default_state(dev);
-
-	ret = acquire_dma_channels(this);
-	if (ret < 0)
+	/* enable clock, acquire dma */
+	ret = pm_runtime_force_resume(dev);
+	if (ret) {
+		dev_err(this->dev, "Error in resume: %d\n", ret);
 		return ret;
+	}
+
+	pinctrl_pm_select_default_state(dev);
 
 	/* re-init the GPMI registers */
 	ret = gpmi_init(this);
@@ -2402,6 +2403,8 @@ int gpmi_runtime_suspend(struct device *dev)
 
 	gpmi_disable_clk(this);
 	release_bus_freq(BUS_FREQ_HIGH);
+	release_dma_channels(this);
+
 	return 0;
 }
 
@@ -2415,6 +2418,11 @@ int gpmi_runtime_resume(struct device *dev)
 		return ret;
 
 	request_bus_freq(BUS_FREQ_HIGH);
+
+	ret = acquire_dma_channels(this);
+	if (ret < 0)
+		return ret;
+
 	return 0;
 }
 
-- 
1.7.9.5

