From b61f2d246fe9ba6fa55f8c625152fd29fd115d8d Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Mon, 12 Nov 2018 11:18:50 +0800
Subject: [PATCH 5093/5242] MLK-20318 gpu: imx: dpu: scaler: Avoid
 out-of-bounds array read on src_sels[i][j]

commit  95bc1eb150213952fc0afe1f7ebeb0f38bbb062a from
https://source.codeaurora.org/external/imx/linux-imx.git

The logic in function h/vscaler_pixengcfg_dynamic_src_sel() to avoid
overrunning array src_sel[i][j] is wrong.  The correct one is to check
on the index i which should be less than the array size of h/vs_id_array[].
This patch fixes the potential array overrunning issue, that is,
out-of-bounds array read issue.  The issue is reported by coverity -
CID 1477349 and CID 1477345.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/imx/dpu/dpu-hscaler.c |    2 +-
 drivers/gpu/imx/dpu/dpu-vscaler.c |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/imx/dpu/dpu-hscaler.c b/drivers/gpu/imx/dpu/dpu-hscaler.c
index 2ac4220..c3fc63d 100644
--- a/drivers/gpu/imx/dpu/dpu-hscaler.c
+++ b/drivers/gpu/imx/dpu/dpu-hscaler.c
@@ -105,7 +105,7 @@ int hscaler_pixengcfg_dynamic_src_sel(struct dpu_hscaler *hs, hs_src_sel_t src)
 		if (hs_id_array[i] == hs->id)
 			break;
 
-	if (WARN_ON(i == (ARRAY_SIZE(hs_id_array) + 1)))
+	if (WARN_ON(i == ARRAY_SIZE(hs_id_array)))
 		return -EINVAL;
 
 	mutex_lock(&hs->mutex);
diff --git a/drivers/gpu/imx/dpu/dpu-vscaler.c b/drivers/gpu/imx/dpu/dpu-vscaler.c
index 1c65654..f8309b6 100644
--- a/drivers/gpu/imx/dpu/dpu-vscaler.c
+++ b/drivers/gpu/imx/dpu/dpu-vscaler.c
@@ -108,7 +108,7 @@ int vscaler_pixengcfg_dynamic_src_sel(struct dpu_vscaler *vs, vs_src_sel_t src)
 		if (vs_id_array[i] == vs->id)
 			break;
 
-	if (WARN_ON(i == (ARRAY_SIZE(vs_id_array) + 1)))
+	if (WARN_ON(i == ARRAY_SIZE(vs_id_array)))
 		return -EINVAL;
 
 	mutex_lock(&vs->mutex);
-- 
1.7.9.5

