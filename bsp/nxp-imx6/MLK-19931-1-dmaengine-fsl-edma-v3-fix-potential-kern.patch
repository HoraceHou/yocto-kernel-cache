From b7a244edf8dc05d462e8c608f57c0dccf1df21cc Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Tue, 16 Oct 2018 01:06:29 +0800
Subject: [PATCH 4874/5242] MLK-19931-1: dmaengine: fsl-edma-v3: fix potential
 kernel crash in cyclic

commit  aa725898e04d94d88dcae17534d532688a18b1f6 from
https://source.codeaurora.org/external/imx/linux-imx.git

  There is one potential race condition in virt-dma framework as below:
terminate dma channel after the last dma done interrupt, but before
vchan_complete tasklet scheduled, thus the free-ed 'vd' (free in
fsl_edma3_terminate_all) maybe still be touched in vchan_complete()
which cause NULL pointer crash.
  Kernel community noticed this issue and fix it at virt-dma level:
https://patchwork.kernel.org/patch/10057791/. To avoid backport too
much patches, set 'vc->cyclic = NULL' in terminate dma channel
interfaces to fix such issue easily.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Acked-by: Fugang Duan <fugang.duan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/dma/fsl-edma-v3.c |    1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/dma/fsl-edma-v3.c b/drivers/dma/fsl-edma-v3.c
index f74f46a..47c7a17 100644
--- a/drivers/dma/fsl-edma-v3.c
+++ b/drivers/dma/fsl-edma-v3.c
@@ -288,6 +288,7 @@ static int fsl_edma3_terminate_all(struct dma_chan *chan)
 	fsl_chan->edesc = NULL;
 	fsl_chan->idle = true;
 	fsl_chan->used = false;
+	fsl_chan->vchan.cyclic = NULL;
 	vchan_get_all_descriptors(&fsl_chan->vchan, &head);
 	spin_unlock_irqrestore(&fsl_chan->vchan.lock, flags);
 	vchan_dma_desc_free_list(&fsl_chan->vchan, &head);
-- 
1.7.9.5

