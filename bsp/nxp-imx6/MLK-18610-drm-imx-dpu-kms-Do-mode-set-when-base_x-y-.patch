From 9d35da0f331961c4eb6a419d688778adbd90c133 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Thu, 14 Jun 2018 14:07:55 +0800
Subject: [PATCH 3991/5242] MLK-18610 drm/imx: dpu: kms: Do mode set when
 base_x/y are changed

commit  f8b323be403873ae84cd11041fdee4e7b7bcb022 from
https://source.codeaurora.org/external/imx/linux-imx.git

Framegen is a part of DPU display engine.  The SACFG register of
framegen controls base_x/y, a.k.a., the left/top boundries of all
the planes(fetch units) built upon the framegen.  And, framegen
has to be restarted after different x/y values are programmed to
SACFG.  Thus, let's explicitly claim mode set is needed via asserting
crtc_state->mode_changed when base_x/y are changed.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
(cherry picked from commit fc6061c86f6ea6e4524c3e16a3c62c94a4ca7129)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-plane.c |    7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-plane.c b/drivers/gpu/drm/imx/dpu/dpu-plane.c
index 1f4e3635..0605709 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-plane.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-plane.c
@@ -222,6 +222,7 @@ static int dpu_plane_atomic_check(struct drm_plane *plane,
 {
 	struct dpu_plane *dplane = to_dpu_plane(plane);
 	struct dpu_plane_state *dpstate = to_dpu_plane_state(state);
+	struct dpu_plane_state *old_dpstate = to_dpu_plane_state(plane->state);
 	struct drm_crtc_state *crtc_state;
 	struct drm_framebuffer *fb = state->fb;
 	struct dpu_fetchunit *fu;
@@ -294,6 +295,12 @@ static int dpu_plane_atomic_check(struct drm_plane *plane,
 	if (WARN_ON(!crtc_state))
 		return -EINVAL;
 
+	/* mode set is needed when base x/y is changed */
+	if (plane->type == DRM_PLANE_TYPE_PRIMARY)
+		if ((dpstate->base_x != old_dpstate->base_x) ||
+		    (dpstate->base_y != old_dpstate->base_y))
+			crtc_state->mode_changed = true;
+
 	if (state->crtc_x + state->crtc_w >
 	    crtc_state->adjusted_mode.hdisplay)
 		return -EINVAL;
-- 
1.7.9.5

