From 8eaf2cfd87408d11c0ebd4d305aac30d5769526f Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Sat, 3 Nov 2018 10:44:49 +0800
Subject: [PATCH 5029/5242] MLK-20202 clocksource: imx-gpt: fix coverity
 issues

commit  944d53a2b7616cb51f4f9a2e2bafcab16ea2bc25 from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch fixes coverity issues as below:

1. resource leak
2. possible case of division by zero.

Fix #1 by kfree the resource before return error;
Fix #2 by adding zero check before registering delay timer.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Reviewed-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clocksource/timer-imx-gpt.c |   11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/clocksource/timer-imx-gpt.c b/drivers/clocksource/timer-imx-gpt.c
index 15fa1a9..ac1ea61 100644
--- a/drivers/clocksource/timer-imx-gpt.c
+++ b/drivers/clocksource/timer-imx-gpt.c
@@ -155,6 +155,9 @@ static int __init mxc_clocksource_init(struct imx_timer *imxtm)
 	unsigned int c = clk_get_rate(imxtm->clk_per);
 	void __iomem *reg = imxtm->base + imxtm->gpt->reg_tcn;
 
+	if (c == 0)
+		return -EINVAL;
+
 #ifndef CONFIG_ARM64
 	imx_delay_timer.read_current_timer = &imx_read_current_timer;
 	imx_delay_timer.freq = c;
@@ -477,12 +480,16 @@ static int __init mxc_timer_init_dt(struct device_node *np,  enum imx_gpt_type t
 		return -ENOMEM;
 
 	imxtm->base = of_iomap(np, 0);
-	if (!imxtm->base)
+	if (!imxtm->base) {
+		kfree(imxtm);
 		return -ENXIO;
+	}
 
 	imxtm->irq = irq_of_parse_and_map(np, 0);
-	if (imxtm->irq <= 0)
+	if (imxtm->irq <= 0) {
+		kfree(imxtm);
 		return -EINVAL;
+	}
 
 	imxtm->clk_ipg = of_clk_get_by_name(np, "ipg");
 
-- 
1.7.9.5

