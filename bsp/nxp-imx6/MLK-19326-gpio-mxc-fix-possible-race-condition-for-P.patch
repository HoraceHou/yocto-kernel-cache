From 8f09af06aec8cdd21a8a79990cf4efa2c4ae7c8e Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Fri, 24 Aug 2018 14:17:58 +0800
Subject: [PATCH 4442/5242] MLK-19326 gpio: mxc: fix possible race condition
 for PAD wakeup

commit  c4c3924c10446f3caf77b2f5d3d11c54b11569f8 from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch adds line 0 PAD wakeup support, it is missed previously,
also protect the PAD wakeup interrupt handle with spin lock to
avoid possible race condition of GPIO interrupt arriving during
PAD wakeup interrupt handling.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Reviewed-by: Fugang Duan <fugang.duan@nxp.com>
(cherry picked from commit db842471137ef2758de6192f8f400e4b56da5d01)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpio/gpio-mxc.c |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/gpio/gpio-mxc.c b/drivers/gpio/gpio-mxc.c
index 02d7266..1aeca44 100644
--- a/drivers/gpio/gpio-mxc.c
+++ b/drivers/gpio/gpio-mxc.c
@@ -816,12 +816,11 @@ static int __maybe_unused mxc_gpio_noirq_resume(struct device *dev)
 	writel(port->suspend_saved_reg[3], port->base + GPIO_GDIR);
 	writel(port->suspend_saved_reg[4], port->base + GPIO_EDGE_SEL);
 	writel(port->suspend_saved_reg[5], port->base + GPIO_DR);
-	spin_unlock_irqrestore(&port->gc.bgpio_lock, flags);
-
 #ifdef CONFIG_GPIO_MXC_PAD_WAKEUP
-	if (wakeup_line > 0)
+	if (wakeup_line >= 0)
 		mxc_gpio_handle_pad_wakeup(port, wakeup_line);
 #endif
+	spin_unlock_irqrestore(&port->gc.bgpio_lock, flags);
 	clk_disable_unprepare(port->clk);
 
 	return 0;
-- 
1.7.9.5

