From eb72d778ae24801e3c879ba2fc5b4100430b6bdc Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Thu, 12 Oct 2017 14:55:45 +0800
Subject: [PATCH 2624/5242] MLK-16575 gpu: imx: dpu: fetcheco: Correct
 dpu->fe_priv[] access in dpu_fe_init()

commit  56f37352d6f4886cd8d51bf450cbb360890fec26 from
https://source.codeaurora.org/external/imx/linux-imx.git

The array size of dpu->fe_priv is only 4.  We need to access the correct
entry of the array by comparing the id passed in dpu_fe_init() with
the entries in the fe_ids array instead of using the id directly.
This may avoid out-of-boundary array access on dpu->fe_priv.

Fixes: 936b978c44f3 ("MLK-16075-11 gpu: imx: dpu: Add basic fetcheco units support")
Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/imx/dpu/dpu-fetcheco.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/imx/dpu/dpu-fetcheco.c b/drivers/gpu/imx/dpu/dpu-fetcheco.c
index 7fa85ae..c3ac6fd 100644
--- a/drivers/gpu/imx/dpu/dpu-fetcheco.c
+++ b/drivers/gpu/imx/dpu/dpu-fetcheco.c
@@ -482,12 +482,17 @@ int dpu_fe_init(struct dpu_soc *dpu, unsigned int id,
 		unsigned long pec_base, unsigned long base)
 {
 	struct dpu_fetcheco *fe;
+	int i;
 
 	fe = devm_kzalloc(dpu->dev, sizeof(*fe), GFP_KERNEL);
 	if (!fe)
 		return -ENOMEM;
 
-	dpu->fe_priv[id] = fe;
+	for (i = 0; i < ARRAY_SIZE(fe_ids); i++)
+		if (fe_ids[i] == id)
+			break;
+
+	dpu->fe_priv[i] = fe;
 
 	fe->pec_base = devm_ioremap(dpu->dev, pec_base, SZ_16);
 	if (!fe->pec_base)
-- 
1.7.9.5

