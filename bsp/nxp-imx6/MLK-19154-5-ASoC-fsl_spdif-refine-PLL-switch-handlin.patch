From d6eab020c2d07b200f9bfbbfcbd1b4d223d37bec Mon Sep 17 00:00:00 2001
From: Viorel Suman <viorel.suman@nxp.com>
Date: Thu, 23 Aug 2018 13:18:25 +0300
Subject: [PATCH 4436/5242] MLK-19154-5: ASoC: fsl_spdif: refine PLL switch
 handling

commit  12dc0b57e23807f7d76a0a1e67c1eddaf561d1c2 from
https://source.codeaurora.org/external/imx/linux-imx.git

Allow PLL switch for playback stream only and remove
PLL switch guard with regard to capture stream as the
clock for capture stream is provided externally.

Signed-off-by: Viorel Suman <viorel.suman@nxp.com>
(cherry picked from commit c8213da5fbcd370acb4d764bef5df5981a517c11)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_spdif.c |   23 +++++------------------
 sound/soc/fsl/imx-spdif.c |   14 ++++++++------
 2 files changed, 13 insertions(+), 24 deletions(-)

diff --git a/sound/soc/fsl/fsl_spdif.c b/sound/soc/fsl/fsl_spdif.c
index 8f5e54f..a9d8e76 100644
--- a/sound/soc/fsl/fsl_spdif.c
+++ b/sound/soc/fsl/fsl_spdif.c
@@ -127,7 +127,6 @@ struct fsl_spdif_priv {
 	u32 regcache_srpc;
 	struct clk *pll8k_clk;
 	struct clk *pll11k_clk;
-	u8 streams;
 };
 
 static struct fsl_spdif_soc_data fsl_spdif_vf610 = {
@@ -634,9 +633,6 @@ static int fsl_spdif_hw_params(struct snd_pcm_substream *substream,
 		ret = spdif_set_rx_clksrc(spdif_priv, SPDIF_DEFAULT_GAINSEL, 1);
 	}
 
-	if (!ret)
-		spdif_priv->streams |= BIT(substream->stream);
-
 	return ret;
 }
 
@@ -679,8 +675,6 @@ static int fsl_spdif_hw_free(struct snd_pcm_substream *substream,
 	if (spdif_priv->soc->dma_workaround)
 		clear_gpt_dma(substream, spdif_priv->dma_info);
 
-	spdif_priv->streams &= ~BIT(substream->stream);
-
 	return 0;
 }
 
@@ -823,18 +817,11 @@ static int fsl_spdif_set_dai_sysclk(struct snd_soc_dai *cpu_dai,
 	if (pll) {
 		npll = (do_div(ratio, 8000) ? data->pll11k_clk : data->pll8k_clk);
 		if (!clk_is_match(pll, npll)) {
-			if (!data->streams) {
-				ret = clk_set_parent(p, npll);
-				if (ret < 0)
-					dev_warn(cpu_dai->dev,
-						"failed to set parent %s: %d\n",
-						__clk_get_name(npll), ret);
-			} else {
-				dev_err(cpu_dai->dev,
-					"PLL %s is in use by a running stream.\n",
-					__clk_get_name(pll));
-				return -EINVAL;
-			}
+			ret = clk_set_parent(p, npll);
+			if (ret < 0)
+				dev_warn(cpu_dai->dev,
+					"failed to set parent %s: %d\n",
+					__clk_get_name(npll), ret);
 		}
 	}
 
diff --git a/sound/soc/fsl/imx-spdif.c b/sound/soc/fsl/imx-spdif.c
index 440f7cd..80a2dbd 100644
--- a/sound/soc/fsl/imx-spdif.c
+++ b/sound/soc/fsl/imx-spdif.c
@@ -27,15 +27,17 @@ static int imx_spdif_hw_params(struct snd_pcm_substream *substream,
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct device *dev = rtd->card->dev;
-	int ret;
+	int ret = 0;
 	u64 rate = params_rate(params);
 	unsigned int freq;
 
-	freq = do_div(rate, 8000) ? CLK_11K_FREQ : CLK_8K_FREQ;
-	ret = snd_soc_dai_set_sysclk(rtd->cpu_dai, STC_TXCLK_SPDIF_ROOT,
-		freq, SND_SOC_CLOCK_OUT);
-	if (ret)
-		dev_err(dev, "failed to set cpu sysclk: %d\n", ret);
+	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK) {
+		freq = do_div(rate, 8000) ? CLK_11K_FREQ : CLK_8K_FREQ;
+		ret = snd_soc_dai_set_sysclk(rtd->cpu_dai, STC_TXCLK_SPDIF_ROOT,
+			freq, SND_SOC_CLOCK_OUT);
+		if (ret)
+			dev_err(dev, "failed to set cpu sysclk: %d\n", ret);
+	}
 
 	return ret;
 }
-- 
1.7.9.5

