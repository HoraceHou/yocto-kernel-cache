From 679e9f22be1d6e9dabbdba969bfb4c65418ebfee Mon Sep 17 00:00:00 2001
From: "Ivan.liu" <xiaowen.liu@nxp.com>
Date: Thu, 18 Oct 2018 15:48:22 +0800
Subject: [PATCH 4904/5242] MA-13121 [#imx-1221] Fix kernel panic after reduce
 gpu reserved memory size.

commit  fa452036744e99e220a065f4d0751208e0d65844 from
https://source.codeaurora.org/external/imx/linux-imx.git

gckOS_MapPhysical is only used for contiguous memory to do map.
Actually LockVideoMemory already get the virtual address.
Remove gckOS_MapPhysical to support non contiguous memory.

Signed-off-by: Ivan.liu <xiaowen.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../hal/os/linux/kernel/gc_hal_kernel_drm.c        |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c
index 8cad497..157e425 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c
@@ -552,11 +552,12 @@ static int viv_ioctl_gem_attach_aux(struct drm_device *drm, void *data,
     if (args->ts_handle)
     {
         struct viv_gem_object *viv_ts_obj;
+        size_t num = 0;
         gckKERNEL kernel = gal_dev->device->map[gal_dev->device->defaultHwType].kernels[0];
         gcsHAL_INTERFACE iface;
         gctBOOL is2BitPerTile = gckHARDWARE_IsFeatureAvailable(kernel->hardware , gcvFEATURE_TILE_STATUS_2BITS);
         gctBOOL isCompressionDEC400 = gckHARDWARE_IsFeatureAvailable(kernel->hardware , gcvFEATURE_COMPRESSION_DEC400);
-        gctPOINTER entry = gcvNULL;
+        char __user* entry = gcvNULL;
         gctUINT32 tileStatusFiller = (isCompressionDEC400 || ((kernel->hardware->identity.chipModel == gcv500) && (kernel->hardware->identity.chipRevision > 2)))
                                   ? 0xFFFFFFFF
                                   : is2BitPerTile ? 0x55555555 : 0x11111111;
@@ -580,10 +581,11 @@ static int viv_ioctl_gem_attach_aux(struct drm_device *drm, void *data,
         iface.u.LockVideoMemory.cacheable = viv_ts_obj->cacheable;
         gcmkONERROR(gckDEVICE_Dispatch(gal_dev->device, &iface));
 
-        gcmkONERROR(gckOS_MapPhysical(kernel->os, (gctUINT32) iface.u.LockVideoMemory.physicalAddress, (__u64)gem_ts_obj->size, &entry));
-
         /* Fill tile status node with tileStatusFiller. */
-        memset(entry , tileStatusFiller , (__u64)gem_ts_obj->size);
+        entry = (char __user*)iface.u.LockVideoMemory.memory;
+        for (num=0; num<gem_ts_obj->size; num++) {
+            put_user(tileStatusFiller, entry+num);
+        }
 
         /* UnLock tile status node. */
         memset(&iface, 0, sizeof(iface));
-- 
1.7.9.5

