From fef8e2682ff8362c0a4c22ab6f0d7434a7c01f97 Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <shengjiu.wang@nxp.com>
Date: Mon, 16 Jul 2018 18:29:23 +0800
Subject: [PATCH 4159/5242] MLK-18866: ASoC: imx-pcm-dma-v2: refine the
 callback function

commit  dcd6cc53523594e5860af86490e1e75e3641fbaf from
https://source.codeaurora.org/external/imx/linux-imx.git

The commit 7f3ff14b7eb1 ("dmaengine: imx-sdma: add 1ms delay
to ensure SDMA channel is stopped") add 1ms delay may cause
the audio underrun/overrun.

But ESAI has an hardware issue in older version which work abnormal
after underrun/overrun, especially there will be channel swap.
To workaround this issue, the ESAI need to be reset. in
imx-pcm-dma.c we include a new callback function for DMA interrupt
which will check the state of cpu dai and reset it in necessary.

So inport same function to imx-pcm-dma-v2.

Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
Reviewed-by: Viorel Suman <viorel.suman@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/imx-pcm-dma-v2.c |   23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/sound/soc/fsl/imx-pcm-dma-v2.c b/sound/soc/fsl/imx-pcm-dma-v2.c
index 470e85a..e2de0d8 100644
--- a/sound/soc/fsl/imx-pcm-dma-v2.c
+++ b/sound/soc/fsl/imx-pcm-dma-v2.c
@@ -47,6 +47,25 @@ static bool imx_dma_filter_fn(struct dma_chan *chan, void *param)
 	return true;
 }
 
+static void imx_pcm_dma_v2_complete(void *arg)
+{
+	struct snd_pcm_substream *substream = arg;
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct dmaengine_pcm_runtime_data *prtd =
+				substream->runtime->private_data;
+	struct snd_dmaengine_dai_dma_data *dma_data;
+
+	prtd->pos += snd_pcm_lib_period_bytes(substream);
+	if (prtd->pos >= snd_pcm_lib_buffer_bytes(substream))
+		prtd->pos = 0;
+
+	snd_pcm_period_elapsed(substream);
+
+	dma_data = snd_soc_dai_get_dma_data(rtd->cpu_dai, substream);
+	if (dma_data->check_xrun && dma_data->check_xrun(substream))
+		dma_data->device_reset(substream, 1);
+}
+
 /* this may get called several times by oss emulation */
 static int imx_pcm_hw_params(struct snd_pcm_substream *substream,
 			      struct snd_pcm_hw_params *params)
@@ -56,8 +75,12 @@ static int imx_pcm_hw_params(struct snd_pcm_substream *substream,
 	struct snd_dmaengine_dai_dma_data *dma_data;
 	struct dma_slave_config config;
 	struct dma_chan *chan;
+	struct dmaengine_pcm_runtime_data *prtd =
+				substream->runtime->private_data;
 	int err = 0;
 
+	prtd->callback = imx_pcm_dma_v2_complete;
+
 	dma_data = snd_soc_dai_get_dma_data(rtd->cpu_dai, substream);
 
 	/* return if this is a bufferless transfer e.g.
-- 
1.7.9.5

