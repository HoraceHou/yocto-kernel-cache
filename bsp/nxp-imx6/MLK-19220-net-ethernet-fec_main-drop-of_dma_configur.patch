From 1a033906b143dea91fed788f608b4cd4da28b797 Mon Sep 17 00:00:00 2001
From: Peng Fan <peng.fan@nxp.com>
Date: Wed, 15 Aug 2018 09:39:29 +0800
Subject: [PATCH 4387/5242] MLK-19220 net: ethernet: fec_main: drop
 of_dma_configure

commit  22bbd9f2a382250859311b0094da1620f93f5ee2 from
https://source.codeaurora.org/external/imx/linux-imx.git

The common code aready has the flow:
really_probe->dma_configure->of_dma_configure

There is no need to call it in driver specific probe function.
With of_dma_configure call twice, arch_setup_dma_ops will set
dev->dma_ops and dev->archdata.dev_dma_ops both to xen_dma_ops
when booting Kernel in Dom0 and cause stack overflow in
dma_alloc_coherent.

Signed-off-by: Peng Fan <peng.fan@nxp.com>
Acked-by: Fugang Duan <fugang.duan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/freescale/fec_main.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index f2c8d26..d7c9cde 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -21,7 +21,7 @@
  *
  * Copyright (C) 2010-2014 Freescale Semiconductor, Inc.
  *
- * Copyright 2017 NXP
+ * Copyright 2017-2018 NXP
  */
 
 #include <linux/module.h>
@@ -3355,7 +3355,7 @@ u16 fec_enet_select_queue(struct net_device *ndev, struct sk_buff *skb,
 	u16 vlan_tag;
 
 	if (!(id_entry->driver_data & FEC_QUIRK_HAS_AVB))
-		return skb_tx_hash(ndev, skb);
+		return fallback(ndev, skb);
 
 	vlan_tag = fec_enet_get_raw_vlan_tci(skb);
 	if (!vlan_tag)
@@ -3663,8 +3663,6 @@ static void fec_enet_of_parse_stop_mode(struct platform_device *pdev)
 	char irq_name[8];
 	int irq_cnt;
 
-	of_dma_configure(&pdev->dev, np);
-
 	fec_enet_get_queue_num(pdev, &num_tx_qs, &num_rx_qs);
 
 	/* Init network device */
-- 
1.7.9.5

