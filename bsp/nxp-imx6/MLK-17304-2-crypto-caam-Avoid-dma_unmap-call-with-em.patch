From 53cb16adc2535df680c928dc6ab56b7bd258833e Mon Sep 17 00:00:00 2001
From: Aymen Sghaier <aymen.sghaier@nxp.com>
Date: Mon, 25 Jun 2018 11:34:40 +0200
Subject: [PATCH 4201/5242] MLK-17304-2: crypto: caam: Avoid dma_unmap call
 with empty buffer

commit  2e4acc0c08ada8d8309a6fc24c29a9345169d189 from
https://source.codeaurora.org/external/imx/linux-imx.git

 This patch adds a check for the buffer size that is not empty before
 the dma_unmap function call.

Signed-off-by: Aymen Sghaier <aymen.sghaier@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/caamhash.c |    9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/crypto/caam/caamhash.c b/drivers/crypto/caam/caamhash.c
index 3cda0bf..ea55cbd 100644
--- a/drivers/crypto/caam/caamhash.c
+++ b/drivers/crypto/caam/caamhash.c
@@ -724,17 +724,16 @@ static inline void ahash_unmap(struct device *dev,
 			struct ahash_request *req, int dst_len)
 {
 	struct caam_hash_state *state = ahash_request_ctx(req);
+	int len;
 
 	if (edesc->src_nents)
 		dma_unmap_sg(dev, req->src, edesc->src_nents, DMA_TO_DEVICE);
 	if (edesc->dst_dma)
 		dma_unmap_single(dev, edesc->dst_dma, dst_len, DMA_FROM_DEVICE);
 
-	if (state->buf_dma) {
-		dma_unmap_single(dev, state->buf_dma,
-			(state->current_buf ?
-				state->buflen_1 : state->buflen_0),
-			DMA_TO_DEVICE);
+	len = state->current_buf ? state->buflen_1 : state->buflen_0;
+	if (state->buf_dma && len) {
+		dma_unmap_single(dev, state->buf_dma, len, DMA_TO_DEVICE);
 		state->buf_dma = 0;
 	}
 
-- 
1.7.9.5

