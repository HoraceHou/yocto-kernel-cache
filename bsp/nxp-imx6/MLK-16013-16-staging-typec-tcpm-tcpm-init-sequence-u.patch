From 71949b034fc17160dba642788f1dfcea01bf1378 Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@nxp.com>
Date: Thu, 27 Jul 2017 01:08:27 +0800
Subject: [PATCH 2295/5242] MLK-16013-16: staging: typec: tcpm: tcpm init
 sequence update

commit  9f8e612ad9144a5d99615d955c16f34efdc04150 from
https://source.codeaurora.org/external/imx/linux-imx.git

Force an error recovery is not a good way to handle all cases and may
break the case of power up with typec already connected. Also the tcpc
init should start after tcpm init setup is done, as tcpc init will
turn on HW event alert so may generate events immediately and drive
tcpm state machine go forward, so move it at the end of tcpm_init.

Reviewed-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Li Jun <jun.li@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/typec/tcpm.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/typec/tcpm.c b/drivers/usb/typec/tcpm.c
index 674b434..edbc4b4 100644
--- a/drivers/usb/typec/tcpm.c
+++ b/drivers/usb/typec/tcpm.c
@@ -4184,8 +4184,6 @@ static void tcpm_init(struct tcpm_port *port)
 {
 	enum typec_cc_status cc1, cc2;
 
-	port->tcpc->init(port->tcpc);
-
 	tcpm_reset_port(port);
 
 	/*
@@ -4206,7 +4204,9 @@ static void tcpm_init(struct tcpm_port *port)
 	 * Some adapters need a clean slate at startup, and won't recover
 	 * otherwise. So do not try to be fancy and force a clean disconnect.
 	 */
-	tcpm_set_state(port, PORT_RESET, 0);
+	/*tcpm_set_state(port, PORT_RESET, 0);*/
+
+	port->tcpc->init(port->tcpc);
 }
 
 static int tcpm_port_type_set(const struct typec_capability *cap,
-- 
1.7.9.5

