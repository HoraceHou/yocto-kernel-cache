From ad4c14d70c795c1d643d30fa3b238c744f941de6 Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <shengjiu.wang@freescale.com>
Date: Fri, 19 Sep 2014 14:09:46 +0800
Subject: [PATCH 0300/5242] MLK-11429-6: ASoC: fsl_ssi: pm_runtime for ssi

commit  714e8366b75af35ed960d905dbe32caae4213fa3 from
https://source.codeaurora.org/external/imx/linux-imx.git

cherry-pick below patch from imx_3.14.y
ENGR00331799-7: ASoC: fsl_ssi: pm_runtime for ssi

ADD pm runtime for ssi.

Signed-off-by: Shengjiu Wang <shengjiu.wang@freescale.com>
(cherry picked from commit 09f7a8aa7e417aaf837a4b9b8b15874ad95765c2)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_ssi.c |   26 +++++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/sound/soc/fsl/fsl_ssi.c b/sound/soc/fsl/fsl_ssi.c
index 69a23be..6a5d70f 100644
--- a/sound/soc/fsl/fsl_ssi.c
+++ b/sound/soc/fsl/fsl_ssi.c
@@ -4,7 +4,7 @@
 //
 // Author: Timur Tabi <timur@freescale.com>
 //
-// Copyright 2007-2010 Freescale Semiconductor, Inc.
+// Copyright 2007-2015 Freescale Semiconductor, Inc.
 //
 // Some notes why imx-pcm-fiq is used instead of DMA on some boards:
 //
@@ -40,6 +40,8 @@
 #include <linux/of_address.h>
 #include <linux/of_irq.h>
 #include <linux/of_platform.h>
+#include <linux/pm_runtime.h>
+#include <linux/busfreq-imx.h>
 
 #include <sound/core.h>
 #include <sound/pcm.h>
@@ -638,6 +640,8 @@ static int fsl_ssi_startup(struct snd_pcm_substream *substream,
 	if (ret)
 		return ret;
 
+	pm_runtime_get_sync(dai->dev);
+
 	/*
 	 * When using dual fifo mode, it is safer to ensure an even period
 	 * size. If appearing to an odd number while DMA always starts its
@@ -657,6 +661,8 @@ static void fsl_ssi_shutdown(struct snd_pcm_substream *substream,
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct fsl_ssi *ssi = snd_soc_dai_get_drvdata(rtd->cpu_dai);
 
+	pm_runtime_put_sync(dai->dev);
+
 	clk_disable_unprepare(ssi->clk);
 }
 
@@ -1551,6 +1557,8 @@ static int fsl_ssi_probe(struct platform_device *pdev)
 		break;
 	}
 
+	pm_runtime_enable(&pdev->dev);
+
 	dev_set_drvdata(dev, ssi);
 
 	if (ssi->soc->imx) {
@@ -1685,8 +1693,24 @@ static int fsl_ssi_resume(struct device *dev)
 }
 #endif /* CONFIG_PM_SLEEP */
 
+#ifdef CONFIG_PM
+static int fsl_ssi_runtime_resume(struct device *dev)
+{
+	request_bus_freq(BUS_FREQ_AUDIO);
+	return 0;
+}
+
+static int fsl_ssi_runtime_suspend(struct device *dev)
+{
+	release_bus_freq(BUS_FREQ_AUDIO);
+	return 0;
+}
+#endif
+
 static const struct dev_pm_ops fsl_ssi_pm = {
 	SET_SYSTEM_SLEEP_PM_OPS(fsl_ssi_suspend, fsl_ssi_resume)
+	SET_RUNTIME_PM_OPS(fsl_ssi_runtime_suspend, fsl_ssi_runtime_resume,
+			   NULL)
 };
 
 static struct platform_driver fsl_ssi_driver = {
-- 
1.7.9.5

