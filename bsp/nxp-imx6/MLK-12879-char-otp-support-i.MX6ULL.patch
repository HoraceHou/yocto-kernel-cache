From 53a4193dcb61d683322dcc19d30707b01294392b Mon Sep 17 00:00:00 2001
From: Peng Fan <peng.fan@nxp.com>
Date: Fri, 3 Jun 2016 11:15:48 +0800
Subject: [PATCH 1082/5242] MLK-12879 char: otp: support i.MX6ULL

commit  ad1a53447a50046f1c32205ac20eb8de708a57c1 from
https://source.codeaurora.org/external/imx/linux-imx.git

Add ocotp support for i.MX6ULL.

Signed-off-by: Peng Fan <peng.fan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/char/fsl_otp.c |   25 +++++++++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

diff --git a/drivers/char/fsl_otp.c b/drivers/char/fsl_otp.c
index 117237cd..0def8c7 100644
--- a/drivers/char/fsl_otp.c
+++ b/drivers/char/fsl_otp.c
@@ -1,7 +1,7 @@
 /*
  * Freescale On-Chip OTP driver
  *
- * Copyright (C) 2010-2015 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright (C) 2010-2016 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -118,6 +118,17 @@
 	BANK8(GP70, GP71, GP72, GP73, GP80, GP81, GP82, GP83),
 };
 
+static const char *imx6ull_otp_desc[][8] = {
+	BANK8(LOCK, CFG0, CFG1, CFG2, CFG3, CFG4, CFG5, CFG6),
+	BANK8(MEM0, MEM1, MEM2, MEM3, MEM4, ANA0, ANA1, ANA2),
+	BANK8(OTPMK0, OTPMK1, OTPMK2, OTPMK3, OTPMK4, OTPMK5, OTPMK6, OTPMK7),
+	BANK8(SRK0, SRK1, SRK2, SRK3, SRK4, SRK5, SRK6, SRK7),
+	BANK8(SJC_RESP0, SJC_RESP1, MAC0, MAC1, MAC2, CRC, GP1, GP2),
+	BANK8(SW_GP0, SW_GP1, SW_GP2, SW_GP3, SW_GP4,  MISC_CONF,  FIELD_RETURN, SRK_REVOKE),
+	BANK8(ROM_PATCH0, ROM_PATCH1, ROM_PATCH2, ROM_PATCH3, ROM_PATCH4, ROM_PATCH5, ROM_PATCH6, ROM_PATCH7),
+	BANK8(GP30, GP31, GP32, GP33, GP40, GP41, GP42, GP43),
+};
+
 static const char *imx7d_otp_desc[][4] = {
 	BANK4(LOCK, TESTER0, TESTER1, TESTER2),
 	BANK4(TESTER3, TESTER4, TESTER5, BOOT_CFG0),
@@ -150,6 +161,7 @@ enum fsl_otp_devtype {
 	FSL_OTP_MX6SX,
 	FSL_OTP_MX6SL,
 	FSL_OTP_MX6UL,
+	FSL_OTP_MX6ULL,
 	FSL_OTP_MX7D,
 };
 
@@ -193,7 +205,7 @@ static u32 fsl_otp_bank_physical(struct fsl_otp_devtype_data *d, int bank)
 	if ((bank == 0) || (d->devtype == FSL_OTP_MX6SL) ||
 	    (d->devtype == FSL_OTP_MX7D))
 		phy_bank = bank;
-	else if (d->devtype == FSL_OTP_MX6UL) {
+	else if ((d->devtype == FSL_OTP_MX6UL) || (d->devtype == FSL_OTP_MX6ULL)) {
 		if (bank >= 6)
 			phy_bank = fsl_otp_bank_physical(d, 5) + bank - 3;
 		else
@@ -288,6 +300,14 @@ static void imx7_set_otp_timing(void)
 	.set_otp_timing = imx6_set_otp_timing,
 };
 
+static struct fsl_otp_devtype_data imx6ull_data = {
+	.devtype = FSL_OTP_MX6ULL,
+	.bank_desc = (const char **)imx6ull_otp_desc,
+	/* Bank 7 and Bank 8 are 4 words each */
+	.fuse_nums = 8 * 8,
+	.set_otp_timing = imx6_set_otp_timing,
+};
+
 static struct fsl_otp_devtype_data imx7d_data = {
 	.devtype = FSL_OTP_MX7D,
 	.bank_desc = (const char **)imx7d_otp_desc,
@@ -458,6 +478,7 @@ static ssize_t fsl_otp_store(struct kobject *kobj, struct kobj_attribute *attr,
 	{ .compatible = "fsl,imx6q-ocotp", .data = (void *)&imx6q_data, },
 	{ .compatible = "fsl,imx6sl-ocotp", .data = (void *)&imx6sl_data, },
 	{ .compatible = "fsl,imx6ul-ocotp", .data = (void *)&imx6ul_data, },
+	{ .compatible = "fsl,imx6ull-ocotp", .data = (void *)&imx6ull_data, },
 	{ .compatible = "fsl,imx7d-ocotp", .data = (void *)&imx7d_data, },
 	{ /* sentinel */ }
 };
-- 
1.7.9.5

