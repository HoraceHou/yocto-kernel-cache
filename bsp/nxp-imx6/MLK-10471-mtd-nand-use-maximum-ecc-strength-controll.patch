From 087256f6f926773a85dfd7c6704d9bc8782174c2 Mon Sep 17 00:00:00 2001
From: Han Xu <b45815@freescale.com>
Date: Wed, 15 Apr 2015 14:54:46 -0500
Subject: [PATCH 0229/5242] MLK-10471: mtd: nand: use maximum ecc strength
 controller can support

commit  99c3ae88138b892678bb2bfd0ae94dedf3dd69d6 from
https://source.codeaurora.org/external/imx/linux-imx.git

when the maximum ecc NAND oob can afford exceed the ecc strength
controller can provide, use the maximum ecc strength controller can
support instead of the minimum ecc NAND spec required.

kobs-ng will also use the same ecc strength to align with kernel to make
sure all NAND chips can boot.

Signed-off-by: Han Xu <b45815@freescale.com>
(cherry picked from commit: 958a2c5b07524f3502cfdefe66724a9a1f8ad608)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c b/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
index 9c7fc9c..090ceea 100644
--- a/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
+++ b/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
@@ -230,6 +230,8 @@ static int set_geometry_by_ecc_info(struct gpmi_nand_data *this,
 	geo->ecc_strength = round_up(ecc_strength, 2);
 	if (!gpmi_check_ecc(this))
 		return -EINVAL;
+	/* set the ecc strength to the maximum ecc controller can support */
+	geo->ecc_strength = this->devdata->bch_max_ecc_strength;
 
 	/* Keep the C >= O */
 	if (geo->ecc_chunk_size < mtd->oobsize) {
@@ -346,7 +348,7 @@ static int legacy_set_geometry(struct gpmi_nand_data *this)
 	if (!gpmi_check_ecc(this)) {
 		dev_err(this->dev,
 			"ecc strength: %d cannot be supported by the controller (%d)\n"
-			"try to use minimum ecc strength that NAND chip required\n",
+			"try to use maximum ecc strength that NAND chip required\n",
 			geo->ecc_strength,
 			this->devdata->bch_max_ecc_strength);
 		return -EINVAL;
@@ -439,6 +441,9 @@ int common_nfc_set_geometry(struct gpmi_nand_data *this)
 		if (!(chip->ecc_strength_ds > 0 && chip->ecc_step_ds > 0))
 			return -EINVAL;
 
+		/* To align with the kobs-ng, use the maximum ecc strength */
+		/* controller can support, rather than the minimum ecc nand */
+		/* spec required. */
 		return set_geometry_by_ecc_info(this, chip->ecc_strength_ds,
 						chip->ecc_step_ds);
 	}
-- 
1.7.9.5

