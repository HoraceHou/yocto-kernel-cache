From f12cdda6820b2875e678d84c18c139f1b1d21c7a Mon Sep 17 00:00:00 2001
From: Xianzhong <xianzhong.li@nxp.com>
Date: Sat, 10 Nov 2018 02:37:56 +0800
Subject: [PATCH 5108/5242] MGS-4376 [#imx-1238] fix low performance with CMA
 allocator

commit  4a3186ac3a511039312c9f72efdaa5a335157e40 from
https://source.codeaurora.org/external/imx/linux-imx.git

there are lots of PFNs busy message when run GPU tests:
 [  622.370671] alloc_contig_range: [4ea70, 4ea7c) PFNs busy
 [  626.518072] alloc_contig_range: [4ea90, 4ea9c) PFNs busy

this problem is related with CMA migration for fragments,

move CMA allocator after GFP to avoid memory migration,
also fix CMA preempt for contiguous memory request.

can improve CTS and gpubench benchmarks on M850D.

Signed-off-by: Xianzhong <xianzhong.li@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../default/gc_hal_kernel_allocator_dma.c          |    1 +
 .../freescale/gc_hal_kernel_allocator_array.h      |    5 +++--
 .../freescale/gc_hal_kernel_allocator_cma.c        |    8 +++++---
 .../gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c |    6 +-----
 4 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dma.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dma.c
index bed5f6d..af35249 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dma.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dma.c
@@ -63,6 +63,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/slab.h>
 #include <linux/platform_device.h>
+#include <linux/dma-direct.h>
 
 #define _GC_OBJ_ZONE    gcvZONE_OS
 
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_array.h b/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_array.h
index f5c27ce..69d4afd 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_array.h
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_array.h
@@ -106,11 +106,12 @@
 
 gcsALLOCATOR_DESC allocatorArray[] =
 {
+    /* GFP allocator. */
+    gcmkDEFINE_ALLOCATOR_DESC("gfp", _GFPAlloctorInit),
+
 #if LINUX_CMA_FSL
     gcmkDEFINE_ALLOCATOR_DESC("cmafsl", _CMAFSLAlloctorInit),
 #endif
-    /* GFP allocator. */
-    gcmkDEFINE_ALLOCATOR_DESC("gfp", _GFPAlloctorInit),
 
     /* User memory importer. */
     gcmkDEFINE_ALLOCATOR_DESC("user", _UserMemoryAlloctorInit),
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_cma.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_cma.c
index f3f770a..f818e1e 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_cma.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/allocator/freescale/gc_hal_kernel_allocator_cma.c
@@ -63,6 +63,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/slab.h>
 #include <linux/platform_device.h>
+#include <linux/dma-direct.h>
 
 #define _GC_OBJ_ZONE    gcvZONE_OS
 
@@ -144,9 +145,9 @@ static int gc_cma_usage_show(struct seq_file* m, void* data)
 
     gcmkHEADER_ARG("Mdl=%p NumPages=0x%zx", Mdl, NumPages);
 
-    if (os->allocatorLimitMarker)
+    if (os->allocatorLimitMarker && !(Flags & gcvALLOC_FLAG_CMA_PREEMPT))
     {
-        if ((Flags & gcvALLOC_FLAG_CMA_LIMIT) && !(Flags & gcvALLOC_FLAG_CMA_PREEMPT))
+        if (Flags & gcvALLOC_FLAG_CMA_LIMIT)
         {
             priv->cmaLimitRequest = gcvTRUE;
         }
@@ -585,9 +586,10 @@ static int gc_cma_usage_show(struct seq_file* m, void* data)
     if (Os->allocatorLimitMarker)
     {
         allocator->capability |= gcvALLOC_FLAG_CMA_LIMIT;
-        allocator->capability |= gcvALLOC_FLAG_CMA_PREEMPT;
     }
 
+    allocator->capability |= gcvALLOC_FLAG_CMA_PREEMPT;
+
     *Allocator = allocator;
 
     return gcvSTATUS_OK;
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
index 7e8eb1d..bfd4f2f 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
@@ -1283,11 +1283,7 @@
 
     gcmkASSERT(Flag & gcvALLOC_FLAG_CONTIGUOUS);
 
-    if (Os->allocatorLimitMarker)
-    {
-        Flag |= gcvALLOC_FLAG_CMA_LIMIT;
-        Flag |= gcvALLOC_FLAG_CMA_PREEMPT;
-    }
+    Flag |= gcvALLOC_FLAG_CMA_PREEMPT;
 
     /* Walk all allocators. */
     list_for_each_entry(allocator, &Os->allocatorList, link)
-- 
1.7.9.5

