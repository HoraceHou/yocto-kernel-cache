From cd552370867fa4711c5c18d5ca5775b8d18760cf Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Wed, 4 Jan 2017 15:19:31 +0800
Subject: [PATCH 1455/5242] MLK-13722-1 video: mxsfb: the fb_info var should
 be init on every device open.

commit  7423572a31eadf2589d7f32aad75670e1e37b243 from
https://source.codeaurora.org/external/imx/linux-imx.git

After the last close of the fb1 open, the fb_info var structure
contains the information in the last overlay display. This may
cause the next overlay display contains old and invalid var
info. So re-init the var info on every fb1 open.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxsfb.c |   28 ++++++++++++++++------------
 1 file changed, 16 insertions(+), 12 deletions(-)

diff --git a/drivers/video/fbdev/mxsfb.c b/drivers/video/fbdev/mxsfb.c
index 481722b..3ca0737 100644
--- a/drivers/video/fbdev/mxsfb.c
+++ b/drivers/video/fbdev/mxsfb.c
@@ -1554,7 +1554,6 @@ static int overlay_fmt_support(uint32_t fmt)
 
 static void overlayfb_enable(struct mxsfb_layer *ofb)
 {
-	uint32_t as_ctrl = 0x0;
 	struct mxsfb_info *fbi = ofb->fbi;
 
 	lock_fb_info(fbi->fb_info);
@@ -1563,11 +1562,7 @@ static void overlayfb_enable(struct mxsfb_layer *ofb)
 		writel(CTRL1_FIFO_CLEAR, fbi->base + LCDC_CTRL1 + REG_SET);
 	}
 
-	/* enable AS */
-	as_ctrl = readl(fbi->base + LCDC_AS_CTRL);
-	as_ctrl |= 0x1;
-
-	writel(as_ctrl, fbi->base + LCDC_AS_CTRL);
+	writel(0x1, fbi->base + LCDC_AS_CTRL + REG_SET);
 
 	if (fbi->cur_blank == FB_BLANK_UNBLANK) {
 		writel(CTRL1_FIFO_CLEAR, fbi->base + LCDC_CTRL1 + REG_CLR);
@@ -1578,11 +1573,9 @@ static void overlayfb_enable(struct mxsfb_layer *ofb)
 
 static void overlayfb_disable(struct mxsfb_layer *ofb)
 {
-	uint32_t as_ctrl = 0x0;
 	struct mxsfb_info *fbi = ofb->fbi;
 
-	writel(as_ctrl, fbi->base + LCDC_AS_CTRL);
-	writel(0x0, fbi->base + LCDC_AS_NEXT_BUF);
+	writel(0x1, fbi->base + LCDC_AS_CTRL + REG_CLR);
 }
 
 static void overlayfb_setup(struct mxsfb_layer *ofb)
@@ -1667,9 +1660,18 @@ static void overlayfb_setup(struct mxsfb_layer *ofb)
 static int overlayfb_open(struct fb_info *info, int user)
 {
 	struct mxsfb_layer *ofb = (struct mxsfb_layer*)info->par;
+	struct mxsfb_info  *fbi = ofb->fbi;
 
-	if (ofb->usage++ == 0)
-		info->var.activate &= ~FB_ACTIVATE_NXTOPEN;
+	if (ofb->usage++ == 0) {
+		memset((void*)&info->var, 0x0, sizeof(info->var));
+
+		ofb->ol_fb->var.xres		= fbi->fb_info->var.xres;
+		ofb->ol_fb->var.yres		= fbi->fb_info->var.yres;
+		ofb->ol_fb->var.xres_virtual	= fbi->fb_info->var.xres_virtual;
+		ofb->ol_fb->var.yres_virtual	= fbi->fb_info->var.yres;
+		ofb->ol_fb->var.bits_per_pixel	= fbi->fb_info->var.bits_per_pixel;
+		ofb->ol_fb->var.vmode		= FB_VMODE_NONINTERLACED;
+	}
 
 	return 0;
 }
@@ -1677,6 +1679,7 @@ static int overlayfb_open(struct fb_info *info, int user)
 static int overlayfb_release(struct fb_info *info, int user)
 {
 	struct mxsfb_layer *ofb = (struct mxsfb_layer*)info->par;
+	struct mxsfb_info *fbi = ofb->fbi;
 
 	BUG_ON(!ofb->usage);
 
@@ -1685,7 +1688,8 @@ static int overlayfb_release(struct fb_info *info, int user)
 			ofb->ops->disable(ofb);
 
 		ofb->blank_state = -1;
-		info->var.activate = FB_ACTIVATE_NXTOPEN;
+		writel(0x0, fbi->base + LCDC_AS_CTRL);
+		writel(0x0, fbi->base + LCDC_AS_NEXT_BUF);
 	}
 
 	return 0;
-- 
1.7.9.5

