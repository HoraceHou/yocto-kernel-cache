From c8a009e0684cfc3e4927cb610ac12d5a8e9d8146 Mon Sep 17 00:00:00 2001
From: Shijie Qin <shijie.qin@nxp.com>
Date: Fri, 14 Sep 2018 18:57:24 +0800
Subject: [PATCH 4670/5242] MLK-19596:Solve the problem of dropped frames
 caused by V4L2_DEC_CMD_STOP Solve the problem of
 dropped frames caused by V4L2_DEC_CMD_STOP

commit  cc01e6088045295d855058fe125f61d6240f47b0 from
https://source.codeaurora.org/external/imx/linux-imx.git

Signed-off-by: Shijie Qin <shijie.qin@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-decoder-b0/vpu_b0.c |   28 +++++++++++++++++-----------
 drivers/mxc/vpu-decoder-b0/vpu_b0.h |    1 +
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/drivers/mxc/vpu-decoder-b0/vpu_b0.c b/drivers/mxc/vpu-decoder-b0/vpu_b0.c
index d59f468..d566fd1 100755
--- a/drivers/mxc/vpu-decoder-b0/vpu_b0.c
+++ b/drivers/mxc/vpu-decoder-b0/vpu_b0.c
@@ -803,15 +803,9 @@ static int v4l2_ioctl_decoder_cmd(struct file *file,
 		break;
 	case V4L2_DEC_CMD_STOP: {
 		vpu_dbg(LVL_EVENT, "ctx[%d]: receive V4L2_DEC_CMD_STOP\n", ctx->str_index);
-		if (!ctx->firmware_stopped)	{
-			vpu_dbg(LVL_EVENT, "ctx[%d]: insert eos directly\n", ctx->str_index);
-			ctx->eos_stop_added = true;
-			v4l2_update_stream_addr(ctx, 0);
-			add_scode(ctx, 0, EOS_PADDING_TYPE);
-		} else	{
-			vpu_dbg(LVL_ERR, "Firmware already stopped !\n");
-		}
-	} break;
+		ctx->eos_stop_received = true;
+		v4l2_update_stream_addr(ctx, 0);
+		} break;
 	case V4L2_DEC_CMD_PAUSE:
 		break;
 	case V4L2_DEC_CMD_RESUME:
@@ -1482,8 +1476,18 @@ static void v4l2_update_stream_addr(struct vpu_ctx *ctx, uint32_t uStrBufIdx)
 				VB2_BUF_STATE_DONE
 			       );
 	}
+	if (list_empty(&This->drv_q) && ctx->eos_stop_received) {
+		if (!ctx->firmware_stopped)	{
+			vpu_dbg(LVL_EVENT, "ctx[%d]: insert eos directly\n", ctx->str_index);
+			if (add_scode(ctx, 0, EOS_PADDING_TYPE)) {
+				ctx->eos_stop_received = false;
+				ctx->eos_stop_added = true;
+			}
+		} else	{
+			vpu_dbg(LVL_ERR, "Firmware already stopped !\n");
+		}
+	}
 	up(&This->drv_q_lock);
-
 }
 
 static void report_buffer_done(struct vpu_ctx *ctx, void *frame_info)
@@ -1943,6 +1947,7 @@ static void vpu_api_event_handler(struct vpu_ctx *ctx, u_int32 uStrIdx, u_int32
 
 		if (ctx->eos_stop_added == false)
 			vpu_dbg(LVL_ERR, "warning: receive VID_API_EVENT_FINISHED before eos_stop_added set\n");
+		ctx->eos_stop_added = false;
 		if (ctx->firmware_finished == true)
 			vpu_dbg(LVL_ERR, "warning: receive VID_API_EVENT_FINISHED when firmware_finished == true\n");
 		ctx->firmware_finished = true;
@@ -2512,7 +2517,8 @@ static int v4l2_open(struct file *filp)
 	ctx->wait_rst_done = false;
 	ctx->firmware_stopped = false;
 	ctx->firmware_finished = false;
-	ctx->eos_stop_added    = false;
+	ctx->eos_stop_received = false;
+	ctx->eos_stop_added = false;
 	ctx->buffer_null = true; //this flag is to judge whether the buffer is null is not, it is used for the workaround that when send stop command still can receive buffer ready event, and true means buffer is null, false not
 	ctx->ctx_released = false;
 	ctx->b_dis_reorder = false;
diff --git a/drivers/mxc/vpu-decoder-b0/vpu_b0.h b/drivers/mxc/vpu-decoder-b0/vpu_b0.h
index 9e35902..dbeda0b 100755
--- a/drivers/mxc/vpu-decoder-b0/vpu_b0.h
+++ b/drivers/mxc/vpu-decoder-b0/vpu_b0.h
@@ -253,6 +253,7 @@ struct vpu_ctx {
 	bool buffer_null;
 	bool firmware_stopped;
 	bool firmware_finished;
+	bool eos_stop_received;
 	bool eos_stop_added;
 	bool ctx_released;
 	wait_queue_head_t buffer_wq;
-- 
1.7.9.5

