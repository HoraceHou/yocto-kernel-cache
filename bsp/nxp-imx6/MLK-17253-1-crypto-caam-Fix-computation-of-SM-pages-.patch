From 86147dd86ad8e0bda353dce026f750dce4cee754 Mon Sep 17 00:00:00 2001
From: Franck LENORMAND <franck.lenormand@nxp.com>
Date: Mon, 5 Feb 2018 10:54:19 +0100
Subject: [PATCH 4188/5242] MLK-17253-1: crypto: caam: Fix computation of SM
 pages addresses

commit  1ed37e78a2ed38c45c3e299c36b0f74860d25711 from
https://source.codeaurora.org/external/imx/linux-imx.git

The computation of the base address of the physical and virtual
need to be the same depending on the architecture.

The addresses are computed using a pointer on u8 so the additions
always works as expected.

Signed-off-by: Franck LENORMAND <franck.lenormand@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/sm_store.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/crypto/caam/sm_store.c b/drivers/crypto/caam/sm_store.c
index 6e325e5..bc10e35 100644
--- a/drivers/crypto/caam/sm_store.c
+++ b/drivers/crypto/caam/sm_store.c
@@ -1108,11 +1108,11 @@ int caam_sm_startup(struct platform_device *pdev)
 				(pgstat & SMCS_PAGE_MASK) >> SMCS_PAGE_SHIFT;
 			lpagedesc[page].own_part =
 				(pgstat & SMCS_PART_SHIFT) >> SMCS_PART_MASK;
-			lpagedesc[page].pg_base = ctrlpriv->sm_base +
-				((smpriv->page_size * page) / sizeof(u32));
+			lpagedesc[page].pg_base = (u8 *)ctrlpriv->sm_base +
+				(smpriv->page_size * page);
 			/* FIXME: get base address from platform property... */
-			lpagedesc[page].pg_phys = (u32 *)0x00100000 +
-				((smpriv->page_size * page) / sizeof(u32));
+			lpagedesc[page].pg_phys = (u8 *)0x00100000 +
+				(smpriv->page_size * page);
 			lpagect++;
 #ifdef SM_DEBUG
 			dev_info(smdev,
-- 
1.7.9.5

