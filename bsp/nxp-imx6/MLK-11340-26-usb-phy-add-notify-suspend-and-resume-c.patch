From 168a6f4699552e366e512a83059cb33363ffd4fb Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Mon, 16 Sep 2013 16:31:24 +0800
Subject: [PATCH 0054/5242] MLK-11340-26 usb: phy: add notify suspend and
 resume callback

commit  28b9b6d68f2fa3342116cb7c75fc1a9cd05753fa from
https://source.codeaurora.org/external/imx/linux-imx.git

They are used to notify PHY that the controller enters suspend
or finishes resume.

Signed-off-by: Peter Chen <peter.chen@freescale.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 include/linux/usb/phy.h |   24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/include/linux/usb/phy.h b/include/linux/usb/phy.h
index e4de6bc..953e254 100644
--- a/include/linux/usb/phy.h
+++ b/include/linux/usb/phy.h
@@ -155,6 +155,12 @@ struct usb_phy {
 	 * manually detect the charger type.
 	 */
 	enum usb_charger_type (*charger_detect)(struct usb_phy *x);
+
+	int	(*notify_suspend)(struct usb_phy *x,
+			enum usb_device_speed speed);
+	int	(*notify_resume)(struct usb_phy *x,
+			enum usb_device_speed speed);
+
 };
 
 /* for board-specific init logic */
@@ -334,6 +340,24 @@ static inline void usb_phy_set_charger_state(struct usb_phy *usb_phy,
 		return 0;
 }
 
+static inline int usb_phy_notify_suspend
+	(struct usb_phy *x, enum usb_device_speed speed)
+{
+	if (x && x->notify_suspend)
+		return x->notify_suspend(x, speed);
+	else
+		return 0;
+}
+
+static inline int usb_phy_notify_resume
+	(struct usb_phy *x, enum usb_device_speed speed)
+{
+	if (x && x->notify_resume)
+		return x->notify_resume(x, speed);
+	else
+		return 0;
+}
+
 /* notifiers */
 static inline int
 usb_register_notifier(struct usb_phy *x, struct notifier_block *nb)
-- 
1.7.9.5

