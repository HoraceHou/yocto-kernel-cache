From 5b2b7b4f624c8954816d512e9df635b2642e0c62 Mon Sep 17 00:00:00 2001
From: Xianzhong <xianzhong.li@nxp.com>
Date: Tue, 23 Oct 2018 01:28:11 +0800
Subject: [PATCH 4908/5242] MGS-4338-3 [#imx-1217] fix kernel panic in gpu
 clock query

commit  7bd69da7535ed743e6bde83852b6ea3c2402f8e5 from
https://source.codeaurora.org/external/imx/linux-imx.git

gpu clock and power can be turned off by global power management,
add global power semaphore protection to avoid clock-off in query.

also query GPU idle status to turn-off gpu clock/power properly.

Signed-off-by: Xianzhong <xianzhong.li@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../hal/kernel/arch/gc_hal_kernel_hardware.c       |   35 ++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/kernel/arch/gc_hal_kernel_hardware.c b/drivers/mxc/gpu-viv/hal/kernel/arch/gc_hal_kernel_hardware.c
index eb21395..a39c689 100644
--- a/drivers/mxc/gpu-viv/hal/kernel/arch/gc_hal_kernel_hardware.c
+++ b/drivers/mxc/gpu-viv/hal/kernel/arch/gc_hal_kernel_hardware.c
@@ -14046,6 +14046,7 @@
     gctUINT32 mcClk, shClk;
     gceSTATUS status;
     gctUINT32 powerManagement = 0;
+    gctBOOL globalAcquired = gcvFALSE, idle = gcvFALSE;
 
     gcmkHEADER_ARG("Hardware=0x%p", Hardware);
 
@@ -14067,6 +14068,13 @@
         Hardware, gcvPOWER_ON_AUTO
         ));
 
+    /* Grab the global semaphore. */
+    gcmkONERROR(gckOS_AcquireSemaphore(
+        Hardware->os, Hardware->globalSemaphore
+        ));
+
+    globalAcquired = gcvTRUE;
+
     gckHARDWARE_EnterQueryClock(Hardware, &mcStart, &shStart);
 
     gcmkONERROR(gckOS_Delay(Hardware->os, 50));
@@ -14081,6 +14089,15 @@
         Hardware->shClk = shClk;
     }
 
+    /* Query whether the hardware is idle. */
+    gcmkONERROR(gckHARDWARE_QueryIdle(Hardware, &idle));
+
+    /* Release the global semaphore. */
+    gcmkONERROR(gckOS_ReleaseSemaphore(
+        Hardware->os, Hardware->globalSemaphore
+        ));
+    globalAcquired = gcvFALSE;
+
     if (powerManagement)
     {
         gcmkONERROR(gckHARDWARE_SetPowerManagement(
@@ -14088,14 +14105,28 @@
             ));
     }
 
+    if (idle)
+    {
+        /* Inform the system of idle GPU. */
+        gcmkONERROR(gckOS_Broadcast(Hardware->os,
+                                    Hardware,
+                                    gcvBROADCAST_GPU_IDLE));
+    }
+
     gcmkFOOTER_NO();
 
     return gcvSTATUS_OK;
 
 OnError:
+    if (globalAcquired)
+    {
+        /* Release the global semaphore. */
+        gcmkVERIFY_OK(gckOS_ReleaseSemaphore(
+            Hardware->os, Hardware->globalSemaphore
+            ));
+    }
+
     gcmkFOOTER();
 
     return status;
 }
-
-
-- 
1.7.9.5

