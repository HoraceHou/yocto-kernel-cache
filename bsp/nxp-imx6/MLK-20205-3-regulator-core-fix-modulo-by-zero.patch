From dd4b44326bfe638f012095927f59c868236a86eb Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Wed, 7 Nov 2018 23:58:45 +0800
Subject: [PATCH 5047/5242] MLK-20205-3: regulator: core: fix modulo by zero

commit  9e06f5c22762cd872e7a71d88203e22c5cfaacb3 from
https://source.codeaurora.org/external/imx/linux-imx.git

Fix 'Division or modulo by zero' coverity issue(CID-4159438).
In fact, no need to call set_ramp_delay() in case of ramp_disable
is true, hence, ramp_delay never be 0 while set_ramp_delay() called.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Reviewed-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/regulator/core.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index 7623528..87cf705 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -1164,7 +1164,7 @@ static int set_machine_constraints(struct regulator_dev *rdev,
 		}
 	}
 
-	if ((rdev->constraints->ramp_delay || rdev->constraints->ramp_disable)
+	if ((rdev->constraints->ramp_delay && !rdev->constraints->ramp_disable)
 		&& ops->set_ramp_delay) {
 		ret = ops->set_ramp_delay(rdev, rdev->constraints->ramp_delay);
 		if (ret < 0) {
-- 
1.7.9.5

