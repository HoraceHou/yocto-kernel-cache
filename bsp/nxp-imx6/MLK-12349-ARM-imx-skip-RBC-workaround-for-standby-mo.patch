From bd0e271cb5dfc29a9444e917a9c88204ac5dad7e Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Fri, 29 Jan 2016 13:59:20 +0800
Subject: [PATCH 3642/5242] MLK-12349 ARM: imx: skip RBC workaround for
 standby mode on i.MX7D

commit  b50110b2a3946a6a5da076c7eb262907893306db from
https://source.codeaurora.org/external/imx/linux-imx.git

For standby mode, RBC workaround is NOT necessary as ARM platform
is NOT powered down;

Correct GIC register offset(0x1000) for disabling distributor.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-imx/cpuidle-imx7d.c        |    2 +-
 arch/arm/mach-imx/imx7d_low_power_idle.S |    6 ++++--
 arch/arm/mach-imx/suspend-imx7.S         |   15 +++++++++------
 3 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/arch/arm/mach-imx/cpuidle-imx7d.c b/arch/arm/mach-imx/cpuidle-imx7d.c
index 8f69372..371cfd45 100644
--- a/arch/arm/mach-imx/cpuidle-imx7d.c
+++ b/arch/arm/mach-imx/cpuidle-imx7d.c
@@ -150,7 +150,7 @@ static int imx7d_enter_low_power_idle(struct cpuidle_device *dev,
 		/* LOW POWER IDLE */
 		{
 			.exit_latency = 500,
-			.target_residency = 1000,
+			.target_residency = 800,
 			.flags = CPUIDLE_FLAG_TIMER_STOP,
 			.enter = imx7d_enter_low_power_idle,
 			.name = "LOW-POWER-IDLE",
diff --git a/arch/arm/mach-imx/imx7d_low_power_idle.S b/arch/arm/mach-imx/imx7d_low_power_idle.S
index 38b6541..59cf4f4 100644
--- a/arch/arm/mach-imx/imx7d_low_power_idle.S
+++ b/arch/arm/mach-imx/imx7d_low_power_idle.S
@@ -628,7 +628,8 @@ last_cpu:
 
 	ldr	r10, [r0, #PM_INFO_MX7D_GIC_DIST_V_OFFSET]
 	ldr	r7, =0x0
-	str	r7, [r10]
+	ldr	r8, =0x1000
+	str	r7, [r10, r8]
 
 	ldr	r10, [r0, #PM_INFO_MX7D_GPC_V_OFFSET]
 	ldr	r4, [r10, #MX7D_GPC_IMR1]
@@ -745,7 +746,8 @@ do_exit_wfi:
 
 	ldr	r10, [r0, #PM_INFO_MX7D_GIC_DIST_V_OFFSET]
 	ldr	r7, =0x1
-	str	r7, [r10]
+	ldr	r8, =0x1000
+	str	r7, [r10, r8]
 	/* clear lpi enter flag */
 	ldr	r7, =0x0
 	str	r7, [r0, #PM_INFO_PM_INFO_LPI_ENTER_OFFSET]
diff --git a/arch/arm/mach-imx/suspend-imx7.S b/arch/arm/mach-imx/suspend-imx7.S
index 7a4ca80..5f4e3115 100644
--- a/arch/arm/mach-imx/suspend-imx7.S
+++ b/arch/arm/mach-imx/suspend-imx7.S
@@ -579,11 +579,13 @@ wait_shutdown:
 
 ddr_only_self_refresh:
 	ddrc_enter_self_refresh
+	b	wfi
 ddr_retention_enter_out:
 
 	ldr	r11, [r0, #PM_INFO_MX7_GIC_DIST_V_OFFSET]
 	ldr	r7, =0x0
-	str	r7, [r11]
+	ldr	r8, =0x1000
+	str	r7, [r11, r8]
 
 	ldr	r11, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
 	ldr	r4, [r11, #MX7D_GPC_IMR1]
@@ -634,7 +636,7 @@ ddr_retention_enter_out:
 rbc_loop:
 	subs	r7, r7, #0x1
 	bne	rbc_loop
-
+wfi:
 	/* Zzz, enter stop mode */
 	wfi
 	nop
@@ -655,16 +657,17 @@ wfi_ddr_self_refresh_out:
 	ddrc_exit_self_refresh
 wfi_ddr_retention_out:
 
-	ldr	r11, [r0, #PM_INFO_MX7_GIC_DIST_V_OFFSET]
-	ldr	r7, =0x1
-	str	r7, [r11]
-
 	/* check whether it is a standby mode */
 	ldr	r11, [r0, #PM_INFO_MX7_GPC_V_OFFSET]
 	ldr	r7, [r11, #GPC_PGC_C0]
 	cmp	r7, #0
 	beq	standby_out
 
+	ldr	r11, [r0, #PM_INFO_MX7_GIC_DIST_V_OFFSET]
+	ldr	r7, =0x1
+	ldr	r8, =0x1000
+	str	r7, [r11, r8]
+
 	restore_ttbr1
 standby_out:
 	pop	{r4-r12}
-- 
1.7.9.5

