From f20bb54b3a334c90aba8b6a2abe4a4a1bab8f40d Mon Sep 17 00:00:00 2001
From: Robby Cai <robby.cai@nxp.com>
Date: Thu, 6 Jul 2017 20:36:44 +0800
Subject: [PATCH 2073/5242] MLK-15079 video: mipi_dsi_samsung: fix reset
 failure for mipi dsi

commit  23290b58d035dce85a3b1703803a0e1ec1ea3dcd from
https://source.codeaurora.org/external/imx/linux-imx.git

mxc_mipi_dsi_samsung 30760000.mipi-dsi: MIPI DSI dispdrv inited!
mxsfb 30730000.lcdif: registered mxc display driver mipi_dsi_samsung
mxc_mipi_dsi_samsung 30760000.mipi-dsi: failed to reset device: -517
mxsfb 30730000.lcdif: failed to enable dispdrv:mipi_dsi_samsung

due to the commit  e188cbf7564fba80e8339b9406e8740f3e495c63
"gpio: mxc: shift gpio_mxc_init() to subsys_initcall level", and
gpio_reset uses arch_initcall level, the gpio driver is not yet
ready when call device_reset() thus return -EPROBE_DEFER. But the caller
of device_reset(), mipi_dsi_enable() has no defer strategy.
use of_reset_control_get() function in init() function, which will be called
in probe function in mxsfb driver, to workaround the defer case.

Acked-by: Fang Chen <chen.fang@nxp.com>
Acked-by: Cristina-mihaela Ciocan <cristina-mihaela.ciocan@nxp.com>
Signed-off-by: Robby Cai <robby.cai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/mipi_dsi_samsung.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/video/fbdev/mxc/mipi_dsi_samsung.c b/drivers/video/fbdev/mxc/mipi_dsi_samsung.c
index 3b2a0ee..d6bcf2a 100644
--- a/drivers/video/fbdev/mxc/mipi_dsi_samsung.c
+++ b/drivers/video/fbdev/mxc/mipi_dsi_samsung.c
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2017 NXP.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -514,16 +515,24 @@ static int mipi_dsi_disp_init(struct mxc_dispdrv_handle *disp,
 {
 	struct mipi_dsi_info *mipi_dsi = mxc_dispdrv_getdata(disp);
 	struct device *dev = &mipi_dsi->pdev->dev;
+	struct device_node *np = dev->of_node;
+	struct reset_control *reset = NULL;
 	int ret = 0;
 
+	reset = of_reset_control_get(np, NULL);
+	if (IS_ERR(reset))
+		return PTR_ERR(reset);
+
 	ret = mipi_dsi_lcd_init(mipi_dsi, setting);
 	if (ret) {
 		dev_err(dev, "failed to init mipi dsi lcd\n");
-		return ret;
+		goto out;
 	}
 
 	dev_info(dev, "MIPI DSI dispdrv inited!\n");
 
+out:
+	reset_control_put(reset);
 	return ret;
 }
 
-- 
1.7.9.5

