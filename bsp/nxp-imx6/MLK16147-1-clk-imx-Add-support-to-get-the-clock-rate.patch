From 37c34ef6bd57a38bd441ed78d965191e8eabc315 Mon Sep 17 00:00:00 2001
From: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@nxp.com>
Date: Fri, 4 Aug 2017 13:08:22 -0500
Subject: [PATCH 2339/5242] MLK16147-1 clk:imx - Add support to get the clock
 rate

commit  0c5a331dd214cf0c3736a979cf8f564c210df873 from
https://source.codeaurora.org/external/imx/linux-imx.git

Add support to get the clock rate of a gate clock. This is required
to save/restore devices clocks when they are powered up/down.

Signed-off-by: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-gate-scu.c |   17 +++++++++++++++++
 drivers/clk/imx/clk-imx8.h     |    5 +++--
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/drivers/clk/imx/clk-gate-scu.c b/drivers/clk/imx/clk-gate-scu.c
index 06b1bb7..a2c5990 100644
--- a/drivers/clk/imx/clk-gate-scu.c
+++ b/drivers/clk/imx/clk-gate-scu.c
@@ -140,11 +140,28 @@ static void clk_gate_scu_unprepare(struct clk_hw *hw)
 		pr_err("clk gate scu unprepare clk fail!\n");
 }
 
+static unsigned long clk_gate_scu_recalc_rate(struct clk_hw *hw,
+						  unsigned long parent_rate)
+{
+	struct clk_gate_scu *clk = to_clk_gate_scu(hw);
+	sc_err_t sci_err;
+	sc_pm_clock_rate_t rate = 0;
+
+	if (!ccm_ipc_handle)
+		return 0;
+
+	sci_err = sc_pm_get_clock_rate(ccm_ipc_handle, clk->rsrc_id,
+		clk->clk_type, &rate);
+
+	return sci_err ? 0 : rate;
+}
+
 static struct clk_ops clk_gate_scu_ops = {
 	.prepare = clk_gate_scu_prepare,
 	.unprepare = clk_gate_scu_unprepare,
 	.enable = clk_gate_scu_enable,
 	.disable = clk_gate_scu_disable,
+	.recalc_rate = clk_gate_scu_recalc_rate,
 };
 
 struct clk *clk_register_gate_scu(struct device *dev, const char *name,
diff --git a/drivers/clk/imx/clk-imx8.h b/drivers/clk/imx/clk-imx8.h
index 0458381..7a99760 100644
--- a/drivers/clk/imx/clk-imx8.h
+++ b/drivers/clk/imx/clk-imx8.h
@@ -58,8 +58,9 @@ static inline struct clk *imx_clk_gate_scu(const char *name, const char *parent,
 		void __iomem *reg, u8 bit_idx, bool hw_gate)
 {
 	return clk_register_gate_scu(NULL, name, parent,
-			CLK_SET_RATE_PARENT, 0, &imx_ccm_lock, rsrc_id, clk_type,
-			reg, bit_idx, hw_gate);
+			CLK_SET_RATE_PARENT | CLK_GET_RATE_NOCACHE, 0,
+			&imx_ccm_lock, rsrc_id, clk_type, reg,
+			bit_idx, hw_gate);
 }
 
 static inline struct clk *imx_clk_gate2_scu(const char *name, const char *parent,
-- 
1.7.9.5

