From 66d29367ad6995388c8a6c4103456aecb5a83164 Mon Sep 17 00:00:00 2001
From: Franck LENORMAND <franck.lenormand@nxp.com>
Date: Wed, 11 Apr 2018 13:57:33 +0200
Subject: [PATCH 3672/5242] MLK-17992: caam: sm: Fix compilation warnings

commit  bde8425bac80f2f011de0ed6909ff333c81ffe96 from
https://source.codeaurora.org/external/imx/linux-imx.git

Fix the following warnings in CAAM SM:

    drivers/crypto/caam/sm_store.c: In function 'blacken_key_jobdesc':
    drivers/crypto/caam/sm_store.c:141:19: warning: cast from pointer
    	to integer of different size [-Wpointer-to-int-cast]
      tmpdesc[idx++] = (u32)key;
                       ^
    drivers/crypto/caam/sm_store.c:153:19: warning: cast from pointer
    	to integer of different size [-Wpointer-to-int-cast]
      tmpdesc[idx++] = (u32)key;
                       ^
    drivers/crypto/caam/sm_store.c: In function 'blob_encap_jobdesc':
    drivers/crypto/caam/sm_store.c:274:19: warning: cast from pointer
    	to integer of different size [-Wpointer-to-int-cast]
      tmpdesc[idx++] = (u32)secretbuf;
                       ^
    drivers/crypto/caam/sm_store.c: In function 'blob_decap_jobdesc':
    drivers/crypto/caam/sm_store.c:390:19: warning: cast from pointer
    	to integer of different size [-Wpointer-to-int-cast]
      tmpdesc[idx++] = (u32)outbuf;
                       ^
    drivers/crypto/caam/sm_store.c: In function 'slot_get_base':
    drivers/crypto/caam/sm_store.c:569:9: warning: cast from pointer
    	to integer of different size [-Wpointer-to-int-cast]
      return (u32)(ksdata->base_address);
             ^
    drivers/crypto/caam/sm_store.c: In function 'sm_keystore_slot_load':
    drivers/crypto/caam/sm_store.c:789:6:
    	warning: unused variable 'i' [-Wunused-variable]
      u32 i;

Signed-off-by: Franck LENORMAND <franck.lenormand@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/sm_store.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/crypto/caam/sm_store.c b/drivers/crypto/caam/sm_store.c
index 96632b6..79d8c1d 100644
--- a/drivers/crypto/caam/sm_store.c
+++ b/drivers/crypto/caam/sm_store.c
@@ -136,7 +136,7 @@ static int blacken_key_jobdesc(u32 **desc, void *key, u16 keysz, bool auth)
 
 	/* Load key to class 1 key register */
 	tmpdesc[idx++] = CMD_KEY | CLASS_1 | (keysz & KEY_LENGTH_MASK);
-	tmpdesc[idx++] = (u32)key;
+	tmpdesc[idx++] = (uintptr_t)key;
 
 	/* ...and write back out via FIFO store*/
 	tmpdesc[idx] = CMD_FIFO_STORE | CLASS_1 | (keysz & KEY_LENGTH_MASK);
@@ -148,7 +148,7 @@ static int blacken_key_jobdesc(u32 **desc, void *key, u16 keysz, bool auth)
 		tmpdesc[idx] |= FIFOST_TYPE_KEY_CCM_JKEK;
 
 	idx++;
-	tmpdesc[idx++] = (u32)key;
+	tmpdesc[idx++] = (uintptr_t)key;
 
 	/* finish off the job header */
 	tmpdesc[0] = CMD_DESC_HDR | HDR_ONE | (idx & HDR_DESCLEN_MASK);
@@ -269,7 +269,7 @@ static int blob_encap_jobdesc(u32 **desc, dma_addr_t keymod,
 
 	/* Input data, should be somewhere in secure memory */
 	tmpdesc[idx++] = CMD_SEQ_IN_PTR | secretsz;
-	tmpdesc[idx++] = (u32)secretbuf;
+	tmpdesc[idx++] = (uintptr_t)secretbuf;
 
 	/* Set blob encap, then color */
 	tmpdesc[idx] = CMD_OPERATION | OP_TYPE_ENCAP_PROTOCOL | OP_PCLID_BLOB;
@@ -385,7 +385,7 @@ static int blob_decap_jobdesc(u32 **desc, dma_addr_t keymod, dma_addr_t blobbuf,
 	tmpdesc[idx++] = CMD_SEQ_IN_PTR | (secretsz + BLOB_OVERHEAD);
 	tmpdesc[idx++] = (u32)blobbuf;
 	tmpdesc[idx++] = CMD_SEQ_OUT_PTR | secretsz;
-	tmpdesc[idx++] = (u32)outbuf;
+	tmpdesc[idx++] = (uintptr_t)outbuf;
 
 	/* Decapsulate from secure memory partition to black blob */
 	tmpdesc[idx] = CMD_OPERATION | OP_TYPE_DECAP_PROTOCOL | OP_PCLID_BLOB;
@@ -564,7 +564,7 @@ u32 slot_get_base(struct device *dev, u32 unit, u32 slot)
 		slot, (u32)ksdata->base_address);
 #endif
 
-	return (u32)(ksdata->base_address);
+	return (uintptr_t)(ksdata->base_address);
 }
 
 u32 slot_get_offset(struct device *dev, u32 unit, u32 slot)
-- 
1.7.9.5

