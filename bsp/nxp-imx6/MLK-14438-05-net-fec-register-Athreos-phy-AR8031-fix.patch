From 48af69e059cc579cfdd28a861de693cbb888fefe Mon Sep 17 00:00:00 2001
From: Andy Duan <fugang.duan@nxp.com>
Date: Tue, 14 Mar 2017 15:04:12 +0800
Subject: [PATCH 1568/5242] MLK-14438-05 net: fec: register Athreos phy AR8031
 fixup

commit  43670f3e7802592695ff5a5d2008e3a667dbeec9 from
https://source.codeaurora.org/external/imx/linux-imx.git

Register Athreos PHY AR8031 fixup.

Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
(cherry picked and merged from commit:676bf1d92b3e6babdab623694fd83d54f881fc2f)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/ethernet/freescale/Makefile    |    2 +-
 drivers/net/ethernet/freescale/fec.h       |    6 +++
 drivers/net/ethernet/freescale/fec_fixup.c |   74 ++++++++++++++++++++++++++++
 drivers/net/ethernet/freescale/fec_main.c  |    3 ++
 4 files changed, 84 insertions(+), 1 deletion(-)
 create mode 100644 drivers/net/ethernet/freescale/fec_fixup.c

diff --git a/drivers/net/ethernet/freescale/Makefile b/drivers/net/ethernet/freescale/Makefile
index 0914a3e..85ab267 100644
--- a/drivers/net/ethernet/freescale/Makefile
+++ b/drivers/net/ethernet/freescale/Makefile
@@ -4,7 +4,7 @@
 #
 
 obj-$(CONFIG_FEC) += fec.o
-fec-objs :=fec_main.o fec_ptp.o
+fec-objs :=fec_main.o fec_fixup.o fec_ptp.o
 
 obj-$(CONFIG_FEC_MPC52xx) += fec_mpc52xx.o
 ifeq ($(CONFIG_FEC_MPC52xx_MDIO),y)
diff --git a/drivers/net/ethernet/freescale/fec.h b/drivers/net/ethernet/freescale/fec.h
index 951494e..601b33b 100644
--- a/drivers/net/ethernet/freescale/fec.h
+++ b/drivers/net/ethernet/freescale/fec.h
@@ -468,6 +468,9 @@ struct bufdesc_ex {
  */
 #define FEC_QUIRK_BUG_WAITMODE		(1 << 17)
 
+/* PHY fixup flag define */
+#define FEC_QUIRK_AR8031_FIXUP		(1 << 0)
+
 struct bufdesc_prop {
 	int qid;
 	/* Address of Rx and Tx buffers */
@@ -564,6 +567,7 @@ struct fec_enet_private {
 	int	wol_flag;
 	int	wake_irq;
 	u32	quirks;
+	u32	fixups;
 
 	struct	napi_struct napi;
 	int	csum_flags;
@@ -616,6 +620,8 @@ struct fec_enet_private {
 void fec_ptp_start_cyclecounter(struct net_device *ndev);
 int fec_ptp_set(struct net_device *ndev, struct ifreq *ifr);
 int fec_ptp_get(struct net_device *ndev, struct ifreq *ifr);
+void fec_enet_register_fixup(struct net_device *ndev);
+int of_fec_enet_parse_fixup(struct device_node *np);
 
 /****************************************************************************/
 #endif /* FEC_H */
diff --git a/drivers/net/ethernet/freescale/fec_fixup.c b/drivers/net/ethernet/freescale/fec_fixup.c
new file mode 100644
index 0000000..5a8497c
--- /dev/null
+++ b/drivers/net/ethernet/freescale/fec_fixup.c
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2017 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/netdevice.h>
+#include <linux/phy.h>
+#include "fec.h"
+
+#define PHY_ID_AR8031   0x004dd074
+
+static int ar8031_phy_fixup(struct phy_device *dev)
+{
+	u16 val;
+
+	/* Set RGMII IO voltage to 1.8V */
+	phy_write(dev, 0x1d, 0x1f);
+	phy_write(dev, 0x1e, 0x8);
+
+	/* Disable phy AR8031 SmartEEE function */
+	phy_write(dev, 0xd, 0x3);
+	phy_write(dev, 0xe, 0x805d);
+	phy_write(dev, 0xd, 0x4003);
+	val = phy_read(dev, 0xe);
+	val &= ~(0x1 << 8);
+	phy_write(dev, 0xe, val);
+
+	/* Introduce tx clock delay */
+	phy_write(dev, 0x1d, 0x5);
+	phy_write(dev, 0x1e, 0x100);
+
+	return 0;
+}
+
+void fec_enet_register_fixup(struct net_device *ndev)
+{
+	struct fec_enet_private *fep = netdev_priv(ndev);
+	static int registered = 0;
+	int err;
+
+	if (!IS_BUILTIN(CONFIG_PHYLIB))
+		return;
+
+	if (fep->fixups & FEC_QUIRK_AR8031_FIXUP) {
+		static int ar8031_registered = 0;
+
+		if (ar8031_registered)
+			return;
+		err = phy_register_fixup_for_uid(PHY_ID_AR8031, 0xffffffef,
+					ar8031_phy_fixup);
+		if (err)
+			netdev_info(ndev, "Cannot register PHY board fixup\n");
+		registered = 1;
+	}
+}
+
+int of_fec_enet_parse_fixup(struct device_node *np)
+{
+	int fixups = 0;
+
+	if (of_get_property(np, "fsl,ar8031-phy-fixup", NULL))
+		fixups |= FEC_QUIRK_AR8031_FIXUP;
+
+	return fixups;
+}
diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index 03789f1..d724303 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -3725,6 +3725,9 @@ static void fec_enet_of_parse_stop_mode(struct platform_device *pdev)
 	if (ret)
 		goto failed_register;
 
+	fep->fixups = of_fec_enet_parse_fixup(np);
+	fec_enet_register_fixup(ndev);
+
 	device_init_wakeup(&ndev->dev, fep->wol_flag &
 			   FEC_WOL_HAS_MAGIC_PACKET);
 
-- 
1.7.9.5

