From 7e5731fe1103d8728a301d188b1c68b000c0e38e Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Thu, 23 Feb 2017 09:36:26 +0800
Subject: [PATCH 1536/5242] MLK-14237 video: mxsfb: fb1 maybe access when fb0
 in blank state

commit  82bd01af6e0fc7797dfe86ad96c2b7a07a74f488 from
https://source.codeaurora.org/external/imx/linux-imx.git

The overlay framebuffer fb1 access maybe accessed when fb0
is in the blank state in which all the lcd clocks have been
disabled.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxsfb.c |   46 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/drivers/video/fbdev/mxsfb.c b/drivers/video/fbdev/mxsfb.c
index 5ec2341..7c725c2 100644
--- a/drivers/video/fbdev/mxsfb.c
+++ b/drivers/video/fbdev/mxsfb.c
@@ -1817,6 +1817,7 @@ static int overlayfb_set_par(struct fb_info *info)
 {
 	int size, bpp;
 	struct mxsfb_layer *ofb = (struct mxsfb_layer*)info->par;
+	struct mxsfb_info  *fbi = ofb->fbi;
 	struct fb_var_screeninfo *var = &ofb->ol_fb->var;
 
 	bpp = var->bits_per_pixel;
@@ -1826,6 +1827,15 @@ static int overlayfb_set_par(struct fb_info *info)
 	if (ofb->video_mem_size < size)
 		return -EINVAL;
 
+	if (!lock_fb_info(fbi->fb_info))
+		return -EINVAL;
+
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_enable_pix(fbi);
+		clk_enable_axi(fbi);
+		clk_enable_disp_axi(fbi);
+	}
+
 	if (ofb->blank_state == FB_BLANK_UNBLANK)
 		ofb->ops->disable(ofb);
 
@@ -1834,6 +1844,14 @@ static int overlayfb_set_par(struct fb_info *info)
 	if (ofb->blank_state == FB_BLANK_UNBLANK)
 		ofb->ops->enable(ofb);
 
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_disable_disp_axi(fbi);
+		clk_disable_axi(fbi);
+		clk_disable_pix(fbi);
+	}
+
+	unlock_fb_info(fbi->fb_info);
+
 	if ((var->activate & FB_ACTIVATE_FORCE) &&
 	    (var->activate & FB_ACTIVATE_MASK) == FB_ACTIVATE_NOW)
 		var->activate = FB_ACTIVATE_NOW;
@@ -1844,10 +1862,20 @@ static int overlayfb_set_par(struct fb_info *info)
 static int overlayfb_blank(int blank, struct fb_info *info)
 {
 	struct mxsfb_layer *ofb = (struct mxsfb_layer*)info->par;
+	struct mxsfb_info  *fbi  = ofb->fbi;
 
 	if (ofb->blank_state == blank)
 		return 0;
 
+	if (!lock_fb_info(fbi->fb_info))
+		return -EINVAL;
+
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_enable_pix(fbi);
+		clk_enable_axi(fbi);
+		clk_enable_disp_axi(fbi);
+	}
+
 	switch (blank) {
 	case FB_BLANK_POWERDOWN:
 	case FB_BLANK_VSYNC_SUSPEND:
@@ -1860,6 +1888,14 @@ static int overlayfb_blank(int blank, struct fb_info *info)
 		break;
 	}
 
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_disable_disp_axi(fbi);
+		clk_disable_axi(fbi);
+		clk_disable_pix(fbi);
+	}
+
+	unlock_fb_info(fbi->fb_info);
+
 	ofb->blank_state = blank;
 
 	return 0;
@@ -1875,6 +1911,16 @@ static int overlayfb_pan_display(struct fb_var_screeninfo *var,
 
 	init_completion(&fbi->flip_complete);
 
+	if (!lock_fb_info(fbi->fb_info))
+		return -EINVAL;
+
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		unlock_fb_info(fbi->fb_info);
+		return -EINVAL;
+	}
+
+	unlock_fb_info(fbi->fb_info);
+
 	bytes_offset = info->fix.line_length * var->yoffset;
 	writel(info->fix.smem_start + bytes_offset,
 	       fbi->base + LCDC_AS_NEXT_BUF);
-- 
1.7.9.5

