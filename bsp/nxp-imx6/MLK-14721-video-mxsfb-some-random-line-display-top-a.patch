From 5aae46a4b454d032c8acb56ea0844c67922bdd19 Mon Sep 17 00:00:00 2001
From: "Guoniu.Zhou" <guoniu.zhou@nxp.com>
Date: Fri, 21 Apr 2017 14:22:18 +0800
Subject: [PATCH 1720/5242] MLK-14721 video: mxsfb: some random line display
 top after blank fb1 and then suspend/resume

commit  c85e0c8183165193f58112d729e4ca6d967c609d from
https://source.codeaurora.org/external/imx/linux-imx.git

After suspend and resume, the value of LCDIFx_AS_NEXT_BUF register losed, so when
we unblank fb1 again, the valule of LCDIFx_AS_NEXT_BUF is 0 and random lines dis-
played on the top.

Signed-off-by: Guoniu.Zhou <guoniu.zhou@nxp.com>
Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxsfb.c |   44 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/drivers/video/fbdev/mxsfb.c b/drivers/video/fbdev/mxsfb.c
index 91a2020..a7fc463 100644
--- a/drivers/video/fbdev/mxsfb.c
+++ b/drivers/video/fbdev/mxsfb.c
@@ -400,6 +400,9 @@ static inline u32 get_hsync_pulse_width(struct mxsfb_info *host, unsigned val)
 };
 
 #ifdef CONFIG_FB_MXC_OVERLAY
+static u32 saved_as_ctrl;
+static u32 saved_as_next_buf;
+
 static const struct fb_bitfield def_argb555[] = {
 	[RED] = {
 		.offset = 10,
@@ -2109,9 +2112,48 @@ static void mxsfb_overlay_exit(struct mxsfb_info *fbi)
 		framebuffer_release(ofb->ol_fb);
 	}
 }
+
+static void mxsfb_overlay_resume(struct mxsfb_info *fbi)
+{
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_enable_pix(fbi);
+		clk_enable_axi(fbi);
+		clk_enable_disp_axi(fbi);
+	}
+
+	writel(saved_as_ctrl, fbi->base + LCDC_AS_CTRL);
+	writel(saved_as_next_buf, fbi->base + LCDC_AS_NEXT_BUF);
+
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_disable_disp_axi(fbi);
+		clk_disable_axi(fbi);
+		clk_disable_pix(fbi);
+	}
+
+}
+
+static void mxsfb_overlay_suspend(struct mxsfb_info *fbi)
+{
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_enable_pix(fbi);
+		clk_enable_axi(fbi);
+		clk_enable_disp_axi(fbi);
+	}
+
+	saved_as_ctrl = readl(fbi->base + LCDC_AS_CTRL);
+	saved_as_next_buf = readl(fbi->base + LCDC_AS_NEXT_BUF);
+
+	if (fbi->cur_blank != FB_BLANK_UNBLANK) {
+		clk_disable_disp_axi(fbi);
+		clk_disable_axi(fbi);
+		clk_disable_pix(fbi);
+	}
+}
 #else
 static void mxsfb_overlay_init(struct mxsfb_info *fbi) {}
 static void mxsfb_overlay_exit(struct mxsfb_info *fbi) {}
+static void mxsfb_overlay_resume(struct mxsfb_info *fbi) {}
+static void mxsfb_overlay_suspend(struct mxsfb_info *fbi) {}
 #endif
 
 static int mxsfb_probe(struct platform_device *pdev)
@@ -2361,6 +2403,7 @@ static int mxsfb_suspend(struct device *pdev)
 	int saved_blank;
 
 	console_lock();
+	mxsfb_overlay_suspend(host);
 	fb_set_suspend(fb_info, 1);
 	saved_blank = host->cur_blank;
 	mxsfb_blank(FB_BLANK_POWERDOWN, fb_info);
@@ -2382,6 +2425,7 @@ static int mxsfb_resume(struct device *pdev)
 	console_lock();
 	mxsfb_blank(host->restore_blank, fb_info);
 	fb_set_suspend(fb_info, 0);
+	mxsfb_overlay_resume(host);
 	console_unlock();
 
 	return 0;
-- 
1.7.9.5

