From 115ff3df9cce2138205fdf8e9b981a6c5ffb105e Mon Sep 17 00:00:00 2001
From: "Guoniu.Zhou" <guoniu.zhou@nxp.com>
Date: Fri, 12 Oct 2018 10:55:41 +0800
Subject: [PATCH 4861/5242] MLK-19901: ISI: manually clean isi status register

commit  3067893aca5541c00af93d95d3464500967b1228 from
https://source.codeaurora.org/external/imx/linux-imx.git

When QM run two linux and divide ISI resource into two
parts, channel 0-3 for one linux and channel 4-7 for the
other. If dom0 destroy domU which camera is running, then
restart domU. ISI will trigger interrupt immediately after
register irq handler when driver probe. The reason for this
is that status register of ISI isn't cleared. ISI have no
ablility to reset its register to defautl value expcept power
off all resource of ISI, but it can't be done in two os. So
manually clean status before registering irq when driver probe.

Signed-off-by: Guoniu.Zhou <guoniu.zhou@nxp.com>
(cherry picked from commit b84601aaef15870c80f684b1881b22e9dd2ba9a3)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-isi-core.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/media/platform/imx8/mxc-isi-core.c b/drivers/media/platform/imx8/mxc-isi-core.c
index 797a902..e492ad5 100644
--- a/drivers/media/platform/imx8/mxc-isi-core.c
+++ b/drivers/media/platform/imx8/mxc-isi-core.c
@@ -113,6 +113,14 @@ static int mxc_isi_parse_dt(struct mxc_isi_dev *mxc_isi)
 	return 0;
 }
 
+static void mxc_isi_clean_registers(struct mxc_isi_dev *mxc_isi)
+{
+	u32 status;
+
+	status = mxc_isi_get_irq_status(mxc_isi);
+	mxc_isi_clean_irq_status(mxc_isi, status);
+}
+
 static int mxc_isi_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -165,6 +173,8 @@ static int mxc_isi_probe(struct platform_device *pdev)
 		return -ENXIO;
 	}
 
+	mxc_isi_clean_registers(mxc_isi);
+
 	ret = devm_request_irq(dev, res->start, mxc_isi_irq_handler,
 			       0, dev_name(dev), mxc_isi);
 	if (ret < 0) {
-- 
1.7.9.5

