From 8cd3228e38cf447830d22c1da055783e0817ec64 Mon Sep 17 00:00:00 2001
From: Richard Zhu <hongxing.zhu@nxp.com>
Date: Mon, 24 Jul 2017 12:44:50 +0800
Subject: [PATCH 2193/5242] MLK-16074 PCI: imx: correct some bits
 configiration of hsio

commit  2265de638c409433c4d25a4635f213a1967316ca from
https://source.codeaurora.org/external/imx/linux-imx.git

- Both APB_RST_0 and APB_RST_1 should be asserted, when PHYX2
is used.
Otherwise, PHYX2 can't finish calibration.
- Correct the PCIEB(PHYX2_1) TX PLL locked check.
- The clear check of the reset should be done after
clks are enabled

Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/controller/dwc/pci-imx6.c |   56 ++++++++++++++++++---------------
 1 file changed, 30 insertions(+), 26 deletions(-)

diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
index 342e71d..7baf98e 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -567,12 +567,18 @@ static int imx8_pcie_wait_for_phy_pll_lock(struct imx6_pcie *imx6_pcie)
 			regmap_read(imx6_pcie->iomuxc_gpr,
 				    IMX8QM_CSR_PHYX2_OFFSET + 0x4,
 				    &tmp);
-			tmp &= IMX8QM_STTS0_LANE0_TX_PLL_LOCK;
-			if (tmp == IMX8QM_STTS0_LANE0_TX_PLL_LOCK) {
+			if (imx6_pcie->ctrl_id == 0) /* pciea 1 lanes */
+				orig = IMX8QM_STTS0_LANE0_TX_PLL_LOCK;
+			else /* pcieb 1 lanes */
+				orig = IMX8QM_STTS0_LANE1_TX_PLL_LOCK;
+			tmp &= orig;
+			if (tmp == orig) {
 				regmap_update_bits(imx6_pcie->iomuxc_gpr,
 					IMX8QM_LPCG_PHYX2_OFFSET,
-					IMX8QM_LPCG_PHY_PCG0,
-					IMX8QM_LPCG_PHY_PCG0);
+					IMX8QM_LPCG_PHY_PCG0
+					| IMX8QM_LPCG_PHY_PCG1,
+					IMX8QM_LPCG_PHY_PCG0
+					| IMX8QM_LPCG_PHY_PCG1);
 				break;
 			}
 		}
@@ -611,8 +617,8 @@ static int imx6_pcie_deassert_core_reset(struct imx6_pcie *imx6_pcie)
 {
 	struct dw_pcie *pci = imx6_pcie->pci;
 	struct device *dev = pci->dev;
-	int ret;
-	u32 val;
+	int ret, i;
+	u32 val, tmp;
 
 	if (imx6_pcie->vpcie && !regulator_is_enabled(imx6_pcie->vpcie)) {
 		ret = regulator_enable(imx6_pcie->vpcie);
@@ -734,6 +740,21 @@ static int imx6_pcie_deassert_core_reset(struct imx6_pcie *imx6_pcie)
 			ret = -ENODEV;
 		break;
 	case IMX8QM:
+		/* bit19 PM_REQ_CORE_RST of pciex#_stts0 should be cleared. */
+		for (i = 0; i < 100; i++) {
+			val = IMX8QM_CSR_PCIEA_OFFSET
+				+ imx6_pcie->ctrl_id * SZ_64K;
+			regmap_read(imx6_pcie->iomuxc_gpr,
+					val + IMX8QM_CSR_PCIE_STTS0_OFFSET,
+					&tmp);
+			if ((tmp & IMX8QM_CTRL_STTS0_PM_REQ_CORE_RST) == 0)
+				break;
+			udelay(10);
+		}
+
+		if ((tmp & IMX8QM_CTRL_STTS0_PM_REQ_CORE_RST) != 0)
+			pr_err("ERROR PM_REQ_CORE_RST is still set.\n");
+
 		/* wait for phy pll lock firstly. */
 		if (imx8_pcie_wait_for_phy_pll_lock(imx6_pcie))
 			ret = -ENODEV;
@@ -882,7 +903,7 @@ static void imx6_pcie_phy_pwr_dn(struct imx6_pcie *imx6_pcie)
 static void imx6_pcie_init_phy(struct imx6_pcie *imx6_pcie)
 {
 	u32 tmp, val;
-	int i, ret;
+	int ret;
 
 	if (imx6_pcie->variant == IMX8QM) {
 		switch (imx6_pcie->hsio_cfg) {
@@ -909,10 +930,8 @@ static void imx6_pcie_init_phy(struct imx6_pcie *imx6_pcie)
 			break;
 
 		case PCIEAX1PCIEBX1SATA:
-			if (imx6_pcie->ctrl_id)
-				tmp = IMX8QM_PHY_APB_RSTN_1;
-			else
-				tmp = IMX8QM_PHY_APB_RSTN_0;
+			tmp = IMX8QM_PHY_APB_RSTN_1;
+			tmp |= IMX8QM_PHY_APB_RSTN_0;
 			regmap_update_bits(imx6_pcie->iomuxc_gpr,
 				IMX8QM_CSR_PHYX2_OFFSET,
 				IMX8QM_PHYX2_CTRL0_APB_MASK, tmp);
@@ -982,21 +1001,6 @@ static void imx6_pcie_init_phy(struct imx6_pcie *imx6_pcie)
 				IMX8QM_CSR_MISC_IOB_A_0_TXOE
 				| IMX8QM_CSR_MISC_IOB_A_0_M1M0_2);
 		}
-
-		/* bit19 PM_REQ_CORE_RST of pciex2_stts0 should be cleared. */
-		for (i = 0; i < 100; i++) {
-			val = IMX8QM_CSR_PCIEA_OFFSET
-				+ imx6_pcie->ctrl_id * SZ_64K;
-			regmap_read(imx6_pcie->iomuxc_gpr,
-					val + IMX8QM_CSR_PCIE_STTS0_OFFSET,
-					&tmp);
-			if ((tmp & IMX8QM_CTRL_STTS0_PM_REQ_CORE_RST) == 0)
-				break;
-			udelay(10);
-		}
-
-		if ((tmp & IMX8QM_CTRL_STTS0_PM_REQ_CORE_RST) != 0)
-			pr_err("ERROR PM_REQ_CORE_RST is still set.\n");
 	} else if (imx6_pcie->variant == IMX8MQ) {
 		imx6_pcie_phy_pwr_up(imx6_pcie);
 
-- 
1.7.9.5

