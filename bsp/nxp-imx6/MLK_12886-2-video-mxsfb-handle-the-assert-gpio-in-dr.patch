From 9342cc881d3a59f22c7baa5574256e37a4b58f9d Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Mon, 6 Jun 2016 14:07:54 +0800
Subject: [PATCH 1092/5242] MLK_12886-2 video: mxsfb: handle the assert gpio
 in driver to support deferred probe

commit  0f5e367e16c7f6af3aedc139a604c1a54a5d8e63 from
https://source.codeaurora.org/external/imx/linux-imx.git

The assert gpio comes from 'gpio_spi' module, so the framebuffer
depends on the 'gpio_spi' driver loading. And in the case that
the framebuffer driver is loaded earlier than the 'gpio_spi'
driver, the gpio asserting will fail. So handle this gpio in
the framebuffer driver and add deferred probed support.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/boot/dts/imx7d-sdb.dts |    2 +-
 drivers/video/fbdev/mxsfb.c     |   15 ++++++++++++++-
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/imx7d-sdb.dts b/arch/arm/boot/dts/imx7d-sdb.dts
index 01d65b9..a88d32f 100644
--- a/arch/arm/boot/dts/imx7d-sdb.dts
+++ b/arch/arm/boot/dts/imx7d-sdb.dts
@@ -581,7 +581,7 @@
 &lcdif {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_lcdif>;
-	pinctrl-assert-gpios = <&extended_io 7 GPIO_ACTIVE_LOW>;
+	enable-gpio = <&extended_io 7 GPIO_ACTIVE_LOW>;
 	status = "okay";
 
 	port {
diff --git a/drivers/video/fbdev/mxsfb.c b/drivers/video/fbdev/mxsfb.c
index 389d504..f8bfcc4 100644
--- a/drivers/video/fbdev/mxsfb.c
+++ b/drivers/video/fbdev/mxsfb.c
@@ -44,6 +44,7 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/of_device.h>
+#include <linux/of_gpio.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 #include <linux/interrupt.h>
@@ -1372,11 +1373,23 @@ static int mxsfb_probe(struct platform_device *pdev)
 	struct fb_info *fb_info;
 	struct pinctrl *pinctrl;
 	int irq = platform_get_irq(pdev, 0);
-	int ret;
+	int gpio, ret;
 
 	if (of_id)
 		pdev->id_entry = of_id->data;
 
+	gpio = of_get_named_gpio(pdev->dev.of_node, "enable-gpio", 0);
+	if (gpio == -EPROBE_DEFER)
+		return -EPROBE_DEFER;
+
+	if (gpio_is_valid(gpio)) {
+		ret = devm_gpio_request_one(&pdev->dev, gpio, GPIOF_OUT_INIT_LOW, "lcd_pwr_en");
+		if (ret) {
+			dev_err(&pdev->dev, "faild to request gpio %d, ret = %d\n", gpio, ret);
+			return ret;
+		}
+	}
+
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res) {
 		dev_err(&pdev->dev, "Cannot get memory IO resource\n");
-- 
1.7.9.5

