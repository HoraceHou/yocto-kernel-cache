From c68b88307d2512d9d7b41361923f9a52b554e66d Mon Sep 17 00:00:00 2001
From: Daniel Baluta <daniel.baluta@nxp.com>
Date: Wed, 17 Oct 2018 16:04:28 +0300
Subject: [PATCH 4947/5242] MLK-19972-1: ASoC: fsl: dsp: Fix compr_set_param
 cleanup path

commit  68db475b4f9f64f8c8e9d72c60e19f6d84e9b303 from
https://source.codeaurora.org/external/imx/linux-imx.git

In case of error no cleanup was done leaving thus reasources
in an undefined state.

This can cause crashes like this:

[   34.259281] fsl-dsp 596e8000.dsp: load codec wrap lib error
[   34.266333] fsl-dsp 596e8000.dsp: create component failed, type = 1,
err = -2
[   34.273493] err pool alloc ret = -2
[   34.298363] Unable to handle kernel NULL pointer dereference at
virtual address 00000000

... which happens when lib_dsp_codec_wrap.so is not present.

While at it, we also realign some lines of code in order to avoid
going over the 80 characters limit that Linux kernel coding style
preaches on.

Reviewed-by: Shengjiu Wang <shengjiu.wang@nxp.com>
Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_dsp_platform_compress.c |   62 ++++++++++++++++++-----------
 1 file changed, 39 insertions(+), 23 deletions(-)

diff --git a/sound/soc/fsl/fsl_dsp_platform_compress.c b/sound/soc/fsl/fsl_dsp_platform_compress.c
index 67a38f9..0309c68 100644
--- a/sound/soc/fsl/fsl_dsp_platform_compress.c
+++ b/sound/soc/fsl/fsl_dsp_platform_compress.c
@@ -148,37 +148,43 @@ static int dsp_platform_compr_set_params(struct snd_compr_stream *cstream,
 	ret = xaf_pipeline_create(&drv->pipeline);
 	if (ret) {
 		dev_err(platform->dev, "create pipeline error\n");
-		goto failed;
+		goto err_pool_alloc;
 	}
 
 	/* ...create component */
-	ret = xaf_comp_create(drv->client, p_proxy, &drv->component[0], drv->codec_type);
+	ret = xaf_comp_create(drv->client, p_proxy, &drv->component[0],
+			      drv->codec_type);
 	if (ret) {
-		dev_err(platform->dev, "create component failed, type = %d, err = %d\n",
-							drv->codec_type, ret);
-		goto failed;
+		dev_err(platform->dev,
+			"create component failed type = %d, err = %d\n",
+			drv->codec_type, ret);
+		goto err_pool_alloc;
 	}
 
-	ret = xaf_comp_create(drv->client, p_proxy, &drv->component[1], RENDER_ESAI);
+	ret = xaf_comp_create(drv->client, p_proxy, &drv->component[1],
+			      RENDER_ESAI);
 	if (ret) {
-		dev_err(platform->dev, "create component failed, type = %d, err = %d\n",
-				RENDER_ESAI, ret);
-		goto failed;
+		dev_err(platform->dev,
+			"create component failed, type = %d, err = %d\n",
+			RENDER_ESAI, ret);
+		goto err_comp0_create;
 	}
 
 	/* ...add component into pipeline */
 	ret = xaf_comp_add(&drv->pipeline, &drv->component[0]);
 	if (ret) {
-		dev_err(platform->dev, "add component failed, type = %d, err = %d\n",
-				drv->codec_type, ret);
-		goto failed;
+		dev_err(platform->dev,
+			"add component failed, type = %d, err = %d\n",
+			drv->codec_type, ret);
+		goto err_comp1_create;
 	}
 
 	ret = xaf_comp_add(&drv->pipeline, &drv->component[1]);
 	if (ret) {
-		dev_err(platform->dev, "add component failed, type = %d, err = %d\n",
-				drv->codec_type, ret);
-		goto failed;
+		dev_err(platform->dev,
+			"add component failed, type = %d, err = %d\n",
+			drv->codec_type, ret);
+		goto err_comp1_create;
 	}
 
 	drv->client->input_bytes = 0;
@@ -188,31 +194,41 @@ static int dsp_platform_compr_set_params(struct snd_compr_stream *cstream,
 	s_param.value = params->codec.sample_rate;
 	ret = xaf_comp_set_config(drv->client, &drv->component[1], 1, &s_param);
 	if (ret) {
-		dev_err(platform->dev, "set param[cmd:0x%x|val:0x%x] error, err = %d\n",
+		dev_err(platform->dev,
+			"set param[cmd:0x%x|val:0x%x] error, err = %d\n",
 			s_param.id, s_param.value, ret);
-		goto failed;
+		goto err_comp1_create;
 	}
 
 	s_param.id = XA_RENDERER_CONFIG_PARAM_CHANNELS;
 	s_param.value = params->codec.ch_out;
 	ret = xaf_comp_set_config(drv->client, &drv->component[1], 1, &s_param);
 	if (ret) {
-		dev_err(platform->dev, "set param[cmd:0x%x|val:0x%x] error, err = %d\n",
+		dev_err(platform->dev,
+			"set param[cmd:0x%x|val:0x%x] error, err = %d\n",
 			s_param.id, s_param.value, ret);
-		goto failed;
+		goto err_comp1_create;
 	}
 
 	s_param.id = XA_RENDERER_CONFIG_PARAM_PCM_WIDTH;
 	s_param.value = 16;
 	ret = xaf_comp_set_config(drv->client, &drv->component[1], 1, &s_param);
 	if (ret) {
-		dev_err(platform->dev, "set param[cmd:0x%x|val:0x%x] error, err = %d\n",
+		dev_err(platform->dev,
+			"set param[cmd:0x%x|val:0x%x] error, err = %d\n",
 			s_param.id, s_param.value, ret);
-		goto failed;
+		goto err_comp1_create;
 	}
-
-failed:
 	return 0;
+
+err_comp1_create:
+	xaf_comp_delete(drv->client, &drv->component[1]);
+err_comp0_create:
+	xaf_comp_delete(drv->client, &drv->component[0]);
+err_pool_alloc:
+	xf_pool_free(drv->client, p_proxy->aux);
+
+	return ret;
 }
 
 static int dsp_platform_compr_trigger_start(struct snd_compr_stream *cstream)
-- 
1.7.9.5

