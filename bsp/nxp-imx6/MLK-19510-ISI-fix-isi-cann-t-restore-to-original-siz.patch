From b08da92ebc5b0e5e362f601e71cf72e473ce1de5 Mon Sep 17 00:00:00 2001
From: "Guoniu.Zhou" <guoniu.zhou@nxp.com>
Date: Mon, 17 Sep 2018 11:33:22 +0800
Subject: [PATCH 4665/5242] MLK-19510: ISI: fix isi cann't restore to original
 size after resize

commit  030f8985a06e0d5c022b37011acdab8ec29ab1e8 from
https://source.codeaurora.org/external/imx/linux-imx.git

1. add CHNL_SCL_IMG_CFG register that is new added in QXP/QM B0
2. according to isi owner's comments, CHNL_SCL_IMG_CFG need to
equal to CHNL_IMG_CFG when scaling disabled and equal to scaled
image size when scaling enabled, so add configuration for this
register.
3. Becuse isi software reset can't reset isi register to default
, so it need to manual clear if there is no scaling.

Signed-off-by: Guoniu.Zhou <guoniu.zhou@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-isi-hw.c |   20 ++++++++++++++++++++
 drivers/media/platform/imx8/mxc-isi-hw.h |    7 +++++++
 2 files changed, 27 insertions(+)

diff --git a/drivers/media/platform/imx8/mxc-isi-hw.c b/drivers/media/platform/imx8/mxc-isi-hw.c
index 63fbe5e..5e836ac 100644
--- a/drivers/media/platform/imx8/mxc-isi-hw.c
+++ b/drivers/media/platform/imx8/mxc-isi-hw.c
@@ -445,6 +445,17 @@ void mxc_isi_channel_set_crop(struct mxc_isi_dev *mxc_isi)
 	writel(val, mxc_isi->regs + CHNL_IMG_CTRL);
 }
 
+static void mxc_isi_channel_clear_scaling(struct mxc_isi_dev *mxc_isi)
+{
+	u32 val0;
+
+	writel(0x10001000, mxc_isi->regs + CHNL_SCALE_FACTOR);
+
+	val0 = readl(mxc_isi->regs + CHNL_IMG_CTRL);
+	val0 &= ~(CHNL_IMG_CTRL_DEC_X_MASK | CHNL_IMG_CTRL_DEC_Y_MASK);
+	writel(val0, mxc_isi->regs + CHNL_IMG_CTRL);
+}
+
 void mxc_isi_channel_set_scaling(struct mxc_isi_dev *mxc_isi)
 {
 	struct mxc_isi_frame *dst_f = &mxc_isi->isi_cap.dst_f;
@@ -462,6 +473,7 @@ void mxc_isi_channel_set_scaling(struct mxc_isi_dev *mxc_isi)
 	if (dst_f->height == src_f->height ||
 			dst_f->width == src_f->width) {
 		mxc_isi->scale = 0;
+		mxc_isi_channel_clear_scaling(mxc_isi);
 		dev_dbg(&mxc_isi->pdev->dev, "%s: no scale\n", __func__);
 		return;
 	}
@@ -521,6 +533,11 @@ void mxc_isi_channel_set_scaling(struct mxc_isi_dev *mxc_isi)
 	val1 = xscale | (yscale << CHNL_SCALE_FACTOR_Y_SCALE_OFFSET);
 
 	writel(val1, mxc_isi->regs + CHNL_SCALE_FACTOR);
+
+	/* Update scale config if scaling enabled */
+	val1 = dst_f->o_width | (dst_f->o_height << CHNL_SCL_IMG_CFG_HEIGHT_OFFSET);
+	writel(val1, mxc_isi->regs + CHNL_SCL_IMG_CFG);
+
 	writel(0, mxc_isi->regs + CHNL_SCALE_OFFSET);
 
 	return;
@@ -567,6 +584,9 @@ void mxc_isi_channel_config(struct mxc_isi_dev *mxc_isi)
 	val = src_f->o_width | (src_f->o_height << CHNL_IMG_CFG_HEIGHT_OFFSET);
 	writel(val, mxc_isi->regs + CHNL_IMG_CFG);
 
+	/* scale size need to equal input size when scaling disabled*/
+	writel(val, mxc_isi->regs + CHNL_SCL_IMG_CFG);
+
 	/* check csc and scaling  */
 	mxc_isi_channel_set_csc(mxc_isi);
 
diff --git a/drivers/media/platform/imx8/mxc-isi-hw.h b/drivers/media/platform/imx8/mxc-isi-hw.h
index da855fe..4c2d013 100644
--- a/drivers/media/platform/imx8/mxc-isi-hw.h
+++ b/drivers/media/platform/imx8/mxc-isi-hw.h
@@ -447,6 +447,13 @@
 /* Channel Chroma (V/Cr) Output Buffer 2 Address   */
 #define  CHNL_OUT_BUF2_ADDR_V		0x94
 
+/* Channel scale image config */
+#define  CHNL_SCL_IMG_CFG					0x98
+#define  CHNL_SCL_IMG_CFG_HEIGHT_OFFSET		16
+#define  CHNL_SCL_IMG_CFG_HEIGHT_MASK		0x1FFF0000
+#define  CHNL_SCL_IMG_CFG_WIDTH_OFFSET		0
+#define  CHNL_SCL_IMG_CFG_WIDTH_MASK		0x1FFF
+
 enum isi_csi_coeff {
 	YUV2RGB = 0,
 	RGB2YUV,
-- 
1.7.9.5

