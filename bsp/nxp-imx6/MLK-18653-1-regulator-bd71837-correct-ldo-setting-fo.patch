From a5a01ade7e61dac8dfe84197ee09f0b889694d1d Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Thu, 21 Jun 2018 23:26:05 +0800
Subject: [PATCH 4059/5242] MLK-18653-1: regulator: bd71837: correct ldo
 setting for BD71840

commit  bdb7563d3c77b3f9f67ed900ab9b7649153b124a from
https://source.codeaurora.org/external/imx/linux-imx.git

For customed BD71840 on i.mx8mm-evk board, LDO1/LDO2 setting is
different as BD71837, and no LDOx_SEL for LDO3/4. Correct LDO1_VOLT_SEL/
LDO1_VOLT_SEL and remove unused LDO enable code in probe, since those
can be done by 'regulator-boot-on'/'regulator-always-on' in dts.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/regulator/bd71837-regulator.c |   26 ++++----------------------
 1 file changed, 4 insertions(+), 22 deletions(-)

diff --git a/drivers/regulator/bd71837-regulator.c b/drivers/regulator/bd71837-regulator.c
index a4cd420..05ceb6a 100644
--- a/drivers/regulator/bd71837-regulator.c
+++ b/drivers/regulator/bd71837-regulator.c
@@ -346,7 +346,7 @@ static int bd71837_buck1234_set_ramp_delay(struct regulator_dev *rdev, int ramp_
 		.vsel_reg = BD71837_REG_LDO1_VOLT,
 		.vsel_mask = LDO1_MASK,
 		.enable_reg = BD71837_REG_LDO1_VOLT,
-		.enable_mask = LDO1_SEL|LDO1_EN,
+		.enable_mask = LDO1_EN,
 		.owner = THIS_MODULE,
 	},
 	/*
@@ -361,7 +361,7 @@ static int bd71837_buck1234_set_ramp_delay(struct regulator_dev *rdev, int ramp_
 		.n_voltages = BD71837_LDO2_VOLTAGE_NUM,
 		.min_uV = 900000,
 		.enable_reg = BD71837_REG_LDO2_VOLT,
-		.enable_mask = LDO2_SEL|LDO2_EN,
+		.enable_mask = LDO2_EN,
 		.owner = THIS_MODULE,
 	},
 	{
@@ -375,7 +375,7 @@ static int bd71837_buck1234_set_ramp_delay(struct regulator_dev *rdev, int ramp_
 		.vsel_reg = BD71837_REG_LDO3_VOLT,
 		.vsel_mask = LDO3_MASK,
 		.enable_reg = BD71837_REG_LDO3_VOLT,
-		.enable_mask = LDO3_SEL|LDO3_EN,
+		.enable_mask = LDO3_EN,
 		.owner = THIS_MODULE,
 	},
 	{
@@ -389,7 +389,7 @@ static int bd71837_buck1234_set_ramp_delay(struct regulator_dev *rdev, int ramp_
 		.vsel_reg = BD71837_REG_LDO4_VOLT,
 		.vsel_mask = LDO4_MASK,
 		.enable_reg = BD71837_REG_LDO4_VOLT,
-		.enable_mask = LDO4_SEL|LDO4_EN,
+		.enable_mask = LDO4_EN,
 		.owner = THIS_MODULE,
 	},
 	{
@@ -861,24 +861,6 @@ static int bd71837_probe(struct platform_device *pdev)
 		dev_err(&pdev->dev, "Failed to write LOCK register(%d)\n", err);
 		goto err;
 	}
-	/* Enable LDO5 */
-	err = bd71837_set_bits(bd71837, BD71837_REG_LDO5_VOLT, LDO5_EN);
-	if (err != 0) {
-		dev_err(&pdev->dev, "Failed to enable LDO5 register(%d)\n", err);
-		goto err;
-	}
-	/* Enable LDO6 */
-	err = bd71837_set_bits(bd71837, BD71837_REG_LDO6_VOLT, LDO6_EN);
-	if (err != 0) {
-		dev_err(&pdev->dev, "Failed to enable LDO6 register(%d)\n", err);
-		goto err;
-	}
-	/* Enable LDO7 */
-	err = bd71837_set_bits(bd71837, BD71837_REG_LDO7_VOLT, LDO7_EN);
-	if (err != 0) {
-		dev_err(&pdev->dev, "Failed to enable LDO7 register(%d)\n", err);
-		goto err;
-	}
 
 	for (i = 0; i < BD71837_REGULATOR_CNT; i++) {
 		struct regulator_init_data *init_data;
-- 
1.7.9.5

