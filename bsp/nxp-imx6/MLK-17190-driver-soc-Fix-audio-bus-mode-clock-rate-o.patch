From d7089279d868bb83dcac969f576d71eb4dad5c21 Mon Sep 17 00:00:00 2001
From: Bai Ping <ping.bai@nxp.com>
Date: Wed, 13 Dec 2017 13:18:42 +0800
Subject: [PATCH 3086/5242] MLK-17190 driver: soc: Fix audio bus mode clock
 rate on imx8mq

commit  35e6d1dbb2144d8bd668e9590b5da3bbc9b72085 from
https://source.codeaurora.org/external/imx/linux-imx.git

If the system is currently in low bus mode, if the audio device
request the audio bus mode, the NOC, AHB and AXI bus clock rate
will be set wrongly, then bus will run at very low frequency, then
lead to audio playback underrun.

Signed-off-by: Bai Ping <ping.bai@nxp.com>
Tested-by: Anson Huang <anson.huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/imx/busfreq-imx8mq.c |   62 ++++++++++++++++++++------------------
 1 file changed, 33 insertions(+), 29 deletions(-)

diff --git a/drivers/soc/imx/busfreq-imx8mq.c b/drivers/soc/imx/busfreq-imx8mq.c
index 3f11600..cba7970 100644
--- a/drivers/soc/imx/busfreq-imx8mq.c
+++ b/drivers/soc/imx/busfreq-imx8mq.c
@@ -113,40 +113,44 @@ static void reduce_bus_freq(void)
 	 * in the future if needed.
 	 */
 	if (audio_bus_count) {
-		clk_prepare_enable(sys1_pll_100m);
-
-		update_bus_freq(LOW_BUS_FREQ_100MTS);
-
-		/* correct the clock tree info */
-		clk_disable_unprepare(sys1_pll_100m);
-		clk_set_parent(dram_alt_src, sys1_pll_100m);
-		clk_set_parent(dram_core_clk, dram_alt_root);
-		clk_set_parent(dram_apb_src, sys1_pll_40m);
-		clk_set_rate(dram_apb_pre_div, 20000000);
-		/* reduce the NOC & bus clock */
-		clk_set_rate(noc_div, clk_get_rate(noc_div) / 8);
-		clk_set_rate(ahb_div, clk_get_rate(ahb_div) / 6);
-		clk_set_parent(main_axi_src, osc_25m);
+		if (cur_bus_freq_mode == BUS_FREQ_HIGH) {
+			clk_prepare_enable(sys1_pll_100m);
+
+			update_bus_freq(LOW_BUS_FREQ_100MTS);
+
+			/* correct the clock tree info */
+			clk_disable_unprepare(sys1_pll_100m);
+			clk_set_parent(dram_alt_src, sys1_pll_100m);
+			clk_set_parent(dram_core_clk, dram_alt_root);
+			clk_set_parent(dram_apb_src, sys1_pll_40m);
+			clk_set_rate(dram_apb_pre_div, 20000000);
+			/* reduce the NOC & bus clock */
+			clk_set_rate(noc_div, clk_get_rate(noc_div) / 8);
+			clk_set_rate(ahb_div, clk_get_rate(ahb_div) / 6);
+			clk_set_parent(main_axi_src, osc_25m);
+		}
 
 		low_bus_freq_mode = 0;
 		audio_bus_freq_mode = 1;
 		cur_bus_freq_mode = BUS_FREQ_AUDIO;
 	} else {
-		clk_prepare_enable(sys1_pll_100m);
-
-		update_bus_freq(LOW_BUS_FREQ_100MTS);
-
-		/* correct the clock tree info */
-		clk_disable_unprepare(sys1_pll_100m);
-		clk_set_parent(dram_alt_src, sys1_pll_100m);
-		clk_set_parent(dram_core_clk, dram_alt_root);
-		clk_set_parent(dram_apb_src, sys1_pll_40m);
-		clk_set_rate(dram_apb_pre_div, 20000000);
-		clk_prepare_enable(sys1_pll_400m);
-		/* reduce the NOC & bus clock */
-		clk_set_rate(noc_div, clk_get_rate(noc_div) / 8);
-		clk_set_rate(ahb_div, clk_get_rate(ahb_div) / 6);
-		clk_set_parent(main_axi_src, osc_25m);
+		if (cur_bus_freq_mode == BUS_FREQ_HIGH) {
+			clk_prepare_enable(sys1_pll_100m);
+
+			update_bus_freq(LOW_BUS_FREQ_100MTS);
+
+			/* correct the clock tree info */
+			clk_disable_unprepare(sys1_pll_100m);
+			clk_set_parent(dram_alt_src, sys1_pll_100m);
+			clk_set_parent(dram_core_clk, dram_alt_root);
+			clk_set_parent(dram_apb_src, sys1_pll_40m);
+			clk_set_rate(dram_apb_pre_div, 20000000);
+			clk_prepare_enable(sys1_pll_400m);
+			/* reduce the NOC & bus clock */
+			clk_set_rate(noc_div, clk_get_rate(noc_div) / 8);
+			clk_set_rate(ahb_div, clk_get_rate(ahb_div) / 6);
+			clk_set_parent(main_axi_src, osc_25m);
+		}
 
 		low_bus_freq_mode = 1;
 		audio_bus_freq_mode = 0;
-- 
1.7.9.5

