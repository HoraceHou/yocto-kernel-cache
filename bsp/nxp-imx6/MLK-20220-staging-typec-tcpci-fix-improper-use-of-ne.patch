From 9a4443943064a297bfc6f00c58308c31df09e59c Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@nxp.com>
Date: Tue, 13 Nov 2018 16:37:42 +0800
Subject: [PATCH 5189/5242] MLK-20220 staging: typec: tcpci: fix improper use
 of negative value

commit  2273e2dcd97ba79dce4b7881579c3f44fbfebd52 from
https://source.codeaurora.org/external/imx/linux-imx.git

Coverity complains CID 3411292: Improper use of negative valure
(NEGATIVE_RETURNS), as possibly assign a negative value to unsigned
int, fix it by use an int temp value for negative value return.

Acked-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Li Jun <jun.li@nxp.com>
(cherry picked from commit 9ab72e25fcda73a455a434993c8186663c241f27)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/typec/tcpci.c |   15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/typec/tcpci.c b/drivers/staging/typec/tcpci.c
index c7a6f3d..6a3a3d7 100644
--- a/drivers/staging/typec/tcpci.c
+++ b/drivers/staging/typec/tcpci.c
@@ -698,13 +698,14 @@ static int tcpci_parse_config(struct tcpci *tcpci)
 		goto sink;
 
 	/* Check source pdo array size */
-	tcfg->nr_src_pdo = device_property_read_u32_array(tcpci->dev,
-						"src-pdos", NULL, 0);
-	if (tcfg->nr_src_pdo <= 0) {
+	ret = device_property_read_u32_array(tcpci->dev, "src-pdos", NULL, 0);
+	if (ret <= 0) {
 		dev_err(tcpci->dev, "typec source pdo is missing!\n");
 		return -EINVAL;
 	}
 
+	tcfg->nr_src_pdo = ret;
+
 	/* Alloc src_pdo based on the array size */
 	tcfg->src_pdo = devm_kzalloc(tcpci->dev,
 		sizeof(*tcfg->src_pdo) * tcfg->nr_src_pdo, GFP_KERNEL);
@@ -764,13 +765,15 @@ static int tcpci_parse_config(struct tcpci *tcpci)
 
 sink:
 	/* Check the num of snk pdo */
-	tcfg->nr_snk_pdo = device_property_read_u32_array(tcpci->dev,
-						"snk-pdos", NULL, 0);
-	if (tcfg->nr_snk_pdo <= 0) {
+	ret = device_property_read_u32_array(tcpci->dev,
+					     "snk-pdos", NULL, 0);
+	if (ret <= 0) {
 		dev_err(tcpci->dev, "typec sink pdo is missing!\n");
 		return -EINVAL;
 	}
 
+	tcfg->nr_snk_pdo = ret;
+
 	/* alloc snk_pdo based on the array size */
 	tcfg->snk_pdo = devm_kzalloc(tcpci->dev,
 		sizeof(*tcfg->snk_pdo) * tcfg->nr_snk_pdo, GFP_KERNEL);
-- 
1.7.9.5

