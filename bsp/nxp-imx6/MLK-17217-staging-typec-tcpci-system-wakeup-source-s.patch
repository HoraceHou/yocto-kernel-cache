From baf2e464ef268db85f6bc9d389943605a0369f7c Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@nxp.com>
Date: Fri, 15 Dec 2017 01:03:32 +0800
Subject: [PATCH 3093/5242] MLK-17217 staging: typec: tcpci: system wakeup
 source support

commit  df4146c99add4c226790bf551a20306893d8fb51 from
https://source.codeaurora.org/external/imx/linux-imx.git

As GPIO normally can be system wakeup source, so enable typec events
as system wakeup source if user requested.

Acked-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Li Jun <jun.li@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/typec/tcpci.c |   27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/staging/typec/tcpci.c b/drivers/staging/typec/tcpci.c
index e0daf9a..37e3601 100644
--- a/drivers/staging/typec/tcpci.c
+++ b/drivers/staging/typec/tcpci.c
@@ -849,6 +849,8 @@ struct tcpci *tcpci_register_port(struct device *dev, struct tcpci_data *data)
 	if (err)
 		goto err1;
 
+	device_set_wakeup_capable(tcpci->dev, true);
+
 	return tcpci;
 
 err1:
@@ -910,6 +912,30 @@ static int tcpci_remove(struct i2c_client *client)
 	return 0;
 }
 
+static int tcpci_suspend(struct device *dev)
+{
+	struct tcpci *tcpci = dev_get_drvdata(dev);
+
+	if (device_may_wakeup(dev))
+		enable_irq_wake(tcpci->client->irq);
+
+	return 0;
+}
+
+static int tcpci_resume(struct device *dev)
+{
+	struct tcpci *tcpci = dev_get_drvdata(dev);
+
+	if (device_may_wakeup(dev))
+		disable_irq_wake(tcpci->client->irq);
+
+	return 0;
+}
+
+static const struct dev_pm_ops tcpci_pm_ops = {
+	SET_SYSTEM_SLEEP_PM_OPS(tcpci_suspend, tcpci_resume)
+};
+
 static const struct i2c_device_id tcpci_id[] = {
 	{ "tcpci", 0 },
 	{ }
@@ -927,6 +953,7 @@ static int tcpci_remove(struct i2c_client *client)
 static struct i2c_driver tcpci_i2c_driver = {
 	.driver = {
 		.name = "tcpci",
+		.pm = &tcpci_pm_ops,
 		.of_match_table = of_match_ptr(tcpci_of_match),
 	},
 	.probe = tcpci_probe,
-- 
1.7.9.5

