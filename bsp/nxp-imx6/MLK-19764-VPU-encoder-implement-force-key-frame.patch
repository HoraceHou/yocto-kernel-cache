From 9ffe522ee0c0798d044367d333081b8a5f62636a Mon Sep 17 00:00:00 2001
From: ming_qian <ming.qian@nxp.com>
Date: Fri, 28 Sep 2018 17:11:32 +0800
Subject: [PATCH 4790/5242] MLK-19764:VPU encoder:implement force key frame

commit  3ec2df99d8ea41d4e6ed7f75709c9744f2929a37 from
https://source.codeaurora.org/external/imx/linux-imx.git

Signed-off-by: ming_qian <ming.qian@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-encoder-b0/mediasys_types.h   |    2 +-
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c   |    4 ++++
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h   |    3 ++-
 drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c |   29 +++++++++++++++++++++++++
 4 files changed, 36 insertions(+), 2 deletions(-)

diff --git a/drivers/mxc/vpu-encoder-b0/mediasys_types.h b/drivers/mxc/vpu-encoder-b0/mediasys_types.h
index 7a64028..aee895e 100644
--- a/drivers/mxc/vpu-encoder-b0/mediasys_types.h
+++ b/drivers/mxc/vpu-encoder-b0/mediasys_types.h
@@ -276,7 +276,7 @@
 	u_int32   uLumaBase;
 	u_int32   uChromaBase;
 	u_int32   uParamIdx;
-
+	u_int32   uKeyFrame;
 } MEDIAIP_ENC_YUV_BUFFER_DESC, *pMEDIAIP_ENC_YUV_BUFFER_DESC;
 
 typedef struct {
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
index e6f40cc..67faa14 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
@@ -1246,6 +1246,10 @@ static bool update_yuv_addr(struct vpu_ctx *ctx, u_int32 uStrIdx)
 
     /* keeps increasing, so just a frame input count rather than a Frame buffer ID */
 		pParamYuvBuffDesc->uFrameID = p_data_req->id;
+		if (test_and_clear_bit(VPU_ENC_STATUS_KEY_FRAME, &ctx->status))
+			pParamYuvBuffDesc->uKeyFrame = 1;
+		else
+			pParamYuvBuffDesc->uKeyFrame = 0;
 		list_del(&p_data_req->list);
 	}
 	up(&This->drv_q_lock);
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
index 2e02c3c..151ebe7 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
@@ -239,7 +239,8 @@ struct buffer_addr {
 
 enum {
 	VPU_ENC_STATUS_CONFIGURED = 29,
-	VPU_ENC_STATUS_HANG = 30
+	VPU_ENC_STATUS_HANG = 30,
+	VPU_ENC_STATUS_KEY_FRAME = 31
 };
 
 struct vpu_statistic {
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c
index a298454..7201478 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c
@@ -192,6 +192,15 @@ static int set_display_re_ordering(struct v4l2_ctrl *ctrl)
 	return 0;
 }
 
+static int set_force_key_frame(struct v4l2_ctrl *ctrl)
+{
+	struct vpu_ctx *ctx = v4l2_ctrl_to_ctx(ctrl);
+
+	set_bit(VPU_ENC_STATUS_KEY_FRAME, &ctx->status);
+
+	return 0;
+}
+
 static int add_ctrl_h264_profile(struct vpu_ctx *ctx)
 {
 	static const struct v4l2_ctrl_ops ctrl_h264_profile_ops = {
@@ -453,6 +462,25 @@ static int add_ctrl_display_re_ordering(struct vpu_ctx *ctx)
 	return 0;
 }
 
+static int add_ctrl_force_key_frame(struct vpu_ctx *ctx)
+{
+	static const struct v4l2_ctrl_ops force_key_frame_ops = {
+		.s_ctrl = set_force_key_frame,
+	};
+	struct v4l2_ctrl *ctrl;
+
+	ctrl = v4l2_ctrl_new_std(&ctx->ctrl_handler,
+			&force_key_frame_ops,
+			V4L2_CID_MPEG_VIDEO_FORCE_KEY_FRAME,
+			0, 0, 0, 0);
+	if (!ctrl) {
+		vpu_dbg(LVL_ERR, "add ctrl force key frame fail\n");
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
 static int vpu_enc_register_ctrls(struct vpu_ctx *ctx)
 {
 	add_ctrl_h264_profile(ctx);
@@ -467,6 +495,7 @@ static int vpu_enc_register_ctrls(struct vpu_ctx *ctx)
 	add_ctrl_b_frame_qp(ctx);
 	add_ctrl_min_buffers_for_output(ctx);
 	add_ctrl_display_re_ordering(ctx);
+	add_ctrl_force_key_frame(ctx);
 
 	return 0;
 }
-- 
1.7.9.5

