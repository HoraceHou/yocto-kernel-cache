From e3f1d78e05d7ea45d2a6fcec7636412af547c833 Mon Sep 17 00:00:00 2001
From: Huang Chaofan <chaofan.huang@nxp.com>
Date: Thu, 8 Nov 2018 19:16:42 +0800
Subject: [PATCH 5064/5242] MLK-20292 VPU: Record stream buffer length and
 enable DYNAMIC_MEM

commit  9acb305ce822b46540c60f701e50aabd4ce051db from
https://source.codeaurora.org/external/imx/linux-imx.git

Record stream buffer length and enable DYNAMIC_MEM for decoder

Signed-off-by: Huang Chaofan <chaofan.huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-decoder-b0/Makefile |    3 ++-
 drivers/mxc/vpu-decoder-b0/vpu_b0.c |   42 +++++++++++++++++++++++++++++------
 drivers/mxc/vpu-decoder-b0/vpu_b0.h |    2 +-
 3 files changed, 38 insertions(+), 9 deletions(-)

diff --git a/drivers/mxc/vpu-decoder-b0/Makefile b/drivers/mxc/vpu-decoder-b0/Makefile
index fc4c91a..25393cd 100644
--- a/drivers/mxc/vpu-decoder-b0/Makefile
+++ b/drivers/mxc/vpu-decoder-b0/Makefile
@@ -2,7 +2,8 @@
 ## Makefile for the VPU and M0 driver
 ##
 DEFINES += -D REBOOT=1 \
-		   -D BOOT_ARCH=1
+		   -D BOOT_ARCH=1 \
+		   -D DYNAMIC_MEM
 
 EXTRA_CFLAGS += $(DEFINES)
 
diff --git a/drivers/mxc/vpu-decoder-b0/vpu_b0.c b/drivers/mxc/vpu-decoder-b0/vpu_b0.c
index 54b80ac..c69e0da 100644
--- a/drivers/mxc/vpu-decoder-b0/vpu_b0.c
+++ b/drivers/mxc/vpu-decoder-b0/vpu_b0.c
@@ -1459,6 +1459,19 @@ static void v4l2_transfer_buffer_to_firmware(struct queue_data *This, struct vb2
 	}
 }
 
+static u_int32 got_free_space(u_int32 wptr, u_int32 rptr, u_int32 start, u_int32 end)
+{
+	u_int32 freespace = 0;
+
+	if (wptr == rptr)
+		freespace = end - start;
+	if (wptr < rptr)
+		freespace = rptr - wptr;
+	if (wptr > rptr)
+		freespace = (end - wptr) + (rptr - start);
+	return freespace;
+}
+
 static int update_stream_addr(struct vpu_ctx *ctx, void *input_buffer, uint32_t buffer_size, uint32_t uStrBufIdx)
 {
 	struct vpu_dev *dev = ctx->dev;
@@ -1504,12 +1517,7 @@ static int update_stream_addr(struct vpu_ctx *ctx, void *input_buffer, uint32_t
 
 	vpu_dbg(LVL_INFO, "update_stream_addr down\n");
 
-	if (wptr == rptr)
-		nfreespace = end - start;
-	if (wptr < rptr)
-		nfreespace = rptr - wptr;
-	if (wptr > rptr)
-		nfreespace = (end - wptr) + (rptr - start);
+	nfreespace = got_free_space(wptr, rptr, start, end);
 
 	if (nfreespace-buffer_size < MIN_SPACE)
 			return 0;
@@ -2616,12 +2624,14 @@ static ssize_t show_instance_buffer_info(struct device *dev,
 	struct vpu_ctx *ctx;
 	struct vpu_statistic *statistic;
 	struct vb2_data_req *p_data_req;
+	pSTREAM_BUFFER_DESCRIPTOR_TYPE pStrBufDesc;
+	u_int32 stream_length = 0;
 	int i, size, num = 0;
 
 	ctx = container_of(attr, struct vpu_ctx, dev_attr_instance_buffer);
 	statistic = &ctx->statistic;
 
-	num += snprintf(buf + num, PAGE_SIZE - num, "buffer status:\n");
+	num += snprintf(buf + num, PAGE_SIZE - num, "frame buffer status:\n");
 
 	for (i = 0; i < VPU_MAX_BUFFER; i++) {
 		p_data_req = &ctx->q_data[V4L2_DST].vb2_reqs[i];
@@ -2633,6 +2643,24 @@ static ssize_t show_instance_buffer_info(struct device *dev,
 		}
 	}
 
+	num += snprintf(buf + num, PAGE_SIZE - num, "stream buffer status:\n");
+
+	pStrBufDesc = ctx->dev->regs_base + DEC_MFD_XREG_SLV_BASE + MFD_MCX
+		+ MFD_MCX_OFF * ctx->str_index;
+
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"\t%40s:%16x\n", "wptr", pStrBufDesc->wptr);
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"\t%40s:%16x\n", "rptr", pStrBufDesc->rptr);
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"\t%40s:%16x\n", "start", pStrBufDesc->start);
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"\t%40s:%16x\n", "end", pStrBufDesc->end);
+	stream_length = ctx->stream_buffer_size -
+		got_free_space(pStrBufDesc->wptr, pStrBufDesc->rptr, pStrBufDesc->start, pStrBufDesc->end);
+
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"\t%40s:%16x\n", "stream length", stream_length);
 	return num;
 }
 
diff --git a/drivers/mxc/vpu-decoder-b0/vpu_b0.h b/drivers/mxc/vpu-decoder-b0/vpu_b0.h
index 9d1d0ba..f4a4d63 100644
--- a/drivers/mxc/vpu-decoder-b0/vpu_b0.h
+++ b/drivers/mxc/vpu-decoder-b0/vpu_b0.h
@@ -51,7 +51,7 @@
 #define M0_BOOT_SIZE 0x1000000
 #define M0_PRINT_OFFSET 0x500000
 #define DCP_SIZE 0x3000000
-#define MAX_BUFFER_SIZE 5242880
+#define MAX_BUFFER_SIZE 0x800000
 #define UDATA_BUFFER_SIZE 0x1000
 #define SHARED_SIZE 0x00400000
 #define MAX_DCP_NUM 2
-- 
1.7.9.5

