From 326b06b13b8135c0729c69e7e3b940b2a2264469 Mon Sep 17 00:00:00 2001
From: Liu Ying <Ying.Liu@freescale.com>
Date: Thu, 26 Nov 2015 16:11:17 +0800
Subject: [PATCH 0691/5242] MLK-11911-3 mxc IPUv3: disp: Correct display ID
 check in ipu_uninit_sync_panel()

commit  d809ade120beb649a9dc81250814beb918b2fe6b from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch fixes the following issue reported by Coverity:
Constant expression result (CONSTANT_EXPRESSION_RESULT)
always_true_or: The "or" condition disp != 0 || disp != 1 will always be true
because disp cannot be equal to two different values at the same time, so it
must be not equal to at least one of them.
	if ((disp != 0) || (disp != 1))
		return;

Signed-off-by: Liu Ying <Ying.Liu@freescale.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/ipu3/ipu_disp.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mxc/ipu3/ipu_disp.c b/drivers/mxc/ipu3/ipu_disp.c
index fa73bfa..f2ccb1e 100644
--- a/drivers/mxc/ipu3/ipu_disp.c
+++ b/drivers/mxc/ipu3/ipu_disp.c
@@ -1583,7 +1583,7 @@ void ipu_uninit_sync_panel(struct ipu_soc *ipu, int disp)
 	uint32_t reg;
 	uint32_t di_gen;
 
-	if ((disp != 0) || (disp != 1))
+	if (disp != 0 && disp != 1)
 		return;
 
 	mutex_lock(&ipu->mutex_lock);
-- 
1.7.9.5

