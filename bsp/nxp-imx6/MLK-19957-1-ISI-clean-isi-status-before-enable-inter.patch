From 49a8f1ca9ac2f16fb8897fd9579e5caade119ed6 Mon Sep 17 00:00:00 2001
From: "Guoniu.Zhou" <guoniu.zhou@nxp.com>
Date: Wed, 17 Oct 2018 10:16:08 +0800
Subject: [PATCH 4999/5242] MLK-19957-1: ISI: clean isi status before enable
 interrupt

commit  d1cec5b38cc1991836c5000f7987b3ce2ffe7975 from
https://source.codeaurora.org/external/imx/linux-imx.git

Because ISI can't restore to default state after software
reset, the status value of exit will be maintained. If not
cleared, ISI will triggle fake interrupt after enableing irq,
but there is not ready for data.

Signed-off-by: Guoniu.Zhou <guoniu.zhou@nxp.com>
(cherry picked from commit 932af3df1745f5afb0b9433d3355b2e24b177f4e)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-isi-core.c |    7 -------
 drivers/media/platform/imx8/mxc-isi-hw.c   |   12 ++++++++++--
 drivers/media/platform/imx8/mxc-isi-hw.h   |    1 +
 3 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/drivers/media/platform/imx8/mxc-isi-core.c b/drivers/media/platform/imx8/mxc-isi-core.c
index e492ad5..9eee13c 100644
--- a/drivers/media/platform/imx8/mxc-isi-core.c
+++ b/drivers/media/platform/imx8/mxc-isi-core.c
@@ -113,13 +113,6 @@ static int mxc_isi_parse_dt(struct mxc_isi_dev *mxc_isi)
 	return 0;
 }
 
-static void mxc_isi_clean_registers(struct mxc_isi_dev *mxc_isi)
-{
-	u32 status;
-
-	status = mxc_isi_get_irq_status(mxc_isi);
-	mxc_isi_clean_irq_status(mxc_isi, status);
-}
 
 static int mxc_isi_probe(struct platform_device *pdev)
 {
diff --git a/drivers/media/platform/imx8/mxc-isi-hw.c b/drivers/media/platform/imx8/mxc-isi-hw.c
index f773141..0c592a6 100644
--- a/drivers/media/platform/imx8/mxc-isi-hw.c
+++ b/drivers/media/platform/imx8/mxc-isi-hw.c
@@ -645,6 +645,14 @@ void mxc_isi_channel_config(struct mxc_isi_dev *mxc_isi)
 	writel(val, mxc_isi->regs + CHNL_CTRL);
 }
 
+void mxc_isi_clean_registers(struct mxc_isi_dev *mxc_isi)
+{
+	u32 status;
+
+	status = mxc_isi_get_irq_status(mxc_isi);
+	mxc_isi_clean_irq_status(mxc_isi, status);
+}
+
 void mxc_isi_channel_enable(struct mxc_isi_dev *mxc_isi)
 {
 	u32 val;
@@ -654,7 +662,7 @@ void mxc_isi_channel_enable(struct mxc_isi_dev *mxc_isi)
 	val |= 0xff << CHNL_CTRL_BLANK_PXL_OFFSET;
 	writel(val, mxc_isi->regs + CHNL_CTRL);
 
-	mxc_isi_clean_irq_status(mxc_isi, 0);
+	mxc_isi_clean_registers(mxc_isi);
 	mxc_isi_enable_irq(mxc_isi);
 	msleep(300);
 	dump_isi_regs(mxc_isi);
@@ -764,7 +772,7 @@ void mxc_isi_m2m_channel_enable(struct mxc_isi_dev *mxc_isi)
 			CHNL_CTRL_CHNL_EN_ENABLE << CHNL_CTRL_CHNL_EN_OFFSET);
 	writel(reg, mxc_isi->regs + CHNL_CTRL);
 
-	mxc_isi_clean_irq_status(mxc_isi, 0);
+	mxc_isi_clean_registers(mxc_isi);
 	mxc_isi_enable_irq(mxc_isi);
 	mxc_isi_m2m_start_read(mxc_isi);
 
diff --git a/drivers/media/platform/imx8/mxc-isi-hw.h b/drivers/media/platform/imx8/mxc-isi-hw.h
index 4c2d013..30010cb 100644
--- a/drivers/media/platform/imx8/mxc-isi-hw.h
+++ b/drivers/media/platform/imx8/mxc-isi-hw.h
@@ -495,6 +495,7 @@ void mxc_isi_channel_set_alpha_roi0(struct mxc_isi_dev *mxc_isi,
 
 void mxc_isi_clean_irq_status(struct mxc_isi_dev *mxc_isi, u32 val);
 u32 mxc_isi_get_irq_status(struct mxc_isi_dev *mxc_isi);
+void mxc_isi_clean_registers(struct mxc_isi_dev *mxc_isi);
 void mxc_isi_enable_irq(struct mxc_isi_dev *mxc_isi);
 void mxc_isi_disable_irq(struct mxc_isi_dev *mxc_isi);
 void mxc_isi_channel_set_m2m_out_addr(struct mxc_isi_dev *mxc_isi,
-- 
1.7.9.5

