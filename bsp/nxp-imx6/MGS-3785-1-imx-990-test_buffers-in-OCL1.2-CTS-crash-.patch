From aa046a699d153feaad2ba67b5dbfc285fad16f21 Mon Sep 17 00:00:00 2001
From: Chenyan Feng <ella.feng@nxp.com>
Date: Sat, 11 Aug 2018 02:37:39 +0800
Subject: [PATCH 4371/5242] MGS-3785-1 [#imx-990] test_buffers in OCL1.2 CTS
 crash on 850D

commit  2ec41d7e195276c9ed54c8e51c6e24eb81a14dff from
https://source.codeaurora.org/external/imx/linux-imx.git

Allocate the real size of the buffer instead of whole page to aviod GPU
overwrite.

Date: 10th Aug, 2018
Signed-off-by: Ella Feng <ella.feng@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c |   17 ++++++++++-------
 .../gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.h |    4 ++++
 2 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
index 4d00f4a..f79d999 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
@@ -1151,8 +1151,7 @@
 
         BUG_ON(!allocator || !allocator->ops->UnmapUser);
 
-        allocator->ops->UnmapUser(allocator, mdl, mdlMap,
-                mdl->numPages * PAGE_SIZE);
+        allocator->ops->UnmapUser(allocator, mdl, mdlMap, mdl->bytes);
 
         gcmkVERIFY_OK(_DestroyMdlMap(mdl, mdlMap));
 
@@ -1339,6 +1338,7 @@
     /* Check status. */
     gcmkONERROR(status);
 
+    mdl->bytes    = bytes;
     mdl->numPages = numPages;
 
     mdl->contiguous = gcvTRUE;
@@ -1510,6 +1510,7 @@ gceSTATUS gckOS_FreeNonPagedMemory(
 
     /* Assign alloator. */
     mdl->allocator  = allocator;
+    mdl->bytes      = Size;
     mdl->numPages   = Size >> PAGE_SHIFT;
     mdl->contiguous = gcvTRUE;
     mdl->addr       = gcvNULL;
@@ -2059,7 +2060,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
     /* Is the given address within that range. */
     if ((vBase != gcvNULL)
     &&  ((gctINT8_PTR) Logical >= vBase)
-    &&  ((gctINT8_PTR) Logical <  vBase + Mdl->numPages * PAGE_SIZE)
+    &&  ((gctINT8_PTR) Logical <  vBase + Mdl->bytes)
     )
     {
         offset = (gctINT8_PTR) Logical - vBase;
@@ -2123,7 +2124,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
         if (mdl->dmaHandle != 0)
         {
             if ((physical >= mdl->dmaHandle)
-            &&  (physical <  mdl->dmaHandle + mdl->numPages * PAGE_SIZE)
+            &&  (physical <  mdl->dmaHandle + mdl->bytes)
             )
             {
                 *Logical = mdl->addr + (physical - mdl->dmaHandle);
@@ -2257,7 +2258,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
         if (mdl->addr != gcvNULL)
         {
             if ((Logical >= (gctPOINTER)mdl->addr) &&
-                (Logical < (gctPOINTER)((gctSTRING)mdl->addr + mdl->numPages * PAGE_SIZE)))
+                (Logical < (gctPOINTER)((gctSTRING)mdl->addr + mdl->bytes)))
             {
                 found = gcvTRUE;
                 break;
@@ -3097,6 +3098,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
 
     mdl->dmaHandle  = 0;
     mdl->addr       = 0;
+    mdl->bytes      = bytes;
     mdl->numPages   = numPages;
     mdl->contiguous = Flag & gcvALLOC_FLAG_CONTIGUOUS;
 
@@ -3578,7 +3580,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
                     allocator,
                     mdl,
                     mdlMap,
-                    mdl->numPages * PAGE_SIZE);
+                    mdl->bytes);
 
                 mdlMap->vmaAddr = gcvNULL;
             }
@@ -7535,7 +7537,8 @@ static int fd_release(struct inode *inode, struct file *file)
     mdl->dmaHandle  = 0;
     mdl->addr       = 0;
 
-    *Bytes = bytes ? bytes : mdl->numPages * PAGE_SIZE;
+    mdl->bytes = bytes ? bytes : mdl->numPages * PAGE_SIZE;
+    *Bytes = mdl->bytes;
 
     /* Return physical address. */
     *Physical = (gctPHYS_ADDR) mdl;
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.h b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.h
index 46bbe76..3cea45f 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.h
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.h
@@ -79,9 +79,13 @@ struct _LINUX_MDL
 
     atomic_t                refs;
 
+    /* Kernel address. */
     char *                  addr;
 
+    /* Size and covered page count. */
+    size_t                  bytes;
     gctINT                  numPages;
+
     gctBOOL                 contiguous;
     dma_addr_t              dmaHandle;
 
-- 
1.7.9.5

