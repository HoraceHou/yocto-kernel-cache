From 65fbe1a3225156c45077c989b6d9a4731b9260ed Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Wed, 28 Mar 2018 15:34:45 +0800
Subject: [PATCH 3589/5242] MLK-17931-1 gpu: imx: imx8_prg: Differentiate PRGs
 w/wo DPR fixups

commit  4949213f4e594758bd55f820bb910fb542fcc572 from
https://source.codeaurora.org/external/imx/linux-imx.git

PRG coworks with DPR to function as prefetch engines.
New i.MX8QXP SoCs have DPR fixups in silicon.
This patch differentiates PRGs with or without DPR fixups
via OF device ID's data.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/imx/imx8_prg.c |   30 ++++++++++++++++++++++++------
 1 file changed, 24 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/imx/imx8_prg.c b/drivers/gpu/imx/imx8_prg.c
index c236e16..53801fc 100644
--- a/drivers/gpu/imx/imx8_prg.c
+++ b/drivers/gpu/imx/imx8_prg.c
@@ -17,6 +17,7 @@
 #include <linux/io.h>
 #include <linux/module.h>
 #include <linux/of.h>
+#include <linux/of_device.h>
 #include <linux/platform_device.h>
 #include <video/imx8-prefetch.h>
 
@@ -66,8 +67,21 @@ enum {
 #define PRG_WIDTH		0x70
 #define WIDTH(n)		(((n) - 1) & 0xffff)
 
+struct prg_devtype {
+	bool has_dprc_fixup;
+};
+
+static const struct prg_devtype prg_type_v1 = {
+	.has_dprc_fixup = false,
+};
+
+static const struct prg_devtype prg_type_v2 = {
+	.has_dprc_fixup = true,
+};
+
 struct prg {
 	struct device *dev;
+	const struct prg_devtype *devtype;
 	void __iomem *base;
 	struct list_head list;
 	struct clk *clk_apb;
@@ -286,8 +300,16 @@ struct prg *
 }
 EXPORT_SYMBOL_GPL(prg_lookup_by_phandle);
 
+static const struct of_device_id prg_dt_ids[] = {
+	{ .compatible = "fsl,imx8qm-prg", .data = &prg_type_v1, },
+	{ .compatible = "fsl,imx8qxp-prg", .data = &prg_type_v2, },
+	{ /* sentinel */ },
+};
+
 static int prg_probe(struct platform_device *pdev)
 {
+	const struct of_device_id *of_id =
+			of_match_device(prg_dt_ids, &pdev->dev);
 	struct device *dev = &pdev->dev;
 	struct resource *res;
 	struct prg *prg;
@@ -296,6 +318,8 @@ static int prg_probe(struct platform_device *pdev)
 	if (!prg)
 		return -ENOMEM;
 
+	prg->devtype = of_id->data;
+
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	prg->base = devm_ioremap_resource(&pdev->dev, res);
 	if (IS_ERR(prg->base))
@@ -336,12 +360,6 @@ static int prg_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static const struct of_device_id prg_dt_ids[] = {
-	{ .compatible = "fsl,imx8qm-prg", },
-	{ .compatible = "fsl,imx8qxp-prg", },
-	{ /* sentinel */ },
-};
-
 struct platform_driver prg_drv = {
 	.probe = prg_probe,
 	.remove = prg_remove,
-- 
1.7.9.5

