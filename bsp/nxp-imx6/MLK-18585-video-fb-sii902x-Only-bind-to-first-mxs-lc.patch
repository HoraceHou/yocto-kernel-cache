From 0e9f5f0f097567083bd124ab5daa958ae8748153 Mon Sep 17 00:00:00 2001
From: Leonard Crestez <leonard.crestez@nxp.com>
Date: Thu, 14 Jun 2018 22:59:05 +0300
Subject: [PATCH 3979/5242] MLK-18585 video: fb: sii902x: Only bind to first
 mxs-lcdif FB

commit  a0c613641fcf2a368e624d3dec15810f155b7d0a from
https://source.codeaurora.org/external/imx/linux-imx.git

This driver registers itself as a fb_client and handles notifications
from all FB in the system.

It can end up trying to call fb_draw_logo on an overlay FB and this will
crash because overlay_fb_ops has no fb_imageblit function.

It also handles blank/unblank indiscriminately and for example if you
connect a second LVDS display on 6sx and blank/unblank it then HDMI will
also incorrectly blank/unblank. This last issue even affects imx_4.9.y

Fix by only processing notifications from the FB that it's bound to.

Bind to the first FB whose name starts with "mxs-lcdif" by checking
fb_info->fix.id on FB_EVENT_FB_REGISTERED.

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Acked-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/mxsfb_sii902x.c |   19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/drivers/video/fbdev/mxc/mxsfb_sii902x.c b/drivers/video/fbdev/mxc/mxsfb_sii902x.c
index b9ab7db8..1a6a2ee 100644
--- a/drivers/video/fbdev/mxc/mxsfb_sii902x.c
+++ b/drivers/video/fbdev/mxc/mxsfb_sii902x.c
@@ -329,19 +329,24 @@ static int sii902x_fb_event(struct notifier_block *nb, unsigned long val, void *
 	struct fb_event *event = v;
 	struct fb_info *fbi = event->info;
 
-	dev_dbg(&sii902x.client->dev, "%s event=0x%lx\n", __func__, val);
+	/* Check if our FB just registered */
+	if (!sii902x.fbi && val == FB_EVENT_FB_REGISTERED &&
+			!strncmp(fbi->fix.id, "mxs-lcdif", 9)) {
+		pr_info("sii902x bound to %s from %s\n",
+				fbi->fix.id, dev_name(fbi->device));
+		sii902x.fbi = fbi;
+	}
 
-	if (sii902x_in_init_state) {
-		if (val == FB_EVENT_FB_REGISTERED && !sii902x.fbi)
-			sii902x.fbi = fbi;
+	/* Ignore if not our FB */
+	if (fbi != sii902x.fbi)
+		return 0;
 
+	/* Ignore if driver did not probe yet */
+	if (sii902x_in_init_state)
 		return 0;
-	}
 
 	switch (val) {
 	case FB_EVENT_FB_REGISTERED:
-		if (sii902x.fbi == NULL)
-			sii902x.fbi = fbi;
 		/* Manually trigger a plugin/plugout interrupter to check cable state */
 		schedule_delayed_work(&(sii902x.det_work), msecs_to_jiffies(50));
 
-- 
1.7.9.5

