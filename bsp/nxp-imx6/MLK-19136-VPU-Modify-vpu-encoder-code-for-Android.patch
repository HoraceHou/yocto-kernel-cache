From fcb69932160dc36f69268e26ec21aefb536dce5b Mon Sep 17 00:00:00 2001
From: Huang Chaofan <chaofan.huang@nxp.com>
Date: Tue, 7 Aug 2018 10:12:49 +0800
Subject: [PATCH 4305/5242] MLK-19136 VPU: Modify vpu encoder code for Android

commit  d258426c6707d45932b54d14940dda4a1cd7df09 from
https://source.codeaurora.org/external/imx/linux-imx.git

- Add sync frame flags
- modify width & height value when get format after set format for capture
- modify poll function
- decrease MIN_BUFFER_COUNT count to 3
- change file license

Signed-off-by: Huang Chaofan <chaofan.huang@nxp.com>
(cherry picked from commit 378f251af9ccd6b94b48ff88582b9044c9ac367d)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-decoder-b0/insert_startcode.c |    1 -
 drivers/mxc/vpu-decoder-b0/insert_startcode.h |   10 +++++-----
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c   |   20 ++++++++++++++++----
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h   |   13 +++++++------
 4 files changed, 28 insertions(+), 16 deletions(-)

diff --git a/drivers/mxc/vpu-decoder-b0/insert_startcode.c b/drivers/mxc/vpu-decoder-b0/insert_startcode.c
index 761eac3..dc2825b 100644
--- a/drivers/mxc/vpu-decoder-b0/insert_startcode.c
+++ b/drivers/mxc/vpu-decoder-b0/insert_startcode.c
@@ -152,7 +152,6 @@ static int VC1CreateNALSeqHeader(unsigned char *pHeader, int *pHeaderLen,
 
 	nHeaderLen = nCodecSize - 1;
 	if ((4+nHeaderLen) > nMaxHeader) {
-		//for case: WVC1_stress_a0_stress06.wmv: header size is 176, In fact, it is also OK if we only copy 128 bytes
 		nHeaderLen = nMaxHeader - 4;
 		vpu_dbg(LVL_ERR, "error: header length %d overrun !!! \r\n", nCodecSize);
 	}
diff --git a/drivers/mxc/vpu-decoder-b0/insert_startcode.h b/drivers/mxc/vpu-decoder-b0/insert_startcode.h
index 5032a22..56d023f 100644
--- a/drivers/mxc/vpu-decoder-b0/insert_startcode.h
+++ b/drivers/mxc/vpu-decoder-b0/insert_startcode.h
@@ -3,12 +3,12 @@
  */
 
 /*
- * The code contained herein is licensed under the GNU Lesser General
- * Public License.  You may obtain a copy of the GNU Lesser General
- * Public License Version 2.1 or later at the following locations:
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
  *
- * http://www.opensource.org/licenses/lgpl-license.html
- * http://www.gnu.org/copyleft/lgpl.html
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
  */
 
 /*!
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
index 30ca5ce..d38238a 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
@@ -199,10 +199,10 @@ static int v4l2_ioctl_g_fmt(struct file *file,
 		for (i = 0; i < pix_mp->num_planes; i++)
 			pix_mp->plane_fmt[i].sizeimage = ctx->q_data[V4L2_SRC].sizeimage[i];
 	} else if (f->type == V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE) {
-		pix_mp->width = 0;
-		pix_mp->height = 0;
+		pix_mp->width = ctx->q_data[V4L2_DST].width;
+		pix_mp->height = ctx->q_data[V4L2_DST].height;
 		pix_mp->field = V4L2_FIELD_ANY;
-		pix_mp->plane_fmt[0].bytesperline = 0;
+		pix_mp->plane_fmt[0].bytesperline = ctx->q_data[V4L2_DST].width;
 		pix_mp->plane_fmt[0].sizeimage = ctx->q_data[V4L2_DST].sizeimage[0];
 		pix_mp->pixelformat = V4L2_PIX_FMT_H264;
 		pix_mp->num_planes = 1;
@@ -293,6 +293,8 @@ static int v4l2_ioctl_s_fmt(struct file *file,
 	} else if (f->type == V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE) {
 		q_data = &ctx->q_data[V4L2_DST];
 		q_data->fourcc = pix_mp->pixelformat;
+		q_data->width = pix_mp->width;
+		q_data->height = pix_mp->height;
 		q_data->sizeimage[0] = pix_mp->plane_fmt[0].sizeimage;
 	} else
 		ret = -EINVAL;
@@ -444,6 +446,9 @@ static int v4l2_ioctl_dqbuf(struct file *file,
 
 	ret = vb2_dqbuf(&q_data->vb2_q, buf, file->f_flags & O_NONBLOCK);
 
+	if (buf->type == V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE)
+		buf->flags = q_data->vb2_reqs[buf->index].buffer_flags;
+
 	return ret;
 }
 
@@ -984,6 +989,13 @@ static void report_stream_done(struct vpu_ctx *ctx,  MEDIAIP_ENC_PIC_INFO *pEncP
 
 	list_del(&p_data_req->list);
 	up(&This->drv_q_lock);
+
+	if (pEncPicInfo->ePicType == MEDIAIP_ENC_PIC_TYPE_IDR_FRAME || pEncPicInfo->ePicType == MEDIAIP_ENC_PIC_TYPE_I_FRAME)
+		p_data_req->buffer_flags = V4L2_BUF_FLAG_KEYFRAME;
+	else if (pEncPicInfo->ePicType == MEDIAIP_ENC_PIC_TYPE_P_FRAME)
+		p_data_req->buffer_flags = V4L2_BUF_FLAG_PFRAME;
+	else if (pEncPicInfo->ePicType == MEDIAIP_ENC_PIC_TYPE_B_FRAME)
+		p_data_req->buffer_flags = V4L2_BUF_FLAG_BFRAME;
 	//memcpy to vb2 buffer from encpicinfo
 	if (p_data_req->vb2_buf->state == VB2_BUF_STATE_ACTIVE)
 		vb2_buffer_done(p_data_req->vb2_buf, VB2_BUF_STATE_DONE);
@@ -1777,7 +1789,7 @@ static unsigned int v4l2_poll(struct file *filp, poll_table *wait)
 			rc |= POLLOUT | POLLWRNORM;
 		poll_wait(filp, &dst_q->done_wq, wait);
 		if (!list_empty(&dst_q->done_list))
-			rc |= POLLIN | POLLWRNORM;
+			rc |= POLLIN | POLLRDNORM;
 	} else
 		rc = POLLERR;
 
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
index 9108053..df63512 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
@@ -3,12 +3,12 @@
  */
 
 /*
- * The code contained herein is licensed under the GNU Lesser General
- * Public License.  You may obtain a copy of the GNU Lesser General
- * Public License Version 2.1 or later at the following locations:
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
  *
- * http://www.opensource.org/licenses/lgpl-license.html
- * http://www.gnu.org/copyleft/lgpl.html
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
  */
 
 /*!
@@ -61,7 +61,7 @@
 #define VPU_REG_BASE 0x40000000
 #endif
 #define ENC_REG_BASE 0x2c000000
-#define MIN_BUFFER_COUNT 6
+#define MIN_BUFFER_COUNT 3
 #define V4L2_MAX_CTRLS 12
 struct vpu_v4l2_control {
 	uint32_t id;
@@ -151,6 +151,7 @@ struct vb2_data_req {
 	struct list_head  list;
 	struct vb2_buffer *vb2_buf;
 	int id;
+	u_int32 buffer_flags;
 };
 
 struct queue_data {
-- 
1.7.9.5

