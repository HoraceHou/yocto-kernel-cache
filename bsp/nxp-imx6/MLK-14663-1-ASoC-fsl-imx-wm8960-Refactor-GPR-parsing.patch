From e632325f6d38c30daca69b202a2c27b57fbeea7f Mon Sep 17 00:00:00 2001
From: Daniel Baluta <daniel.baluta@nxp.com>
Date: Thu, 15 Jun 2017 18:41:58 +0300
Subject: [PATCH 1967/5242] MLK-14663-1: ASoC: fsl: imx-wm8960: Refactor GPR
 parsing

commit  db80185fdb26a78068994126a2f87f3a149dc9b8 from
https://source.codeaurora.org/external/imx/linux-imx.git

Refactor GPR handling into a function for easier adding support
for non-gpr boards.

Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/imx-wm8960.c |   43 +++++++++++++++++++++++++++++--------------
 1 file changed, 29 insertions(+), 14 deletions(-)

diff --git a/sound/soc/fsl/imx-wm8960.c b/sound/soc/fsl/imx-wm8960.c
index 9fbd86b..d3413c8 100644
--- a/sound/soc/fsl/imx-wm8960.c
+++ b/sound/soc/fsl/imx-wm8960.c
@@ -421,6 +421,32 @@ static int be_hw_params_fixup(struct snd_soc_pcm_runtime *rtd,
 	},
 };
 
+static int of_parse_gpr(struct platform_device *pdev,
+			struct imx_wm8960_data *data)
+{
+	int ret;
+	struct of_phandle_args args;
+
+	ret = of_parse_phandle_with_fixed_args(pdev->dev.of_node,
+					       "gpr", 3, 0, &args);
+	if (ret) {
+		dev_warn(&pdev->dev, "failed to get gpr property\n");
+		return ret;
+	}
+
+	data->gpr = syscon_node_to_regmap(args.np);
+	if (IS_ERR(data->gpr)) {
+		ret = PTR_ERR(data->gpr);
+		dev_err(&pdev->dev, "failed to get gpr regmap\n");
+		return ret;
+	}
+
+	regmap_update_bits(data->gpr, args.args[0], args.args[1],
+			   args.args[2]);
+
+	return 0;
+}
+
 static int imx_wm8960_probe(struct platform_device *pdev)
 {
 	struct device_node *cpu_np, *codec_np = NULL;
@@ -430,7 +456,6 @@ static int imx_wm8960_probe(struct platform_device *pdev)
 	struct imx_wm8960_data *data;
 	struct platform_device *asrc_pdev = NULL;
 	struct device_node *asrc_np;
-	struct of_phandle_args args;
 	u32 width;
 	int ret;
 
@@ -480,19 +505,9 @@ static int imx_wm8960_probe(struct platform_device *pdev)
 		goto fail;
 	}
 
-	ret = of_parse_phandle_with_fixed_args(pdev->dev.of_node, "gpr", 3,
-				0, &args);
-	if (ret) {
-		dev_warn(&pdev->dev, "failed to get gpr property\n");
-	} else {
-		data->gpr = syscon_node_to_regmap(args.np);
-		if (IS_ERR(data->gpr)) {
-			ret = PTR_ERR(data->gpr);
-			dev_err(&pdev->dev, "failed to get gpr regmap\n");
-			goto fail;
-		}
-		regmap_update_bits(data->gpr, args.args[0], args.args[1], args.args[2]);
-	}
+	ret = of_parse_gpr(pdev, data);
+	if (ret)
+		goto fail;
 
 	of_property_read_u32_array(pdev->dev.of_node, "hp-det", data->hp_det, 2);
 
-- 
1.7.9.5

