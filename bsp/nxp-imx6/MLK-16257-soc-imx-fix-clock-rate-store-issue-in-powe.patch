From bd011a98a5004f6663dd20255e9dc1ffea0881ca Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <shengjiu.wang@freescale.com>
Date: Thu, 24 Aug 2017 18:26:18 +0800
Subject: [PATCH 2475/5242] MLK-16257: soc: imx: fix clock rate store issue in
 power off

commit  8a0866ebd04a5d20407871bf7b7520dc4dce2040 from
https://source.codeaurora.org/external/imx/linux-imx.git

In the case assign same clock in two device node in dts, which is
a parent clock used by two devices. In current design, we need to
assign this clock in two device node for clock rate recovery. In
this case, clock rate getted in imx8_pd_power_off() is zero for
second device, which will cause the clock recovery failed.

The calling sequence like this:

First device probe:
  --> of_clk_set_defaults
   --> clk_set_rate
    --> clk_core_set_rate_nolock: clk_core->rate = 0, so execute
        the calc rate and set rate. then update the clk_core->rate.

  --> imx8_pd_power_on: enable the power
  probe finished
  --> imx8_pd_power_off
   --> clk_get_rate: calc the rate, clk_core->rate !=0
   --> power off in scfw
        But scfw will set the "rate_div=0" for power is disabled.

Second device probe:
  --> of_clk_set_defaults
   --> clk_set_rate
    --> clk_core_set_rate_nolock: for the clk_core->rate == rate, so
        return directly.

  --> imx8_pd_power_on: enable the power
  probe finished
  --> imx8_pd_power_off
   --> clk_get_rate: calc the rate, but for the "rate_div ==0" in
       scfw, so the returned rate is 0. !!!!
       which will cause the clock recovery failed in pm_runtime_get_sync.

This patch is to use the clk_hw_get_rate instead the clk_get_rate, for
clk_hw_get_rate don't calc the rate, the clk_core->rate is what we want.

Signed-off-by: Shengjiu Wang <shengjiu.wang@freescale.com>
Reviewed-by: Ranjani Vaidyanathan <ranjani.vaidyanathan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/imx/pm-domains.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/soc/imx/pm-domains.c b/drivers/soc/imx/pm-domains.c
index 90cd2df..0d01bcf 100644
--- a/drivers/soc/imx/pm-domains.c
+++ b/drivers/soc/imx/pm-domains.c
@@ -100,7 +100,7 @@ static int imx8_pd_power_off(struct generic_pm_domain *domain)
 		 * that may be lost.
 		 */
 		list_for_each_entry(imx8_rsrc_clk, &pd->clks, node)
-			imx8_rsrc_clk->rate = clk_get_rate(imx8_rsrc_clk->clk);
+			imx8_rsrc_clk->rate = clk_hw_get_rate(__clk_get_hw(imx8_rsrc_clk->clk));
 	}
 	return imx8_pd_power(domain, false);
 }
-- 
1.7.9.5

