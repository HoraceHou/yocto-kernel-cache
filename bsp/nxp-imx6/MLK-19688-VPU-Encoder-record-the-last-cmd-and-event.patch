From 05c973c2bfb5213a9bc63e6831b56538878e6bec Mon Sep 17 00:00:00 2001
From: ming_qian <ming.qian@nxp.com>
Date: Thu, 11 Oct 2018 10:15:36 +0800
Subject: [PATCH 4820/5242] MLK-19688:VPU Encoder:record the last cmd and
 event

commit  6e1bac6efd1c842e8bbdcac6111cce248150035a from
https://source.codeaurora.org/external/imx/linux-imx.git

Signed-off-by: ming_qian <ming.qian@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c   |   31 +++++++++++++++++++++++++
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h   |    4 ++++
 drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c |    2 +-
 3 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
index 6a3fbc2..782be32 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
@@ -91,6 +91,20 @@
 	ITEM_NAME(VID_API_ENC_EVENT_RESERVED)
 };
 
+static char *get_event_str(u32 event)
+{
+	if (event >= VID_API_ENC_EVENT_RESERVED)
+		return "UNKNOWN EVENT";
+	return event2str[event];
+}
+
+static char *get_cmd_str(u32 cmdid)
+{
+	if (cmdid >= GTB_ENC_CMD_RESERVED)
+		return "UNKNOWN CMD";
+	return cmd2str[cmdid];
+}
+
 static void vpu_log_event(u_int32 uEvent, u_int32 ctxid)
 {
 	if (uEvent >= VID_API_ENC_EVENT_RESERVED)
@@ -120,6 +134,9 @@ static void count_event(struct vpu_statistic *statistic, u32 event)
 		statistic->event[event]++;
 	else
 		statistic->event[VID_API_ENC_EVENT_RESERVED]++;
+
+	statistic->current_event = event;
+	getrawmonotonic(&statistic->ts_event);
 }
 
 static void count_cmd(struct vpu_statistic *statistic, u32 cmdid)
@@ -131,6 +148,8 @@ static void count_cmd(struct vpu_statistic *statistic, u32 cmdid)
 		statistic->cmd[cmdid]++;
 	else
 		statistic->cmd[GTB_ENC_CMD_RESERVED]++;
+	statistic->current_cmd = cmdid;
+	getrawmonotonic(&statistic->ts_cmd);
 }
 
 static void write_enc_reg(struct vpu_dev *dev, u32 val, off_t reg)
@@ -2245,6 +2264,18 @@ static ssize_t show_instance_info(struct device *dev,
 			"\t%40s:%10d;%10d\n", "QP",
 			ctx->actual_param.uInitSliceQP, param->uInitSliceQP);
 
+	num += snprintf(buf + num, PAGE_SIZE - num, "current status:\n");
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"%10s:%40s;%10ld.%06ld\n", "commond",
+			get_cmd_str(statistic->current_cmd),
+			statistic->ts_cmd.tv_sec,
+			statistic->ts_cmd.tv_nsec / 1000);
+	num += snprintf(buf + num, PAGE_SIZE - num,
+			"%10s:%40s;%10ld.%06ld\n", "event",
+			get_event_str(statistic->current_event),
+			statistic->ts_event.tv_sec,
+			statistic->ts_event.tv_nsec / 1000);
+
 	return num;
 }
 
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
index 8728eff..bd644d5 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
@@ -246,6 +246,10 @@ enum {
 struct vpu_statistic {
 	unsigned long cmd[GTB_ENC_CMD_RESERVED + 1];
 	unsigned long event[VID_API_ENC_EVENT_RESERVED + 1];
+	unsigned long current_cmd;
+	unsigned long current_event;
+	struct timespec ts_cmd;
+	struct timespec ts_event;
 };
 
 struct vpu_ctx {
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c
index 7201478..c9b6e2f 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_ctrl.c
@@ -255,7 +255,7 @@ static int add_ctrl_bitrate_mode(struct vpu_ctx *ctx)
 				      V4L2_CID_MPEG_VIDEO_BITRATE_MODE,
 				      V4L2_MPEG_VIDEO_BITRATE_MODE_CBR,
 				      0x0,
-				      V4L2_MPEG_VIDEO_BITRATE_MODE_CBR);
+				      V4L2_MPEG_VIDEO_BITRATE_MODE_VBR);
 	if (!ctrl) {
 		vpu_dbg(LVL_ERR, "add ctrl bitrate mode fail\n");
 		return -EINVAL;
-- 
1.7.9.5

