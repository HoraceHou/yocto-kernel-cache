From 77df75292d1af398bacc5e999fa3510ddd3a9c74 Mon Sep 17 00:00:00 2001
From: Zhou Peng <eagle.zhou@nxp.com>
Date: Wed, 6 Jun 2018 17:52:34 +0800
Subject: [PATCH 3916/5242] MLK-18532: [i.MX8MM/Hantro]: h1 encoder doesn't
 work when running with decoder simultaneously

commit  0921ab3dcd1d2d3c45ed44eeec8fde01e096e00a from
https://source.codeaurora.org/external/imx/linux-imx.git

Remove legacy function 'hantrodec_choose_core()'

Signed-off-by: Zhou Peng <eagle.zhou@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/hantro_845/hantrodec_845s.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/mxc/hantro_845/hantrodec_845s.c b/drivers/mxc/hantro_845/hantrodec_845s.c
index 2dc806a..9064943 100755
--- a/drivers/mxc/hantro_845/hantrodec_845s.c
+++ b/drivers/mxc/hantro_845/hantrodec_845s.c
@@ -483,7 +483,7 @@ static int GetDecCoreID(unsigned long format)
 	PDEBUG("GetDecCoreID=%d\n", core_id);
 	return core_id;
 }
-
+#if 0
 static int hantrodec_choose_core(int is_g1)
 {
 	volatile unsigned char *reg = NULL;
@@ -517,7 +517,7 @@ static int hantrodec_choose_core(int is_g1)
 	PDEBUG("hantrodec_choose_core OK!\n");
 	return 0;
 }
-
+#endif
 
 static long ReserveDecoder(hantrodec_t *dev, struct file *filp, unsigned long format)
 {
@@ -537,6 +537,7 @@ static long ReserveDecoder(hantrodec_t *dev, struct file *filp, unsigned long fo
 	if (wait_event_interruptible(hw_queue, GetDecCoreAny(&Core, dev, filp, format) != 0))
 		return -ERESTARTSYS;
 #endif
+#if 0
 	if (IS_G1(dev->hw_id)) {
 		if (0 == hantrodec_choose_core(1))
 			PDEBUG("G1 is reserved\n");
@@ -548,7 +549,7 @@ static long ReserveDecoder(hantrodec_t *dev, struct file *filp, unsigned long fo
 		else
 			return -1;
 	}
-
+#endif
 #ifdef CONFIG_DEVICE_THERMAL_XXX
 	if (hantro_dynamic_clock)
 		hantro_thermal_check(hantro_dev);
-- 
1.7.9.5

