From 6c92d03c794daf69893d98e1d37eeb98735df2dd Mon Sep 17 00:00:00 2001
From: Weiguang Kong <weiguang.kong@nxp.com>
Date: Wed, 25 Oct 2017 18:16:21 +0800
Subject: [PATCH 2690/5242] MLK-16691: ASoC: fsl_hifi4: unlock mutex before
 return error

commit  db0c9ed0efd7eb799b1181af62532741ce450d99 from
https://source.codeaurora.org/external/imx/linux-imx.git

When error occurs in fsl_hifi4_open() function, before this
function exists, "hifi4_priv->hifi4_mutex" should be unlocked.
If not, when the device is opened next time, the kernel will
be hanged.

Signed-off-by: Weiguang Kong <weiguang.kong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_hifi4.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/sound/soc/fsl/fsl_hifi4.c b/sound/soc/fsl/fsl_hifi4.c
index 1d69f06..455d80c 100644
--- a/sound/soc/fsl/fsl_hifi4.c
+++ b/sound/soc/fsl/fsl_hifi4.c
@@ -1558,8 +1558,10 @@ static int fsl_hifi4_open(struct inode *inode, struct file *file)
 
 	hifi4_engine = devm_kzalloc(dev,
 				sizeof(struct fsl_hifi4_engine), GFP_KERNEL);
-	if (!hifi4_engine)
+	if (!hifi4_engine) {
+		mutex_unlock(&hifi4_priv->hifi4_mutex);
 		return -ENOMEM;
+	}
 
 	hifi4_engine->hifi4_priv = hifi4_priv;
 
@@ -1575,12 +1577,15 @@ static int fsl_hifi4_open(struct inode *inode, struct file *file)
 
 		if (ret) {
 			dev_err(dev, "failed to load firmware\n");
+			mutex_unlock(&hifi4_priv->hifi4_mutex);
 			return ret;
 		}
 
 		ret = icm_ack_wait(hifi4_priv, 0);
-		if (ret)
+		if (ret) {
+			mutex_unlock(&hifi4_priv->hifi4_mutex);
 			return ret;
+		}
 		dev_info(dev, "hifi driver registered\n");
 	}
 
-- 
1.7.9.5

