From 081d9eef3f211a4930bff3f020aa7866ef3415f3 Mon Sep 17 00:00:00 2001
From: Xianzhong <xianzhong.li@nxp.com>
Date: Sat, 8 Sep 2018 05:43:08 +0800
Subject: [PATCH 4600/5242] MGS-4151-24 [#imx-1166] merge debugfs fix for
 kernel panic

commit  deef84b3322bb3da8061b44b52dafe7fa6efdbd8 from
https://source.codeaurora.org/external/imx/linux-imx.git

CL172719 fix debugfs bugs and kernel panic fix ARTPEC7-31

cherry-pick patch:
6.2.4.p3-0106-CL172719-fix-debugfs-bugs-and-kernel-panic-fix-ARTPE

Signed-off-by: Xianzhong <xianzhong.li@nxp.com>
(cherry picked from commit a8bff203ae6b83a301af6b946f990b7d373ace77)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../hal/os/linux/kernel/gc_hal_kernel_debugfs.c    |   29 ++++++++++----------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_debugfs.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_debugfs.c
index 1bb68fc..885eec6 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_debugfs.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_debugfs.c
@@ -371,7 +371,7 @@ static int gc_debugfs_open(struct inode *inode, struct file *file)
     {
         kfree(Node->temp);
 
-        if ( ( retval = kmalloc ( sizeof (char ) * remaining , GFP_KERNEL ) ) == NULL )
+        if ( ( retval = kmalloc ( sizeof (char ) * remaining , GFP_ATOMIC ) ) == NULL )
             return NULL;
 
         Node->temp = retval;
@@ -518,22 +518,23 @@ static int gc_debugfs_open(struct inode *inode, struct file *file)
 {
     char buffer[MAX_LINE_SIZE] ;
     int len ;
-    ssize_t res=0;
+    ssize_t res = 0;
 
-    len = vsnprintf ( buffer , sizeof (buffer ) , Message , *( va_list * ) Arguments ) ;
-
-    buffer[len] = '\0' ;
-
-    /* Add end-of-line if missing. */
-    if ( buffer[len - 1] != '\n' )
+    if ( gc_dbgfs.currentNode )
     {
-        buffer[len ++] = '\n' ;
-        buffer[len] = '\0' ;
-    }
+        len = vsnprintf ( buffer , sizeof (buffer ) , Message , *( va_list * ) Arguments ) ;
 
-    res = _AppendString ( gc_dbgfs.currentNode , buffer , len ) ;
+        buffer[len] = '\0' ;
+        /* Add end-of-line if missing. */
+        if ( buffer[len - 1] != '\n' )
+        {
+             buffer[len ++] = '\n' ;
+             buffer[len] = '\0' ;
+        }
 
-    wake_up_interruptible ( gcmkNODE_READQ ( gc_dbgfs.currentNode ) ) ; /* blocked in read*/
+       res = _AppendString ( gc_dbgfs.currentNode , buffer , len ) ;
+       wake_up_interruptible ( gcmkNODE_READQ ( gc_dbgfs.currentNode ) ) ; /* blocked in read*/
+    }
 
     return res;
 }
@@ -958,7 +959,7 @@ static int gc_debugfs_open(struct inode *inode, struct file *file)
                           ...
                           )
 {
-    ssize_t _debugfs_res;
+    ssize_t _debugfs_res = 0;
     gcmkDEBUGFS_PRINT ( _GetArgumentSize ( Message ) , Message ) ;
     return _debugfs_res;
 }
-- 
1.7.9.5

