From 950069c24af2b1adb9a0dd717fb8afbb4933e138 Mon Sep 17 00:00:00 2001
From: Peng Fan <peng.fan@nxp.com>
Date: Fri, 21 Sep 2018 18:11:09 +0800
Subject: [PATCH 4720/5242] MLK-19664-5 ARM64: dts: 8qm dom0/u: support VPU

commit  f0e1303e28ca4266074874962321a8930e9b35a6 from
https://source.codeaurora.org/external/imx/linux-imx.git

Passthrough VPU to DomU

Signed-off-by: Peng Fan <peng.fan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../boot/dts/freescale/fsl-imx8qm-mek-dom0.dts     |   85 +++++++++++++++++++-
 .../boot/dts/freescale/fsl-imx8qm-mek-domu.dts     |   76 +++++++++++++++++
 2 files changed, 159 insertions(+), 2 deletions(-)

diff --git a/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-dom0.dts b/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-dom0.dts
index d9ac30c..ec49455 100644
--- a/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-dom0.dts
+++ b/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-dom0.dts
@@ -110,6 +110,24 @@
 				SC_R_PCIE_A
 				SC_R_SERDES_0
 				SC_R_HSIO_GPIO
+				/*vpu*/
+				SC_R_VPU
+				SC_R_VPU_PID0
+				SC_R_VPU_PID1
+				SC_R_VPU_PID2
+				SC_R_VPU_PID3
+				SC_R_VPU_PID4
+				SC_R_VPU_PID5
+				SC_R_VPU_PID6
+				SC_R_VPU_PID7
+				SC_R_VPU_DEC_0
+				SC_R_VPU_ENC_0
+				SC_R_VPU_ENC_1
+				SC_R_VPU_TS_0
+				SC_R_VPU_MU_0
+				SC_R_VPU_MU_1
+				SC_R_VPU_MU_2
+				SC_R_VPU_MU_3
 				>;
 			pads = <
 				/* i2c1_lvds1 */
@@ -194,10 +212,35 @@
 		xen,passthrough;
 	};
 
+	decoder_boot_mem: decoder_boot_mem@0x84000000 {
+		xen,passthrough;
+		reg = <0 0x84000000 0 0x2000000>;
+	};
+
+	encoder_boot_mem: encoder_boot_mem@0x86000000 {
+		xen,passthrough;
+		reg = <0 0x86000000 0 0x2000000>;
+	};
+
 	rpmsg_reserved_mem: rpmsg_reserved_mem@90000000 {
 		reg = <0x0 0x90000000 0x0 0x400000>;
 		xen,passthrough;
 	};
+
+	decoder_rpc_mem: decoder_rpc_mem@0x90400000 {
+		xen,passthrough;
+		reg = <0 0x90400000 0 0x1000000>;
+	};
+
+	encoder_rpc_mem: encoder_rpc_mem@0x91400000 {
+		xen,passthrough;
+		reg = <0 0x91400000 0 0x1000000>;
+	};
+
+	decoder_str_mem: str_mem@0x94400000 {
+		xen,passthrough;
+		reg = <0 0x94400000 0 0x1800000>;
+	};
 };
 
 &mu_rpmsg1 {
@@ -266,11 +309,16 @@
 			 <SC_R_DMA_0_CH15>;
 };
 
-/* SMMU */
+/*
+ * SMMU, for simplity, we put all all the resources needs to programmed
+ * for VPU under vpu_decoder node, then in cfg file only add vpu_decoder
+ * in dt_dev is enough.
+ */
 &smmu {
 	mmu-masters = <&dpu2 0x13>, <&gpu_3d1 0x15>,
 		      <&usdhc1 0x12>, <&usbotg1 0x11>,
-		      <&edma01 0x10>, <&cm41 0x09>, <&pciea 0x08>;
+		      <&edma01 0x10>, <&cm41 0x09>, <&pciea 0x08>,
+		      <&vpu_decoder 0x7>;
 };
 
 &lvds_region2 {
@@ -460,10 +508,43 @@
        xen,passthrough;
 };
 
+&mu_m0 {
+	xen,passthrough;
+};
+
+&mu1_m0 {
+	xen,passthrough;
+};
+
+&mu2_m0 {
+	xen,passthrough;
+};
+
 &vpu_decoder {
+       #stream-id-cells = <1>;
+       iommus = <&smmu>;
        xen,passthrough;
+       fsl,sc_rsrc_id = <SC_R_VPU>,
+			<SC_R_VPU_PID0>,
+			<SC_R_VPU_PID1>,
+			<SC_R_VPU_PID2>,
+			<SC_R_VPU_PID3>,
+			<SC_R_VPU_PID4>,
+			<SC_R_VPU_PID5>,
+			<SC_R_VPU_PID6>,
+			<SC_R_VPU_PID7>,
+			<SC_R_VPU_DEC_0>,
+			<SC_R_VPU_ENC_0>,
+			<SC_R_VPU_ENC_1>,
+			<SC_R_VPU_TS_0>,
+			<SC_R_VPU_MU_0>,
+			<SC_R_VPU_MU_1>,
+			<SC_R_VPU_MU_2>,
+			<SC_R_VPU_MU_3>;
 };
 
 &vpu_encoder {
+       iommus = <&smmu>;
+       #stream-id-cells = <1>;
        xen,passthrough;
 };
diff --git a/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-domu.dts b/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-domu.dts
index 2e0080c..639da76 100644
--- a/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-domu.dts
+++ b/arch/arm64/boot/dts/freescale/fsl-imx8qm-mek-domu.dts
@@ -88,6 +88,14 @@
 		 *
 		 */
 
+		decoder_boot: decoder_boot@0x84000000 {
+			no-map;
+			reg = <0 0x84000000 0 0x2000000>;
+		};
+		encoder_boot: encoder_boot@0x86000000 {
+			no-map;
+			reg = <0 0x86000000 0 0x2000000>;
+		};
 		/*
 		 * CM40 rpmsg memory is still for Dom0, the domu.cfg
 		 * not map 0x90000000 - 0x90100000 to DomU.
@@ -97,6 +105,20 @@
 			reg = <0 0x90000000 0 0x400000>;
 		};
 
+		decoder_rpc: decoder_rpc@0x90400000 {
+			no-map;
+			reg = <0 0x90400000 0 0x1000000>;
+		};
+		encoder_rpc: encoder_rpc@0x91400000 {
+			no-map;
+			reg = <0 0x91400000 0 0x1000000>;
+		};
+
+		decoder_str: str@0x94400000 {
+			no-map;
+			reg = <0 0x94400000 0 0x1800000>;
+		};
+
 		/* global autoconfigured region for contiguous allocations */
 		linux,cma {
 			compatible = "shared-dma-pool";
@@ -168,6 +190,50 @@
 			};
 		};
 
+		mu_m0: mu_m0@2d000000 {
+			compatible = "fsl,imx8-mu0-vpu-m0";
+			reg = <0x0 0x2d000000 0x0 0x10000>;
+			interrupts = <GIC_SPI 472 IRQ_TYPE_LEVEL_HIGH>;
+			fsl,vpu_ap_mu_id = <16>;
+			status = "okay";
+		};
+
+		mu1_m0: mu1_m0@2d020000 {
+			compatible = "fsl,imx8-mu1-vpu-m0";
+			reg = <0x0 0x2d020000 0x0 0x10000>;
+			interrupts = <GIC_SPI 473 IRQ_TYPE_LEVEL_HIGH>;
+			fsl,vpu_ap_mu_id = <17>;
+			status = "okay";
+		};
+		mu2_m0: mu2_m0@2d040000 {
+			compatible = "fsl,imx8-mu2-vpu-m0";
+			reg = <0x0 0x2d040000 0x0 0x10000>;
+			interrupts = <GIC_SPI 474 IRQ_TYPE_LEVEL_HIGH>;
+			fsl,vpu_ap_mu_id = <18>;
+			status = "okay";
+		};
+
+		vpu_decoder: vpu_decoder@2c000000 {
+			compatible = "nxp,imx8qm-b0-vpudec", "nxp,imx8qxp-b0-vpudec";
+			boot-region = <&decoder_boot>;
+			rpc-region = <&decoder_rpc>;
+			str-region = <&decoder_str>;
+			reg = <0x0 0x2c000000 0x0 0x1000000>;
+			reg-names = "vpu_regs";
+			power-domains = <&pd_vpu_dec>;
+			status = "disabled";
+		};
+
+		vpu_encoder: vpu_encoder@2d000000 {
+			compatible = "nxp,imx8qm-b0-vpuenc", "nxp,imx8qxp-b0-vpuenc";
+			boot-region = <&encoder_boot>;
+			rpc-region = <&encoder_rpc>;
+			reg = <0x0 0x2d000000 0x0 0x1000000>;
+			reg-names = "vpu_regs";
+			power-domains = <&pd_vpu_enc>;
+			status = "disabled";
+		};
+
 		clk: clk {
 			compatible = "fsl,imx8qm-clk";
 			#clock-cells = <1>;
@@ -742,3 +808,13 @@
 		};
 	};
 };
+
+&vpu_decoder {
+	core_type = <2>;
+	status = "okay";
+};
+
+&vpu_encoder {
+	core_type = <2>;
+	status = "okay";
+};
-- 
1.7.9.5

