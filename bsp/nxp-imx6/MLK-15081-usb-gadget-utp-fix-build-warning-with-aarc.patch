From 8dc468ccdfc1a2ca843c173fc14271af9e686123 Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@nxp.com>
Date: Wed, 14 Jun 2017 23:16:30 +0800
Subject: [PATCH 0373/5242] MLK-15081 usb: gadget: utp: fix build warning with
 aarch64 compiler
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit  3449758ea14c6a5d7c9bca97054227bcf5763b54 from
https://source.codeaurora.org/external/imx/linux-imx.git

Compiler will generate below complain if using %d to print size_t, fix it
by using %zd.

drivers/usb/gadget/function/fsl_updater.c: In function ‘utp_do_read’:
./include/linux/kern_levels.h:4:18: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
 #define KERN_SOH "\001"  /* ASCII Start Of Header */
                  ^
./include/linux/kern_levels.h:13:19: note: in expansion of macro ‘KERN_SOH’
 #define KERN_INFO KERN_SOH "6" /* informational */
                   ^~~~~~~~
./include/linux/printk.h:284:9: note: in expansion of macro ‘KERN_INFO’
  printk(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)
         ^~~~~~~~~
drivers/usb/gadget/function/fsl_updater.c:245:3: note: in expansion of macro ‘pr_info’
   pr_info("Copied to %p, %d bytes started from %d\n",
   ^~~~~~~

Acked-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Li Jun <jun.li@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/gadget/function/fsl_updater.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/gadget/function/fsl_updater.c b/drivers/usb/gadget/function/fsl_updater.c
index c248962..f584b15 100644
--- a/drivers/usb/gadget/function/fsl_updater.c
+++ b/drivers/usb/gadget/function/fsl_updater.c
@@ -125,12 +125,12 @@ static ssize_t utp_file_read(struct file *file,
 	if (free)
 		utp_user_data_free(uud);
 	else {
-		pr_info("sizeof = %d, size = %d\n",
+		pr_info("sizeof = %zd, size = %zd\n",
 			sizeof(uud->data),
 			uud->data.size);
 
-		pr_err("Will not free utp_user_data, because buffer size = %d,"
-			"need to put %d\n", size, size_to_put);
+		pr_err("Will not free utp_user_data, because buffer size = %zd need to put %zd\n",
+					size, size_to_put);
 	}
 
 	/*
@@ -207,7 +207,7 @@ static int utp_do_read(struct fsg_dev *fsg, void *data, size_t size)
 	if (unlikely(amount_left == 0))
 		return -EIO;		/* No default reply*/
 
-	pr_debug("%s: sending %d\n", __func__, size);
+	pr_debug("%s: sending %zd\n", __func__, size);
 	for (;;) {
 		/* Figure out how much we need to read:
 		 * Try to read the remaining amount.
@@ -236,7 +236,7 @@ static int utp_do_read(struct fsg_dev *fsg, void *data, size_t size)
 		}
 
 		/* Perform the read */
-		pr_info("Copied to %p, %d bytes started from %d\n",
+		pr_info("Copied to %p, %d bytes started from %zd\n",
 				bh->buf, amount, size - amount_left);
 		/* from upt buffer to file_storeage buffer */
 		memcpy(bh->buf, data + size - amount_left, amount);
-- 
1.7.9.5

