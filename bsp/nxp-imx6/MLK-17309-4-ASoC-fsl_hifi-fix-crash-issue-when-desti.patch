From 935dc8cfcf5803770c52eb18dab851b6a42b4c16 Mon Sep 17 00:00:00 2001
From: Weiguang Kong <weiguang.kong@nxp.com>
Date: Tue, 26 Dec 2017 18:50:31 +0800
Subject: [PATCH 3156/5242] MLK-17309-4: ASoC: fsl_hifi: fix crash issue when
 destination not align

commit  bddbc9eea35c8306472bd158aa5d757650ff77c8 from
https://source.codeaurora.org/external/imx/linux-imx.git

When loading the codec libs in driver, if the destination is
not 4-bytes alignment when doing memset_hifi(), the driver
will print a warning message and the driver may crash in some
cases.

So by changing the memset() function and aligning the virtual address
based on the physical address to fix this issue.

Signed-off-by: Weiguang Kong <weiguang.kong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_hifi4.c |   54 ++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 46 insertions(+), 8 deletions(-)

diff --git a/sound/soc/fsl/fsl_hifi4.c b/sound/soc/fsl/fsl_hifi4.c
index c2030a3..2328b7a 100644
--- a/sound/soc/fsl/fsl_hifi4.c
+++ b/sound/soc/fsl/fsl_hifi4.c
@@ -611,6 +611,8 @@ static xt_ptr xtlib_load_split_pi_library_common(
 	Elf32_Phdr *pheader;
 	unsigned int align;
 	int err = validate_dynamic_splitload(header, process_info);
+	xt_ptr destination_code_address_back;
+	xt_ptr destination_data_address_back;
 
 	if (err != XTLIB_NO_ERR) {
 		xtlib_globals->err = err;
@@ -619,8 +621,15 @@ static xt_ptr xtlib_load_split_pi_library_common(
 
 	align = find_align(header, process_info);
 
+	destination_code_address_back = destination_code_address;
+	destination_data_address_back = destination_data_address;
+
 	destination_code_address = align_ptr(destination_code_address, align);
 	destination_data_address = align_ptr(destination_data_address, align);
+	process_info->code_buf_virt += (destination_code_address -
+				destination_code_address_back);
+	process_info->data_buf_virt += (destination_data_address -
+				destination_data_address_back);
 
 	pheader = (Elf32_Phdr *) ((char *)library +
 			xtlib_host_word(header->e_phoff,
@@ -1683,16 +1692,45 @@ static int fsl_hifi4_close(struct inode *inode, struct file *file)
 
 void *memset_hifi(void *dest, int c, size_t count)
 {
-	unsigned int *dl = (unsigned int *)dest;
-	size_t n = round_up(count, 4) / 4;
+	uint *dl = (uint *)dest;
+	void *dl_1, *dl_2;
+	size_t align = 4;
+	size_t n, n1, n2;
 
 	/* while all data is aligned (common case), copy a word at a time */
-	if ((((ulong)dest) & (sizeof(*dl) - 1)) != 0)
-		pr_info("dest %p not 4 bytes aligned\n", dest);
-
-	while (n--) {
-		writel_relaxed(0,  dl);
-		dl++;
+	if ((((ulong)dest) & (sizeof(*dl) - 1)) != 0) {
+		dl = (unsigned int *)(((ulong)dest + align - 1) &
+								(~(align - 1)));
+		dl_1 = dest;
+		dl_2 = (void *)(((ulong)dest + count) & (~(align - 1)));
+		n1 = (ulong)dl - (ulong)dl_1;
+		n2 = (ulong)dest + count - (ulong)dl_2;
+		n = (count - n1 - n2) / align;
+
+		while (n--) {
+			writel_relaxed(0,  dl);
+			dl++;
+		}
+		while (n1--) {
+			writeb_relaxed(0, dl_1);
+			dl_1++;
+		}
+		while (n2--) {
+			writeb_relaxed(0, dl_2);
+			dl_2++;
+		}
+	} else {
+		n = count / align;
+		n1 = count - n * align;
+		dl_1 = dest + n * align;
+		while (n--) {
+			writel_relaxed(0,  dl);
+			dl++;
+		}
+		while (n1--) {
+			writeb_relaxed(0, dl_1);
+			dl_1++;
+		}
 	}
 
 	return dest;
-- 
1.7.9.5

