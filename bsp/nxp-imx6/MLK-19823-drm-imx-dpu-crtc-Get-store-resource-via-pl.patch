From 60d27094986df375338f78dd395494e61bc937b1 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Mon, 8 Oct 2018 15:47:00 +0800
Subject: [PATCH 4781/5242] MLK-19823 drm/imx: dpu: crtc: Get store resource
 via platform data

commit  e41a5ed3a0728135e9c3c2a0cfa289db69435353 from
https://source.codeaurora.org/external/imx/linux-imx.git

Store9 unit can be shared bewteen display engine(for sync mode fixup)
and blit engine.  It's proper to get the store resource in the DPU
common driver and then pass it to relevant client drivers.  From the
CRTC driver point of view, it's straightforward to get the store
resource via platform data instead of getting it directly, which avoids
the wrong situation where getting it twice(one time for one of the two
CRTCs of one DPU, respectively).

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-crtc.c |   11 +----------
 drivers/gpu/imx/dpu/dpu-common.c   |   16 ++++++++++++++++
 include/video/dpu.h                |    3 +++
 3 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-crtc.c b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
index cbdd70f..32b5ec8 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-crtc.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
@@ -852,8 +852,6 @@ static void dpu_crtc_put_resources(struct dpu_crtc *dpu_crtc)
 		dpu_fg_put(dpu_crtc->fg);
 	if (!IS_ERR_OR_NULL(dpu_crtc->tcon))
 		dpu_tcon_put(dpu_crtc->tcon);
-	if (!IS_ERR_OR_NULL(dpu_crtc->st))
-		dpu_st_put(dpu_crtc->st);
 }
 
 static int dpu_crtc_get_resources(struct dpu_crtc *dpu_crtc)
@@ -897,14 +895,6 @@ static int dpu_crtc_get_resources(struct dpu_crtc *dpu_crtc)
 	}
 	dpu_crtc->aux_tcon = dpu_aux_tcon_peek(dpu_crtc->tcon);
 
-	if (stream_id == 0) {
-		dpu_crtc->st = dpu_st_get(dpu, 9);
-		if (IS_ERR(dpu_crtc->st)) {
-			ret = PTR_ERR(dpu_crtc->st);
-			goto err_out;
-		}
-	}
-
 	if (stream_id) {
 		dpu_crtc->m_cf   = dpu_crtc->aux_cf;
 		dpu_crtc->m_dec  = dpu_crtc->aux_dec;
@@ -958,6 +948,7 @@ static int dpu_crtc_init(struct dpu_crtc *dpu_crtc,
 	dpu_crtc->has_pc = dpu_has_pc(dpu);
 	dpu_crtc->syncmode_min_prate = dpu_get_syncmode_min_prate(dpu);
 	dpu_crtc->singlemode_max_width = dpu_get_singlemode_max_width(dpu);
+	dpu_crtc->st = pdata->st9;
 
 	dpu_crtc->plane = devm_kcalloc(dev, dpu_crtc->hw_plane_num,
 					sizeof(*dpu_crtc->plane), GFP_KERNEL);
diff --git a/drivers/gpu/imx/dpu/dpu-common.c b/drivers/gpu/imx/dpu/dpu-common.c
index aaaccc4..cb1c858 100644
--- a/drivers/gpu/imx/dpu/dpu-common.c
+++ b/drivers/gpu/imx/dpu/dpu-common.c
@@ -1201,6 +1201,7 @@ static int dpu_add_client_devices(struct dpu_soc *dpu)
 	struct device *dev = dpu->dev;
 	struct dpu_platform_reg *reg;
 	struct dpu_plane_grp *plane_grp;
+	struct dpu_store *st9 = NULL;
 	size_t client_num, reg_size;
 	int i, id, ret;
 
@@ -1237,6 +1238,18 @@ static int dpu_add_client_devices(struct dpu_soc *dpu)
 	if (ret)
 		goto err_get_plane_res;
 
+	/*
+	 * Store9 is shared bewteen display engine(for sync mode
+	 * fixup) and blit engine.
+	 */
+	if (devtype->has_syncmode_fixup) {
+		st9 = dpu_st_get(dpu, 9);
+		if (IS_ERR(st9)) {
+			ret = PTR_ERR(st9);
+			goto err_get_plane_res;
+		}
+	}
+
 	for (i = 0; i < client_num; i++) {
 		struct platform_device *pdev;
 		struct device_node *of_node = NULL;
@@ -1270,6 +1283,7 @@ static int dpu_add_client_devices(struct dpu_soc *dpu)
 		if (is_disp) {
 			reg[i].pdata.plane_grp = plane_grp;
 			reg[i].pdata.di_grp_id = plane_grp->id;
+			reg[i].pdata.st9 = st9;
 		}
 
 		pdev = platform_device_alloc(reg[i].name, id++);
@@ -1295,6 +1309,8 @@ static int dpu_add_client_devices(struct dpu_soc *dpu)
 
 err_register:
 	platform_device_unregister_children(to_platform_device(dev));
+	if (devtype->has_syncmode_fixup)
+		dpu_st_put(st9);
 err_get_plane_res:
 	dpu_put_plane_resource(&plane_grp->res);
 
diff --git a/include/video/dpu.h b/include/video/dpu.h
index e7184d2..ad87037 100644
--- a/include/video/dpu.h
+++ b/include/video/dpu.h
@@ -840,6 +840,9 @@ struct dpu_client_platformdata {
 	unsigned int		di_grp_id;
 	struct dpu_plane_grp	*plane_grp;
 
+	/* Store9 could be shared bewteen display engine and blit engine */
+	struct dpu_store	*st9;
+
 	struct device_node	*of_node;
 };
 #endif /* __DRM_DPU_H__ */
-- 
1.7.9.5

