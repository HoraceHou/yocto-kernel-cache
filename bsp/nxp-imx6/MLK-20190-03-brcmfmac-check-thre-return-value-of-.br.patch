From ad01e4df3b749b27a137a1715d1fb139847d6aaa Mon Sep 17 00:00:00 2001
From: Andy Duan <fugang.duan@nxp.com>
Date: Wed, 7 Nov 2018 15:06:03 +0800
Subject: [PATCH 5043/5242] MLK-20190-03 brcmfmac: check thre return value of
 .brcmf_fil_iovar_data_get()

commit  0a93178425eb02dd549907414b6d992bcff20d41 from
https://source.codeaurora.org/external/imx/linux-imx.git

Check the return value of .brcmf_fil_iovar_data_get() to fix
the coverity issue of "error handling issue".

Reviewed-by: Haibo Chen <haibo.chen@nxp.com>
Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../wireless/broadcom/brcm80211/brcmfmac/sdio.c    |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
index e1b6e6f..98ae382 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
@@ -2548,12 +2548,15 @@ static int brcmf_sdio_intr_rstatus(struct brcmf_sdio *bus)
 	struct brcmf_bus *bus_if = dev_get_drvdata(dev);
 	struct brcmf_sdio_dev *sdiodev = bus_if->bus_priv.sdio;
 	struct brcmf_if *ifp = bus_if->drvr->iflist[0];
+	s32 err = 0;
 
 	brcmf_dbg(TRACE, "Enter\n");
 
 	/* Query ulp_sdioctrl iovar to get the ULP related SHM offsets */
-	brcmf_fil_iovar_data_get(ifp, "ulp_sdioctrl", &sdiodev->shm_ulp,
-				 sizeof(sdiodev->shm_ulp));
+	err = brcmf_fil_iovar_data_get(ifp, "ulp_sdioctrl", &sdiodev->shm_ulp,
+				       sizeof(sdiodev->shm_ulp));
+	if (err)
+		brcmf_err("ulp_sdioctrl iovar returned err = %d\n", err);
 
 	sdiodev->ulp = false;
 
-- 
1.7.9.5

