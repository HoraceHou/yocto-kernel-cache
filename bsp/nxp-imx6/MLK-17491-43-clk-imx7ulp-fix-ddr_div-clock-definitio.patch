From 4f41fc1187865c8defd25472c33cf815cb742753 Mon Sep 17 00:00:00 2001
From: Dong Aisheng <aisheng.dong@nxp.com>
Date: Fri, 8 Sep 2017 13:53:18 +0800
Subject: [PATCH 3337/5242] MLK-17491-43 clk: imx7ulp: fix ddr_div clock
 definitions

commit  cd2247214508d9612993e0254513a95de4346eb1 from
https://source.codeaurora.org/external/imx/linux-imx.git

According RM, ddr_div clock actually is not CLK_DIVIDER_ONE_BASED type,
we need use a clk_div_table to handle its special divider value.

Besides that, due to 0 DDRDIV means output is disabled, so we also need
specify CLK_DIVIDER_ZERO_GATE for it.

Fixes: aacf0b70af26 ("MLK-13441-6 ARM: imx: add i.mx7ulp clock driver")
Cc: Anson Huang <Anson.Huang@nxp.com>
Reviewed-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-imx7ulp.c |   16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/clk/imx/clk-imx7ulp.c b/drivers/clk/imx/clk-imx7ulp.c
index db36850..367d674 100644
--- a/drivers/clk/imx/clk-imx7ulp.c
+++ b/drivers/clk/imx/clk-imx7ulp.c
@@ -57,6 +57,18 @@
 	IMX7ULP_CLK_MMDC,
 };
 
+/* used by sosc/sirc/firc/ddr/spll/apll dividers */
+static const struct clk_div_table ulp_div_table[] = {
+	{ .val = 1, .div = 1, },
+	{ .val = 2, .div = 2, },
+	{ .val = 3, .div = 4, },
+	{ .val = 4, .div = 8, },
+	{ .val = 5, .div = 16, },
+	{ .val = 6, .div = 32, },
+	{ .val = 7, .div = 64, },
+	{ }
+};
+
 static void __init imx7ulp_clocks_init(struct device_node *scg_node)
 {
 	struct device_node *np;
@@ -118,7 +130,9 @@ static void __init imx7ulp_clocks_init(struct device_node *scg_node)
 	/* Fake mux */
 	clks[IMX7ULP_CLK_ARM] = imx_clk_mux_glitchless("arm", smc_base + 0x10, 8, 2, arm_sels, ARRAY_SIZE(arm_sels));
 
-	clks[IMX7ULP_CLK_DDR_DIV] = clk_register_divider(NULL, "ddr_div", "ddr_sel", CLK_SET_RATE_PARENT | CLK_SET_RATE_GATE, base + 0x30, 0, 3, CLK_DIVIDER_ONE_BASED, &imx_ccm_lock);
+	clks[IMX7ULP_CLK_DDR_DIV] = clk_register_divider_table(NULL, "ddr_div", "ddr_sel", CLK_SET_RATE_PARENT | CLK_SET_RATE_GATE, base + 0x30, 0, 3,
+							       CLK_DIVIDER_ZERO_GATE, ulp_div_table, &imx_ccm_lock);
+
 	clks[IMX7ULP_CLK_NIC0_DIV] = imx_clk_divider("nic0_div", "nic_sel",  base + 0x40, 24, 4);
 	clks[IMX7ULP_CLK_GPU_DIV]  = imx_clk_divider("gpu_div",  "nic0_div", base + 0x40, 20, 4);
 	clks[IMX7ULP_CLK_NIC1_DIV] = imx_clk_divider("nic1_div", "nic0_div", base + 0x40, 16, 4);
-- 
1.7.9.5

