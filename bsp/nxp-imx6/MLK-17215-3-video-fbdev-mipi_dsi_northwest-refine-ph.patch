From 8e3892ab238f1eef6bf1e66826b62698304179f5 Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Thu, 14 Dec 2017 15:21:31 +0800
Subject: [PATCH 3107/5242] MLK-17215-3 video: fbdev: mipi_dsi_northwest:
 refine 'phy-ref-clkfreq' get to support all socs

commit  c1140ffe24000e7091f367e153f163307bf8aeb7 from
https://source.codeaurora.org/external/imx/linux-imx.git

Move the code slice of getting 'phy-ref-clkfreq' property
to probe function to support arm32 socs besides arm64.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/mipi_dsi_northwest.c |   29 +++++++++++++-------------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/drivers/video/fbdev/mxc/mipi_dsi_northwest.c b/drivers/video/fbdev/mxc/mipi_dsi_northwest.c
index c26578e..35c4879 100644
--- a/drivers/video/fbdev/mxc/mipi_dsi_northwest.c
+++ b/drivers/video/fbdev/mxc/mipi_dsi_northwest.c
@@ -1167,7 +1167,6 @@ static irqreturn_t mipi_dsi_irq_handler(int irq, void *data)
 static int dsi_clks_init(struct mipi_dsi_info *minfo)
 {
 	int ret = 0;
-	uint32_t phy_ref_clkfreq;
 	struct platform_device *pdev = minfo->pdev;
 	struct device_node *np = pdev->dev.of_node;
 
@@ -1186,20 +1185,8 @@ static int dsi_clks_init(struct mipi_dsi_info *minfo)
 	minfo->dbi_clk = devm_clk_get(&pdev->dev, "dbi");
 	BUG_ON(IS_ERR(minfo->dbi_clk));
 
-	ret = of_property_read_u32(np, "phy-ref-clkfreq",
-				   &phy_ref_clkfreq);
-	if (ret < 0) {
-		dev_err(&pdev->dev, "failed to get phy reference clock rate\n");
-		return -EINVAL;
-	}
 
-	if (phy_ref_clkfreq < 24000000 || phy_ref_clkfreq > 200000000) {
-		dev_err(&pdev->dev, "invalid phy reference clock rate\n");
-		return -EINVAL;
-	}
-	minfo->phy_ref_clkfreq = phy_ref_clkfreq;
-
-	ret = clk_set_rate(minfo->phy_ref_clk, phy_ref_clkfreq);
+	ret = clk_set_rate(minfo->phy_ref_clk, minfo->phy_ref_clkfreq);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "set phy_ref clock rate failed\n");
 		goto out;
@@ -1246,6 +1233,7 @@ static int mipi_dsi_probe(struct platform_device *pdev)
 	const char *lcd_panel;
 	int ret = 0;
 	u32 vmode_index;
+	uint32_t phy_ref_clkfreq;
 
 	mipi_dsi = devm_kzalloc(&pdev->dev, sizeof(*mipi_dsi), GFP_KERNEL);
 	if (!mipi_dsi)
@@ -1276,6 +1264,19 @@ static int mipi_dsi_probe(struct platform_device *pdev)
 		return ret;
 	}
 
+	ret = of_property_read_u32(np, "phy-ref-clkfreq",
+				   &phy_ref_clkfreq);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "failed to get phy reference clock rate\n");
+		return -EINVAL;
+	}
+
+	if (phy_ref_clkfreq < 24000000 || phy_ref_clkfreq > 200000000) {
+		dev_err(&pdev->dev, "invalid phy reference clock rate\n");
+		return -EINVAL;
+	}
+	mipi_dsi->phy_ref_clkfreq = phy_ref_clkfreq;
+
 #ifdef CONFIG_FB_IMX64
 	dsi_clks_init(mipi_dsi);
 
-- 
1.7.9.5

