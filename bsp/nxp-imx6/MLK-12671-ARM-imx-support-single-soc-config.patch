From 16fe3fd5940a8180e7a7e8fb6acbce4b7c0569d5 Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Mon, 18 Apr 2016 14:40:47 +0800
Subject: [PATCH 1006/5242] MLK-12671 ARM: imx: support single soc config

commit  7e87aacaf4babd4d9465170967cd8452f4eb3c21 from
https://source.codeaurora.org/external/imx/linux-imx.git

Need to make sure build pass with single SOC
config, in current build for single SOC config,
if both SOC_IMX7D and SOC_IMX6SX are NOT selected,
below build error will occur, add MU module
config to fix this build issue.

LD      init/built-in.o
arch/arm/mach-imx/built-in.o: In function `busfreq_probe':
:(.text+0x5370): undefined reference to `imx_mu_lpm_ready'
arch/arm/mach-imx/built-in.o: In function `bus_freq_pm_notify':
:(.text+0x5d50): undefined reference to `imx_mu_lpm_ready'
:(.text+0x5d68): undefined reference to `imx_mu_lpm_ready'
make: *** [vmlinux] Error 1

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-imx/Kconfig  |    5 +++++
 arch/arm/mach-imx/Makefile |    3 ++-
 arch/arm/mach-imx/common.h |    4 ++++
 3 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/arch/arm/mach-imx/Kconfig b/arch/arm/mach-imx/Kconfig
index 5bd740e..f3839b0 100644
--- a/arch/arm/mach-imx/Kconfig
+++ b/arch/arm/mach-imx/Kconfig
@@ -55,6 +55,9 @@ config HAVE_IMX_AMP
 config HAVE_IMX_DDRC
        bool
 
+config HAVE_IMX_MU
+	bool
+
 config HAVE_IMX_RPMSG
 	select RPMSG_VIRTIO
 	bool
@@ -534,6 +537,7 @@ config SOC_IMX6SX
 	select PINCTRL_IMX6SX
 	select HAVE_IMX_AMP
 	select SOC_IMX6
+	select HAVE_IMX_MU
 	select HAVE_IMX_RPMSG
 	select RPMSG
 	select IMX_SEMA4
@@ -571,6 +575,7 @@ config SOC_IMX7D
 	select HAVE_IMX_DDRC
 	select HAVE_IMX_SRC
 	select IMX_GPCV2
+	select HAVE_IMX_MU
 	select HAVE_IMX_RPMSG
 	select RPMSG
 	select KEYBOARD_SNVS_PWRKEY
diff --git a/arch/arm/mach-imx/Makefile b/arch/arm/mach-imx/Makefile
index 33cc33c..2cbdd1b 100644
--- a/arch/arm/mach-imx/Makefile
+++ b/arch/arm/mach-imx/Makefile
@@ -78,6 +78,7 @@ obj-$(CONFIG_HAVE_IMX_GPCV2) += gpcv2.o
 obj-$(CONFIG_HAVE_IMX_MMDC) += mmdc.o
 obj-$(CONFIG_HAVE_IMX_DDRC) += ddrc.o
 obj-$(CONFIG_HAVE_IMX_SRC) += src.o
+obj-$(CONFIG_HAVE_IMX_MU) += mu.o
 obj-$(CONFIG_HAVE_IMX_RPMSG) += imx_rpmsg.o
 ifneq ($(CONFIG_SOC_IMX6)$(CONFIG_SOC_IMX7)$(CONFIG_SOC_LS1021A),)
 AFLAGS_headsmp.o :=-Wa,-march=armv7-a
@@ -99,7 +100,7 @@ obj-$(CONFIG_SOC_IMX6SX) += mach-imx6sx.o ddr3_freq_imx6sx.o \
 			    lpddr2_freq_imx6sx.o
 obj-$(CONFIG_SOC_IMX6UL) += mach-imx6ul.o ddr3_freq_imx6sx.o \
 			    lpddr2_freq_imx6sx.o
-obj-$(CONFIG_SOC_IMX7D) += mach-imx7d.o mu.o
+obj-$(CONFIG_SOC_IMX7D) += mach-imx7d.o
 
 ifeq ($(CONFIG_SUSPEND),y)
 AFLAGS_suspend-imx6.o :=-Wa,-march=armv7-a
diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index f471842..97d3abf 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -81,7 +81,11 @@ static inline void imx_gpc_add_m4_wake_up_irq(u32 irq, bool enable) {}
 bool imx_mu_is_m4_in_low_freq(void);
 bool imx_mu_is_m4_in_stop(void);
 void imx_mu_set_m4_run_mode(void);
+#ifdef CONFIG_HAVE_IMX_MU
 int imx_mu_lpm_ready(bool ready);
+#else
+static inline int imx_mu_lpm_ready(bool ready) { return 0; }
+#endif
 
 enum mxc_cpu_pwr_mode {
 	WAIT_CLOCKED,		/* wfi only */
-- 
1.7.9.5

