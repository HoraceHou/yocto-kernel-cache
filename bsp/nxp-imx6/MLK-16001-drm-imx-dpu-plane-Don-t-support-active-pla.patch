From 40f423545547aa2b900abbeb998b3b5535390e14 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Mon, 17 Jul 2017 13:54:26 +0800
Subject: [PATCH 2134/5242] MLK-16001 drm/imx: dpu: plane: Don't support
 active planes with CRTC disabled

commit  b5ce8ad749f5f70d337159e22d1a0930e2086d65 from
https://source.codeaurora.org/external/imx/linux-imx.git

It's unnecessary to support active planes with relevant CRTC being disabled,
because we cannot see the planes on the screen.  Let's reject the case
in the atomic check stage explicitly.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-plane.c |   31 +++++++++++++++----------------
 1 file changed, 15 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-plane.c b/drivers/gpu/drm/imx/dpu/dpu-plane.c
index f9caea0..7d69f2d 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-plane.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-plane.c
@@ -155,6 +155,9 @@ static int dpu_plane_atomic_check(struct drm_plane *plane,
 		return 0;
 	}
 
+	if (!state->crtc)
+		return -EINVAL;
+
 	if (dplane->grp->has_vproc) {
 		/* no down scaling */
 		if (state->src_w >> 16 > state->crtc_w ||
@@ -170,20 +173,18 @@ static int dpu_plane_atomic_check(struct drm_plane *plane,
 	/* no off screen */
 	if (state->crtc_x < 0 || state->crtc_y < 0)
 		return -EINVAL;
-	if (state->crtc) {
-		crtc_state =
-			drm_atomic_get_existing_crtc_state(state->state,
-							state->crtc);
-		if (WARN_ON(!crtc_state))
-			return -EINVAL;
 
-		if (state->crtc_x + state->crtc_w >
-		    crtc_state->adjusted_mode.hdisplay)
-			return -EINVAL;
-		if (state->crtc_y + state->crtc_h >
-		    crtc_state->adjusted_mode.vdisplay)
-			return -EINVAL;
-	}
+	crtc_state =
+		drm_atomic_get_existing_crtc_state(state->state, state->crtc);
+	if (WARN_ON(!crtc_state))
+		return -EINVAL;
+
+	if (state->crtc_x + state->crtc_w >
+	    crtc_state->adjusted_mode.hdisplay)
+		return -EINVAL;
+	if (state->crtc_y + state->crtc_h >
+	    crtc_state->adjusted_mode.vdisplay)
+		return -EINVAL;
 
 	/* base address alignment check */
 	baseaddr = drm_plane_state_to_baseaddr(state);
@@ -336,9 +337,7 @@ static void dpu_plane_atomic_update(struct drm_plane *plane,
 					dpstate->base_w, dpstate->base_h);
 		constframe_constantcolor(cf, 0, 0, 0, 0);
 
-		if (state->crtc)
-			framegen_sacfg(res->fg,
-					dpstate->base_x, dpstate->base_y);
+		framegen_sacfg(res->fg, dpstate->base_x, dpstate->base_y);
 	}
 
 	if (dpstate->is_top) {
-- 
1.7.9.5

