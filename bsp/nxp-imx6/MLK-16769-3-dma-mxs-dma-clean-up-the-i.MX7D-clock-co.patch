From 785751f0445158aba88431836df19858cb7e805d Mon Sep 17 00:00:00 2001
From: Han Xu <han.xu@nxp.com>
Date: Fri, 27 Oct 2017 13:44:34 -0500
Subject: [PATCH 2731/5242] MLK-16769-3: dma: mxs-dma: clean up the i.MX7D
 clock code

commit  a5b5c43a8abcd915139500165e886a5d64096bce from
https://source.codeaurora.org/external/imx/linux-imx.git

There is only one clock need to be handled after the clock code change
for i.MX7D. remove the redundant code.

Signed-off-by: Han Xu <han.xu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/dma/mxs-dma.c |   40 ++++++----------------------------------
 1 file changed, 6 insertions(+), 34 deletions(-)

diff --git a/drivers/dma/mxs-dma.c b/drivers/dma/mxs-dma.c
index 93aa7b2..19092d2 100644
--- a/drivers/dma/mxs-dma.c
+++ b/drivers/dma/mxs-dma.c
@@ -449,12 +449,6 @@ static int mxs_dma_alloc_chan_resources(struct dma_chan *chan)
 	if (ret)
 		goto err_clk;
 
-	if (mxs_dma->dev_id == IMX7D_DMA) {
-		ret = clk_prepare_enable(mxs_dma->clk_io);
-		if (ret)
-			goto err_clk_unprepare;
-	}
-
 	mxs_dma_reset_chan(chan);
 
 	dma_async_tx_descriptor_init(&mxs_chan->desc, chan);
@@ -465,7 +459,6 @@ static int mxs_dma_alloc_chan_resources(struct dma_chan *chan)
 
 	return 0;
 
-err_clk_unprepare:
 	clk_disable_unprepare(mxs_dma->clk);
 err_clk:
 	free_irq(mxs_chan->chan_irq, mxs_dma);
@@ -488,9 +481,6 @@ static void mxs_dma_free_chan_resources(struct dma_chan *chan)
 	dma_free_coherent(mxs_dma->dma_device.dev, CCW_BLOCK_SIZE,
 			mxs_chan->ccw, mxs_chan->ccw_phys);
 
-	if (mxs_dma->dev_id == IMX7D_DMA)
-		clk_disable_unprepare(mxs_dma->clk_io);
-
 	clk_disable_unprepare(mxs_dma->clk);
 }
 
@@ -721,15 +711,9 @@ static int mxs_dma_init(struct mxs_dma_engine *mxs_dma)
 	if (ret)
 		return ret;
 
-	if (mxs_dma->dev_id == IMX7D_DMA) {
-		ret = clk_prepare_enable(mxs_dma->clk_io);
-		if (ret)
-			goto err_clk_bch;
-	}
-
 	ret = stmp_reset_block(mxs_dma->base);
 	if (ret)
-		goto err_clk_io;
+		goto err_clk;
 
 	/* enable apbh burst */
 	if (dma_is_apbh(mxs_dma)) {
@@ -743,11 +727,9 @@ static int mxs_dma_init(struct mxs_dma_engine *mxs_dma)
 	writel(MXS_DMA_CHANNELS_MASK << MXS_DMA_CHANNELS,
 		mxs_dma->base + HW_APBHX_CTRL1 + STMP_OFFSET_REG_SET);
 
-err_clk_io:
-	if (mxs_dma->dev_id == IMX7D_DMA)
-		clk_disable_unprepare(mxs_dma->clk_io);
-err_clk_bch:
+err_clk:
 	clk_disable_unprepare(mxs_dma->clk);
+
 	return ret;
 }
 
@@ -835,19 +817,9 @@ static int __init mxs_dma_probe(struct platform_device *pdev)
 	if (IS_ERR(mxs_dma->base))
 		return PTR_ERR(mxs_dma->base);
 
-	if (mxs_dma->dev_id == IMX7D_DMA) {
-		mxs_dma->clk = devm_clk_get(&pdev->dev, "dma_apbh_bch");
-		if (IS_ERR(mxs_dma->clk))
-			return PTR_ERR(mxs_dma->clk);
-		mxs_dma->clk_io = devm_clk_get(&pdev->dev, "dma_apbh_io");
-		if (IS_ERR(mxs_dma->clk_io))
-			return PTR_ERR(mxs_dma->clk_io);
-
-	} else {
-		mxs_dma->clk = devm_clk_get(&pdev->dev, NULL);
-		if (IS_ERR(mxs_dma->clk))
-			return PTR_ERR(mxs_dma->clk);
-	}
+	mxs_dma->clk = devm_clk_get(&pdev->dev, NULL);
+	if (IS_ERR(mxs_dma->clk))
+		return PTR_ERR(mxs_dma->clk);
 
 	dma_cap_set(DMA_SLAVE, mxs_dma->dma_device.cap_mask);
 	dma_cap_set(DMA_CYCLIC, mxs_dma->dma_device.cap_mask);
-- 
1.7.9.5

