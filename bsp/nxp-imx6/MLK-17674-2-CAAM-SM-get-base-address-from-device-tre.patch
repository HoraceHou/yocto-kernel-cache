From aa6ca7ce258000a7106e868dd7a00c36c1c439c5 Mon Sep 17 00:00:00 2001
From: Silvano di Ninno <silvano.dininno@nxp.com>
Date: Fri, 16 Mar 2018 14:48:10 +0100
Subject: [PATCH 4192/5242] MLK-17674-2: CAAM SM : get base address from
 device tree

commit  2522681b3b46459becad0fa342a6a9e7555f8474 from
https://source.codeaurora.org/external/imx/linux-imx.git

Remove hard coded value for base physical address.
Use device tree to get this value.

i.MX8 with seco is still not address since CAAM uses a private bus
to access secure memory

Signed-off-by: Silvano di Ninno <silvano.dininno@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/ctrl.c     |   19 +++++++++++++++++--
 drivers/crypto/caam/intern.h   |    1 +
 drivers/crypto/caam/sm_store.c |    4 ++--
 3 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index 809fdbd..025b42a 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -598,6 +598,7 @@ static int caam_probe(struct platform_device *pdev)
 	};
 	struct device *dev;
 	struct device_node *nprop, *np;
+	struct resource res_regs;
 	struct caam_ctrl __iomem *ctrl;
 	struct caam_drv_private *ctrlpriv;
 
@@ -675,11 +676,25 @@ static int caam_probe(struct platform_device *pdev)
 		goto disable_clocks;
 	}
 
-	ctrlpriv->sm_base = of_iomap(np, 0);
+	/* Get CAAM SM registers base address from device tree */
+	ret = of_address_to_resource(np, 0, &res_regs);
+	if (ret) {
+		dev_err(dev, "failed to retrieve registers base from device tree\n");
+		ret = -ENODEV;
+		goto disable_clocks;
+	}
+
+	ctrlpriv->sm_phy = res_regs.start;
+	ctrlpriv->sm_base = devm_ioremap_resource(dev, &res_regs);
+	if (IS_ERR(ctrlpriv->sm_base)) {
+		ret = PTR_ERR(ctrlpriv->sm_base);
+		goto disable_clocks;
+	}
+
 	if (!of_machine_is_compatible("fsl,imx8mq") &&
 		!of_machine_is_compatible("fsl,imx8qm") &&
 		!of_machine_is_compatible("fsl,imx8qxp")) {
-		ctrlpriv->sm_size = 0x3fff;
+		ctrlpriv->sm_size = resource_size(&res_regs);
 	} else {
 		ctrlpriv->sm_size = PG_SIZE_64K;
 	}
diff --git a/drivers/crypto/caam/intern.h b/drivers/crypto/caam/intern.h
index 73a7d5a..c7b0e10 100644
--- a/drivers/crypto/caam/intern.h
+++ b/drivers/crypto/caam/intern.h
@@ -92,6 +92,7 @@ struct caam_drv_private {
 	struct caam_queue_if __iomem *qi; /* QI control region */
 	struct caam_job_ring __iomem *jr[JOBR_MAX_COUNT]; /* JRs registers */
 	dma_addr_t __iomem *sm_base;	/* Secure memory storage base */
+	phys_addr_t sm_phy;		/* Secure memory storage physical */
 	u32 sm_size;
 
 	/*
diff --git a/drivers/crypto/caam/sm_store.c b/drivers/crypto/caam/sm_store.c
index 7288922..5ce7f25 100644
--- a/drivers/crypto/caam/sm_store.c
+++ b/drivers/crypto/caam/sm_store.c
@@ -1120,8 +1120,8 @@ int caam_sm_startup(struct platform_device *pdev)
 				lpagedesc[page].pg_phys = (u8 *)0x20800000 +
 					(smpriv->page_size * page);
 			} else {
-/* FIXME: get base address from platform property... */
-				lpagedesc[page].pg_phys = (u8 *)0x00100000 +
+				lpagedesc[page].pg_phys =
+					(u8 *) ctrlpriv->sm_phy +
 					(smpriv->page_size * page);
 			}
 			lpagect++;
-- 
1.7.9.5

