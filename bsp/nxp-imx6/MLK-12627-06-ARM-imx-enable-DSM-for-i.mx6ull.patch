From e37ca39ce2efadead732ed693c6a6142c0b37cd6 Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Wed, 6 Apr 2016 14:48:32 +0800
Subject: [PATCH 1004/5242] MLK-12627-06 ARM: imx: enable DSM for i.mx6ull

commit  1e6634a31d7fc2c1a8f36c48295ed7b92963f974 from
https://source.codeaurora.org/external/imx/linux-imx.git

Enable DSM for i.MX6ULL, UART_UBRC is a read-only
register, writting it will cause external abort,
so skip save/restore for this register.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-imx/anatop.c  |    8 ++++----
 arch/arm/mach-imx/pm-imx6.c |   14 +++++++-------
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-imx/anatop.c b/arch/arm/mach-imx/anatop.c
index 382b34d..a81e8f8 100644
--- a/arch/arm/mach-imx/anatop.c
+++ b/arch/arm/mach-imx/anatop.c
@@ -69,7 +69,7 @@ static void imx_anatop_enable_weak2p5(bool enable)
 
 	regmap_read(anatop, ANADIG_ANA_MISC0, &val);
 
-	if (cpu_is_imx6sx() || cpu_is_imx6ul())
+	if (cpu_is_imx6sx() || cpu_is_imx6ul() || cpu_is_imx6ull())
 		mask = BM_ANADIG_ANA_MISC0_V3_STOP_MODE_CONFIG;
 	else if (cpu_is_imx6sl())
 		mask = BM_ANADIG_ANA_MISC0_V2_STOP_MODE_CONFIG;
@@ -96,7 +96,7 @@ static inline void imx_anatop_enable_2p5_pulldown(bool enable)
 
 static inline void imx_anatop_disconnect_high_snvs(bool enable)
 {
-	if (cpu_is_imx6sx() || cpu_is_imx6ul())
+	if (cpu_is_imx6sx() || cpu_is_imx6ul() || cpu_is_imx6ull())
 		regmap_write(anatop, ANADIG_ANA_MISC0 +
 			(enable ? REG_SET : REG_CLR),
 			BM_ANADIG_ANA_MISC0_V2_DISCON_HIGH_SNVS);
@@ -155,7 +155,7 @@ void imx_anatop_pre_suspend(void)
 
 	imx_anatop_enable_fet_odrive(true);
 
-	if (cpu_is_imx6sl() || cpu_is_imx6sx() || cpu_is_imx6ul())
+	if (cpu_is_imx6sl() || cpu_is_imx6sx() || cpu_is_imx6ul() || cpu_is_imx6ull())
 		imx_anatop_disconnect_high_snvs(true);
 }
 
@@ -183,7 +183,7 @@ void imx_anatop_post_resume(void)
 
 	imx_anatop_enable_fet_odrive(false);
 
-	if (cpu_is_imx6sl() || cpu_is_imx6sx() || cpu_is_imx6ul())
+	if (cpu_is_imx6sl() || cpu_is_imx6sx() || cpu_is_imx6ul() || cpu_is_imx6ull())
 		imx_anatop_disconnect_high_snvs(false);
 
 }
diff --git a/arch/arm/mach-imx/pm-imx6.c b/arch/arm/mach-imx/pm-imx6.c
index cd678c4..56910b1 100644
--- a/arch/arm/mach-imx/pm-imx6.c
+++ b/arch/arm/mach-imx/pm-imx6.c
@@ -734,8 +734,7 @@ static void imx6_console_save(unsigned int *regs)
 	regs[6] = readl_relaxed(console_base + UART_UTIM);
 	regs[7] = readl_relaxed(console_base + UART_UBIR);
 	regs[8] = readl_relaxed(console_base + UART_UBMR);
-	regs[9] = readl_relaxed(console_base + UART_UBRC);
-	regs[10] = readl_relaxed(console_base + UART_UTS);
+	regs[9] = readl_relaxed(console_base + UART_UTS);
 }
 
 static void imx6_console_restore(unsigned int *regs)
@@ -748,8 +747,7 @@ static void imx6_console_restore(unsigned int *regs)
 	writel_relaxed(regs[6], console_base + UART_UTIM);
 	writel_relaxed(regs[7], console_base + UART_UBIR);
 	writel_relaxed(regs[8], console_base + UART_UBMR);
-	writel_relaxed(regs[9], console_base + UART_UBRC);
-	writel_relaxed(regs[10], console_base + UART_UTS);
+	writel_relaxed(regs[9], console_base + UART_UTS);
 	writel_relaxed(regs[0], console_base + UART_UCR1);
 	writel_relaxed(regs[1] | 0x1, console_base + UART_UCR2);
 	writel_relaxed(regs[2], console_base + UART_UCR3);
@@ -783,7 +781,7 @@ static void imx6_qspi_restore(struct qspi_regs *pregs, int reg_num)
 
 static int imx6q_pm_enter(suspend_state_t state)
 {
-	unsigned int console_saved_reg[11] = {0};
+	unsigned int console_saved_reg[10] = {0};
 	static unsigned int ccm_ccgr4, ccm_ccgr6;
 
 #ifdef CONFIG_SOC_IMX6SX
@@ -835,7 +833,8 @@ static int imx6q_pm_enter(suspend_state_t state)
 			imx6_enable_rbc(true);
 		imx_gpc_pre_suspend(true);
 		imx_anatop_pre_suspend();
-		imx6_console_save(console_saved_reg);
+		if (cpu_is_imx6ull() && imx_gpc_is_mf_mix_off())
+			imx6_console_save(console_saved_reg);
 		if (cpu_is_imx6sx() && imx_gpc_is_mf_mix_off()) {
 			ccm_ccgr4 = readl_relaxed(ccm_base + CCGR4);
 			ccm_ccgr6 = readl_relaxed(ccm_base + CCGR6);
@@ -874,9 +873,10 @@ static int imx6q_pm_enter(suspend_state_t state)
 					sizeof(qspi_regs_imx6sx) /
 					sizeof(struct qspi_regs));
 		}
+		if (cpu_is_imx6ull() && imx_gpc_is_mf_mix_off())
+			imx6_console_restore(console_saved_reg);
 		if (cpu_is_imx6q() || cpu_is_imx6dl())
 			imx_smp_prepare();
-		imx6_console_restore(console_saved_reg);
 		imx_anatop_post_resume();
 		imx_gpc_post_resume();
 		imx6_enable_rbc(false);
-- 
1.7.9.5

