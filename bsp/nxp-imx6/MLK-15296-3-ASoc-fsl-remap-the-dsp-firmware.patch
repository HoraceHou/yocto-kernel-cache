From 1439dfc5e18ecb66645fcbf6eb7396b83f377d1a Mon Sep 17 00:00:00 2001
From: Weiguang Kong <weiguang.kong@nxp.com>
Date: Wed, 28 Jun 2017 13:06:19 +0800
Subject: [PATCH 2037/5242] MLK-15296-3: ASoc: fsl: remap the dsp firmware

commit  54bdc26d98ab7cca1f1b455ea4becec401cbaa1c from
https://source.codeaurora.org/external/imx/linux-imx.git

In order to use the hifi4's Cache to cache the firmware's
.rodata, .text, .data, .bss section and hifi4 core lib's
.text section, the firmware's .rodata, .text, .data and
.bss section should be remaped to 0x20700000 - 0x20FFFFFF
address range. This patch is used to parse the firmware
and load each section to corresponding address range.

This patch also set csr_gpr_control to 0x515A2080 to
remap the hifi4's address range in SCFW.

In addtion, add cases to support hifi4 framework's
performance test.

Signed-off-by: Weiguang Kong <weiguang.kong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_hifi4.c |   45 +++++++++++++++++++++++++++++++++++++++++++--
 sound/soc/fsl/fsl_hifi4.h |    8 ++++++++
 2 files changed, 51 insertions(+), 2 deletions(-)

diff --git a/sound/soc/fsl/fsl_hifi4.c b/sound/soc/fsl/fsl_hifi4.c
index b54d149..29bff0b 100644
--- a/sound/soc/fsl/fsl_hifi4.c
+++ b/sound/soc/fsl/fsl_hifi4.c
@@ -646,6 +646,7 @@ static long fsl_hifi4_decode_frame(struct fsl_hifi4 *hifi4_priv,
 
 	decode_info.in_buf_off = codec_iobuf_info->inp_cur_offset;
 	decode_info.out_buf_off = codec_iobuf_info->out_cur_offset;
+	decode_info.cycles = codec_iobuf_info->cycles;
 
 	ret = copy_to_user(user, &decode_info, sizeof(decode_info));
 	if (ret) {
@@ -1015,6 +1016,8 @@ int process_act_complete(struct fsl_hifi4 *hifi4_priv, u32 msg)
 						ext_msg->inp_cur_offset;
 				codec_iobuf_info->out_cur_offset =
 						ext_msg->out_cur_offset;
+				codec_iobuf_info->cycles =
+						ext_msg->cycles;
 			}
 			complete(&hifi4_priv->cmd_complete);
 			hifi4_priv->is_done = 1;
@@ -1173,12 +1176,21 @@ static void hifi4_load_firmware(const struct firmware *fw, void *context)
 			shdr->sh_addr == 0 || shdr->sh_size == 0)
 			continue;
 
-		if (strtab)
+		if (strtab) {
 			dev_dbg(dev, "%sing %s @ 0x%08lx (%ld bytes)\n",
 			  (shdr->sh_type == SHT_NOBITS) ? "Clear" : "Load",
 				&strtab[shdr->sh_name],
 				(unsigned long)shdr->sh_addr,
 				(long)shdr->sh_size);
+		}
+
+		if ((!strcmp(&strtab[shdr->sh_name], ".rodata")) ||
+		    (!strcmp(&strtab[shdr->sh_name], ".text"))   ||
+		    (!strcmp(&strtab[shdr->sh_name], ".data"))   ||
+		    (!strcmp(&strtab[shdr->sh_name], ".bss"))
+		   ) {
+			shdr->sh_addr = shdr->sh_addr + MEMORY_REMAP_OFFSET;
+		}
 
 		if (shdr->sh_type == SHT_NOBITS) {
 			memset_hifi((void *)(hifi4_priv->regs +
@@ -1312,6 +1324,34 @@ static int fsl_hifi4_probe(struct platform_device *pdev)
 		return -EIO;
 	}
 
+	sciErr = sc_misc_set_control(hifi4_priv->hifi_ipcHandle, SC_R_DSP,
+				SC_C_OFS_SEL, 1);
+	if (sciErr != SC_ERR_NONE) {
+		dev_err(&pdev->dev, "Error system address offset source select\n");
+		return -EIO;
+	}
+
+	sciErr = sc_misc_set_control(hifi4_priv->hifi_ipcHandle, SC_R_DSP,
+				SC_C_OFS_AUDIO, 0x20);
+	if (sciErr != SC_ERR_NONE) {
+		dev_err(&pdev->dev, "Error system address offset of AUDIO\n");
+		return -EIO;
+	}
+
+	sciErr = sc_misc_set_control(hifi4_priv->hifi_ipcHandle, SC_R_DSP,
+				SC_C_OFS_PERIPH, 0x5A);
+	if (sciErr != SC_ERR_NONE) {
+		dev_err(&pdev->dev, "Error system address offset of PERIPH\n");
+		return -EIO;
+	}
+
+	sciErr = sc_misc_set_control(hifi4_priv->hifi_ipcHandle, SC_R_DSP,
+				SC_C_OFS_IRQ, 0x51);
+	if (sciErr != SC_ERR_NONE) {
+		dev_err(&pdev->dev, "Error system address offset of IRQ\n");
+		return -EIO;
+	}
+
 	ret = hifi4_mu_init(hifi4_priv);
 	if (ret)
 		return ret;
@@ -1332,7 +1372,8 @@ static int fsl_hifi4_probe(struct platform_device *pdev)
 
 	/* code buffer */
 	hifi4_priv->code_buf_virt = hifi4_priv->regs  + LIBRARY_CODE_OFFSET;
-	hifi4_priv->code_buf_phys = hifi4_priv->paddr + LIBRARY_CODE_OFFSET;
+	hifi4_priv->code_buf_phys = hifi4_priv->paddr + LIBRARY_CODE_OFFSET -
+							MEMORY_REMAP_OFFSET;
 	hifi4_priv->code_buf_size = LIBRARY_CODE_SIZE;
 
 	size = MSG_BUF_SIZE + INPUT_BUF_SIZE +
diff --git a/sound/soc/fsl/fsl_hifi4.h b/sound/soc/fsl/fsl_hifi4.h
index e7b60e7..eb10a7c 100644
--- a/sound/soc/fsl/fsl_hifi4.h
+++ b/sound/soc/fsl/fsl_hifi4.h
@@ -55,6 +55,7 @@ struct icm_cdc_iobuf_t {
 	u32 out_buf_size_max;		/* init by APU */
 	u32 out_cur_offset;		/* init by APU, updated by DPU */
 	s32 ret;
+	u32 cycles;		        /* consumed cycles during executing */
 };
 
 struct icm_cdc_uinp_t {
@@ -257,6 +258,13 @@ struct hifi4_mem_msg {
 #define FIRMWARE_DATA_BUF_SIZE	0x100000
 #define SCRATCH_DATA_BUF_SIZE	0x100000
 
+#define MEMORY_REMAP_OFFSET	0x39000000
+
+#define SC_C_OFS_SEL    39
+#define SC_C_OFS_AUDIO  40
+#define SC_C_OFS_PERIPH 41
+#define SC_C_OFS_IRQ    42
+
 static void hifi4_load_firmware(const struct firmware *fw, void *context);
 u32 icm_intr_send(struct fsl_hifi4 *hifi4_priv, u32 msg);
 u32 icm_intr_extended_send(struct fsl_hifi4 *hifi4_priv, u32 msg,
-- 
1.7.9.5

