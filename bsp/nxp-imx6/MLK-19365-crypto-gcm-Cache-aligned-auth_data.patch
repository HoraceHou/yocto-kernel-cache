From 33bedd7c2a6091abc701b7bcf9354c48a653f861 Mon Sep 17 00:00:00 2001
From: Franck LENORMAND <franck.lenormand@nxp.com>
Date: Fri, 14 Sep 2018 10:31:57 +0200
Subject: [PATCH 4723/5242] MLK-19365: crypto: gcm: Cache aligned auth_data

commit  d08385adac5ddc25931b27af9f27a74f60ec1634 from
https://source.codeaurora.org/external/imx/linux-imx.git

Generic GCM is likely to end up using a hardware accelerator to do
part of the job. Allocating hash, iv and result in a contiguous memory
area increases the risk of dma mapping multiple ranges on the same
cacheline. Also having dma and cpu written data on the same cacheline
will cause coherence issues.

Signed-off-by: Franck LENORMAND <franck.lenormand@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 crypto/gcm.c |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/crypto/gcm.c b/crypto/gcm.c
index 0ad879e..c86ad12 100644
--- a/crypto/gcm.c
+++ b/crypto/gcm.c
@@ -66,7 +66,18 @@ struct crypto_gcm_ghash_ctx {
 
 struct crypto_gcm_req_priv_ctx {
 	u8 iv[16];
-	u8 auth_tag[16];
+
+	/*
+	 * We need to force auth_tag to be on its own cacheline.
+	 *
+	 * We put it on its cacheline with the macro ____cacheline_aligned.
+	 * The next fields must be on another cacheline so we add a dummy field
+	 * which is located on another cacheline to enforce that.
+	 */
+	u8 auth_tag[16] ____cacheline_aligned;
+
+	u8 dummy_align_auth_tag ____cacheline_aligned;
+
 	u8 iauth_tag[16];
 	struct scatterlist src[3];
 	struct scatterlist dst[3];
-- 
1.7.9.5

