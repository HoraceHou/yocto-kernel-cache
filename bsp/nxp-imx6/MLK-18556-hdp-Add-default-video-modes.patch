From 6720f4bb1e98e8f98aaee627abb8d144c573f3ff Mon Sep 17 00:00:00 2001
From: Sandor Yu <Sandor.yu@nxp.com>
Date: Mon, 11 Jun 2018 14:32:00 +0800
Subject: [PATCH 4007/5242] MLK-18556: hdp: Add default video modes

commit  e4a151a1c58bb9ff380547040182789ebbef736e from
https://source.codeaurora.org/external/imx/linux-imx.git

Add default video modes if EDID read failed.

Signed-off-by: Sandor Yu <Sandor.yu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/hdp/imx-hdp.c |   44 +++++++++++++++++++++++--------------
 1 file changed, 28 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/imx/hdp/imx-hdp.c b/drivers/gpu/drm/imx/hdp/imx-hdp.c
index f8b3a79..37bb938 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdp.c
+++ b/drivers/gpu/drm/imx/hdp/imx-hdp.c
@@ -576,14 +576,27 @@ static void imx_hdp_bridge_enable(struct drm_bridge *bridge)
 	}
 }
 
-static int imx_hdp_connector_get_modes(struct drm_connector *connector)
+static int imx_hdp_default_video_modes(struct drm_connector *connector)
 {
 	struct drm_display_mode *mode;
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(edid_cea_modes); i++) {
+		mode = drm_mode_create(connector->dev);
+		if (!mode)
+			return -EINVAL;
+		drm_mode_copy(mode, &edid_cea_modes[i]);
+		mode->type |= DRM_MODE_TYPE_DRIVER | DRM_MODE_TYPE_PREFERRED;
+		drm_mode_probed_add(connector, mode);
+	}
+	return i;
+}
+
+static int imx_hdp_connector_get_modes(struct drm_connector *connector)
+{
 	struct imx_hdp *hdp = container_of(connector, struct imx_hdp, connector);
 	struct edid *edid;
 	int num_modes = 0;
-	int ret;
-	int i;
 
 	if (hdp->is_edid == true) {
 		edid = drm_do_get_edid(connector, hdp->ops->get_edid_block, &hdp->state);
@@ -592,22 +605,21 @@ static int imx_hdp_connector_get_modes(struct drm_connector *connector)
 					edid->header[0], edid->header[1], edid->header[2], edid->header[3],
 					edid->header[4], edid->header[5], edid->header[6], edid->header[7]);
 			drm_mode_connector_update_edid_property(connector, edid);
-			ret = drm_add_edid_modes(connector, edid);
-			/* Store the ELD */
-			drm_edid_to_eld(connector, edid);
+			num_modes = drm_add_edid_modes(connector, edid);
+			if (num_modes == 0) {
+				dev_dbg(hdp->dev, "Invalid edid, use default video modes\n");
+				num_modes = imx_hdp_default_video_modes(connector);
+			} else
+				/* Store the ELD */
+				drm_edid_to_eld(connector, edid);
 			kfree(edid);
+		} else {
+				dev_dbg(hdp->dev, "failed to get edid, use default video modes\n");
+				num_modes = imx_hdp_default_video_modes(connector);
 		}
 	} else {
-		dev_dbg(hdp->dev, "failed to get edid\n");
-		for (i = 0; i < ARRAY_SIZE(edid_cea_modes); i++) {
-			mode = drm_mode_create(connector->dev);
-			if (!mode)
-				return -EINVAL;
-			drm_mode_copy(mode, &edid_cea_modes[i]);
-			mode->type |= DRM_MODE_TYPE_DRIVER | DRM_MODE_TYPE_PREFERRED;
-			drm_mode_probed_add(connector, mode);
-		}
-		num_modes = i;
+		dev_dbg(hdp->dev, "No EDID function, use default video mode\n");
+		num_modes = imx_hdp_default_video_modes(connector);
 	}
 
 	return num_modes;
-- 
1.7.9.5

