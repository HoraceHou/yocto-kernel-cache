From 4002070d86e197f332ae0c63d144992a8316664a Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Mon, 6 Feb 2017 13:33:42 +0800
Subject: [PATCH 1498/5242] MLK-13733-5 ARM: imx: imx_rpmsg: add shutdown for
 rpmsg

commit  ba3c004f6a321ace3950053e85c6f1261f8210e8 from
https://source.codeaurora.org/external/imx/linux-imx.git

Add shutdown message to notify m4 side so that rpmsg can work
after A7 boot again.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-imx/common.h    |    6 ++++++
 arch/arm/mach-imx/imx_rpmsg.c |    9 +++++++++
 arch/arm/mach-imx/pm-rpmsg.c  |   16 ++++++++++++++++
 3 files changed, 31 insertions(+)

diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index e059b1a..5e933fe 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -205,6 +205,12 @@ static inline void imx7ulp_suspend(void __iomem *ocram_vbase) {}
 void pm_vlls_notify_m4(bool enter) {}
 #endif
 
+#ifdef CONFIG_SOC_IMX7ULP
+void pm_shutdown_notify_m4(void);
+#else
+static inline void pm_shutdown_notify_m4(void) {}
+#endif
+
 void imx6_pm_ccm_init(const char *ccm_compat);
 void imx6q_pm_init(void);
 void imx6dl_pm_init(void);
diff --git a/arch/arm/mach-imx/imx_rpmsg.c b/arch/arm/mach-imx/imx_rpmsg.c
index 9c85afe..0eadbb6 100644
--- a/arch/arm/mach-imx/imx_rpmsg.c
+++ b/arch/arm/mach-imx/imx_rpmsg.c
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 Freescale Semiconductor, Inc.
+ * Copyright 2017 NXP
  *
  * derived from the omap-rpmsg implementation.
  *
@@ -25,6 +26,7 @@
 #include <linux/virtio_ids.h>
 #include <linux/virtio_ring.h>
 #include <linux/imx_rpmsg.h>
+#include "common.h"
 
 struct imx_virdev {
 	struct virtio_device vdev;
@@ -394,6 +396,12 @@ static int imx_rpmsg_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static void imx_rpmsg_shutdown(struct platform_device *pdev)
+{
+	pm_shutdown_notify_m4();
+	pr_info("shutdown imx rpmsg.\n");
+}
+
 static struct platform_driver imx_rpmsg_driver = {
 	.driver = {
 		   .owner = THIS_MODULE,
@@ -402,6 +410,7 @@ static int imx_rpmsg_remove(struct platform_device *pdev)
 		   },
 	.probe = imx_rpmsg_probe,
 	.remove = imx_rpmsg_remove,
+	.shutdown = imx_rpmsg_shutdown,
 };
 
 static int __init imx_rpmsg_init(void)
diff --git a/arch/arm/mach-imx/pm-rpmsg.c b/arch/arm/mach-imx/pm-rpmsg.c
index a98bf8f..6307902 100644
--- a/arch/arm/mach-imx/pm-rpmsg.c
+++ b/arch/arm/mach-imx/pm-rpmsg.c
@@ -41,6 +41,7 @@ enum pm_rpmsg_power_mode {
 	PM_RPMSG_WAIT,
 	PM_RPMSG_VLPS,
 	PM_RPMSG_VLLS,
+	PM_RPMSG_SHUTDOWN,
 };
 
 struct pm_rpmsg_info {
@@ -95,6 +96,21 @@ void pm_vlls_notify_m4(bool enter)
 	pm_send_message(&msg, &pm_rpmsg);
 }
 
+void pm_shutdown_notify_m4(void)
+{
+	struct pm_rpmsg_data msg;
+
+	msg.header.cate = IMX_RMPSG_LIFECYCLE;
+	msg.header.major = IMX_RMPSG_MAJOR;
+	msg.header.minor = IMX_RMPSG_MINOR;
+	msg.header.type = PM_RPMSG_TYPE;
+	msg.header.cmd = PM_RPMSG_MODE;
+	msg.data = PM_RPMSG_SHUTDOWN;
+
+	pm_send_message(&msg, &pm_rpmsg);
+
+}
+
 static void pm_heart_beat_work_handler(struct work_struct *work)
 {
 	struct pm_rpmsg_data msg;
-- 
1.7.9.5

