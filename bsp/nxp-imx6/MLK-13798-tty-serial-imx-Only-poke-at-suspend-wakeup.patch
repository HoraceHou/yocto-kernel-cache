From da4ce758c6fef7d6343353b54ccef153339d606e Mon Sep 17 00:00:00 2001
From: Leonard Crestez <leonard.crestez@nxp.com>
Date: Thu, 26 Jan 2017 13:39:02 +0200
Subject: [PATCH 1389/5242] MLK-13798 tty: serial: imx: Only poke at suspend
 wakeup bits in noirq phase

commit  3a50b699cf16bc5863e9e1d76169072338af0bbe from
https://source.codeaurora.org/external/imx/linux-imx.git

This prevents unwanted interrupts coming in early suspend.

Loosely based on 81e8e7d91d81351d9fea4ad7c289b122706640fd from imx_4.1.y:

	MLK-11382 tty: serial: imx: disable irq after suspend

	Disable rx irq after suspend to avoid interrupt coming in early
	resume.

	Signed-off-by: Fugang Duan <B38611@freescale.com>

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/tty/serial/imx.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 2d76407..2d678842 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -2455,6 +2455,9 @@ static int imx_uart_suspend_noirq(struct device *dev)
 {
 	struct imx_port *sport = dev_get_drvdata(dev);
 
+	/* enable wakeup from i.MX UART */
+	serial_imx_enable_wakeup(sport, true);
+
 	imx_uart_save_context(sport);
 
 	clk_disable(sport->clk_ipg);
@@ -2477,6 +2480,9 @@ static int imx_uart_resume_noirq(struct device *dev)
 
 	imx_uart_restore_context(sport);
 
+	/* disable wakeup from i.MX UART */
+	serial_imx_enable_wakeup(sport, false);
+
 	return 0;
 }
 
@@ -2492,9 +2498,6 @@ static int imx_uart_suspend(struct device *dev)
 	if (ret)
 		return ret;
 
-	/* enable wakeup from i.MX UART */
-	imx_uart_enable_wakeup(sport, true);
-
 	return 0;
 }
 
@@ -2502,9 +2505,6 @@ static int imx_uart_resume(struct device *dev)
 {
 	struct imx_port *sport = dev_get_drvdata(dev);
 
-	/* disable wakeup from i.MX UART */
-	imx_uart_enable_wakeup(sport, false);
-
 	uart_resume_port(&imx_uart_uart_driver, &sport->port);
 	enable_irq(sport->port.irq);
 
-- 
1.7.9.5

