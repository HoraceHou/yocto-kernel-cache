From a18240cb93f65b781c098c572916dfe742f905d8 Mon Sep 17 00:00:00 2001
From: Daniel Baluta <daniel.baluta@nxp.com>
Date: Fri, 19 Oct 2018 14:09:17 +0300
Subject: [PATCH 4948/5242] MLK-19972-2: ASoC: fsl: dsp: Fix component
 creation cleanup path

commit  fb214bbcecaac68113bf2f38f26831bffa5a7e45 from
https://source.codeaurora.org/external/imx/linux-imx.git

Because we don't correctly free resources when an error occurs
on component creation path we can end up with partially initialized
components.

Freeing such partially initialized components most of the time leads
to kernel crashing in pain.

Avoid this by making sure we either:
	* return a fully initialized component, comp->active = true
	* don't "create" the component at all, comp->active = false

Reviewed-by: Shengjiu Wang <shengjiu.wang@nxp.com>
Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_dsp_xaf_api.c |   23 ++++++++++++++++++++---
 sound/soc/fsl/fsl_dsp_xaf_api.h |    2 ++
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/sound/soc/fsl/fsl_dsp_xaf_api.c b/sound/soc/fsl/fsl_dsp_xaf_api.c
index f40560b0..05d1a16 100644
--- a/sound/soc/fsl/fsl_dsp_xaf_api.c
+++ b/sound/soc/fsl/fsl_dsp_xaf_api.c
@@ -233,14 +233,14 @@ int xaf_comp_create(struct xf_client *client, struct xf_proxy *proxy,
 		ret = xf_load_lib(client, p_handle, &p_comp->codec_wrap_lib);
 		if (ret) {
 			dev_err(dsp_priv->dev, "load codec wrap lib error\n");
-			return ret;
+			goto err_wrap_load;
 		}
 
 		/* ...load codec lib */
 		ret = xf_load_lib(client, p_handle, &p_comp->codec_lib);
 		if (ret) {
 			dev_err(dsp_priv->dev, "load codec lib error\n");
-			return ret;
+			goto err_codec_load;
 		}
 
 		/* ...allocate input buffer */
@@ -248,7 +248,7 @@ int xaf_comp_create(struct xf_client *client, struct xf_proxy *proxy,
 				    XF_POOL_INPUT, &p_comp->inpool);
 		if (ret) {
 			dev_err(dsp_priv->dev, "alloc input buf error\n");
-			return ret;
+			goto err_pool_alloc;
 		}
 
 		/* ...initialize input buffer pointer */
@@ -256,6 +256,17 @@ int xaf_comp_create(struct xf_client *client, struct xf_proxy *proxy,
 		p_comp->inptr = xf_buffer_data(buf);
 	}
 
+	p_comp->active = true;
+
+	return ret;
+
+err_pool_alloc:
+	xf_unload_lib(client, p_handle, &p_comp->codec_lib);
+err_codec_load:
+	xf_unload_lib(client, p_handle, &p_comp->codec_wrap_lib);
+err_wrap_load:
+	xf_close(client, p_handle);
+
 	return ret;
 }
 
@@ -266,6 +277,12 @@ int xaf_comp_delete(struct xf_client *client, struct xaf_comp *p_comp)
 	bool   loadlib = true;
 	u32 ret = 0;
 
+	if (!p_comp->active)
+		return ret;
+
+	/* mark component as unusable from this point */
+	p_comp->active = false;
+
 	if (p_comp->comp_type == RENDER_ESAI)
 		loadlib = false;
 
diff --git a/sound/soc/fsl/fsl_dsp_xaf_api.h b/sound/soc/fsl/fsl_dsp_xaf_api.h
index 5087b46..d6dc734 100644
--- a/sound/soc/fsl/fsl_dsp_xaf_api.h
+++ b/sound/soc/fsl/fsl_dsp_xaf_api.h
@@ -45,6 +45,8 @@ struct xaf_comp {
 
 	struct lib_info codec_lib;
 	struct lib_info codec_wrap_lib;
+
+	int active; /* component fully initialized */
 };
 
 struct xaf_pipeline {
-- 
1.7.9.5

