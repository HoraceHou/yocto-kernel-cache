From a915663f7d9d7bb404bae2764dad3ef2af27fe26 Mon Sep 17 00:00:00 2001
From: Robert Chiras <robert.chiras@nxp.com>
Date: Fri, 8 Dec 2017 16:19:15 +0200
Subject: [PATCH 3056/5242] MLK-17047-1: drm/mxsfb: Fix suspend/resume

commit  69391b1b6d0cc0a676968f9954469d89cdb73621 from
https://source.codeaurora.org/external/imx/linux-imx.git

MXSFB should always request bus_freq when enabled and release bus_freq
when disabled. Also, when suspend/resume occurs, check if the driver is
running, so what we won't enable it by mistake in resume.

Signed-off-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/mxsfb/mxsfb_crtc.c |    7 +++++++
 drivers/gpu/drm/mxsfb/mxsfb_drv.c  |   14 ++++++--------
 drivers/gpu/drm/mxsfb/mxsfb_drv.h  |    1 +
 3 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/mxsfb/mxsfb_crtc.c b/drivers/gpu/drm/mxsfb/mxsfb_crtc.c
index 1f9ae40..c5ae32a 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_crtc.c
+++ b/drivers/gpu/drm/mxsfb/mxsfb_crtc.c
@@ -26,6 +26,7 @@
 #include <drm/drm_of.h>
 #include <drm/drm_plane_helper.h>
 #include <drm/drm_simple_kms_helper.h>
+#include <linux/busfreq-imx.h>
 #include <linux/clk.h>
 #include <linux/iopoll.h>
 #include <linux/of_graph.h>
@@ -362,6 +363,9 @@ void mxsfb_crtc_enable(struct mxsfb_drm_private *mxsfb)
 	if (mxsfb->enabled)
 		return;
 
+	if (mxsfb->devdata->flags & MXSFB_FLAG_BUSFREQ)
+		request_bus_freq(BUS_FREQ_HIGH);
+
 	writel(0, mxsfb->base + LCDC_CTRL);
 	mxsfb_crtc_mode_set_nofb(mxsfb);
 	mxsfb_enable_controller(mxsfb);
@@ -376,6 +380,9 @@ void mxsfb_crtc_disable(struct mxsfb_drm_private *mxsfb)
 
 	mxsfb_disable_controller(mxsfb);
 
+	if (mxsfb->devdata->flags & MXSFB_FLAG_BUSFREQ)
+		release_bus_freq(BUS_FREQ_HIGH);
+
 	mxsfb->enabled = false;
 }
 
diff --git a/drivers/gpu/drm/mxsfb/mxsfb_drv.c b/drivers/gpu/drm/mxsfb/mxsfb_drv.c
index e45518b..4445844 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_drv.c
+++ b/drivers/gpu/drm/mxsfb/mxsfb_drv.c
@@ -27,7 +27,6 @@
 #include <linux/pm_runtime.h>
 #include <linux/reservation.h>
 #include <linux/version.h>
-#include <linux/busfreq-imx.h>
 
 #include <drm/drmP.h>
 #include <drm/drm_atomic.h>
@@ -506,9 +505,7 @@ static int mxsfb_runtime_suspend(struct device *dev)
 		return 0;
 
 	mxsfb_crtc_disable(mxsfb);
-
-	if (mxsfb->devdata->flags & MXSFB_FLAG_BUSFREQ)
-		release_bus_freq(BUS_FREQ_HIGH);
+	mxsfb->suspended = true;
 
 	return 0;
 }
@@ -518,12 +515,9 @@ static int mxsfb_runtime_resume(struct device *dev)
 	struct drm_device *drm = dev_get_drvdata(dev);
 	struct mxsfb_drm_private *mxsfb = drm->dev_private;
 
-	if (!drm->registered)
+	if (!drm->registered || !mxsfb->suspended)
 		return 0;
 
-	if (mxsfb->devdata->flags & MXSFB_FLAG_BUSFREQ)
-		request_bus_freq(BUS_FREQ_HIGH);
-
 	mxsfb_crtc_enable(mxsfb);
 
 	return 0;
@@ -535,6 +529,7 @@ static int mxsfb_suspend(struct device *dev)
 	struct mxsfb_drm_private *mxsfb = drm->dev_private;
 
 	mxsfb_crtc_disable(mxsfb);
+	mxsfb->suspended = true;
 
 	return 0;
 }
@@ -544,6 +539,9 @@ static int mxsfb_resume(struct device *dev)
 	struct drm_device *drm = dev_get_drvdata(dev);
 	struct mxsfb_drm_private *mxsfb = drm->dev_private;
 
+	if (!mxsfb->suspended)
+		return 0;
+
 	mxsfb_crtc_enable(mxsfb);
 
 	return 0;
diff --git a/drivers/gpu/drm/mxsfb/mxsfb_drv.h b/drivers/gpu/drm/mxsfb/mxsfb_drv.h
index 9023624..b4c98d4 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_drv.h
+++ b/drivers/gpu/drm/mxsfb/mxsfb_drv.h
@@ -46,6 +46,7 @@ struct mxsfb_drm_private {
 
 	struct drm_gem_cma_object	*gem;
 	bool				enabled;
+	bool				suspended;
 };
 
 int mxsfb_setup_crtc(struct drm_device *dev);
-- 
1.7.9.5

