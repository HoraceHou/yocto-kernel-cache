From 43caef34aa18a03ab14dc5df3edf4875ad921b67 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Mon, 18 Sep 2017 11:25:30 +0800
Subject: [PATCH 4529/5242] MLK-19413-18 gpu: imx: tcon: Add side-by-side
 support

commit  33529c7e5292fb0b46eb6b5654df56125716dd67 from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch adds side-by-side support for tcon so that
two tcons can participate in the dual display streams
to work with pixel combiner to drive a high pixel rate
display.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-crtc.c |    2 +-
 drivers/gpu/imx/dpu/dpu-tcon.c     |   37 ++++++++++++++++++++++++++++--------
 include/video/dpu.h                |    3 ++-
 3 files changed, 32 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-crtc.c b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
index 4db11d0..cce37f1 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-crtc.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
@@ -536,7 +536,7 @@ static void dpu_crtc_mode_set_nofb(struct drm_crtc *crtc)
 
 	framegen_panic_displaymode(dpu_crtc->fg, FGDM__TEST);
 
-	tcon_cfg_videomode(dpu_crtc->tcon, mode);
+	tcon_cfg_videomode(dpu_crtc->tcon, mode, false);
 	tcon_set_fmt(dpu_crtc->tcon, imx_crtc_state->bus_format);
 
 	disengcfg_polarity_ctrl(dpu_crtc->dec, mode->flags);
diff --git a/drivers/gpu/imx/dpu/dpu-tcon.c b/drivers/gpu/imx/dpu/dpu-tcon.c
index cdc14b0..bac0c47 100644
--- a/drivers/gpu/imx/dpu/dpu-tcon.c
+++ b/drivers/gpu/imx/dpu/dpu-tcon.c
@@ -123,9 +123,23 @@ void tcon_set_operation_mode(struct dpu_tcon *tcon)
 }
 EXPORT_SYMBOL_GPL(tcon_set_operation_mode);
 
-void tcon_cfg_videomode(struct dpu_tcon *tcon, struct drm_display_mode *m)
+void tcon_cfg_videomode(struct dpu_tcon *tcon,
+			struct drm_display_mode *m, bool side_by_side)
 {
+	struct drm_display_mode tmp_m;
+	struct dpu_soc *dpu = tcon->dpu;
+	const struct dpu_devtype *devtype = dpu->devtype;
 	u32 val;
+	int y;
+
+	drm_mode_copy(&tmp_m, m);
+
+	if (side_by_side) {
+		tmp_m.hdisplay /= 2;
+		tmp_m.hsync_start /= 2;
+		tmp_m.hsync_end /= 2;
+		tmp_m.htotal /= 2;
+	}
 
 	mutex_lock(&tcon->mutex);
 	/*
@@ -138,21 +152,21 @@ void tcon_cfg_videomode(struct dpu_tcon *tcon, struct drm_display_mode *m)
 	dpu_tcon_write(tcon, val, TCON_CTRL);
 
 	/* dsp_control[0]: hsync */
-	dpu_tcon_write(tcon, X(m->hsync_start), SPGPOSON(0));
+	dpu_tcon_write(tcon, X(tmp_m.hsync_start), SPGPOSON(0));
 	dpu_tcon_write(tcon, 0xffff, SPGMASKON(0));
 
-	dpu_tcon_write(tcon, X(m->hsync_end), SPGPOSOFF(0));
+	dpu_tcon_write(tcon, X(tmp_m.hsync_end), SPGPOSOFF(0));
 	dpu_tcon_write(tcon, 0xffff, SPGMASKOFF(0));
 
 	dpu_tcon_write(tcon, 0x2, SMXSIGS(0));
 	dpu_tcon_write(tcon, 0x1, SMXFCTTABLE(0));
 
 	/* dsp_control[1]: vsync */
-	dpu_tcon_write(tcon, X(m->hsync_start) | Y(m->vsync_start - 1),
+	dpu_tcon_write(tcon, X(tmp_m.hsync_start) | Y(m->vsync_start - 1),
 								SPGPOSON(1));
 	dpu_tcon_write(tcon, 0x0, SPGMASKON(1));
 
-	dpu_tcon_write(tcon, X(m->hsync_start) | Y(m->vsync_end - 1),
+	dpu_tcon_write(tcon, X(tmp_m.hsync_start) | Y(m->vsync_end - 1),
 								SPGPOSOFF(1));
 	dpu_tcon_write(tcon, 0x0, SPGMASKOFF(1));
 
@@ -164,7 +178,7 @@ void tcon_cfg_videomode(struct dpu_tcon *tcon, struct drm_display_mode *m)
 	dpu_tcon_write(tcon, 0x0, SPGPOSON(2));
 	dpu_tcon_write(tcon, 0xffff, SPGMASKON(2));
 
-	dpu_tcon_write(tcon, X(m->hdisplay), SPGPOSOFF(2));
+	dpu_tcon_write(tcon, X(tmp_m.hdisplay), SPGPOSOFF(2));
 	dpu_tcon_write(tcon, 0xffff, SPGMASKOFF(2));
 
 	/* vertical */
@@ -178,10 +192,17 @@ void tcon_cfg_videomode(struct dpu_tcon *tcon, struct drm_display_mode *m)
 	dpu_tcon_write(tcon, 0x8, SMXFCTTABLE(2));
 
 	/* dsp_control[3]: kachuck */
-	dpu_tcon_write(tcon, X(0xa) | Y(m->vdisplay), SPGPOSON(4));
+	y = m->vdisplay;
+	/*
+	 * If sync mode fixup is present, the kachuck signal from slave tcon
+	 * should be one line later than the one from master tcon.
+	 */
+	if (side_by_side && tcon_is_slave(tcon) && devtype->has_syncmode_fixup)
+		y++;
+	dpu_tcon_write(tcon, X(0xa) | Y(y), SPGPOSON(4));
 	dpu_tcon_write(tcon, 0x0, SPGMASKON(4));
 
-	dpu_tcon_write(tcon, X(0x2a) | Y(m->vdisplay), SPGPOSOFF(4));
+	dpu_tcon_write(tcon, X(0x2a) | Y(y), SPGPOSOFF(4));
 	dpu_tcon_write(tcon, 0x0, SPGMASKOFF(4));
 
 	dpu_tcon_write(tcon, 0x6, SMXSIGS(3));
diff --git a/include/video/dpu.h b/include/video/dpu.h
index 4dfc253..fb09393 100644
--- a/include/video/dpu.h
+++ b/include/video/dpu.h
@@ -670,7 +670,8 @@ void layerblend_pixengcfg_clken(struct dpu_layerblend *lb,
 struct dpu_tcon;
 int tcon_set_fmt(struct dpu_tcon *tcon, u32 bus_format);
 void tcon_set_operation_mode(struct dpu_tcon *tcon);
-void tcon_cfg_videomode(struct dpu_tcon *tcon, struct drm_display_mode *m);
+void tcon_cfg_videomode(struct dpu_tcon *tcon,
+			struct drm_display_mode *m, bool side_by_side);
 bool tcon_is_master(struct dpu_tcon *tcon);
 bool tcon_is_slave(struct dpu_tcon *tcon);
 struct dpu_tcon *dpu_tcon_get(struct dpu_soc *dpu, int id);
-- 
1.7.9.5

