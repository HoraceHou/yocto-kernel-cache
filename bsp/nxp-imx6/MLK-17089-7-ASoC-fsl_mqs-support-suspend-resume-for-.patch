From a609cd803e25ffc208c05c2c98c39e7fa11d4964 Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <shengjiu.wang@nxp.com>
Date: Wed, 6 Dec 2017 11:30:02 +0800
Subject: [PATCH 2992/5242] MLK-17089-7: ASoC: fsl_mqs: support suspend &
 resume for imx8

commit  177e0e68de7e16aa9e159f753f4a7df0f4e1c697 from
https://source.codeaurora.org/external/imx/linux-imx.git

Base on latest power management design in MLK-17074, every driver
need to enter runtime suspend state in suspend, so the driver should
call the pm_runtime_force_suspend in suspend. with this implementation
the suspend function almost same as runtime suspend function. so remove
the suspend function, just use pm_runtime_force_suspend instead.

Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/codecs/fsl_mqs.c |   37 +++++++------------------------------
 1 file changed, 7 insertions(+), 30 deletions(-)

diff --git a/sound/soc/codecs/fsl_mqs.c b/sound/soc/codecs/fsl_mqs.c
index fbcb96c..0753fac 100644
--- a/sound/soc/codecs/fsl_mqs.c
+++ b/sound/soc/codecs/fsl_mqs.c
@@ -308,35 +308,6 @@ static int fsl_mqs_runtime_suspend(struct device *dev)
 {
 	struct fsl_mqs *mqs_priv = dev_get_drvdata(dev);
 
-	if (mqs_priv->mclk)
-		clk_disable_unprepare(mqs_priv->mclk);
-
-	if (mqs_priv->ipg)
-		clk_disable_unprepare(mqs_priv->ipg);
-
-	return 0;
-}
-#endif
-
-#ifdef CONFIG_PM_SLEEP
-static int fsl_mqs_resume(struct device *dev)
-{
-	struct fsl_mqs *mqs_priv = dev_get_drvdata(dev);
-
-	if (mqs_priv->use_gpr)
-		regmap_write(mqs_priv->gpr, IOMUXC_GPR2,
-			    mqs_priv->reg_iomuxc_gpr2);
-	else
-		regmap_write(mqs_priv->regmap, REG_MQS_CTRL,
-			     mqs_priv->reg_mqs_ctrl);
-
-	return 0;
-}
-
-static int fsl_mqs_suspend(struct device *dev)
-{
-	struct fsl_mqs *mqs_priv = dev_get_drvdata(dev);
-
 	if (mqs_priv->use_gpr)
 		regmap_read(mqs_priv->gpr, IOMUXC_GPR2,
 			    &mqs_priv->reg_iomuxc_gpr2);
@@ -344,6 +315,12 @@ static int fsl_mqs_suspend(struct device *dev)
 		regmap_read(mqs_priv->regmap, REG_MQS_CTRL,
 			    &mqs_priv->reg_mqs_ctrl);
 
+	if (mqs_priv->mclk)
+		clk_disable_unprepare(mqs_priv->mclk);
+
+	if (mqs_priv->ipg)
+		clk_disable_unprepare(mqs_priv->ipg);
+
 	return 0;
 }
 #endif
@@ -352,7 +329,7 @@ static int fsl_mqs_suspend(struct device *dev)
 	SET_RUNTIME_PM_OPS(fsl_mqs_runtime_suspend,
 			   fsl_mqs_runtime_resume,
 			   NULL)
-	SET_SYSTEM_SLEEP_PM_OPS(fsl_mqs_suspend, fsl_mqs_resume)
+	SET_SYSTEM_SLEEP_PM_OPS(pm_runtime_force_suspend, pm_runtime_force_resume)
 };
 
 static const struct of_device_id fsl_mqs_dt_ids[] = {
-- 
1.7.9.5

