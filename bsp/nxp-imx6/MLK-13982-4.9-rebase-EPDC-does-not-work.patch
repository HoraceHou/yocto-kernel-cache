From 4530d6aeea6c44ca8803a4dfef204110ec2056d8 Mon Sep 17 00:00:00 2001
From: Cristina Ciocan <cristina-mihaela.ciocan@nxp.com>
Date: Mon, 27 Feb 2017 12:04:17 +0200
Subject: [PATCH 1545/5242] MLK-13982: 4.9 rebase: EPDC does not work

commit  079d0568e5de3b8ffc00ea49a64ba8de3a3cfcbe from
https://source.codeaurora.org/external/imx/linux-imx.git

The Linux kernel regulator core implementation does not accept negative
voltage values; all negative values are treated as errors.

The problem with the EPDC is that the panel uses a negative voltage
regulator which fails to be enabled by the regulator core. This issue has
slipped up until the 4.9 rebase because the voltage range [min, max] was
checked against only when min = max. This has been fixed in 4.9, resulting
in errors in the VCOM regulator driver.

The fix is to use the negative values when communicating with the hardware,
but send only positive values to the regulator core.

This patch sends the absolute value to the regulator core and transforms
the received value (from the regulator core) to negative one before sending
it to hardware.

Fix device tree to deal with negative voltage regulator values by setting
min_value = -real_max_value and vice versa. Boards affected:
- imx6dl-sabresd
- imx6ull-14x14-ddr3-arm2
- imx7d-12x12-lpddr3-arm2
- imx7d-sdb
- imx6sll-evk
- imx6sl-evk
- imx6sll-lpddr3-arm2

Signed-off-by: Cristina Ciocan <cristina-mihaela.ciocan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/boot/dts/imx6dl-sabresd.dts          |    8 +++----
 arch/arm/boot/dts/imx6sl-evk.dts              |    8 +++----
 arch/arm/boot/dts/imx6sll-evk.dts             |    8 +++----
 arch/arm/boot/dts/imx6sll-lpddr3-arm2.dts     |    8 +++----
 arch/arm/boot/dts/imx6ull-14x14-ddr3-arm2.dts |    8 +++----
 arch/arm/boot/dts/imx7d-12x12-lpddr3-arm2.dts |    8 +++----
 arch/arm/boot/dts/imx7d-sdb.dts               |    8 +++----
 drivers/regulator/max17135-regulator.c        |   29 ++++++++++++++++++++-----
 8 files changed, 52 insertions(+), 33 deletions(-)

diff --git a/arch/arm/boot/dts/imx6dl-sabresd.dts b/arch/arm/boot/dts/imx6dl-sabresd.dts
index c8103ff5..7519f80 100644
--- a/arch/arm/boot/dts/imx6dl-sabresd.dts
+++ b/arch/arm/boot/dts/imx6dl-sabresd.dts
@@ -102,10 +102,10 @@
 
                         VCOM_reg: VCOM {
                                 regulator-name = "VCOM";
-                                /* 2's-compliment, -4325000 */
-                                regulator-min-microvolt = <0xffbe0178>;
-                                /* 2's-compliment, -500000 */
-                                regulator-max-microvolt = <0xfff85ee0>;
+                                /* Real max: -500000 */
+                                regulator-max-microvolt = <4325000>;
+                                /* Real min: -4325000 */
+                                regulator-min-microvolt = <500000>;
                         };
 
                         VNEG_reg: VNEG {
diff --git a/arch/arm/boot/dts/imx6sl-evk.dts b/arch/arm/boot/dts/imx6sl-evk.dts
index 71f533c..d0330b3 100644
--- a/arch/arm/boot/dts/imx6sl-evk.dts
+++ b/arch/arm/boot/dts/imx6sl-evk.dts
@@ -381,10 +381,10 @@
 
 			VCOM_reg: VCOM {
 				regulator-name = "VCOM";
-				/* 2's-compliment, -4325000 */
-				regulator-min-microvolt = <0xffbe0178>;
-				/* 2's-compliment, -500000 */
-				regulator-max-microvolt = <0xfff85ee0>;
+				/* Real max value: -500000 */
+				regulator-max-microvolt = <4325000>;
+				/* Real min value: -4325000 */
+				regulator-min-microvolt = <500000>;
 			};
 
 			VNEG_reg: VNEG {
diff --git a/arch/arm/boot/dts/imx6sll-evk.dts b/arch/arm/boot/dts/imx6sll-evk.dts
index f4afab3..40a91be 100644
--- a/arch/arm/boot/dts/imx6sll-evk.dts
+++ b/arch/arm/boot/dts/imx6sll-evk.dts
@@ -314,10 +314,10 @@
 
 			VCOM_reg: VCOM {
 				regulator-name = "VCOM";
-				/* 2's-compliment, -4325000 */
-				regulator-min-microvolt = <0xffbe0178>;
-				/* 2's-compliment, -500000 */
-				regulator-max-microvolt = <0xfff85ee0>;
+				/* Real max value: -500000 */
+				regulator-max-microvolt = <4325000>;
+				/* Real min value: -4325000 */
+				regulator-min-microvolt = <500000>;
 			};
 
 			VNEG_reg: VNEG {
diff --git a/arch/arm/boot/dts/imx6sll-lpddr3-arm2.dts b/arch/arm/boot/dts/imx6sll-lpddr3-arm2.dts
index 17381f7..d2eaaba 100644
--- a/arch/arm/boot/dts/imx6sll-lpddr3-arm2.dts
+++ b/arch/arm/boot/dts/imx6sll-lpddr3-arm2.dts
@@ -325,10 +325,10 @@
 
 			VCOM_reg: VCOM {
 				regulator-name = "VCOM";
-				/* 2's-compliment, -4325000 */
-				regulator-min-microvolt = <0xffbe0178>;
-				/* 2's-compliment, -500000 */
-				regulator-max-microvolt = <0xfff85ee0>;
+				/* Real max value: -500000 */
+				regulator-max-microvolt = <4325000>;
+				/* Real min value: -4325000 */
+				regulator-min-microvolt = <500000>;
 			};
 
 			VNEG_reg: VNEG {
diff --git a/arch/arm/boot/dts/imx6ull-14x14-ddr3-arm2.dts b/arch/arm/boot/dts/imx6ull-14x14-ddr3-arm2.dts
index 377da6c..0b877e2 100644
--- a/arch/arm/boot/dts/imx6ull-14x14-ddr3-arm2.dts
+++ b/arch/arm/boot/dts/imx6ull-14x14-ddr3-arm2.dts
@@ -372,10 +372,10 @@
 
 			VCOM_reg: VCOM {
 				regulator-name = "VCOM";
-				/* 2's-compliment, -4325000 */
-				regulator-min-microvolt = <0xffbe0178>;
-				/* 2's-compliment, -500000 */
-				regulator-max-microvolt = <0xfff85ee0>;
+				/* Real max: -500000 */
+				regulator-max-microvolt = <4325000>;
+				/* Real min: -4325000 */
+				regulator-min-microvolt = <500000>;
 			};
 
 			VNEG_reg: VNEG {
diff --git a/arch/arm/boot/dts/imx7d-12x12-lpddr3-arm2.dts b/arch/arm/boot/dts/imx7d-12x12-lpddr3-arm2.dts
index dd0e148..faa5522 100644
--- a/arch/arm/boot/dts/imx7d-12x12-lpddr3-arm2.dts
+++ b/arch/arm/boot/dts/imx7d-12x12-lpddr3-arm2.dts
@@ -399,10 +399,10 @@
 
 			VCOM_reg: VCOM {
 				regulator-name = "VCOM";
-				/* 2's-compliment, -4325000 */
-				regulator-min-microvolt = <0xffbe0178>;
-				/* 2's-compliment, -500000 */
-				regulator-max-microvolt = <0xfff85ee0>;
+				/* Real max value: -500000 */
+				regulator-max-microvolt = <4325000>;
+				/* Real min value: -4325000 */
+				regulator-min-microvolt = <500000>;
 			};
 
 			VNEG_reg: VNEG {
diff --git a/arch/arm/boot/dts/imx7d-sdb.dts b/arch/arm/boot/dts/imx7d-sdb.dts
index da3d436..6237393 100644
--- a/arch/arm/boot/dts/imx7d-sdb.dts
+++ b/arch/arm/boot/dts/imx7d-sdb.dts
@@ -523,10 +523,10 @@
 
 			VCOM_reg: VCOM {
 				regulator-name = "VCOM";
-				/* 2's-compliment, -4325000 */
-				regulator-min-microvolt = <0xffbe0178>;
-				/* 2's-compliment, -500000 */
-				regulator-max-microvolt = <0xfff85ee0>;
+				/* Real max value: -500000 */
+				regulator-max-microvolt = <4325000>;
+				/* Real min value: -4325000 */
+				regulator-min-microvolt = <500000>;
 			};
 
 			VNEG_reg: VNEG {
diff --git a/drivers/regulator/max17135-regulator.c b/drivers/regulator/max17135-regulator.c
index 82b7c4a..90a2665 100644
--- a/drivers/regulator/max17135-regulator.c
+++ b/drivers/regulator/max17135-regulator.c
@@ -177,6 +177,12 @@ static inline int vcom_rs_to_uV(int rs, int pass_num)
 		- (vcom_data[pass_num].vcom_step_uV * rs);
 }
 
+/*
+ * This function should only be called with positive voltage values because
+ * negative ones are considered errors by the regulator core implementation.
+ *
+ * The given positive value if the absolute value of the desired negative one.
+ */
 static int max17135_vcom_set_voltage(struct regulator_dev *reg,
 					int minuV, int uV, unsigned *selector)
 {
@@ -184,6 +190,9 @@ static int max17135_vcom_set_voltage(struct regulator_dev *reg,
 	unsigned int reg_val;
 	int vcom_read;
 
+	/* Transform uV for our negative land values */
+	uV = -uV;
+
 	if ((uV < vcom_data[max17135->pass_num-1].vcom_min_uV)
 		|| (uV > vcom_data[max17135->pass_num-1].vcom_max_uV))
 		return -EINVAL;
@@ -209,18 +218,29 @@ static int max17135_vcom_set_voltage(struct regulator_dev *reg,
 	return 0;
 }
 
+/*
+ * This function should only return positive voltage values because negative
+ * ones are considered errors by the regulator core implementation.
+ */
 static int max17135_vcom_get_voltage(struct regulator_dev *reg)
 {
 	struct max17135 *max17135 = rdev_get_drvdata(reg);
 	unsigned int reg_val;
+	int uV;
 
 	max17135_reg_read(REG_MAX17135_DVR, &reg_val);
-	return vcom_rs_to_uV(BITFEXT(reg_val, DVR), max17135->pass_num-1);
+	uV = vcom_rs_to_uV(BITFEXT(reg_val, DVR), max17135->pass_num-1);
+
+	/* Transform uV to positive value */
+	uV = -uV;
+
+	return uV;
 }
 
 static int max17135_vcom_enable(struct regulator_dev *reg)
 {
 	struct max17135 *max17135 = rdev_get_drvdata(reg);
+	int uV;
 
 	/*
 	 * Check to see if we need to set the VCOM voltage.
@@ -228,10 +248,9 @@ static int max17135_vcom_enable(struct regulator_dev *reg)
 	 * only change vcom voltage if we have been enabled.
 	 */
 	if (!max17135->vcom_setup && max17135_is_power_good(max17135)) {
-		max17135_vcom_set_voltage(reg,
-			max17135->vcom_uV,
-			max17135->vcom_uV,
-			NULL);
+		uV = (-1) * max17135->vcom_uV;
+
+		max17135_vcom_set_voltage(reg, uV, uV, NULL);
 		max17135->vcom_setup = true;
 	}
 
-- 
1.7.9.5

