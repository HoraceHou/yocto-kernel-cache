From f7dbf221503c41003691b3bf8fb3afb98a9f1f03 Mon Sep 17 00:00:00 2001
From: Fugang Duan <fugang.duan@nxp.com>
Date: Fri, 27 Oct 2017 09:45:25 +0800
Subject: [PATCH 2705/5242] MLK-16712 tty: serial: lpuart: keep per clock
 disabled during suspend

commit  3d9b51954e9bc3c5bcce77c19676e3b1fe4ec7cc from
https://source.codeaurora.org/external/imx/linux-imx.git

Keep per clock disabled during system suspend.

BuildInfo:
 - SCFW 88456c73, IMX-MKIMAGE 06bc2767, ATF a438801
 - U-Boot 2017.03-imx_v2017.03_4.9.51_imx8_beta1+g7953d47

Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
Reviewed-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/tty/serial/fsl_lpuart.c |   27 +++++++++++++++++++++------
 1 file changed, 21 insertions(+), 6 deletions(-)

diff --git a/drivers/tty/serial/fsl_lpuart.c b/drivers/tty/serial/fsl_lpuart.c
index 72a6dcb..2fc2c88 100644
--- a/drivers/tty/serial/fsl_lpuart.c
+++ b/drivers/tty/serial/fsl_lpuart.c
@@ -2593,12 +2593,17 @@ static int lpuart_suspend(struct device *dev)
 	bool irq_wake = irqd_is_wakeup_set(irq_get_irq_data(sport->port.irq));
 	int ret;
 
-	ret = clk_prepare_enable(sport->ipg_clk);
-	if (ret)
-		return ret;
-
 	uart_suspend_port(&lpuart_reg, &sport->port);
 
+	if (!uart_console(&sport->port) &&
+	    !(irq_wake && tty_port_initialized(port))) {
+		ret = clk_prepare_enable(sport->ipg_clk);
+		if (ret)
+			return ret;
+	} else {
+		clk_disable_unprepare(sport->per_clk);
+	}
+
 	if (lpuart_is_32(sport)) {
 		temp = lpuart32_read(&sport->port, UARTCTRL);
 		temp &= ~(UARTCTRL_TE | UARTCTRL_TIE | UARTCTRL_TCIE);
@@ -2748,15 +2753,25 @@ static inline void lpuart_resume_init(struct lpuart_port *sport)
 static int lpuart_resume(struct device *dev)
 {
 	struct lpuart_port *sport = dev_get_drvdata(dev);
+	struct tty_port *port = &sport->port.state->port;
+	bool irq_wake = irqd_is_wakeup_set(irq_get_irq_data(sport->port.irq));
+	int ret;
 
 	if (lpuart_is_32(sport))
 		lpuart32_resume_init(sport);
 	else
 		lpuart_resume_init(sport);
 
-	uart_resume_port(&lpuart_reg, &sport->port);
+	if (uart_console(&sport->port) ||
+	    (irq_wake && tty_port_initialized(port))) {
+		ret = clk_prepare_enable(sport->per_clk);
+		if (ret)
+			return ret;
+	} else {
+		clk_disable_unprepare(sport->ipg_clk);
+	}
 
-	clk_disable_unprepare(sport->ipg_clk);
+	uart_resume_port(&lpuart_reg, &sport->port);
 
 	return 0;
 }
-- 
1.7.9.5

