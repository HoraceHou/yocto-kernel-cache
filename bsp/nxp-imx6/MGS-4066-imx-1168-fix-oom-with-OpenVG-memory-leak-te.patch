From 83f402464d9782e22183bd5983bb52f2caf1613f Mon Sep 17 00:00:00 2001
From: Xianzhong <xianzhong.li@nxp.com>
Date: Sat, 8 Sep 2018 05:43:05 +0800
Subject: [PATCH 4601/5242] MGS-4066 [#imx-1168] fix oom with OpenVG memory
 leak test

commit  47b1abc96082d55be91a045a5421729f394f36eb from
https://source.codeaurora.org/external/imx/linux-imx.git

IMX-1003 BUG#20629 CL171759 [NXP][6Q_SD] FB: met core dump
 and system prompt out of memory when do OpenVG memory leak
 test. 100% ((patch missing from issue track #2347) CL171759
 #20629: build driver with 3D,2D,VG core. run the vgoDestroy
 with dead loop, when one frame is start, there has two
 gcvHAL_ATTACH:
 gcoHARDWARE_Construct->...->drv_ioctl->gckKERNEL_Dispatch->gckCOMMAND_Attach->gckCONTEXT_Construct->AllocateContextBuffer->gckKERNEL_AllocateVirtulCommandBuffer
 when one frame is finished, there has two gcvHAL_DETACH
 gcoHARDWARE_Destroy->...->drv_ioctl->gckKERNEL_Dispatch->gckCOMMAND_Detach->gckCONTEXT_Destroy->_DestroyCobtext->gckEVENT_DestroyVirtualCommandBuffer->gckEVENT_AddList->gckEVENT_AllocateRecord
 if freeEventCount is 0, there will has 10 records will be
 allocated, there has no condition to trigger free the event
 records. The more frames, the more event records will be
 allocated but freed after "rmmod galcore". So we had to
 submit event to force trigger free event records to reduce
 the memmory leak when detach context.

cherry-pick patch:
6.2.4.p3-0089-IMX-1003-BUG-20629-CL171759-NXP-6Q_SD-FB-met-core-du

Signed-off-by: Xianzhong <xianzhong.li@nxp.com>
(cherry picked from commit 1ef255770239b968d6fac5070a04f39ed1ae0386)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c |   18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c b/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c
index 2d52977..4fef673 100644
--- a/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c
+++ b/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel.c
@@ -3129,6 +3129,24 @@
                               gcmNAME_TO_PTR(Interface->u.Detach.context)));
 
         gcmRELEASE_NAME(Interface->u.Detach.context);
+        gcmkONERROR(gckOS_AcquireMutex(Kernel->os,
+             Kernel->device->commitMutex,
+             gcvINFINITE
+             ));
+
+        commitMutexAcquired = gcvTRUE;
+
+        gcmkONERROR(gckEVENT_Submit(
+            Kernel->eventObj,
+            gcvTRUE,
+            gcvFALSE
+            ));
+
+        gcmkONERROR(gckOS_ReleaseMutex(Kernel->os,
+            Kernel->device->commitMutex
+            ));
+
+        commitMutexAcquired = gcvFALSE;
         break;
 
     case gcvHAL_GET_FRAME_INFO:
-- 
1.7.9.5

