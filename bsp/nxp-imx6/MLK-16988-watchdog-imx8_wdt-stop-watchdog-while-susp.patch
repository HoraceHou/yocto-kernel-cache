From 1323079ec43599e7ac623b00e9b12271915f0c40 Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Mon, 27 Nov 2017 11:12:42 +0800
Subject: [PATCH 2920/5242] MLK-16988: watchdog: imx8_wdt: stop watchdog while
 suspend

commit  407dd882ac4d0b3be8ed63e58f5d22ea76dbf2f4 from
https://source.codeaurora.org/external/imx/linux-imx.git

Since watchdog on i.mx8 is a software watchdog in scfw side, it should be
stopped while kernel enter system suspend if watchdog fired. Otherwise,
unexpected watchdog reset will happen. Restore back if watchdog fired too.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Reviewed-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/watchdog/imx8_wdt.c |   31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/drivers/watchdog/imx8_wdt.c b/drivers/watchdog/imx8_wdt.c
index c78eb00..6564532 100644
--- a/drivers/watchdog/imx8_wdt.c
+++ b/drivers/watchdog/imx8_wdt.c
@@ -119,6 +119,36 @@ static int imx8_wdt_set_pretimeout(struct watchdog_device *wdog,
 	.notifier_call = imx8_wdt_notify,
 };
 
+#ifdef CONFIG_PM_SLEEP
+static int imx8_wdt_suspend(struct device *dev)
+{
+	if (test_bit(WDOG_ACTIVE, &imx8_wdd.status))
+		imx8_wdt_stop(&imx8_wdd);
+
+	return 0;
+}
+
+static int imx8_wdt_resume(struct device *dev)
+{
+	if (test_bit(WDOG_ACTIVE, &imx8_wdd.status))
+		imx8_wdt_start(&imx8_wdd);
+
+	return 0;
+}
+
+static const struct dev_pm_ops imx8_wdt_pm_ops = {
+	.suspend = imx8_wdt_suspend,
+	.resume = imx8_wdt_resume,
+};
+
+#define IMX8_WDT_PM_OPS	(&imx8_wdt_pm_ops)
+
+#else
+
+#define IMX8_WDT_PM_OPS	NULL
+
+#endif
+
 static int imx8_wdt_probe(struct platform_device *pdev)
 {
 	struct watchdog_device *wdt = &imx8_wdd;
@@ -181,6 +211,7 @@ static void imx8_wdt_shutdown(struct platform_device *pdev)
 	.driver		= {
 		.name	= "imx8-wdt",
 		.of_match_table = imx8_wdt_dt_ids,
+		.pm	= IMX8_WDT_PM_OPS,
 	},
 };
 
-- 
1.7.9.5

