From e9de27c6a56cb9e54ba12ee48ac7ebb4fc5bcc19 Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Tue, 8 Aug 2017 21:48:00 +0800
Subject: [PATCH 2355/5242] MLK-16162 video: fbdev: dcss: enable DPR and
 SCALER only in fb unblank

commit  63b93c56581b405bbdb3c06b861152c978f24be6 from
https://source.codeaurora.org/external/imx/linux-imx.git

Place the DPR and SCALER enablement when unblanking one fb,
and they are only required to be enabled at the first time,
since the 'repeat_en' function will set the 'run_en' automatically
for subsequent frames.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/imx_dcss.c |   14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/video/fbdev/mxc/imx_dcss.c b/drivers/video/fbdev/mxc/imx_dcss.c
index abdd833..92a4e7d 100644
--- a/drivers/video/fbdev/mxc/imx_dcss.c
+++ b/drivers/video/fbdev/mxc/imx_dcss.c
@@ -293,6 +293,7 @@ struct dcss_channel_info {
 	uint32_t scaler_addr;
 	int blank;			/* see FB_BLANK_* macros */
 	uint32_t csc_mode;		/* see CSC_MODE_* macros */
+	bool dpr_scaler_en;		/* record dpr and scaler enabled or not */
 
 	void *dev_data;			/* pointer to dcss_info */
 };
@@ -1548,9 +1549,6 @@ static int dcss_dpr_config(uint32_t dpr_ch, struct dcss_info *info)
 	fill_sb(cb, chan_info->dpr_addr + 0x70, pitch);
 
 	fill_sb(cb, chan_info->dpr_addr + 0x200, 0x38);
-
-	/* Trigger DPR on */
-	fill_sb(cb, chan_info->dpr_addr + 0x0, 0x5);
 #endif
 
 	return 0;
@@ -1923,9 +1921,6 @@ static int dcss_scaler_config(uint32_t scaler_ch, struct dcss_info *info)
 	fill_sb(cb, chan_info->scaler_addr + 0x60, 0x0);
 
 	scaler_coeff_config(chan_info);
-
-	/* Trigger Scaler on */
-	fill_sb(cb, chan_info->scaler_addr + 0x0, 0x11);
 #endif
 	return 0;
 }
@@ -2781,6 +2776,7 @@ static int dcss_blank(int blank, struct fb_info *fbi)
 	struct dcss_channel_info *cinfo = fbi->par;
 	struct dcss_info *info = cinfo->dev_data;
 	struct platform_device *pdev = info->pdev;
+	struct cbuffer *cb = &cinfo->cb;
 
 	if (blank == FB_BLANK_UNBLANK) {
 		/* dcss output timings can only be set for fb0 */
@@ -2801,6 +2797,12 @@ static int dcss_blank(int blank, struct fb_info *fbi)
 			dtg_channel_timing_config(cinfo);
 		}
 
+		if (unlikely(!cinfo->dpr_scaler_en)) {
+			/* Trigger DPR and SCALER */
+			fill_sb(cb, cinfo->dpr_addr + 0x0, 0x5);
+			fill_sb(cb, cinfo->scaler_addr + 0x0, 0x11);
+			cinfo->dpr_scaler_en = true;
+		}
 #if USE_CTXLD
 		ret = commit_to_fifo(fb_node, info);
 		if (ret) {
-- 
1.7.9.5

