From ac5b589f1571aef387b25179cbe69be7b64f3fce Mon Sep 17 00:00:00 2001
From: "Guoniu.Zhou" <guoniu.zhou@nxp.com>
Date: Thu, 26 Jul 2018 18:41:35 +0800
Subject: [PATCH 4363/5242] MLK-19106: camera: add enable attribute to turn
 on/off color bar

commit  18655d6611c525786d9987f0bd829b1d18dd3af2 from
https://source.codeaurora.org/external/imx/linux-imx.git

Add analog_test_pattern device attribute for ov16035 in order
to turn on/off its color bar test pattern to debug

Signed-off-by: Guoniu.Zhou <guoniu.zhou@nxp.com>
Reviewed-by: Robby.Cai <robby.cai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/max9286.c |   38 +++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/drivers/media/platform/imx8/max9286.c b/drivers/media/platform/imx8/max9286.c
index 64d79a0..8195947 100644
--- a/drivers/media/platform/imx8/max9286.c
+++ b/drivers/media/platform/imx8/max9286.c
@@ -2792,6 +2792,36 @@ static int max9286_link_setup(struct media_entity *entity,
 	.link_setup = max9286_link_setup,
 };
 
+ssize_t analog_show(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	struct v4l2_subdev *sd = dev_get_drvdata(dev);
+	struct sensor_data *max9286_data = subdev_to_sensor_data(sd);
+	u8 val = 0;
+
+	ov10635_read_reg(max9286_data, 0, 0x370A, &val);
+	return sprintf(buf, "%s\n", (val & 0x4) ? "enabled" : "disabled");
+}
+
+static ssize_t analog_store(struct device *dev,
+			struct device_attribute *attr, const char *buf, size_t count)
+{
+	struct v4l2_subdev *sd = dev_get_drvdata(dev);
+	struct sensor_data *max9286_data = subdev_to_sensor_data(sd);
+	char enabled[32];
+
+	if (sscanf(buf, "%s", enabled) > 0) {
+		if (strcmp(enabled, "enable") == 0)
+			ov10635_write_reg(max9286_data, 0, 0x370A, 0x4);
+		else
+			ov10635_write_reg(max9286_data, 0, 0x370A, 0x0);
+		return count;
+	}
+	return -EINVAL;
+}
+
+static DEVICE_ATTR(analog_test_pattern, 0644, analog_show, analog_store);
+
 /*!
  * max9286 I2C probe function
  *
@@ -2941,6 +2971,13 @@ static int max9286_probe(struct i2c_client *client,
 	/* Disable CSI Output */
 	max9286_write_reg(max9286_data, 0x15, 0x03);
 
+	/*Create device attr in sys */
+	retval = device_create_file(&client->dev, &dev_attr_analog_test_pattern);
+	if (retval < 0) {
+		dev_err(&client->dev, "%s: create device file fail\n", __func__);
+		return retval;
+	}
+
 	dev_info(&max9286_data->i2c_client->dev,
 			"max9286_mipi is found, name %s\n", sd->name);
 	return retval;
@@ -2958,6 +2995,7 @@ static int max9286_remove(struct i2c_client *client)
 	struct sensor_data *max9286_data = subdev_to_sensor_data(sd);
 
 	clk_disable_unprepare(max9286_data->sensor_clk);
+	device_remove_file(&client->dev, &dev_attr_analog_test_pattern);
 	media_entity_cleanup(&sd->entity);
 	v4l2_async_unregister_subdev(sd);
 
-- 
1.7.9.5

