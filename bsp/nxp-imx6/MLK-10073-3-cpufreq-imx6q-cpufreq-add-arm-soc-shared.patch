From 9dce0ac4263de684aeef725e9d17d915b54d8fb5 Mon Sep 17 00:00:00 2001
From: Robin Gong <b38343@freescale.com>
Date: Sun, 4 Jan 2015 16:56:11 +0800
Subject: [PATCH 0467/5242] MLK-10073-3 cpufreq: imx6q-cpufreq: add
 arm-soc-shared property

commit  7ebf511aa420bc34c23181e478869cbc46deccaa from
https://source.codeaurora.org/external/imx/linux-imx.git

Pfuze200 only provide one power supply for VDDARM_IN and VDDSOC_IN,
for ldo-bypass mode, we have to pretend they are different regulators
otherwise regulator famework will refuse update voltage.

Signed-off-by: Robin Gong <b38343@freescale.com>

Also squashed: MLK-10123: cpufreq: imx6q-cpufreq: initialize local variable 'i'

Signed-off-by: Robin Gong <b38343@freescale.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/cpufreq/imx6q-cpufreq.c |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/cpufreq/imx6q-cpufreq.c b/drivers/cpufreq/imx6q-cpufreq.c
index 2299b86..202f192 100644
--- a/drivers/cpufreq/imx6q-cpufreq.c
+++ b/drivers/cpufreq/imx6q-cpufreq.c
@@ -351,7 +351,7 @@ static int imx6q_cpufreq_probe(struct platform_device *pdev)
 	int num, ret;
 	const struct property *prop;
 	const __be32 *val;
-	u32 nr, i, j;
+	u32 nr, j, i = 0;
 
 	cpu_dev = get_cpu_device(0);
 	if (!cpu_dev) {
@@ -391,6 +391,17 @@ static int imx6q_cpufreq_probe(struct platform_device *pdev)
 		goto put_reg;
 	}
 
+	/*
+	 * soc_reg sync  with arm_reg if arm shares the same regulator
+	 * with soc. Otherwise, regulator common framework will refuse to update
+	 * this consumer's voltage right now while another consumer voltage
+	 * still keep in old one. For example, imx6sx-sdb with pfuze200 in
+	 * ldo-bypass mode.
+	 */
+	of_property_read_u32(np, "fsl,arm-soc-shared", &i);
+	if (i == 1)
+		soc_reg = arm_reg;
+
 	ret = dev_pm_opp_of_add_table(cpu_dev);
 	if (ret < 0) {
 		dev_err(cpu_dev, "failed to init OPP table: %d\n", ret);
-- 
1.7.9.5

