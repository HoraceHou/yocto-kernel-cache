From 128c8ea0d6281d28fdd999880995a76f6a456ed7 Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@nxp.com>
Date: Wed, 26 Jul 2017 22:08:14 +0800
Subject: [PATCH 2288/5242] MLK-16013-9 usb: typec: add interface to get port
 type and role

commit  62ebe2782287ea1b8311126f1e45b1b1d450721d from
https://source.codeaurora.org/external/imx/linux-imx.git

Add interface to get typec port type and default power role from
dt. To validate a correct setting is specified, add TYPEC_PORT_TYPE_UNKNOWN
and TYPEC_ROLE_UNKNOWN for typec_port_type and typec_role enum.

Reviewed-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Li Jun <jun.li@nxp.com>

During 4.14 rebase renamed to typec_port_types_dt to avoid conflict with
sysfs values.

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/typec/class.c |   48 +++++++++++++++++++++++++++++++++++++++++++++
 include/linux/usb/typec.h |    4 ++++
 2 files changed, 52 insertions(+)

diff --git a/drivers/usb/typec/class.c b/drivers/usb/typec/class.c
index 53df10d..b560ed8 100644
--- a/drivers/usb/typec/class.c
+++ b/drivers/usb/typec/class.c
@@ -10,6 +10,7 @@
 #include <linux/module.h>
 #include <linux/mutex.h>
 #include <linux/slab.h>
+#include <linux/of.h>
 #include <linux/usb/typec.h>
 #include <linux/usb/typec_mux.h>
 
@@ -802,6 +803,12 @@ void typec_unregister_cable(struct typec_cable *cable)
 	[TYPEC_PORT_DRP] = "dual",
 };
 
+static const char *const typec_port_types_dt[] = {
+	[TYPEC_PORT_DFP] = "dfp",
+	[TYPEC_PORT_UFP] = "ufp",
+	[TYPEC_PORT_DRP] = "drp",
+};
+
 static const char * const typec_port_types_drp[] = {
 	[TYPEC_PORT_SRC] = "dual [source] sink",
 	[TYPEC_PORT_SNK] = "dual source [sink]",
@@ -1153,6 +1160,47 @@ static void typec_release(struct device *dev)
 	.release = typec_release,
 };
 
+static enum typec_port_type typec_get_port_type_from_string(const char *str)
+{
+	int ret;
+
+	ret = match_string(typec_port_types_dt, ARRAY_SIZE(typec_port_types_dt), str);
+	return (ret < 0) ? TYPEC_PORT_TYPE_UNKNOWN : ret;
+}
+
+enum typec_port_type typec_get_port_type(struct device *dev)
+{
+	const char *port_type;
+	int err;
+
+	err = device_property_read_string(dev, "port-type", &port_type);
+	if (err < 0)
+		return TYPEC_PORT_TYPE_UNKNOWN;
+
+	return typec_get_port_type_from_string(port_type);
+}
+EXPORT_SYMBOL_GPL(typec_get_port_type);
+
+static enum typec_role typec_get_power_role_from_string(const char *str)
+{
+	int ret;
+
+	ret = match_string(typec_roles, ARRAY_SIZE(typec_roles), str);
+	return (ret < 0) ? TYPEC_ROLE_UNKNOWN : ret;
+}
+
+enum typec_role typec_get_power_role(struct device *dev)
+{
+	const char *power_role;
+	int err;
+
+	err = device_property_read_string(dev, "default-role", &power_role);
+	if (err < 0)
+		return TYPEC_ROLE_UNKNOWN;
+
+	return typec_get_power_role_from_string(power_role);
+}
+EXPORT_SYMBOL_GPL(typec_get_power_role);
 /* --------------------------------------- */
 /* Driver callbacks to report role updates */
 
diff --git a/include/linux/usb/typec.h b/include/linux/usb/typec.h
index 672b39b..c4bcc3a 100644
--- a/include/linux/usb/typec.h
+++ b/include/linux/usb/typec.h
@@ -25,6 +25,7 @@ enum typec_port_type {
 	TYPEC_PORT_SRC,
 	TYPEC_PORT_SNK,
 	TYPEC_PORT_DRP,
+	TYPEC_PORT_TYPE_UNKNOWN,
 };
 
 enum typec_port_data {
@@ -49,6 +50,7 @@ enum typec_data_role {
 enum typec_role {
 	TYPEC_SINK,
 	TYPEC_SOURCE,
+	TYPEC_ROLE_UNKNOWN,
 };
 
 enum typec_pwr_opmode {
@@ -266,5 +268,7 @@ struct typec_plug *typec_register_plug(struct typec_cable *cable,
 int typec_set_orientation(struct typec_port *port,
 			  enum typec_orientation orientation);
 int typec_set_mode(struct typec_port *port, int mode);
+enum typec_port_type typec_get_port_type(struct device *dev);
+enum typec_role typec_get_power_role(struct device *dev);
 
 #endif /* __LINUX_USB_TYPEC_H */
-- 
1.7.9.5

