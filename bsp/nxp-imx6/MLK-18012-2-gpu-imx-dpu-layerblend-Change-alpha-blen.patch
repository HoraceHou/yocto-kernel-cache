From b607a72ac9a1217d3d4bfb06a577208b375bc3de Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Thu, 12 Apr 2018 17:50:47 +0800
Subject: [PATCH 3602/5242] MLK-18012-2 gpu: imx: dpu: layerblend: Change
 alpha blend settings

commit  1460dc224b68d45376834afad96771044a7301c1 from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch changes layerblend alpha blend settings so that
the layerblend reads local alpha value from the primary
input to blend color components and generates alpha values
from the secondary input for the layer with the lowest zorder.
This makes KMS support local alpha for the primary DRM plane.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/imx/dpu/dpu-layerblend.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/imx/dpu/dpu-layerblend.c b/drivers/gpu/imx/dpu/dpu-layerblend.c
index f09b581..91563bf 100644
--- a/drivers/gpu/imx/dpu/dpu-layerblend.c
+++ b/drivers/gpu/imx/dpu/dpu-layerblend.c
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2016 Freescale Semiconductor, Inc.
- * Copyright 2017 NXP
+ * Copyright 2017-2018 NXP
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License as published by the
@@ -58,8 +58,11 @@
 #define BLENDCONTROL				0x10
 #define ALPHA(a)				(((a) & 0xFF) << 16)
 #define PRIM_C_BLD_FUNC__ONE_MINUS_SEC_ALPHA	0x5
+#define PRIM_C_BLD_FUNC__PRIM_ALPHA		0x2
 #define SEC_C_BLD_FUNC__CONST_ALPHA		(0x6 << 4)
+#define SEC_C_BLD_FUNC__ONE_MINUS_PRIM_ALPHA	(0x3 << 4)
 #define PRIM_A_BLD_FUNC__ONE_MINUS_SEC_ALPHA	(0x5 << 8)
+#define PRIM_A_BLD_FUNC__ZERO			(0x0 << 8)
 #define SEC_A_BLD_FUNC__ONE			(0x1 << 12)
 #define POSITION				0x14
 #define XPOS(x)					((x) & 0x7FFF)
@@ -238,9 +241,9 @@ void layerblend_blendcontrol(struct dpu_layerblend *lb)
 	u32 val;
 
 	val = ALPHA(0xff) |
-	      PRIM_C_BLD_FUNC__ONE_MINUS_SEC_ALPHA |
-	      SEC_C_BLD_FUNC__CONST_ALPHA |
-	      PRIM_A_BLD_FUNC__ONE_MINUS_SEC_ALPHA |
+	      PRIM_C_BLD_FUNC__PRIM_ALPHA |
+	      SEC_C_BLD_FUNC__ONE_MINUS_PRIM_ALPHA |
+	      PRIM_A_BLD_FUNC__ZERO |
 	      SEC_A_BLD_FUNC__ONE;
 
 	mutex_lock(&lb->mutex);
-- 
1.7.9.5

