From 34168a95f74564f221372b0d3b8d9433543bf15a Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@nxp.com>
Date: Tue, 18 Oct 2016 16:32:04 +0800
Subject: [PATCH 1218/5242] MLK-13308-1 usb: chipidea: udc: add USB PHY event

commit  f5e7baeae46ace635c8d04d122ec0c7ef530fb4b from
https://source.codeaurora.org/external/imx/linux-imx.git

Add USB PHY event for below situation:
- vbus connect
- vbus disconnect
- gadget driver is enumerated

USB PHY driver can get the last event after above situation
occurs.

Signed-off-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/chipidea/udc.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/usb/chipidea/udc.c b/drivers/usb/chipidea/udc.c
index 5366e33..2eb347e 100644
--- a/drivers/usb/chipidea/udc.c
+++ b/drivers/usb/chipidea/udc.c
@@ -1587,6 +1587,13 @@ static int ci_udc_vbus_session(struct usb_gadget *_gadget, int is_active)
 	/* Charger Detection */
 	ci_usb_charger_connect(ci, is_active);
 
+	if (ci->usb_phy) {
+		if (is_active)
+			usb_phy_set_event(ci->usb_phy, USB_EVENT_VBUS);
+		else
+			usb_phy_set_event(ci->usb_phy, USB_EVENT_NONE);
+	}
+
 	if (gadget_ready)
 		ci_hdrc_gadget_connect(_gadget, is_active);
 
@@ -1882,6 +1889,9 @@ static irqreturn_t udc_irq(struct ci_hdrc *ci)
 		if (USBi_PCI & intr) {
 			ci->gadget.speed = hw_port_is_high_speed(ci) ?
 				USB_SPEED_HIGH : USB_SPEED_FULL;
+			if (ci->usb_phy)
+				usb_phy_set_event(ci->usb_phy,
+					USB_EVENT_ENUMERATED);
 			if (ci->suspended) {
 				if (ci->driver->resume) {
 					spin_unlock(&ci->lock);
-- 
1.7.9.5

