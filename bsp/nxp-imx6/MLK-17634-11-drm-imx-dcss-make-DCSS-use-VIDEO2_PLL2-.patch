From faee5261f43e1de35d8ea3ee5d8c203220d3ef3d Mon Sep 17 00:00:00 2001
From: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Date: Wed, 7 Feb 2018 16:51:34 +0200
Subject: [PATCH 3397/5242] MLK-17634-11: drm: imx: dcss: make DCSS use
 VIDEO2_PLL2 clock

commit  5f01700a8602ccf10b3dd02d599bdd4cab2a06bb from
https://source.codeaurora.org/external/imx/linux-imx.git

This clock is needed by HDR10 so this patch makes DCSS use VIDEO2_PLL2
for the rest of the resolutions as well.

Signed-off-by: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm64/boot/dts/freescale/fsl-imx8mq.dtsi |   23 ++++++++++++++++++-----
 drivers/gpu/imx/dcss/dcss-blkctl.c            |    9 ++-------
 drivers/gpu/imx/dcss/dcss-common.c            |    9 ++++++---
 drivers/gpu/imx/dcss/dcss-dtg.c               |    8 +++++---
 drivers/gpu/imx/dcss/dcss-prv.h               |    3 ++-
 5 files changed, 33 insertions(+), 19 deletions(-)

diff --git a/arch/arm64/boot/dts/freescale/fsl-imx8mq.dtsi b/arch/arm64/boot/dts/freescale/fsl-imx8mq.dtsi
index 19ebca1..d7ac339 100755
--- a/arch/arm64/boot/dts/freescale/fsl-imx8mq.dtsi
+++ b/arch/arm64/boot/dts/freescale/fsl-imx8mq.dtsi
@@ -538,20 +538,33 @@
 		clocks = <&clk IMX8MQ_CLK_DISP_APB_ROOT>,
 			 <&clk IMX8MQ_CLK_DISP_AXI_ROOT>,
 			 <&clk IMX8MQ_CLK_DISP_RTRM_ROOT>,
-			 <&clk IMX8MQ_CLK_DC_PIXEL_DIV>,
+			 <&clk IMX8MQ_VIDEO2_PLL2_DIV>,
+			 <&clk IMX8MQ_VIDEO2_PLL_OUT>,
 			 <&clk IMX8MQ_CLK_DISP_DTRC_DIV>;
-		clock-names = "apb", "axi", "rtrm", "pixel", "dtrc";
+		clock-names = "apb", "axi", "rtrm", "pix_div", "pix_out", "dtrc";
 		assigned-clocks = <&clk IMX8MQ_CLK_DC_PIXEL_SRC>,
 				  <&clk IMX8MQ_CLK_DISP_AXI_SRC>,
 				  <&clk IMX8MQ_CLK_DISP_RTRM_SRC>,
-				  <&clk IMX8MQ_CLK_DISP_RTRM_PRE_DIV>;
+				  <&clk IMX8MQ_VIDEO2_PLL1_REF_SEL>,
+				  <&clk IMX8MQ_CLK_DISP_RTRM_PRE_DIV>,
+				  <&clk IMX8MQ_VIDEO2_PLL_OUT>,
+				  <&clk IMX8MQ_VIDEO2_PLL1>,
+				  <&clk IMX8MQ_VIDEO2_PLL1_OUT_DIV>,
+				  <&clk IMX8MQ_VIDEO2_PLL2>;
 		assigned-clock-parents = <&clk IMX8MQ_VIDEO_PLL1_OUT>,
 					 <&clk IMX8MQ_SYS1_PLL_800M>,
-					 <&clk IMX8MQ_SYS1_PLL_800M>;
+					 <&clk IMX8MQ_SYS1_PLL_800M>,
+					 <&clk IMX8MQ_VIDEO2_PHY_27MHZ>;
 		assigned-clock-rates = <594000000>,
 				       <800000000>,
 				       <400000000>,
-				       <400000000>;
+					   <27000000>,
+				       <400000000>,
+					   <297000000>,
+					   <1728000000>,
+					   <54000000>,
+					   <2376000000>;
+
 		status = "disabled";
 
 		dcss_disp0: port@0 {
diff --git a/drivers/gpu/imx/dcss/dcss-blkctl.c b/drivers/gpu/imx/dcss/dcss-blkctl.c
index c5c1c02..9607ce6 100644
--- a/drivers/gpu/imx/dcss/dcss-blkctl.c
+++ b/drivers/gpu/imx/dcss/dcss-blkctl.c
@@ -80,13 +80,8 @@ void dcss_blkctl_cfg(struct dcss_soc *dcss)
 {
 	struct dcss_blkctl_priv *blkctl = dcss->blkctl_priv;
 
-	if (blkctl->hdmi_output)
-		dcss_writel(blkctl->clk_setting,
-			    blkctl->base_reg + DCSS_BLKCTL_CONTROL0);
-	else
-		dcss_writel((blkctl->clk_setting ^ HDMI_MIPI_CLK_SEL) |
-			    DISPMIX_PIXCLK_SEL,
-			    blkctl->base_reg + DCSS_BLKCTL_CONTROL0);
+	dcss_writel((blkctl->clk_setting ^ HDMI_MIPI_CLK_SEL),
+		    blkctl->base_reg + DCSS_BLKCTL_CONTROL0);
 
 	/* deassert clock domains resets */
 	dcss_blkctl_clk_reset(blkctl, 0, 0xffffff);
diff --git a/drivers/gpu/imx/dcss/dcss-common.c b/drivers/gpu/imx/dcss/dcss-common.c
index 24738c0..757c5b9 100644
--- a/drivers/gpu/imx/dcss/dcss-common.c
+++ b/drivers/gpu/imx/dcss/dcss-common.c
@@ -272,7 +272,8 @@ static int dcss_clks_init(struct dcss_soc *dcss)
 	} clks[] = {
 		{"apb",   &dcss->apb_clk},
 		{"axi",   &dcss->axi_clk},
-		{"pixel", &dcss->p_clk},
+		{"pix_div", &dcss->pdiv_clk},
+		{"pix_out", &dcss->pout_clk},
 		{"rtrm",  &dcss->apb_clk},
 		{"dtrc",  &dcss->dtrc_clk},
 	};
@@ -307,11 +308,13 @@ static void dcss_clocks_enable(struct dcss_soc *dcss, bool en)
 		clk_prepare_enable(dcss->apb_clk);
 		clk_prepare_enable(dcss->rtrm_clk);
 		clk_prepare_enable(dcss->dtrc_clk);
-		clk_prepare_enable(dcss->p_clk);
+		clk_prepare_enable(dcss->pdiv_clk);
+		clk_prepare_enable(dcss->pout_clk);
 	}
 
 	if (!en && dcss->clks_on) {
-		clk_disable_unprepare(dcss->p_clk);
+		clk_disable_unprepare(dcss->pout_clk);
+		clk_disable_unprepare(dcss->pdiv_clk);
 		clk_disable_unprepare(dcss->dtrc_clk);
 		clk_disable_unprepare(dcss->rtrm_clk);
 		clk_disable_unprepare(dcss->apb_clk);
diff --git a/drivers/gpu/imx/dcss/dcss-dtg.c b/drivers/gpu/imx/dcss/dcss-dtg.c
index cf87df3..163bbb4 100644
--- a/drivers/gpu/imx/dcss/dcss-dtg.c
+++ b/drivers/gpu/imx/dcss/dcss-dtg.c
@@ -235,9 +235,11 @@ void dcss_dtg_sync_set(struct dcss_soc *dcss, struct videomode *vm)
 	dis_lrc_y = vm->vsync_len + vm->vfront_porch + vm->vback_porch +
 		    vm->vactive - 1;
 
-	clk_disable_unprepare(dcss->p_clk);
-	clk_set_rate(dcss->p_clk, vm->pixelclock);
-	clk_prepare_enable(dcss->p_clk);
+	clk_disable_unprepare(dcss->pout_clk);
+	clk_disable_unprepare(dcss->pdiv_clk);
+	clk_set_rate(dcss->pdiv_clk, vm->pixelclock);
+	clk_prepare_enable(dcss->pdiv_clk);
+	clk_prepare_enable(dcss->pout_clk);
 
 	dcss_dtg_write(dtg, ((dtg_lrc_y << TC_Y_POS) | dtg_lrc_x),
 		       DCSS_DTG_TC_DTG);
diff --git a/drivers/gpu/imx/dcss/dcss-prv.h b/drivers/gpu/imx/dcss/dcss-prv.h
index 8c349bf..ae9551a 100644
--- a/drivers/gpu/imx/dcss/dcss-prv.h
+++ b/drivers/gpu/imx/dcss/dcss-prv.h
@@ -50,7 +50,8 @@ struct dcss_soc {
 
 	struct clk *apb_clk;
 	struct clk *axi_clk;
-	struct clk *p_clk;
+	struct clk *pdiv_clk;
+	struct clk *pout_clk;
 	struct clk *rtrm_clk;
 	struct clk *dtrc_clk;
 
-- 
1.7.9.5

