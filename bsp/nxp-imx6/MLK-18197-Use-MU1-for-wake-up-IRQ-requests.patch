From beec7762841fa97cd4b175e0bcfaf30943b54508 Mon Sep 17 00:00:00 2001
From: Nitin Garg <nitin.garg@nxp.com>
Date: Mon, 7 May 2018 08:21:57 -0500
Subject: [PATCH 3714/5242] MLK-18197: Use MU1 for wake up IRQ requests

commit  d88291db4ea80877ee78cc06e90b1ced911ddf8e from
https://source.codeaurora.org/external/imx/linux-imx.git

Use correct MU for SCFW API calls to comply with boot
container intended usage. Since ATF uses MU0 and kernel
uses MU1, update the MU id in api calls.

Signed-off-by: Nitin Garg <nitin.garg@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/imx/sc/main/ipc.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/soc/imx/sc/main/ipc.c b/drivers/soc/imx/sc/main/ipc.c
index 5a1fa02..05ae702 100644
--- a/drivers/soc/imx/sc/main/ipc.c
+++ b/drivers/soc/imx/sc/main/ipc.c
@@ -259,7 +259,7 @@ static void scu_mu_work_handler(struct work_struct *work)
 	 * the right group for itself, return directly if not.
 	 */
 	for (i = 0; i < SC_IRQ_NUM_GROUP; i++) {
-		sciErr = sc_irq_status(mu_ipcHandle, SC_R_MU_0A, i,
+		sciErr = sc_irq_status(mu_ipcHandle, SC_R_MU_1A, i,
 					&irq_status);
 		/* no irq? */
 		if (!irq_status)
@@ -349,35 +349,35 @@ int __init imx8_mu_init(void)
 	};
 
 	/* Request for the high temp interrupt. */
-	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_TEMP,
+	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_1A, SC_IRQ_GROUP_TEMP,
 			       SC_IRQ_TEMP_PMIC0_HIGH, true);
 
 	if (sciErr)
 		pr_info("Cannot request PMIC0_TEMP interrupt\n");
 
 	/* Request for the high temp interrupt. */
-	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_TEMP,
+	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_1A, SC_IRQ_GROUP_TEMP,
 			       SC_IRQ_TEMP_PMIC1_HIGH, true);
 
 	if (sciErr)
 		pr_info("Cannot request PMIC1_TEMP interrupt\n");
 
 	/* Request for the rtc alarm interrupt. */
-	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_RTC,
+	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_1A, SC_IRQ_GROUP_RTC,
 			       SC_IRQ_RTC, true);
 
 	if (sciErr)
 		pr_info("Cannot request ALARM_RTC interrupt\n");
 
 	/* Request for the ON/OFF interrupt. */
-	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_WAKE,
+	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_1A, SC_IRQ_GROUP_WAKE,
 			       SC_IRQ_BUTTON, true);
 
 	if (sciErr)
 		pr_info("Cannot request ON/OFF interrupt\n");
 
 	/* Request for the watchdog interrupt. */
-	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_WDOG,
+	sciErr = sc_irq_enable(mu_ipcHandle, SC_R_MU_1A, SC_IRQ_GROUP_WDOG,
 			       SC_IRQ_WDOG, true);
 
 	if (sciErr)
-- 
1.7.9.5

