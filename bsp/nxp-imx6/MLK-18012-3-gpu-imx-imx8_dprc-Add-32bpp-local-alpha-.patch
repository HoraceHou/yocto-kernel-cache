From 1d45ad6dfd62321706ed54e0d02bdbd581476cc8 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Thu, 12 Apr 2018 17:57:59 +0800
Subject: [PATCH 3603/5242] MLK-18012-3 gpu: imx: imx8_dprc: Add 32bpp local
 alpha RGB pfmts support

commit  315dca7828305a430d54004b2b6b14eb44627a71 from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch adds 32bpp local alpha RGB pixel formats support
in the dprc driver.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/imx/imx8_dprc.c |   24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/drivers/gpu/imx/imx8_dprc.c b/drivers/gpu/imx/imx8_dprc.c
index 1acabdf..26cdef7 100644
--- a/drivers/gpu/imx/imx8_dprc.c
+++ b/drivers/gpu/imx/imx8_dprc.c
@@ -191,18 +191,34 @@ struct dprc_format_info {
 	  .depth = 16, .num_planes = 1, .cpp = { 2, 0, 0 },
 	  .hsub = 1,   .vsub = 1,
 	}, {
+	  .format = DRM_FORMAT_ARGB8888,
+	  .depth = 32, .num_planes = 1, .cpp = { 4, 0, 0 },
+	  .hsub = 1,   .vsub = 1,
+	}, {
 	  .format = DRM_FORMAT_XRGB8888,
 	  .depth = 24, .num_planes = 1, .cpp = { 4, 0, 0 },
 	  .hsub = 1,   .vsub = 1,
 	}, {
+	  .format = DRM_FORMAT_ABGR8888,
+	  .depth = 32, .num_planes = 1, .cpp = { 4, 0, 0 },
+	  .hsub = 1,   .vsub = 1,
+	}, {
 	  .format = DRM_FORMAT_XBGR8888,
 	  .depth = 24, .num_planes = 1, .cpp = { 4, 0, 0 },
 	  .hsub = 1,   .vsub = 1,
 	}, {
+	  .format = DRM_FORMAT_RGBA8888,
+	  .depth = 32, .num_planes = 1, .cpp = { 4, 0, 0 },
+	  .hsub = 1,   .vsub = 1,
+	}, {
 	  .format = DRM_FORMAT_RGBX8888,
 	  .depth = 24, .num_planes = 1, .cpp = { 4, 0, 0 },
 	  .hsub = 1,   .vsub = 1,
 	}, {
+	  .format = DRM_FORMAT_BGRA8888,
+	  .depth = 32, .num_planes = 1, .cpp = { 4, 0, 0 },
+	  .hsub = 1,   .vsub = 1,
+	}, {
 	  .format = DRM_FORMAT_BGRX8888,
 	  .depth = 24, .num_planes = 1, .cpp = { 4, 0, 0 },
 	  .hsub = 1,   .vsub = 1,
@@ -461,9 +477,13 @@ void dprc_configure(struct dprc *dprc, unsigned int stream_id,
 	val |= BUF2;
 	val &= ~(PIX_COMP_SEL_MASK | PIX_SIZE);
 	switch (format) {
+	case DRM_FORMAT_ARGB8888:
 	case DRM_FORMAT_XRGB8888:
+	case DRM_FORMAT_ABGR8888:
 	case DRM_FORMAT_XBGR8888:
+	case DRM_FORMAT_RGBA8888:
 	case DRM_FORMAT_RGBX8888:
+	case DRM_FORMAT_BGRA8888:
 	case DRM_FORMAT_BGRX8888:
 		/*
 		 * It turns out pixel components are mapped directly
@@ -614,9 +634,13 @@ bool dprc_format_supported(struct dprc *dprc, u32 format, u64 modifier)
 		return false;
 
 	switch (format) {
+	case DRM_FORMAT_ARGB8888:
 	case DRM_FORMAT_XRGB8888:
+	case DRM_FORMAT_ABGR8888:
 	case DRM_FORMAT_XBGR8888:
+	case DRM_FORMAT_RGBA8888:
 	case DRM_FORMAT_RGBX8888:
+	case DRM_FORMAT_BGRA8888:
 	case DRM_FORMAT_BGRX8888:
 	case DRM_FORMAT_RGB565:
 		return (modifier == DRM_FORMAT_MOD_NONE ||
-- 
1.7.9.5

