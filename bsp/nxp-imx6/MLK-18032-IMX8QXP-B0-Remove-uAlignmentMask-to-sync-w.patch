From 5776658aafd1d21910d1a2c94d2ad04f4d3507ae Mon Sep 17 00:00:00 2001
From: Huang Chaofan <chaofan.huang@nxp.com>
Date: Fri, 13 Apr 2018 20:14:24 +0800
Subject: [PATCH 3599/5242] MLK-18032[IMX8QXP B0] Remove uAlignmentMask to
 sync with vpu firmware for encoder driver

commit  92bd44216c539bc6564cc18123e667499a1c7629 from
https://source.codeaurora.org/external/imx/linux-imx.git

Remove uAlignmentMask to sync with vpu firmware for encoder driver

Signed-off-by: Huang Chaofan <chaofan.huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-encoder-b0/mediasys_types.h |    1 -
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c |   11 ++++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/mxc/vpu-encoder-b0/mediasys_types.h b/drivers/mxc/vpu-encoder-b0/mediasys_types.h
index caa05cb..c9b232e 100644
--- a/drivers/mxc/vpu-encoder-b0/mediasys_types.h
+++ b/drivers/mxc/vpu-encoder-b0/mediasys_types.h
@@ -139,7 +139,6 @@
 	u_int32                    uRefFrmSize;
 	u_int32                    uRefFrmNum;
 	u_int32                    uActBufSize;
-	u_int32                    uAlignmentMask;
 } MEDIAIP_ENC_MEM_REQ_DATA, *pMEDIAIP_ENC_MEM_REQ_DATA;
 
 typedef struct {
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
index 2aab719..3d7b59eb 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
@@ -1006,7 +1006,7 @@ static void enc_mem_alloc(struct vpu_ctx *ctx, MEDIAIP_ENC_MEM_REQ_DATA *req_dat
 			ctx->dev->shared_mem.base_offset);
 
 	for (i = 0; i < req_data->uEncFrmNum; i++) {
-		ctx->encFrame[i].size = ((req_data->uEncFrmSize + (~req_data->uAlignmentMask))&req_data->uAlignmentMask);
+		ctx->encFrame[i].size = req_data->uEncFrmSize;
 		ctx->encFrame[i].virt_addr = dma_alloc_coherent(&ctx->dev->plat_dev->dev,
 				ctx->encFrame[i].size,
 				(dma_addr_t *)&ctx->encFrame[i].phy_addr,
@@ -1027,7 +1027,7 @@ static void enc_mem_alloc(struct vpu_ctx *ctx, MEDIAIP_ENC_MEM_REQ_DATA *req_dat
 	}
 
 	for (i = 0; i < req_data->uRefFrmNum; i++) {
-		ctx->refFrame[i].size = ((req_data->uRefFrmSize + (~req_data->uAlignmentMask))&req_data->uAlignmentMask);
+		ctx->refFrame[i].size = req_data->uRefFrmSize;
 		ctx->refFrame[i].virt_addr = dma_alloc_coherent(&ctx->dev->plat_dev->dev,
 				ctx->refFrame[i].size,
 				(dma_addr_t *)&ctx->refFrame[i].phy_addr,
@@ -1048,7 +1048,7 @@ static void enc_mem_alloc(struct vpu_ctx *ctx, MEDIAIP_ENC_MEM_REQ_DATA *req_dat
 		pEncMemPool->tRefFrameBuffers[i].uMemSize = ctx->refFrame[i].size;
 	}
 
-	ctx->actFrame.size = ((req_data->uActBufSize + (~req_data->uAlignmentMask))&req_data->uAlignmentMask);
+	ctx->actFrame.size = req_data->uActBufSize;
 	ctx->actFrame.virt_addr = dma_alloc_coherent(&ctx->dev->plat_dev->dev,
 			ctx->actFrame.size,
 			(dma_addr_t *)&ctx->actFrame.phy_addr,
@@ -1083,7 +1083,7 @@ static void vpu_api_event_handler(struct vpu_ctx *ctx, u_int32 uStrIdx, u_int32
 		case VID_API_ENC_EVENT_MEM_REQUEST: {
 			MEDIAIP_ENC_MEM_REQ_DATA *req_data = (MEDIAIP_ENC_MEM_REQ_DATA *)event_data;
 			vpu_dbg(LVL_INFO, "VID_API_ENC_EVENT_MEM_REQUEST: need to request memory\n");
-			vpu_dbg(LVL_INFO, "uEncFrmSize = %d, uEncFrmNum=%d, uRefFrmSize=%d, uRefFrmNum=%d, uActBufSize=%d, uAlignmentMask=0x%x\n", req_data->uEncFrmSize, req_data->uEncFrmNum, req_data->uRefFrmSize, req_data->uRefFrmNum, req_data->uActBufSize, req_data->uAlignmentMask);
+			vpu_dbg(LVL_INFO, "uEncFrmSize = %d, uEncFrmNum=%d, uRefFrmSize=%d, uRefFrmNum=%d, uActBufSize=%d\n", req_data->uEncFrmSize, req_data->uEncFrmNum, req_data->uRefFrmSize, req_data->uRefFrmNum, req_data->uActBufSize);
 			enc_mem_alloc(ctx, req_data);
 			//update_yuv_addr(ctx,0);
 			v4l2_vpu_send_cmd(ctx, 0, GTB_ENC_CMD_STREAM_START, 0, NULL);
@@ -1308,7 +1308,8 @@ static void vpu_stop_streaming(struct vb2_queue *q)
 	}
 	if (!list_empty(&q->queued_list))
 		list_for_each_entry(vb, &q->queued_list, queued_entry)
-			vb2_buffer_done(vb, VB2_BUF_STATE_ERROR);
+			if (vb->state == VB2_BUF_STATE_ACTIVE)
+				vb2_buffer_done(vb, VB2_BUF_STATE_ERROR);
 	INIT_LIST_HEAD(&This->drv_q);
 	up(&This->drv_q_lock);
 }
-- 
1.7.9.5

