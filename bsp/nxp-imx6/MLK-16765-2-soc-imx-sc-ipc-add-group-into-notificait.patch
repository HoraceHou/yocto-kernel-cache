From 6045509e89edef98a8bcc5712f87e699815e5ad0 Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Tue, 7 Nov 2017 17:04:23 +0800
Subject: [PATCH 2811/5242] MLK-16765-2 soc: imx: sc: ipc: add 'group' into
 notificaiton

commit  701b4d52374f205b727cbee45b3fc3c16c8c2724 from
https://source.codeaurora.org/external/imx/linux-imx.git

Add one more 'group' parameter to notification so that rtc/temperature
driver can check if this MU interrupt is for themselves or not. Worst
case as before, different irq group with the same irq_status can't be
distinguished, such as 'SC_IRQ_BUTTON' and 'SC_IRQ_RTC'(all is 1), which
means both notification will be called once any of both interrupts
triggered. Besides, refine check irq_status code.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Reviewed-by: Peng Fan <peng.fan@nxp.com>
Reviewed-by: Anson Huang <Anson.Huang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/imx/sc/main/ipc.c |   31 ++++++++++++++++---------------
 1 file changed, 16 insertions(+), 15 deletions(-)

diff --git a/drivers/soc/imx/sc/main/ipc.c b/drivers/soc/imx/sc/main/ipc.c
index f437cf5..7ef0175 100644
--- a/drivers/soc/imx/sc/main/ipc.c
+++ b/drivers/soc/imx/sc/main/ipc.c
@@ -243,29 +243,30 @@ int unregister_scu_notifier(struct notifier_block *nb)
 
 EXPORT_SYMBOL(unregister_scu_notifier);
 
-static int SCU_notifier_call_chain(unsigned long val)
+static int SCU_notifier_call_chain(unsigned long status, sc_irq_group_t *group)
 {
-	return (blocking_notifier_call_chain(&SCU_notifier_chain, val, NULL) ==
-		NOTIFY_BAD) ? -EINVAL : 0;
+	return blocking_notifier_call_chain(&SCU_notifier_chain, status,
+						(void *)group);
 }
 
 static void scu_mu_work_handler(struct work_struct *work)
 {
 	uint32_t irq_status;
 	sc_err_t sciErr;
+	sc_irq_group_t i;
 
-	/* Figure out what caused the interrupt. */
-	sciErr = sc_irq_status(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_TEMP,
-			       &irq_status);
-
-	if (irq_status & (SC_IRQ_TEMP_PMIC0_HIGH | SC_IRQ_TEMP_PMIC1_HIGH))
-		SCU_notifier_call_chain(irq_status);
-
-	sciErr = sc_irq_status(mu_ipcHandle, SC_R_MU_0A, SC_IRQ_GROUP_RTC,
-			       &irq_status);
-
-	if (irq_status & SC_IRQ_RTC)
-		SCU_notifier_call_chain(irq_status);
+	/* Walk all groups interrupt callback, callback will judge if it's
+	 * the right group for itself, return directly if not.
+	 */
+	for (i = 0; i < SC_IRQ_NUM_GROUP; i++) {
+		sciErr = sc_irq_status(mu_ipcHandle, SC_R_MU_0A, i,
+					&irq_status);
+		/* no irq? */
+		if (!irq_status)
+			continue;
+
+		SCU_notifier_call_chain(irq_status, &i);
+	}
 }
 
 static irqreturn_t imx8_scu_mu_isr(int irq, void *param)
-- 
1.7.9.5

