From ac64ed545f99d2838f1bbb02272f6c57929bd56f Mon Sep 17 00:00:00 2001
From: Anson Huang <Anson.Huang@nxp.com>
Date: Sat, 3 Nov 2018 12:15:12 +0800
Subject: [PATCH 5030/5242] MLK-20203-1 cpufreq: imx6q: fix coverity issue

commit  90c0f2b1ba522d7341ea9681743d04234fab8a3a from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch fixes coverity issue of "unchecked return value".

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
Reviewed-by: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/cpufreq/imx6q-cpufreq.c |   32 ++++++++++++++++++++++++++------
 1 file changed, 26 insertions(+), 6 deletions(-)

diff --git a/drivers/cpufreq/imx6q-cpufreq.c b/drivers/cpufreq/imx6q-cpufreq.c
index fa0430a..585a95c 100644
--- a/drivers/cpufreq/imx6q-cpufreq.c
+++ b/drivers/cpufreq/imx6q-cpufreq.c
@@ -288,14 +288,28 @@ static int imx6q_cpufreq_init(struct cpufreq_policy *policy)
 static int imx6_cpufreq_pm_notify(struct notifier_block *nb,
 	unsigned long event, void *dummy)
 {
+	int ret;
+
 	switch (event) {
 	case PM_SUSPEND_PREPARE:
-		if (!IS_ERR(dc_reg) && !ignore_dc_reg)
-			regulator_set_voltage_tol(dc_reg, DC_VOLTAGE_MAX, 0);
+		if (!IS_ERR(dc_reg) && !ignore_dc_reg) {
+			ret = regulator_set_voltage_tol(dc_reg, DC_VOLTAGE_MAX, 0);
+			if (ret) {
+				dev_err(cpu_dev,
+					"failed to scale dc_reg to max: %d\n", ret);
+				return ret;
+			}
+		}
 		break;
 	case PM_POST_SUSPEND:
-		if (!IS_ERR(dc_reg) && !ignore_dc_reg)
-			regulator_set_voltage_tol(dc_reg, DC_VOLTAGE_MIN, 0);
+		if (!IS_ERR(dc_reg) && !ignore_dc_reg) {
+			ret = regulator_set_voltage_tol(dc_reg, DC_VOLTAGE_MIN, 0);
+			if (ret) {
+				dev_err(cpu_dev,
+					"failed to scale dc_reg to min: %d\n", ret);
+				return ret;
+			}
+		}
 		break;
 	default:
 		break;
@@ -527,8 +541,14 @@ static int imx6q_cpufreq_probe(struct platform_device *pdev)
 	 */
 	if (freq_table[num - 1].frequency > FREQ_528_MHZ)
 		ignore_dc_reg = true;
-	if (!IS_ERR(dc_reg) && !ignore_dc_reg)
-		regulator_set_voltage_tol(dc_reg, DC_VOLTAGE_MIN, 0);
+	if (!IS_ERR(dc_reg) && !ignore_dc_reg) {
+		ret = regulator_set_voltage_tol(dc_reg, DC_VOLTAGE_MIN, 0);
+		if (ret) {
+			dev_err(cpu_dev,
+				"failed to scale dc_reg to min: %d\n", ret);
+			return ret;
+		}
+	}
 
 	/* Make imx6_soc_volt array's size same as arm opp number */
 	imx6_soc_volt = devm_kcalloc(cpu_dev, num, sizeof(*imx6_soc_volt),
-- 
1.7.9.5

