From 6026593a5177966c6ca49b766aa6aea127b582bd Mon Sep 17 00:00:00 2001
From: Robert Chiras <robert.chiras@nxp.com>
Date: Thu, 11 May 2017 16:01:00 +0300
Subject: [PATCH 1793/5242] MLK-14800: fbdev: Refactor printed information

commit  24f6c88a1c50d74307c4b6d402e79ad7cbd5b186 from
https://source.codeaurora.org/external/imx/linux-imx.git

Debug info should not be printed using pr_info on init. Use pr_debug
instead.
Also, verify the cable state before reading the EDID. There is no point
in trying to read EDID (and print an error message), when there is no
device connected to HDMI connector.

Signed-off-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxc/mxsfb_sii902x.c |   19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/drivers/video/fbdev/mxc/mxsfb_sii902x.c b/drivers/video/fbdev/mxc/mxsfb_sii902x.c
index aa4a8bb..b9ab7db8 100644
--- a/drivers/video/fbdev/mxc/mxsfb_sii902x.c
+++ b/drivers/video/fbdev/mxc/mxsfb_sii902x.c
@@ -421,14 +421,14 @@ static int sii902x_probe(struct i2c_client *client,
 	/* read device ID */
 	for (i = 10; i > 0; i--) {
 		dat = i2c_smbus_read_byte_data(sii902x.client, 0x1B);
-		printk(KERN_DEBUG "Sii902x: read id = 0x%02X", dat);
+		dev_dbg(&sii902x.client->dev, "Sii902x: read id = 0x%02X", dat);
 		if (dat == 0xb0) {
 			dat = i2c_smbus_read_byte_data(sii902x.client, 0x1C);
-			printk(KERN_DEBUG "-0x%02X", dat);
+			dev_dbg(&sii902x.client->dev, "-0x%02X", dat);
 			dat = i2c_smbus_read_byte_data(sii902x.client, 0x1D);
-			printk(KERN_DEBUG "-0x%02X", dat);
+			dev_dbg(&sii902x.client->dev, "-0x%02X", dat);
 			dat = i2c_smbus_read_byte_data(sii902x.client, 0x30);
-			printk(KERN_DEBUG "-0x%02X\n", dat);
+			dev_dbg(&sii902x.client->dev, "-0x%02X\n", dat);
 			break;
 		}
 	}
@@ -441,10 +441,13 @@ static int sii902x_probe(struct i2c_client *client,
 	/* enable hmdi audio */
 	sii902x_audio_setup();
 
-	/* try to read edid */
-	ret = sii902x_read_edid(&edid_fbi);
-	if (ret < 0)
-		dev_warn(&sii902x.client->dev, "Can not read edid\n");
+	/* try to read edid, only if cable is plugged in */
+	dat = i2c_smbus_read_byte_data(sii902x.client, 0x3D);
+	if (dat & 0x04) {
+		ret = sii902x_read_edid(&edid_fbi);
+		if (ret < 0)
+			dev_warn(&sii902x.client->dev, "Can not read edid\n");
+	}
 
 	if (sii902x.client->irq) {
 		ret = request_irq(sii902x.client->irq, sii902x_detect_handler,
-- 
1.7.9.5

