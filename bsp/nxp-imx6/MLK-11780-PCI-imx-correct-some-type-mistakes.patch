From 02ce3f44ae0e73490cac62b02ea5bf1f9a72aecc Mon Sep 17 00:00:00 2001
From: Richard Zhu <hongxing.zhu@nxp.com>
Date: Fri, 9 Mar 2018 13:50:29 +0800
Subject: [PATCH 3481/5242] MLK-11780 PCI: imx: correct some type mistakes

commit  eca8afcaf317d94074ef35dd3c25adb932fb94f1 from
https://source.codeaurora.org/external/imx/linux-imx.git

- They should be bitwise logic, not the boolean logic.
- Correct the error return values.

Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/controller/dwc/pci-imx6.c |   18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
index 1c4b8c8..cf30cbc 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -1964,22 +1964,22 @@ static irqreturn_t imx_pcie_dma_isr(int irq, void *param)
 
 	/* check write isr */
 	irqs = readl(pci->dbi_base + offset + DMA_WRITE_INT_STS);
-	if (irqs && DMA_DONE_INT_STS) {
+	if (irqs & DMA_DONE_INT_STS) {
 		/* write 1 clear */
-		writel(irqs && DMA_DONE_INT_STS,
+		writel(irqs & DMA_DONE_INT_STS,
 				pci->dbi_base + offset + DMA_WRITE_INT_CLR);
 		dma_w_end = 1;
-	} else if (irqs && DMA_ABORT_INT_STS) {
+	} else if (irqs & DMA_ABORT_INT_STS) {
 		pr_info("imx pcie dma write error 0x%0x.\n", irqs);
 	}
 	/* check read isr */
 	irqs = readl(pci->dbi_base + offset + DMA_READ_INT_STS);
-	if (irqs && DMA_DONE_INT_STS) {
+	if (irqs & DMA_DONE_INT_STS) {
 		/* write 1 clear */
-		writel(irqs && DMA_DONE_INT_STS,
+		writel(irqs & DMA_DONE_INT_STS,
 				pci->dbi_base + offset + DMA_READ_INT_CLR);
 		dma_r_end = 1;
-	} else if (irqs && DMA_ABORT_INT_STS) {
+	} else if (irqs & DMA_ABORT_INT_STS) {
 		pr_info("imx pcie dma read error 0x%0x.", irqs);
 	}
 	return IRQ_HANDLED;
@@ -2446,14 +2446,14 @@ static int __init imx_pcie_probe(struct platform_device *pdev)
 			test_reg1 = devm_kzalloc(&pdev->dev,
 					test_region_size, GFP_KERNEL);
 			if (!test_reg1) {
-				ret = PTR_ERR(test_reg1);
+				ret = -ENOMEM;
 				return ret;
 			}
 
 			test_reg2 = devm_kzalloc(&pdev->dev,
 					test_region_size, GFP_KERNEL);
 			if (!test_reg2) {
-				ret = PTR_ERR(test_reg1);
+				ret = -ENOMEM;
 				return ret;
 			}
 		}
@@ -2462,7 +2462,7 @@ static int __init imx_pcie_probe(struct platform_device *pdev)
 					test_region_size);
 		if (!pcie_arb_base_addr) {
 			dev_err(dev, "ioremap error in ep io test\n");
-			ret = PTR_ERR(pcie_arb_base_addr);
+			ret = -ENOMEM;
 			return ret;
 		}
 
-- 
1.7.9.5

