From 29f2f309925419fe978b72421c2a08dea81762ce Mon Sep 17 00:00:00 2001
From: Andy Duan <fugang.duan@nxp.com>
Date: Tue, 21 Mar 2017 17:14:39 +0800
Subject: [PATCH 1595/5242] MLK-10274 tty: serial: clear AWAKE bit after
 resume back

commit  b26b6f82813882dc5ecf8a259f17119d8bd58c10 from
https://source.codeaurora.org/external/imx/linux-imx.git

When uart port (non-console port) in dma mode and use uart as remote wakeup
source, after resume back, the AWAKE bit is not cleared most of interrupts
are disabled. And then let system suspend state, system resume back immediately
without any wake up action. So we need to clear the AWAKE bit after resume
back in DMA mode.

Merge comments: it is necessary to clear AWAKE or RTSD bit.

Signed-off-by: Fugang Duan <B38611@freescale.com>
(merge patch from commit: d4b6b6b20eb2c5cca47292f89ab588b15d3be0a9)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/tty/serial/imx.c |    4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 24ca85e..f9e9eb9 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -2533,6 +2533,7 @@ static int imx_uart_suspend_noirq(struct device *dev)
 static int imx_uart_resume_noirq(struct device *dev)
 {
 	struct imx_port *sport = dev_get_drvdata(dev);
+	unsigned int val;
 	int ret;
 
 	pinctrl_pm_select_default_state(dev);
@@ -2545,6 +2546,9 @@ static int imx_uart_resume_noirq(struct device *dev)
 
 	/* disable wakeup from i.MX UART */
 	serial_imx_enable_wakeup(sport, false);
+	val = readl(sport->port.membase + USR1);
+	if (val & (USR1_AWAKE | USR1_RTSD))
+		writel(USR1_AWAKE | USR1_RTSD, sport->port.membase + USR1);
 
 	return 0;
 }
-- 
1.7.9.5

