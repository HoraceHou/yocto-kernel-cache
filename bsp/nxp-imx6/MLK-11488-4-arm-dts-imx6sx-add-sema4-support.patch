From aa5347955292965cf2f6e2a8cc6b98a264e664fb Mon Sep 17 00:00:00 2001
From: Anson Huang <b20788@freescale.com>
Date: Thu, 4 Dec 2014 10:05:38 +0800
Subject: [PATCH 0394/5242] MLK-11488-4 arm: dts: imx6sx: add sema4 support

commit  7977132e80f37690636025e68de44b4d8307adfe from
https://source.codeaurora.org/external/imx/linux-imx.git

Add SEMA4 support for i.MX6SX.

Signed-off-by: Anson Huang <b20788@freescale.com>

During 4.14 rebase squashed with the following:

MLK-11566-5 drvier: imx_sema4: add dummy function

When CONFIG_IMX_SEMA4 is NOT set, some modules may
still call SEMA4 APIs, need to add dummy function
to make sure build pass.

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/boot/dts/imx6sx.dtsi |    7 +++++++
 include/linux/imx_sema4.h     |   21 ++++++++++++++++++++-
 2 files changed, 27 insertions(+), 1 deletion(-)

diff --git a/arch/arm/boot/dts/imx6sx.dtsi b/arch/arm/boot/dts/imx6sx.dtsi
index 1407e7e..d30f986 100644
--- a/arch/arm/boot/dts/imx6sx.dtsi
+++ b/arch/arm/boot/dts/imx6sx.dtsi
@@ -1341,6 +1341,13 @@
 				status = "disabled";
 			};
 
+			sema4: sema4@2290000 { /* sema4 */
+				compatible = "fsl,imx6sx-sema4";
+				reg = <0x02290000 0x4000>;
+				interrupts = <0 116 0x04>;
+				status = "okay";
+			};
+
 			uart6: serial@22a0000 {
 				compatible = "fsl,imx6sx-uart",
 					     "fsl,imx6q-uart", "fsl,imx21-uart";
diff --git a/include/linux/imx_sema4.h b/include/linux/imx_sema4.h
index 83f319f..fe48089 100644
--- a/include/linux/imx_sema4.h
+++ b/include/linux/imx_sema4.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014 Freescale Semiconductor, Inc.
+ * Copyright (C) 2014-2015 Freescale Semiconductor, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 as
@@ -57,8 +57,27 @@ struct imx_sema4_mutex_device {
 
 struct imx_sema4_mutex *
 	imx_sema4_mutex_create(u32 dev_num, u32 mutex_num);
+#ifdef CONFIG_IMX_SEMA4
 int imx_sema4_mutex_destroy(struct imx_sema4_mutex *mutex_ptr);
 int imx_sema4_mutex_trylock(struct imx_sema4_mutex *mutex_ptr);
 int imx_sema4_mutex_lock(struct imx_sema4_mutex *mutex_ptr);
 int imx_sema4_mutex_unlock(struct imx_sema4_mutex *mutex_ptr);
+#else
+static inline int imx_sema4_mutex_destroy(struct imx_sema4_mutex *mutex_ptr)
+{
+	return 0;
+}
+static inline int imx_sema4_mutex_trylock(struct imx_sema4_mutex *mutex_ptr)
+{
+	return 0;
+}
+static inline int imx_sema4_mutex_lock(struct imx_sema4_mutex *mutex_ptr)
+{
+	return 0;
+}
+static inline int imx_sema4_mutex_unlock(struct imx_sema4_mutex *mutex_ptr)
+{
+	return 0;
+}
+#endif
 #endif /* __LINUX_IMX_SEMA4_H__ */
-- 
1.7.9.5

