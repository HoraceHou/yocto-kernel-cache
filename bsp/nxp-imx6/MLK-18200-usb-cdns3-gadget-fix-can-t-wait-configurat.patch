From 89f7331de9a048d24cc3f5efa1366a03dda74c4e Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@nxp.com>
Date: Fri, 4 May 2018 10:21:02 +0800
Subject: [PATCH 3709/5242] MLK-18200 usb: cdns3: gadget: fix can't wait
 configurated with USB2

commit  976acc53d12ddbe3ceaab92113dbbcd36a4e6c56 from
https://source.codeaurora.org/external/imx/linux-imx.git

With Linux PC USB2 connection, if L1 enable bit is set during the
initialization, the usbsts.cfgsts can't be 1 (device is in the
configured state) after setting usbconf.cfgset, move L1 enable
after USB configuration done can workaround this issue.

Reviewed-by: Li Jun <jun.li@nxp.com>
Signed-off-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/cdns3/gadget.c |   15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/cdns3/gadget.c b/drivers/usb/cdns3/gadget.c
index 2f9e3c8..311ad02 100644
--- a/drivers/usb/cdns3/gadget.c
+++ b/drivers/usb/cdns3/gadget.c
@@ -103,6 +103,7 @@ static int usb_ss_gadget_udc_start(struct usb_gadget *gadget,
 static void __cdns3_gadget_start(struct usb_ss_dev *usb_ss);
 static void cdns_prepare_setup_packet(struct usb_ss_dev *usb_ss);
 static void cdns_ep_config(struct usb_ss_endpoint *usb_ss_ep);
+static void cdns_enable_l1(struct usb_ss_dev *usb_ss, int enable);
 
 static struct usb_endpoint_descriptor cdns3_gadget_ep0_desc = {
 	.bLength	= USB_DT_ENDPOINT_SIZE,
@@ -291,6 +292,7 @@ static void cdns_gadget_unconfig(struct usb_ss_dev *usb_ss)
 	gadget_writel(usb_ss, &usb_ss->regs->usb_conf,
 		USB_CONF__CFGRST__MASK);
 
+	cdns_enable_l1(usb_ss, 0);
 	usb_ss->hw_configured_flag = 0;
 }
 
@@ -738,6 +740,16 @@ static int cdns_req_ep0_set_isoch_delay(struct usb_ss_dev *usb_ss,
 	return 0;
 }
 
+static void cdns_enable_l1(struct usb_ss_dev *usb_ss, int enable)
+{
+	if (enable)
+		gadget_writel(usb_ss, &usb_ss->regs->usb_conf,
+				USB_CONF__L1EN__MASK);
+	else
+		gadget_writel(usb_ss, &usb_ss->regs->usb_conf,
+				USB_CONF__L1DS__MASK);
+}
+
 /**
  * cdns_req_ep0_set_configuration - Handling of SET_CONFIG standard USB request
  * @usb_ss: extended gadget object
@@ -785,6 +797,7 @@ static int cdns_req_ep0_set_configuration(struct usb_ss_dev *usb_ss,
 					& USB_STS__CFGSTS__MASK))
 					;
 				usb_ss->hw_configured_flag = 1;
+				cdns_enable_l1(usb_ss, 1);
 
 				list_for_each_entry(ep,
 					&usb_ss->gadget.ep_list,
@@ -1354,6 +1367,7 @@ static int usb_ss_gadget_ep0_queue(struct usb_ep *ep,
 				;
 			erdy_sent = 1;
 			usb_ss->hw_configured_flag = 1;
+			cdns_enable_l1(usb_ss, 1);
 
 			list_for_each_entry(ep,
 				&usb_ss->gadget.ep_list,
@@ -2308,7 +2322,6 @@ static void __cdns3_gadget_start(struct usb_ss_dev *usb_ss)
 	gadget_writel(usb_ss, &usb_ss->regs->usb_conf,
 			USB_CONF__U1DS__MASK
 			| USB_CONF__U2DS__MASK
-			| USB_CONF__L1EN__MASK
 			);
 
 	gadget_writel(usb_ss, &usb_ss->regs->usb_conf, USB_CONF__DEVEN__MASK);
-- 
1.7.9.5

