From 1f17704faea432a9a20334caa1ff1650f4dcaad5 Mon Sep 17 00:00:00 2001
From: "Guoniu.Zhou" <guoniu.zhou@nxp.com>
Date: Tue, 31 Jul 2018 15:58:41 +0800
Subject: [PATCH 4365/5242] MLK-19108: ISI: fix isi hang issue when open it
 many times

commit  41edd726fc486fa6b59da5612ec8354609f317f5 from
https://source.codeaurora.org/external/imx/linux-imx.git

When one ISI channel is receiving data, if an other process
just open it at the same time and then close, it will lead
to this channel hang. The reason is soft reset in release
callback, so it make the channel stop work. Add an counter
for open isi channel and really soft reset the channel when
the counter equal to zero.

Signed-off-by: Guoniu.Zhou <guoniu.zhou@nxp.com>
Reviewed-by: Robby.Cai <robby.cai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-isi-cap.c  |    5 ++++-
 drivers/media/platform/imx8/mxc-isi-core.c |    1 +
 drivers/media/platform/imx8/mxc-isi-core.h |    2 ++
 3 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/imx8/mxc-isi-cap.c b/drivers/media/platform/imx8/mxc-isi-cap.c
index b09c56b..d0b0cd1 100644
--- a/drivers/media/platform/imx8/mxc-isi-cap.c
+++ b/drivers/media/platform/imx8/mxc-isi-cap.c
@@ -652,6 +652,8 @@ static int mxc_isi_capture_open(struct file *file)
 
 	dev_dbg(&mxc_isi->pdev->dev, "%s, ISI%d\n", __func__, mxc_isi->id);
 
+	atomic_inc(&mxc_isi->open_count);
+
 	/* Get remote source pad */
 	source_pad = mxc_isi_get_remote_source_pad(mxc_isi);
 	if (source_pad == NULL) {
@@ -717,7 +719,8 @@ static int mxc_isi_capture_release(struct file *file)
 	}
 	mutex_unlock(&mxc_isi->lock);
 
-	mxc_isi_channel_deinit(mxc_isi);
+	if (atomic_dec_and_test(&mxc_isi->open_count))
+		mxc_isi_channel_deinit(mxc_isi);
 
 	ret = v4l2_subdev_call(sd, core, s_power, 0);
 	if (ret < 0 && ret != -ENOIOCTLCMD) {
diff --git a/drivers/media/platform/imx8/mxc-isi-core.c b/drivers/media/platform/imx8/mxc-isi-core.c
index b72eadd..7943802 100644
--- a/drivers/media/platform/imx8/mxc-isi-core.c
+++ b/drivers/media/platform/imx8/mxc-isi-core.c
@@ -133,6 +133,7 @@ static int mxc_isi_probe(struct platform_device *pdev)
 	init_waitqueue_head(&mxc_isi->irq_queue);
 	spin_lock_init(&mxc_isi->slock);
 	mutex_init(&mxc_isi->lock);
+	atomic_set(&mxc_isi->open_count, 0);
 
 	mxc_isi->clk = devm_clk_get(dev, NULL);
 	if (IS_ERR(mxc_isi->clk)) {
diff --git a/drivers/media/platform/imx8/mxc-isi-core.h b/drivers/media/platform/imx8/mxc-isi-core.h
index bae5c24..31b4b06 100644
--- a/drivers/media/platform/imx8/mxc-isi-core.h
+++ b/drivers/media/platform/imx8/mxc-isi-core.h
@@ -274,6 +274,8 @@ struct mxc_isi_dev {
 	u32 flags;
 	u8 chain_buf;
 
+	atomic_t open_count;
+
 	/* scale factor */
 	u32	xfactor;
 	u32	yfactor;
-- 
1.7.9.5

