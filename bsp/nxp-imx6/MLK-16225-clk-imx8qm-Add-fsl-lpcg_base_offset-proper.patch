From 931a2d6addc7c3154d25b2b9ab41e46115b89da7 Mon Sep 17 00:00:00 2001
From: Leonard Crestez <leonard.crestez@nxp.com>
Date: Thu, 28 Sep 2017 19:24:59 +0300
Subject: [PATCH 2600/5242] MLK-16225: clk: imx8qm: Add fsl,lpcg_base_offset
 property

commit  5d41296b4cbaeeb455ea85676e500403a549c4d2 from
https://source.codeaurora.org/external/imx/linux-imx.git

Right now the imx8qm clock provider hardcodes physical addresses. In
virtualization scenarios the intermediate physical addresses visible
from a guest can be different. In theory a 1:1 mapping could be done but
that in xen it would overlap with hardcoded guest ram starting at
0x40000000.

Solve this by adding a property with a common offset for all lpcg
areas. This should be set in the guest dts.

In theory each lpcg block could be remapped with it's own offset but
that is not supported.

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Reviewed-by: Ranjani Vaidyanathan <Ranjani.vaidyanathan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-imx8qm.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/clk/imx/clk-imx8qm.c b/drivers/clk/imx/clk-imx8qm.c
index de2d248..188c21b 100644
--- a/drivers/clk/imx/clk-imx8qm.c
+++ b/drivers/clk/imx/clk-imx8qm.c
@@ -131,13 +131,14 @@
 static const char *enet0_rmii_tx_sels[] = {"enet0_ref_div", "dummy",};
 static const char *enet1_rmii_tx_sels[] = {"enet1_ref_div", "dummy",};
 
-#define LPCG_ADDR(arg) ((void __iomem *)(arg))
+#define LPCG_ADDR(arg) ((void __iomem *)(base_lpcg + arg))
 
 static int imx8qm_clk_probe(struct platform_device *pdev)
 {
 	struct device_node *ccm_node = pdev->dev.of_node;
 	struct device_node *np_acm;
 	void __iomem *base_acm;
+	u64 base_lpcg = 0;
 	int i, ret;
 
 	ret = imx8_clk_mu_init();
@@ -146,6 +147,13 @@ static int imx8qm_clk_probe(struct platform_device *pdev)
 
 	pr_info("***** imx8qm_clocks_init *****\n");
 
+	/* Parse lpcg_base_offset for virtualization cases */
+	ret = of_property_read_u64(ccm_node, "fsl,lpcg_base_offset", &base_lpcg);
+	if (ret && ret != -EINVAL) {
+		dev_err(&pdev->dev, "failed to parse fsl,lpcg_base_offset: %d\n", ret);
+		return ret;
+	}
+
 	clks[IMX8QM_CLK_DUMMY] = imx_clk_fixed("dummy", 0);
 
 	/* ARM core */
-- 
1.7.9.5

