From 3d8796f630fa19045491c7e66dd213b4a5d0de3f Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Fri, 2 Mar 2018 12:44:05 +0800
Subject: [PATCH 3425/5242] MLK-17646 gpu: imx: dpu: Correct number of fg
 instances in plane group resource

commit  294c8f27233d51c57e696624c62995423e4b98e8 from
https://source.codeaurora.org/external/imx/linux-imx.git

The resources for a plane group are shared by the two display streams
of one DPU.  Thus, the two Framegen(fg) instances of one DPU should be
in the plane group resource.  The resource users may find the fg instance
onto which the resources are built via the stream id.  This patch corrects
the number of fg instances in a plane group resource from one to two.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-crtc.c  |    2 +-
 drivers/gpu/drm/imx/dpu/dpu-plane.c |    6 ++++--
 include/video/dpu.h                 |    2 +-
 3 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-crtc.c b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
index 455ee77..4db43bd 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-crtc.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
@@ -615,7 +615,7 @@ static int dpu_crtc_init(struct dpu_crtc *dpu_crtc,
 		return ret;
 	}
 
-	plane_grp->res.fg = dpu_crtc->fg;
+	plane_grp->res.fg[stream_id] = dpu_crtc->fg;
 	dpu_crtc->plane[0] = dpu_plane_init(drm, 0, stream_id, plane_grp,
 					DRM_PLANE_TYPE_PRIMARY);
 	if (IS_ERR(dpu_crtc->plane[0])) {
diff --git a/drivers/gpu/drm/imx/dpu/dpu-plane.c b/drivers/gpu/drm/imx/dpu/dpu-plane.c
index 9eb60aa..7b676fde 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-plane.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-plane.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2017 NXP
+ * Copyright 2017-2018 NXP
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License as published by the
@@ -428,6 +428,7 @@ static void dpu_plane_atomic_update(struct drm_plane *plane,
 	struct dpu_layerblend *lb;
 	struct dpu_constframe *cf;
 	struct dpu_extdst *ed;
+	struct dpu_framegen *fg;
 	struct device *dev = plane->dev->dev;
 	dma_addr_t baseaddr, uv_baseaddr = 0;
 	dpu_block_id_t fe_id, vs_id = ID_NONE, hs_id;
@@ -642,7 +643,8 @@ static void dpu_plane_atomic_update(struct drm_plane *plane,
 					dpstate->base_w, dpstate->base_h);
 		constframe_constantcolor(cf, 0, 0, 0, 0);
 
-		framegen_sacfg(res->fg, dpstate->base_x, dpstate->base_y);
+		fg = res->fg[dplane->stream_id];
+		framegen_sacfg(fg, dpstate->base_x, dpstate->base_y);
 	}
 
 	if (dpstate->is_top) {
diff --git a/include/video/dpu.h b/include/video/dpu.h
index 8e97c66..8b7f456 100644
--- a/include/video/dpu.h
+++ b/include/video/dpu.h
@@ -729,7 +729,7 @@ struct dpu_plane_res {
 	struct dpu_extdst	*ed[2];
 	struct dpu_fetchdecode	*fd[MAX_FD_NUM];
 	struct dpu_fetcheco	*fe[2];
-	struct dpu_framegen	*fg;
+	struct dpu_framegen	*fg[2];
 	struct dpu_hscaler	*hs[2];
 	struct dpu_layerblend	*lb[MAX_LB_NUM];
 	struct dpu_vscaler	*vs[2];
-- 
1.7.9.5

