From 1b39ac9a7e7266dedfb4fce896f6464dcf2c1af3 Mon Sep 17 00:00:00 2001
From: Robert Chiras <robert.chiras@nxp.com>
Date: Tue, 17 Apr 2018 10:56:41 +0300
Subject: [PATCH 3662/5242] MLK-17589: gpu/imx: Fix DCSS+DSI suspend/resume

commit  75cab86a0dc4406d9c50827204c01029922c22b2 from
https://source.codeaurora.org/external/imx/linux-imx.git

Since the DCSS is not fully powered off when a suspend/blank occurs, the
next time we resume/unblank, the DCSS->DSI pipeline cannot be fully
re-initialized. In order to fix this issue, we should also not
completely power off the DSI too. Just configure it to stop
transmitting, by powering off the PHY.

Signed-off-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/bridge/nwl-dsi.c  |    1 -
 drivers/gpu/drm/imx/nwl_dsi-imx.c |    3 +++
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/bridge/nwl-dsi.c b/drivers/gpu/drm/bridge/nwl-dsi.c
index a7d9e9c..5ed93df 100644
--- a/drivers/gpu/drm/bridge/nwl-dsi.c
+++ b/drivers/gpu/drm/bridge/nwl-dsi.c
@@ -1080,7 +1080,6 @@ static void nwl_dsi_bridge_disable(struct drm_bridge *bridge)
 	phy_power_off(dsi->phy);
 	phy_exit(dsi->phy);
 
-	nwl_dsi_disable_clocks(dsi, CLK_PHY_REF | CLK_TX_ESC);
 	devm_free_irq(dev, dsi->irq, dsi);
 
 	dsi->enabled = false;
diff --git a/drivers/gpu/drm/imx/nwl_dsi-imx.c b/drivers/gpu/drm/imx/nwl_dsi-imx.c
index e97b174..95d2570 100644
--- a/drivers/gpu/drm/imx/nwl_dsi-imx.c
+++ b/drivers/gpu/drm/imx/nwl_dsi-imx.c
@@ -39,6 +39,7 @@
 #include "imx-drm.h"
 
 #define DRIVER_NAME "nwl_dsi-imx"
+#define NO_CLK_RESET
 
 /* 8MQ SRC specific registers */
 #define SRC_MIPIPHY_RCR				0x28
@@ -450,6 +451,7 @@ static int imx8mq_dsi_poweron(struct imx_mipi_dsi *dsi)
 
 static int imx8mq_dsi_poweroff(struct imx_mipi_dsi *dsi)
 {
+#ifndef NO_CLK_RESET
 	regmap_update_bits(dsi->reset, SRC_MIPIPHY_RCR,
 			   PCLK_RESET_N, 0);
 	regmap_update_bits(dsi->reset, SRC_MIPIPHY_RCR,
@@ -458,6 +460,7 @@ static int imx8mq_dsi_poweroff(struct imx_mipi_dsi *dsi)
 			   RESET_BYTE_N, 0);
 	regmap_update_bits(dsi->reset, SRC_MIPIPHY_RCR,
 			   DPI_RESET_N, 0);
+#endif
 
 	return 0;
 }
-- 
1.7.9.5

