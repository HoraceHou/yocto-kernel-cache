From 7b0e4909580721eaf05897e1d3adf26ff409104a Mon Sep 17 00:00:00 2001
From: Han Xu <han.xu@nxp.com>
Date: Thu, 24 May 2018 16:06:22 -0500
Subject: [PATCH 4344/5242] MLK-18396-2: mtd: fsl-flexspi: enable FSPI on
 i.MX8MM

commit  407b90d09bfab70501e18bd54516fdb3e18f1ebe from
https://source.codeaurora.org/external/imx/linux-imx.git

Enable FlexSPI driver on i.MX8MM EVK.

Signed-off-by: Han Xu <han.xu@nxp.com>
(cherry picked from commit 0bb6d003fd6ce479308538a41f8a398beb70d897)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mtd/spi-nor/fsl-flexspi.c |   25 ++++++++++++++++---------
 drivers/mtd/spi-nor/spi-nor.c     |    1 +
 2 files changed, 17 insertions(+), 9 deletions(-)

diff --git a/drivers/mtd/spi-nor/fsl-flexspi.c b/drivers/mtd/spi-nor/fsl-flexspi.c
index 68d03fd..a5523eb 100644
--- a/drivers/mtd/spi-nor/fsl-flexspi.c
+++ b/drivers/mtd/spi-nor/fsl-flexspi.c
@@ -410,6 +410,7 @@
 enum fsl_flexspi_devtype {
 	FSL_FLEXSPI_IMX8QM,
 	FSL_FLEXSPI_IMX8QXP,
+	FSL_FLEXSPI_IMX8MM,
 };
 
 struct fsl_flexspi_devtype_data {
@@ -422,8 +423,7 @@ struct fsl_flexspi_devtype_data {
 
 static struct fsl_flexspi_devtype_data imx8qm_data = {
 	.devtype = FSL_FLEXSPI_IMX8QM,
-	/* .rxfifo = 1024, */
-	.rxfifo = 128,
+	.rxfifo = 1024,
 	.txfifo = 1024,
 	.ahb_buf_size = 2048,
 	.driver_data = 0,
@@ -431,8 +431,15 @@ struct fsl_flexspi_devtype_data {
 
 static struct fsl_flexspi_devtype_data imx8qxp_data = {
 	.devtype = FSL_FLEXSPI_IMX8QXP,
-	/* .rxfifo = 1024, */
-	.rxfifo = 128,
+	.rxfifo = 1024,
+	.txfifo = 1024,
+	.ahb_buf_size = 2048,
+	.driver_data = 0,
+};
+
+static struct fsl_flexspi_devtype_data imx8mm_data = {
+	.devtype = FSL_FLEXSPI_IMX8MM,
+	.rxfifo = 1024,
 	.txfifo = 1024,
 	.ahb_buf_size = 2048,
 	.driver_data = 0,
@@ -489,7 +496,6 @@ static irqreturn_t fsl_flexspi_irq_handler(int irq, void *dev_id)
 static void fsl_flexspi_init_lut(struct fsl_flexspi *flex)
 {
 	void __iomem *base = flex->iobase;
-	int rxfifo = flex->devtype_data->rxfifo;
 	struct spi_nor *nor = &flex->nor[0];
 	u8 addrlen = (nor->addr_width == 3) ? ADDR24BIT : ADDR32BIT;
 	u32 lut_base;
@@ -522,7 +528,7 @@ static void fsl_flexspi_init_lut(struct fsl_flexspi *flex)
 		       base + FLEXSPI_LUT(lut_base));
 
 		writel(LUT0(DUMMY_DDR, PAD8, dm * 2)
-			| LUT1(READ_DDR, PAD8, rxfifo),
+			| LUT1(READ_DDR, PAD8, 0),
 			base + FLEXSPI_LUT(lut_base + 1));
 	/* QUAD Fast Read */
 	} else if (op == SPINOR_OP_READ_1_1_4 || op == SPINOR_OP_READ_1_1_4_4B) {
@@ -531,7 +537,7 @@ static void fsl_flexspi_init_lut(struct fsl_flexspi *flex)
 		       base + FLEXSPI_LUT(lut_base));
 
 		writel(LUT0(DUMMY, PAD1, dm) |
-		       LUT1(FSL_READ, PAD4, rxfifo),
+		       LUT1(FSL_READ, PAD4, 0),
 		       base + FLEXSPI_LUT(lut_base + 1));
 	/* DDR Quad I/O Read 	 */
 	} else if (op == SPINOR_OP_READ_1_4_4_D || op == SPINOR_OP_READ_1_4_4_D_4B) {
@@ -544,7 +550,7 @@ static void fsl_flexspi_init_lut(struct fsl_flexspi *flex)
 		       LUT1(DUMMY, PAD1, dm),
 		       base + FLEXSPI_LUT(lut_base + 1));
 
-		writel(LUT0(READ_DDR, PAD4, rxfifo) |
+		writel(LUT0(READ_DDR, PAD4, 0) |
 		       LUT1(JMP_ON_CS, PAD1, 0),
 		       base + FLEXSPI_LUT(lut_base + 2));
 	/* DDR Quad Fast Read 	 */
@@ -555,7 +561,7 @@ static void fsl_flexspi_init_lut(struct fsl_flexspi *flex)
 		       base + FLEXSPI_LUT(lut_base));
 
 		writel(LUT0(DUMMY, PAD1, dm) |
-		       LUT1(READ_DDR, PAD4, rxfifo),
+		       LUT1(READ_DDR, PAD4, 0),
 		       base + FLEXSPI_LUT(lut_base + 1));
 
 		writel(LUT0(JMP_ON_CS, PAD1, 0),
@@ -1160,6 +1166,7 @@ static void fsl_flexspi_unprep(struct spi_nor *nor, enum spi_nor_ops ops)
 static const struct of_device_id fsl_flexspi_dt_ids[] = {
 	{ .compatible = "fsl,imx8qm-flexspi", .data = (void *)&imx8qm_data, },
 	{ .compatible = "fsl,imx8qxp-flexspi", .data = (void *)&imx8qxp_data, },
+	{ .compatible = "fsl,imx8mm-flexspi", .data = (void *)&imx8mm_data, },
 	{ /* sentinel */ }
 };
 MODULE_DEVICE_TABLE(of, fsl_flexspi_dt_ids);
diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 0933092..84d1bed 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -1118,6 +1118,7 @@ static int spi_nor_is_locked(struct mtd_info *mtd, loff_t ofs, uint64_t len)
 	{ "n25q064",     INFO(0x20ba17, 0, 64 * 1024,  128, SECT_4K | SPI_NOR_QUAD_READ) },
 	{ "n25q064a",    INFO(0x20bb17, 0, 64 * 1024,  128, SECT_4K | SPI_NOR_QUAD_READ) },
 	{ "n25q128a11",  INFO(0x20bb18, 0, 64 * 1024,  256, SECT_4K | SPI_NOR_QUAD_READ) },
+	{ "mt25qu256",	 INFO(0x20bb19, 0, 64 * 1024,  256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ "n25q128a13",  INFO(0x20ba18, 0, 64 * 1024,  256, SECT_4K | SPI_NOR_QUAD_READ) },
 	{ "n25q256a",    INFO(0x20ba19, 0, 64 * 1024,  512, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ "n25q256ax1",  INFO(0x20bb19, 0, 64 * 1024,  512, SECT_4K | SPI_NOR_QUAD_READ) },
-- 
1.7.9.5

