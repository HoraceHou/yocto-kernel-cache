From 2c9db274b3d2e3f99d1259d9271aadff8009df9c Mon Sep 17 00:00:00 2001
From: Li Jun <jun.li@freescale.com>
Date: Thu, 29 Jan 2015 10:26:52 +0800
Subject: [PATCH 0254/5242] MLK-10174-1 arm: imx: gpc: export an interface to
 keep mega fast power

commit  aa42595cc79c27d2d8824896c5b9daba7b3ca24a from
https://source.codeaurora.org/external/imx/linux-imx.git

Add an interface for GPC used by drivers to keep mega fast mix domain
power.

Signed-off-by: Li Jun <jun.li@freescale.com>

During 4.14 rebase added ifdef check for CONFIG_HAVE_IMX_GPC so that
it won't break arm64 build.

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 arch/arm/mach-imx/common.h |    2 ++
 arch/arm/mach-imx/gpc.c    |   28 ++++++++++++++++++++++++++++
 include/linux/imx_gpc.h    |   30 ++++++++++++++++++++++++++++++
 3 files changed, 60 insertions(+)
 create mode 100644 include/linux/imx_gpc.h

diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index 697a372..2fee2f2 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -93,6 +93,8 @@ static inline void imx_smp_prepare(void) {}
 void imx_gpcv2_post_resume(void);
 void imx_gpcv2_set_core1_pdn_pup_by_software(bool pdn);
 unsigned int imx_gpcv2_is_mf_mix_off(void);
+int imx_gpc_mf_power_on(unsigned int irq, unsigned int on);
+int imx_gpcv2_mf_power_on(unsigned int irq, unsigned int on);
 void __init imx_gpcv2_check_dt(void);
 void imx_gpcv2_set_lpm_mode(enum mxc_cpu_pwr_mode mode);
 void imx_gpcv2_set_cpu_power_gate_in_idle(bool pdn);
diff --git a/arch/arm/mach-imx/gpc.c b/arch/arm/mach-imx/gpc.c
index 6c705105..839156b 100644
--- a/arch/arm/mach-imx/gpc.c
+++ b/arch/arm/mach-imx/gpc.c
@@ -36,6 +36,7 @@
 static u32 gpc_saved_imrs[IMR_NUM];
 static u32 gpc_mf_irqs[IMR_NUM];
 static u32 gpc_mf_request_on[IMR_NUM];
+static DEFINE_SPINLOCK(gpc_lock);
 
 unsigned int imx_gpc_is_mf_mix_off(void)
 {
@@ -246,6 +247,33 @@ static int imx_gpc_domain_alloc(struct irq_domain *domain,
 	.free		= irq_domain_free_irqs_common,
 };
 
+int imx_gpc_mf_power_on(unsigned int irq, unsigned int on)
+{
+	struct irq_desc *d = irq_to_desc(irq);
+	unsigned int idx = d->irq_data.hwirq / 32;
+	unsigned long flags;
+	u32 mask;
+
+	mask = 1 << (d->irq_data.hwirq % 32);
+	spin_lock_irqsave(&gpc_lock, flags);
+	gpc_mf_request_on[idx] = on ? gpc_mf_request_on[idx] | mask :
+				  gpc_mf_request_on[idx] & ~mask;
+	spin_unlock_irqrestore(&gpc_lock, flags);
+
+	return 0;
+}
+
+int imx_gpc_mf_request_on(unsigned int irq, unsigned int on)
+{
+	if (cpu_is_imx6sx() || cpu_is_imx6ul())
+		return imx_gpc_mf_power_on(irq, on);
+	else if (cpu_is_imx7d())
+		return imx_gpcv2_mf_power_on(irq, on);
+	else
+		return 0;
+}
+EXPORT_SYMBOL_GPL(imx_gpc_mf_request_on);
+
 static int __init imx_gpc_init(struct device_node *node,
 			       struct device_node *parent)
 {
diff --git a/include/linux/imx_gpc.h b/include/linux/imx_gpc.h
new file mode 100644
index 0000000..0eb3822
--- /dev/null
+++ b/include/linux/imx_gpc.h
@@ -0,0 +1,30 @@
+/*
+ * Copyright (C) 2015 Freescale Semiconductor, Inc.
+ */
+
+/*
+ * The code contained herein is licensed under the GNU Lesser General
+ * Public License.  You may obtain a copy of the GNU Lesser General
+ * Public License Version 2.1 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/lgpl-license.html
+ * http://www.gnu.org/copyleft/lgpl.html
+ */
+
+/*
+ * @file linux/imx_gpc.h
+ *
+ * @brief Global header file for imx GPC
+ *
+ * @ingroup GPC
+ */
+#ifndef __LINUX_IMX_GPC_H__
+#define __LINUX_IMX_GPC_H__
+
+#ifdef CONFIG_HAVE_IMX_GPC
+int imx_gpc_mf_request_on(unsigned int irq, unsigned int on);
+#else
+static inline int imx_gpc_mf_request_on(unsigned int irq, unsigned int on) { return 0; }
+#endif
+
+#endif /* __LINUX_IMX_GPC_H__ */
-- 
1.7.9.5

