From 75f484f4b31da5fc559b6a14a3213e91713f6962 Mon Sep 17 00:00:00 2001
From: Daniel Baluta <daniel.baluta@nxp.com>
Date: Thu, 8 Nov 2018 16:13:12 +0200
Subject: [PATCH 5078/5242] MLK-20189-5: ASoC: fsl: dsp_proxy: Unlock
 proxy->lock on error path

commit  2f83d82c7273cea15b7404d34f0677ac7bf120bc from
https://source.codeaurora.org/external/imx/linux-imx.git

xf_cmd_send_recv returns with lock taken if waiting was
interrupted by a signal.

This fixes Coverity issues: CID5233120 / CID5233060

Reviewed-by: S.j. Wang <shengjiu.wang@nxp.com>
Reviewed-by: Cosmin-Gabriel Samoila <cosmin.samoila@nxp.com>
Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_dsp_proxy.c |    2 ++
 1 file changed, 2 insertions(+)

diff --git a/sound/soc/fsl/fsl_dsp_proxy.c b/sound/soc/fsl/fsl_dsp_proxy.c
index 74fb2c9..e938c98 100644
--- a/sound/soc/fsl/fsl_dsp_proxy.c
+++ b/sound/soc/fsl/fsl_dsp_proxy.c
@@ -679,6 +679,7 @@ int xf_cmd_alloc(struct xf_proxy *proxy, void **buffer, u32 length)
 	/* ...send command to remote proxy */
 	m = xf_cmd_send_recv(proxy, id, XF_ALLOC, NULL, length);
 	if (IS_ERR(m)) {
+		xf_unlock(&proxy->lock);
 		ret = PTR_ERR(m);
 		return ret;
 	}
@@ -708,6 +709,7 @@ int xf_cmd_free(struct xf_proxy *proxy, void *buffer, u32 length)
 	/* ...synchronously execute freeing command */
 	m = xf_cmd_send_recv(proxy, id, XF_FREE, buffer, length);
 	if (IS_ERR(m)) {
+		xf_unlock(&proxy->lock);
 		ret = PTR_ERR(m);
 		return ret;
 	}
-- 
1.7.9.5

