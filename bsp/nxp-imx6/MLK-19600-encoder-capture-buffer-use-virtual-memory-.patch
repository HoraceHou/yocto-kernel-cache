From 91ccaf060a694b8788f7445b87aa3e14797dcd40 Mon Sep 17 00:00:00 2001
From: ming_qian <ming.qian@nxp.com>
Date: Wed, 19 Sep 2018 15:52:01 +0800
Subject: [PATCH 4687/5242] MLK-19600:encoder capture buffer use virtual
 memory instead of dma

commit  4a4fa9cb54f7281aefca0bba74f7b314808bc5e5 from
https://source.codeaurora.org/external/imx/linux-imx.git

Signed-off-by: ming_qian <ming.qian@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-encoder-b0/Kconfig          |    4 ++++
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c |   21 ++++++++++++++++-----
 2 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/drivers/mxc/vpu-encoder-b0/Kconfig b/drivers/mxc/vpu-encoder-b0/Kconfig
index 40b1fce..ac64ecc 100755
--- a/drivers/mxc/vpu-encoder-b0/Kconfig
+++ b/drivers/mxc/vpu-encoder-b0/Kconfig
@@ -6,6 +6,10 @@ menu "MXC VPU(Video Processing Unit) B0 ENCODER support"
 
 config MXC_VPU_ENCODER
 	  tristate "Support for MXC VPU(Video Processing Unit) ENCODER"
+	  select VIDEO_DEV
+	  select VIDEO_V4L2
+	  select VIDEOBUF2_DMA_CONTIG
+	  select VIDEOBUF2_VMALLOC
 	  default y
 	---help---
 	  The VPU codec device provides codec function for H.264 etc.
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
index da7695b..8a40b96 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
@@ -44,7 +44,7 @@
 #include <media/v4l2-mem2mem.h>
 #include <media/videobuf2-v4l2.h>
 #include <media/videobuf2-dma-contig.h>
-#include <media/videobuf2-dma-sg.h>
+#include <media/videobuf2-vmalloc.h>
 
 #include "vpu_encoder_b0.h"
 
@@ -1697,7 +1697,9 @@ static void vpu_finish(struct vb2_queue *q)
 	.buf_queue          = vpu_buf_queue,
 };
 
-static void init_vb2_queue(struct queue_data *This, unsigned int type, struct vpu_ctx *ctx)
+static void init_vb2_queue(struct queue_data *This, unsigned int type,
+				struct vpu_ctx *ctx,
+				const struct vb2_mem_ops *mem_ops)
 {
 	struct vb2_queue  *vb2_q = &This->vb2_q;
 	int ret;
@@ -1712,7 +1714,10 @@ static void init_vb2_queue(struct queue_data *This, unsigned int type, struct vp
 	vb2_q->gfp_flags = GFP_DMA32;
 	vb2_q->ops = &v4l2_qops;
 	vb2_q->drv_priv = This;
-	vb2_q->mem_ops = (struct vb2_mem_ops *)&vb2_dma_contig_memops;
+	if (mem_ops)
+		vb2_q->mem_ops = mem_ops;
+	else
+		vb2_q->mem_ops = &vb2_dma_contig_memops;
 	vb2_q->timestamp_flags = V4L2_BUF_FLAG_TIMESTAMP_COPY;
 	vb2_q->dev = &ctx->dev->plat_dev->dev;
 	ret = vb2_queue_init(vb2_q);
@@ -1727,10 +1732,16 @@ static void init_vb2_queue(struct queue_data *This, unsigned int type, struct vp
 
 static void init_queue_data(struct vpu_ctx *ctx)
 {
-	init_vb2_queue(&ctx->q_data[V4L2_SRC], V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE, ctx);
+	init_vb2_queue(&ctx->q_data[V4L2_SRC],
+			V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE,
+			ctx,
+			&vb2_dma_contig_memops);
 	ctx->q_data[V4L2_SRC].type = V4L2_SRC;
 	sema_init(&ctx->q_data[V4L2_SRC].drv_q_lock, 1);
-	init_vb2_queue(&ctx->q_data[V4L2_DST], V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE, ctx);
+	init_vb2_queue(&ctx->q_data[V4L2_DST],
+			V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE,
+			ctx,
+			&vb2_vmalloc_memops);
 	ctx->q_data[V4L2_DST].type = V4L2_DST;
 	sema_init(&ctx->q_data[V4L2_DST].drv_q_lock, 1);
 }
-- 
1.7.9.5

