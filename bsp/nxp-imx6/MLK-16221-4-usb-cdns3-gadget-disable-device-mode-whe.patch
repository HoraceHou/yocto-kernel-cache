From e0f4f62de22ae9d486a5a5268b5a7a5eb863967e Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@nxp.com>
Date: Mon, 21 Aug 2017 15:04:58 +0800
Subject: [PATCH 2490/5242] MLK-16221-4 usb: cdns3: gadget: disable device
 mode when the gadget is stopped

commit  69c992051e7336eb7d602716ca5cc8fc2c816e79 from
https://source.codeaurora.org/external/imx/linux-imx.git

After USB_CONF.DEVDS is set, the device mode will be disabled, and the
host will set the disconnection, this bit is just like DP pullup bit
at USB2.

And we add disable/enable device mode logic at .pullup function for
UDC core.

Signed-off-by: Peter Chen <peter.chen@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/cdns3/dev-regs-macro.h |    1 +
 drivers/usb/cdns3/gadget.c         |   13 +++++++++++++
 2 files changed, 14 insertions(+)

diff --git a/drivers/usb/cdns3/dev-regs-macro.h b/drivers/usb/cdns3/dev-regs-macro.h
index e87e053..477de38 100644
--- a/drivers/usb/cdns3/dev-regs-macro.h
+++ b/drivers/usb/cdns3/dev-regs-macro.h
@@ -25,6 +25,7 @@
 #define USB_CONF__CFGSET__MASK                                      0x00000002U
 #define USB_CONF__USB3DIS__MASK                                     0x00000008U
 #define USB_CONF__DEVEN__MASK                                       0x00004000U
+#define USB_CONF__DEVDS__MASK                                       0x00008000U
 #define USB_CONF__L1EN__MASK                                        0x00010000U
 #define USB_CONF__L1DS__MASK                                        0x00020000U
 #define USB_CONF__CLK2OFFDS__MASK                                   0x00080000U
diff --git a/drivers/usb/cdns3/gadget.c b/drivers/usb/cdns3/gadget.c
index 955ba9c..3e8459a 100644
--- a/drivers/usb/cdns3/gadget.c
+++ b/drivers/usb/cdns3/gadget.c
@@ -1756,7 +1756,18 @@ static int usb_ss_gadget_pullup(struct usb_gadget *gadget, int is_on)
 {
 	struct usb_ss_dev *usb_ss = gadget_to_usb_ss(gadget);
 
+	if (!usb_ss->start_gadget)
+		return 0;
+
 	dev_dbg(&usb_ss->dev, "usb_ss_gadget_pullup: %d\n", is_on);
+
+	if (is_on)
+		gadget_writel(usb_ss, &usb_ss->regs->usb_conf,
+				USB_CONF__DEVEN__MASK);
+	else
+		gadget_writel(usb_ss, &usb_ss->regs->usb_conf,
+				USB_CONF__DEVDS__MASK);
+
 	return 0;
 }
 
@@ -1861,6 +1872,7 @@ static int usb_ss_gadget_udc_stop(struct usb_gadget *gadget)
 		goto quit;
 	/* disable interrupt for device */
 	gadget_writel(usb_ss, &usb_ss->regs->usb_ien, 0);
+	gadget_writel(usb_ss, &usb_ss->regs->usb_conf, USB_CONF__DEVDS__MASK);
 	spin_unlock_irqrestore(&usb_ss->lock, flags);
 
 	for (i = 0; i < usb_ss->ep_nums ; i++)
@@ -2192,6 +2204,7 @@ static void cdns3_gadget_stop(struct cdns3 *cdns)
 
 	/* disable interrupt for device */
 	gadget_writel(usb_ss, &usb_ss->regs->usb_ien, 0);
+	gadget_writel(usb_ss, &usb_ss->regs->usb_conf, USB_CONF__DEVDS__MASK);
 	usb_ss->start_gadget = 0;
 	spin_unlock_irqrestore(&usb_ss->lock, flags);
 }
-- 
1.7.9.5

