From 0172665c93b626287f70034f1bd15dda62938047 Mon Sep 17 00:00:00 2001
From: Robert Chiras <robert.chiras@nxp.com>
Date: Fri, 2 Mar 2018 11:31:50 +0200
Subject: [PATCH 3419/5242] MLK-17650-1: drm/bridge: adv7511: Add support for
 programmable i2c addresses

commit  8eaaf5a3e84d0c5879c404fc9925c896b65a6764 from
https://source.codeaurora.org/external/imx/linux-imx.git

The DSI-HDMI converter, ADV7535, driver uses four i2c memory maps: MAIN,
DSI-CEC, EDID and PACKET.
While the MAIN address is hard-coded in the ROM chip, the other three
can be programmed into the MAIN memory map.
Currently, the three memory maps addresses, that can be programmed, are
hard-coded into the code.
In order to avoid conflicts with other i2c clients on the bus, update
the driver to use configurable addresses specified in DTS file.

Signed-off-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../bindings/display/bridge/adi,adv7511.txt        |    6 ++++
 drivers/gpu/drm/bridge/adv7511/adv7511.h           |    4 +++
 drivers/gpu/drm/bridge/adv7511/adv7511_drv.c       |   32 +++++++++++++++-----
 drivers/gpu/drm/bridge/adv7511/adv7533.c           |    4 +++
 4 files changed, 38 insertions(+), 8 deletions(-)

diff --git a/Documentation/devicetree/bindings/display/bridge/adi,adv7511.txt b/Documentation/devicetree/bindings/display/bridge/adi,adv7511.txt
index 9df1e0e..0c0b12e 100644
--- a/Documentation/devicetree/bindings/display/bridge/adi,adv7511.txt
+++ b/Documentation/devicetree/bindings/display/bridge/adi,adv7511.txt
@@ -82,6 +82,12 @@ Optional properties:
 	Possible maps names are : "main", "edid", "cec", "packet"
 - adi,dsi-channel: Only for ADV7533 and ADV7535. DSI channel number to be used
   when communicating with the DSI peripheral. It should be one of 0, 1, 2 or 3.
+- adi,addr-cec: Only for ADV7533 and ADV7535. The I2C DSI-CEC register map
+  address to be programmed into the MAIN register map.
+- adi,addr-edid: Only for ADV7533 and ADV7535. The I2C EDID register map
+  to be programmed into the MAIN register map.
+- adi,addr-pkt: Only for ADV7533 and ADV7535. The I2C PACKET register map
+  to be programmed into the MAIN register map.
 
 Required nodes:
 
diff --git a/drivers/gpu/drm/bridge/adv7511/adv7511.h b/drivers/gpu/drm/bridge/adv7511/adv7511.h
index 17d828c..1b9a4f9 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7511.h
+++ b/drivers/gpu/drm/bridge/adv7511/adv7511.h
@@ -330,6 +330,10 @@ struct adv7511 {
 	struct i2c_client *i2c_packet;
 	struct i2c_client *i2c_cec;
 
+	u32 addr_cec;
+	u32 addr_edid;
+	u32 addr_pkt;
+
 	struct regmap *regmap;
 	struct regmap *regmap_cec;
 	enum drm_connector_status status;
diff --git a/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c b/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
index 3eb110e..5bb62b0 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
+++ b/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
@@ -998,8 +998,12 @@ static int adv7511_init_cec_regmap(struct adv7511 *adv)
 {
 	int ret;
 
-	adv->i2c_cec = i2c_new_secondary_device(adv->i2c_main, "cec",
-						ADV7511_CEC_I2C_ADDR_DEFAULT);
+	if (adv7511->addr_edid != 0)
+		adv->i2c_cec = i2c_new_secondary_device(adv->i2c_main, "cec",
+							adv7511->addr_edid);
+	else
+		adv->i2c_cec = i2c_new_secondary_device(adv->i2c_main, "cec",
+							ADV7511_CEC_I2C_ADDR_DEFAULT);
 	if (!adv->i2c_cec)
 		return -EINVAL;
 	i2c_set_clientdata(adv->i2c_cec, adv);
@@ -1194,8 +1198,12 @@ static int adv7511_probe(struct i2c_client *i2c, const struct i2c_device_id *id)
 		goto uninit_regulators;
 	}
 
-	regmap_write(adv7511->regmap, ADV7511_REG_EDID_I2C_ADDR,
-		     adv7511->i2c_edid->addr << 1);
+	if (adv7511->addr_edid != 0)
+		regmap_write(adv7511->regmap, ADV7511_REG_EDID_I2C_ADDR,
+			     adv7511->addr_edid << 1);
+	else
+		regmap_write(adv7511->regmap, ADV7511_REG_EDID_I2C_ADDR,
+			     adv7511->i2c_edid->addr << 1);
 
 	adv7511->i2c_packet = i2c_new_secondary_device(i2c, "packet",
 					ADV7511_PACKET_I2C_ADDR_DEFAULT);
@@ -1204,15 +1212,23 @@ static int adv7511_probe(struct i2c_client *i2c, const struct i2c_device_id *id)
 		goto err_i2c_unregister_edid;
 	}
 
-	regmap_write(adv7511->regmap, ADV7511_REG_PACKET_I2C_ADDR,
-		     adv7511->i2c_packet->addr << 1);
+	if (adv7511->addr_pkt != 0)
+		regmap_write(adv7511->regmap, ADV7511_REG_PACKET_I2C_ADDR,
+			     adv7511->addr_pkt << 1);
+	else
+		regmap_write(adv7511->regmap, ADV7511_REG_PACKET_I2C_ADDR,
+			     adv7511->i2c_packet->addr << 1);
 
 	ret = adv7511_init_cec_regmap(adv7511);
 	if (ret)
 		goto err_i2c_unregister_packet;
 
-	regmap_write(adv7511->regmap, ADV7511_REG_CEC_I2C_ADDR,
-		     adv7511->i2c_cec->addr << 1);
+	if (adv7511->addr_cec != 0)
+		regmap_write(adv7511->regmap, ADV7511_REG_CEC_I2C_ADDR,
+			     adv7511->addr_cec << 1);
+	else
+		regmap_write(adv7511->regmap, ADV7511_REG_CEC_I2C_ADDR,
+			     adv7511->i2c_cec->addr << 1);
 
 	INIT_WORK(&adv7511->hpd_work, adv7511_hpd_work);
 
diff --git a/drivers/gpu/drm/bridge/adv7511/adv7533.c b/drivers/gpu/drm/bridge/adv7511/adv7533.c
index 3fc7b21..eb0e9b9 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7533.c
+++ b/drivers/gpu/drm/bridge/adv7511/adv7533.c
@@ -225,6 +225,10 @@ int adv7533_parse_dt(struct device_node *np, struct adv7511 *adv)
 	adv->use_timing_gen = !of_property_read_bool(np,
 						"adi,disable-timing-generator");
 
+	of_property_read_u32(np, "adi,addr-cec", &adv->addr_cec);
+	of_property_read_u32(np, "adi,addr-edid", &adv->addr_edid);
+	of_property_read_u32(np, "adi,addr-pkt", &adv->addr_pkt);
+
 	/* TODO: Check if these need to be parsed by DT or not */
 	adv->rgb = true;
 	adv->embedded_sync = false;
-- 
1.7.9.5

