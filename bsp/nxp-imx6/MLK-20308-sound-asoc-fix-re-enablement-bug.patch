From 9facf82c8dccd6701f11a5318f67ccb3d46361a8 Mon Sep 17 00:00:00 2001
From: Cosmin-Gabriel Samoila <cosmin.samoila@nxp.com>
Date: Tue, 13 Nov 2018 14:34:36 +0200
Subject: [PATCH 5113/5242] MLK-20308 sound:asoc: fix re-enablement bug

commit  ad0ab32c0868b3550e7e075ee45626178e969238 from
https://source.codeaurora.org/external/imx/linux-imx.git

When hwvad is enabled, if you try to re-enable it again, it should fail.
However, we were also double setting state to OFF on fail, which is
wrong because it resets the state and allows the second retry to enable
even if it wasn't disabled before.
Now we only return EBUSY.

Reviewed-by: Daniel Baluta <daniel.baluta@nxp.com>
Signed-off-by: Cosmin-Gabriel Samoila <cosmin.samoila@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_micfil.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/sound/soc/fsl/fsl_micfil.c b/sound/soc/fsl/fsl_micfil.c
index 18f97d9..a61c4d6 100644
--- a/sound/soc/fsl/fsl_micfil.c
+++ b/sound/soc/fsl/fsl_micfil.c
@@ -1998,7 +1998,7 @@ static int enable_hwvad(struct device *dev, bool sync)
 	 */
 	if (sync && state == MICFIL_HWVAD_ON) {
 		dev_err(dev, "hwvad already on\n");
-		ret = -EINVAL;
+		ret = -EBUSY;
 		goto enable_error;
 	}
 
@@ -2139,10 +2139,8 @@ static ssize_t micfil_hwvad_handler(struct kobject *kobj,
 	if (vad_channel <= 7) {
 		micfil->vad_channel = vad_channel;
 		ret = enable_hwvad(dev, true);
-		if (ret) {
+		if (ret)
 			dev_err(dev, "Failed to enable hwvad");
-			atomic_set(&micfil->hwvad_state, MICFIL_HWVAD_OFF);
-		}
 	} else {
 		micfil->vad_channel = -1;
 		ret = disable_hwvad(dev, true);
-- 
1.7.9.5

