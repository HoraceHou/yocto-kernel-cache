From 1bfd6e7ec04c1a55eee18c73e02d715606663df1 Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Tue, 9 Oct 2018 16:53:04 +0800
Subject: [PATCH 4807/5242] MLK-19849 drm/imx: dpu: crtc: Use pixel clock from
 stream0 when pc is used

commit  84d55b973653154532d9099485e2663a64baf6ea from
https://source.codeaurora.org/external/imx/linux-imx.git

According to pixel combiner spec, there is a clock mux before
the display clock input of stream1 to choose the clock from
disp1 clock(only for stream1) or disp0 clock(usually for stream0).
So, we should enable disp0 clock when pixel combiner is used
instead of enabling the display clock of master stream.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-crtc.c |    6 ++++--
 drivers/gpu/imx/dpu/dpu-framegen.c |    2 +-
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-crtc.c b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
index 32b5ec8..236eee7 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-crtc.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
@@ -120,7 +120,8 @@ static void dpu_crtc_atomic_enable(struct drm_crtc *crtc,
 	}
 
 	if (dcstate->use_pc) {
-		framegen_enable_clock(dpu_crtc->m_fg);
+		framegen_enable_clock(dpu_crtc->stream_id ?
+					dpu_crtc->aux_fg : dpu_crtc->fg);
 		extdst_pixengcfg_sync_trigger(m_plane_ed);
 		framegen_shdtokgen(dpu_crtc->m_fg);
 
@@ -248,7 +249,8 @@ static void dpu_crtc_atomic_disable(struct drm_crtc *crtc,
 		framegen_wait_done(dpu_crtc->m_fg, adjusted_mode);
 		framegen_wait_done(dpu_crtc->s_fg, adjusted_mode);
 
-		framegen_disable_clock(dpu_crtc->m_fg);
+		framegen_disable_clock(dpu_crtc->stream_id ?
+					dpu_crtc->aux_fg : dpu_crtc->fg);
 	} else {
 		framegen_disable(dpu_crtc->fg);
 		framegen_wait_done(dpu_crtc->fg, adjusted_mode);
diff --git a/drivers/gpu/imx/dpu/dpu-framegen.c b/drivers/gpu/imx/dpu/dpu-framegen.c
index e39d5d8..55a956e 100644
--- a/drivers/gpu/imx/dpu/dpu-framegen.c
+++ b/drivers/gpu/imx/dpu/dpu-framegen.c
@@ -500,7 +500,7 @@ void framegen_wait_done(struct dpu_framegen *fg, struct drm_display_mode *m)
 		/* fall back to display mode's clock */
 		dotclock = m->crtc_clock;
 
-		if (!(fg->side_by_side && framegen_is_slave(fg)))
+		if (!(fg->side_by_side && fg->id == 1))
 			dev_warn(fg->dpu->dev,
 				"pixel clock for FrameGen%d is zero\n", fg->id);
 	}
-- 
1.7.9.5

