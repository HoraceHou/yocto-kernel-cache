From d3b2d1c95f1957f4800ee19f338f7e6f2d246dca Mon Sep 17 00:00:00 2001
From: Fancy Fang <chen.fang@nxp.com>
Date: Thu, 2 Mar 2017 18:37:27 +0800
Subject: [PATCH 1744/5242] MLK-14314-6 dma: pxp: change some RGB formats
 definition

commit  2dfaae7c0c0eb9dc43fe4d01f5b42411d6352cd2 from
https://source.codeaurora.org/external/imx/linux-imx.git

Some RGB formats fourcc definition are not precise
according to its original meaning. So make some
changes for them.

Signed-off-by: Fancy Fang <chen.fang@nxp.com>
(cherry picked from commit b0b4ad680e267bdf542d2c9a3202c0192bde9cb0)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/dma/pxp/pxp_dma_v2.c                     |   14 +++++++-------
 drivers/dma/pxp/pxp_dma_v3.c                     |   14 +++++++-------
 drivers/media/platform/mxc/output/mxc_pxp_v4l2.c |    4 ++--
 drivers/video/fbdev/mxc/mxc_epdc_fb.c            |    2 +-
 drivers/video/fbdev/mxc/mxc_epdc_v2_fb.c         |    2 +-
 include/uapi/linux/pxp_dma.h                     |   10 +++++-----
 6 files changed, 23 insertions(+), 23 deletions(-)

diff --git a/drivers/dma/pxp/pxp_dma_v2.c b/drivers/dma/pxp/pxp_dma_v2.c
index 710729c..a4ee04b 100644
--- a/drivers/dma/pxp/pxp_dma_v2.c
+++ b/drivers/dma/pxp/pxp_dma_v2.c
@@ -264,7 +264,7 @@ static void pxp_set_ctrl(struct pxps *pxp)
 
 	/* Configure S0 input format */
 	switch (pxp_conf->s0_param.pixel_fmt) {
-	case PXP_PIX_FMT_RGB32:
+	case PXP_PIX_FMT_XRGB32:
 		fmt_ctrl = BV_PXP_PS_CTRL_FORMAT__RGB888;
 		break;
 	case PXP_PIX_FMT_RGB565:
@@ -326,7 +326,7 @@ static void pxp_set_ctrl(struct pxps *pxp)
 
 	/* Configure output format based on out_channel format */
 	switch (pxp_conf->out_param.pixel_fmt) {
-	case PXP_PIX_FMT_RGB32:
+	case PXP_PIX_FMT_XRGB32:
 		fmt_ctrl = BV_PXP_OUT_CTRL_FORMAT__RGB888;
 		break;
 	case PXP_PIX_FMT_BGRA32:
@@ -433,7 +433,7 @@ static void pxp_set_outbuf(struct pxps *pxp)
 		__raw_writel(out_params->stride * 3,
 				pxp->base + HW_PXP_OUT_PITCH);
 	} else if (out_params->pixel_fmt == PXP_PIX_FMT_BGRA32 ||
-		out_params->pixel_fmt == PXP_PIX_FMT_RGB32) {
+		out_params->pixel_fmt == PXP_PIX_FMT_XRGB32) {
 		__raw_writel(out_params->stride << 2,
 				pxp->base + HW_PXP_OUT_PITCH);
 	} else if ((out_params->pixel_fmt == PXP_PIX_FMT_RGB565) ||
@@ -525,7 +525,7 @@ static void pxp_set_oln(int layer_no, struct pxps *pxp)
 	}
 
 	if ((olparams_data->pixel_fmt == PXP_PIX_FMT_BGRA32) ||
-		 (olparams_data->pixel_fmt == PXP_PIX_FMT_RGB32)) {
+		 (olparams_data->pixel_fmt == PXP_PIX_FMT_XRGB32)) {
 		__raw_writel(pitch << 2,
 				pxp->base + HW_PXP_AS_PITCH);
 	} else if ((olparams_data->pixel_fmt == PXP_PIX_FMT_RGB565) ||
@@ -544,7 +544,7 @@ static void pxp_set_olparam(int layer_no, struct pxps *pxp)
 	u32 olparam;
 
 	olparam = BF_PXP_AS_CTRL_ALPHA(olparams_data->global_alpha);
-	if (olparams_data->pixel_fmt == PXP_PIX_FMT_RGB32) {
+	if (olparams_data->pixel_fmt == PXP_PIX_FMT_XRGB32) {
 		olparam |=
 		    BF_PXP_AS_CTRL_FORMAT(BV_PXP_AS_CTRL_FORMAT__RGB888);
 	} else if (olparams_data->pixel_fmt == PXP_PIX_FMT_BGRA32) {
@@ -981,7 +981,7 @@ static void pxp_set_s0buf(struct pxps *pxp)
 	if ((s0_params->pixel_fmt == PXP_PIX_FMT_RGB565) ||
 		(s0_params->pixel_fmt == PXP_PIX_FMT_RGB555))
 		bpp = 2;
-	else if (s0_params->pixel_fmt == PXP_PIX_FMT_RGB32)
+	else if (s0_params->pixel_fmt == PXP_PIX_FMT_XRGB32)
 		bpp = 4;
 	offset = (proc_data->srect.top * s0_params->width +
 		 proc_data->srect.left) * bpp;
@@ -1041,7 +1041,7 @@ static void pxp_set_s0buf(struct pxps *pxp)
 	else if (s0_params->pixel_fmt == PXP_PIX_FMT_GY04)
 		__raw_writel(pitch >> 1,
 				pxp->base + HW_PXP_PS_PITCH);
-	else if (s0_params->pixel_fmt == PXP_PIX_FMT_RGB32 ||
+	else if (s0_params->pixel_fmt == PXP_PIX_FMT_XRGB32 ||
 			 s0_params->pixel_fmt == PXP_PIX_FMT_VUY444)
 		__raw_writel(pitch << 2,
 				pxp->base + HW_PXP_PS_PITCH);
diff --git a/drivers/dma/pxp/pxp_dma_v3.c b/drivers/dma/pxp/pxp_dma_v3.c
index 8cd98d6..229616e 100644
--- a/drivers/dma/pxp/pxp_dma_v3.c
+++ b/drivers/dma/pxp/pxp_dma_v3.c
@@ -426,7 +426,7 @@ static u32 pxp_parse_ps_fmt(struct pxps *pxp)
 	u32 fmt_ctrl;
 
 	switch (pxp_conf->s0_param.pixel_fmt) {
-	case PXP_PIX_FMT_RGB32:
+	case PXP_PIX_FMT_XRGB32:
 		fmt_ctrl = BV_PXP_PS_CTRL_FORMAT__RGB888;
 		break;
 	case PXP_PIX_FMT_RGB565:
@@ -493,7 +493,7 @@ static u32 pxp_parse_out_fmt(struct pxps *pxp)
 	u32 fmt_ctrl;
 
 	switch (pxp_conf->out_param.pixel_fmt) {
-	case PXP_PIX_FMT_RGB32:
+	case PXP_PIX_FMT_XRGB32:
 		fmt_ctrl = BV_PXP_OUT_CTRL_FORMAT__RGB888;
 		break;
 	case PXP_PIX_FMT_BGRA32:
@@ -628,7 +628,7 @@ static void pxp_set_outbuf(struct pxps *pxp)
 		__raw_writel(out_params->stride * 3,
 				pxp->base + HW_PXP_OUT_PITCH);
 	} else if (out_params->pixel_fmt == PXP_PIX_FMT_BGRA32 ||
-		 out_params->pixel_fmt == PXP_PIX_FMT_RGB32) {
+		 out_params->pixel_fmt == PXP_PIX_FMT_XRGB32) {
 		__raw_writel(out_params->stride << 2,
 				pxp->base + HW_PXP_OUT_PITCH);
 	} else if ((out_params->pixel_fmt == PXP_PIX_FMT_RGB565) ||
@@ -720,7 +720,7 @@ static void pxp_set_oln(int layer_no, struct pxps *pxp)
 	}
 
 	if ((olparams_data->pixel_fmt == PXP_PIX_FMT_BGRA32) ||
-		 (olparams_data->pixel_fmt == PXP_PIX_FMT_RGB32)) {
+		 (olparams_data->pixel_fmt == PXP_PIX_FMT_XRGB32)) {
 		__raw_writel(pitch << 2,
 				pxp->base + HW_PXP_AS_PITCH);
 	} else if ((olparams_data->pixel_fmt == PXP_PIX_FMT_RGB565) ||
@@ -739,7 +739,7 @@ static void pxp_set_olparam(int layer_no, struct pxps *pxp)
 	u32 olparam;
 
 	olparam = BF_PXP_AS_CTRL_ALPHA(olparams_data->global_alpha);
-	if (olparams_data->pixel_fmt == PXP_PIX_FMT_RGB32) {
+	if (olparams_data->pixel_fmt == PXP_PIX_FMT_XRGB32) {
 		olparam |=
 		    BF_PXP_AS_CTRL_FORMAT(BV_PXP_AS_CTRL_FORMAT__RGB888);
 	} else if (olparams_data->pixel_fmt == PXP_PIX_FMT_BGRA32) {
@@ -1176,7 +1176,7 @@ static void pxp_set_s0buf(struct pxps *pxp)
 	if ((s0_params->pixel_fmt == PXP_PIX_FMT_RGB565) ||
 		(s0_params->pixel_fmt == PXP_PIX_FMT_RGB555))
 		bpp = 2;
-	else if (s0_params->pixel_fmt == PXP_PIX_FMT_RGB32)
+	else if (s0_params->pixel_fmt == PXP_PIX_FMT_XRGB32)
 		bpp = 4;
 	offset = (proc_data->srect.top * s0_params->width +
 		 proc_data->srect.left) * bpp;
@@ -1236,7 +1236,7 @@ static void pxp_set_s0buf(struct pxps *pxp)
 	else if (s0_params->pixel_fmt == PXP_PIX_FMT_GY04)
 		__raw_writel(pitch >> 1,
 				pxp->base + HW_PXP_PS_PITCH);
-	else if (s0_params->pixel_fmt == PXP_PIX_FMT_RGB32 ||
+	else if (s0_params->pixel_fmt == PXP_PIX_FMT_XRGB32 ||
 			 s0_params->pixel_fmt == PXP_PIX_FMT_VUY444)
 		__raw_writel(pitch << 2,
 				pxp->base + HW_PXP_PS_PITCH);
diff --git a/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c b/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
index b3bc181..16da4d3 100644
--- a/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
+++ b/drivers/media/platform/mxc/output/mxc_pxp_v4l2.c
@@ -106,7 +106,7 @@ static unsigned int v4l2_fmt_to_pxp_fmt(u32 v4l2_pix_fmt)
 	u32 pxp_fmt = 0;
 
 	if (v4l2_pix_fmt == V4L2_PIX_FMT_RGB24)
-		pxp_fmt = PXP_PIX_FMT_RGB32;
+		pxp_fmt = PXP_PIX_FMT_XRGB32;
 	else if (v4l2_pix_fmt == V4L2_PIX_FMT_RGB565)
 		pxp_fmt = PXP_PIX_FMT_RGB565;
 	else if (v4l2_pix_fmt == V4L2_PIX_FMT_RGB555)
@@ -478,7 +478,7 @@ static int pxp_s_output(struct file *file, void *fh,
 	pxp->pxp_conf.out_param.width = fmt->width;
 	pxp->pxp_conf.out_param.height = fmt->height;
 	if (fmt->pixelformat == V4L2_PIX_FMT_RGB24)
-		pxp->pxp_conf.out_param.pixel_fmt = PXP_PIX_FMT_RGB32;
+		pxp->pxp_conf.out_param.pixel_fmt = PXP_PIX_FMT_XRGB32;
 	else
 		pxp->pxp_conf.out_param.pixel_fmt = PXP_PIX_FMT_RGB565;
 
diff --git a/drivers/video/fbdev/mxc/mxc_epdc_fb.c b/drivers/video/fbdev/mxc/mxc_epdc_fb.c
index 276d5c1c4..0109b03 100644
--- a/drivers/video/fbdev/mxc/mxc_epdc_fb.c
+++ b/drivers/video/fbdev/mxc/mxc_epdc_fb.c
@@ -1586,7 +1586,7 @@ static int mxc_epdc_fb_set_par(struct fb_info *info)
 			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB24;
 			break;
 		case 32:
-			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB32;
+			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_XRGB32;
 			break;
 		default:
 			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
diff --git a/drivers/video/fbdev/mxc/mxc_epdc_v2_fb.c b/drivers/video/fbdev/mxc/mxc_epdc_v2_fb.c
index 5be94dd..083b612 100644
--- a/drivers/video/fbdev/mxc/mxc_epdc_v2_fb.c
+++ b/drivers/video/fbdev/mxc/mxc_epdc_v2_fb.c
@@ -1820,7 +1820,7 @@ static int mxc_epdc_fb_set_par(struct fb_info *info)
 			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB24;
 			break;
 		case 32:
-			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB32;
+			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_XRGB32;
 			break;
 		default:
 			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
diff --git a/include/uapi/linux/pxp_dma.h b/include/uapi/linux/pxp_dma.h
index a370e0e..8c1873e 100644
--- a/include/uapi/linux/pxp_dma.h
+++ b/include/uapi/linux/pxp_dma.h
@@ -45,15 +45,15 @@
 /*! @{ */
 #define PXP_PIX_FMT_RGB332  fourcc('R', 'G', 'B', '1')	/*!<  8  RGB-3-3-2    */
 #define PXP_PIX_FMT_RGB555  fourcc('R', 'G', 'B', 'O')	/*!< 16  RGB-5-5-5    */
-#define PXP_PIX_FMT_RGB565  fourcc('R', 'G', 'B', 'P')	/*!< 1 6  RGB-5-6-5   */
+#define PXP_PIX_FMT_RGB565  fourcc('R', 'G', 'B', 'P')	/*!< 16  RGB-5-6-5    */
 #define PXP_PIX_FMT_RGB666  fourcc('R', 'G', 'B', '6')	/*!< 18  RGB-6-6-6    */
 #define PXP_PIX_FMT_BGR666  fourcc('B', 'G', 'R', '6')	/*!< 18  BGR-6-6-6    */
 #define PXP_PIX_FMT_BGR24   fourcc('B', 'G', 'R', '3')	/*!< 24  BGR-8-8-8    */
 #define PXP_PIX_FMT_RGB24   fourcc('R', 'G', 'B', '3')	/*!< 24  RGB-8-8-8    */
-#define PXP_PIX_FMT_BGR32   fourcc('B', 'G', 'R', '4')	/*!< 32  BGR-8-8-8-8  */
-#define PXP_PIX_FMT_BGRA32  fourcc('B', 'G', 'R', 'A')	/*!< 32  BGR-8-8-8-8  */
-#define PXP_PIX_FMT_RGB32   fourcc('R', 'G', 'B', '4')	/*!< 32  RGB-8-8-8-8  */
-#define PXP_PIX_FMT_RGBA32  fourcc('R', 'G', 'B', 'A')	/*!< 32  RGB-8-8-8-8  */
+#define PXP_PIX_FMT_XBGR32  fourcc('X', 'B', 'G', 'R')	/*!< 32  XBGR-8-8-8-8 */
+#define PXP_PIX_FMT_BGRA32  fourcc('B', 'G', 'R', 'A')	/*!< 32  BGRA-8-8-8-8 */
+#define PXP_PIX_FMT_XRGB32  fourcc('X', 'R', 'G', 'B')	/*!< 32  XRGB-8-8-8-8 */
+#define PXP_PIX_FMT_RGBA32  fourcc('R', 'G', 'B', 'A')	/*!< 32  RGBA-8-8-8-8 */
 #define PXP_PIX_FMT_ABGR32  fourcc('A', 'B', 'G', 'R')	/*!< 32  ABGR-8-8-8-8 */
 /*! @} */
 /*! @name YUV Interleaved Formats */
-- 
1.7.9.5

