From 2829fe82011d6469340044488cd195c25b7f7895 Mon Sep 17 00:00:00 2001
From: Franck LENORMAND <franck.lenormand@nxp.com>
Date: Mon, 5 Feb 2018 10:54:56 +0100
Subject: [PATCH 4189/5242] MLK-17253-2: crypto: caam: Use correct memory
 function for Secure Memory

commit  9c7ecfc09a7f08e91e0601abac413106f9a3ae43 from
https://source.codeaurora.org/external/imx/linux-imx.git

The Secure Memory is a hardware memory whose address was retrieved using
of_iomap, hence the memory manipulation shall use the set of functions:
memset_io/memcpy_fromio/memcpy_toio in order to works correctly.

Not using these functions can result in kernel panic.

Signed-off-by: Franck LENORMAND <franck.lenormand@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/crypto/caam/sm_store.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/crypto/caam/sm_store.c b/drivers/crypto/caam/sm_store.c
index bc10e35..c0dd822 100644
--- a/drivers/crypto/caam/sm_store.c
+++ b/drivers/crypto/caam/sm_store.c
@@ -502,7 +502,7 @@ int slot_dealloc(struct device *dev, u32 unit, u32 slot)
 
 	if (ksdata->slot[slot].allocated == 1) {
 		/* Forcibly overwrite the data from the keystore */
-		memset(ksdata->base_address + slot * smpriv->slot_size, 0,
+		memset_io(ksdata->base_address + slot * smpriv->slot_size, 0,
 		       smpriv->slot_size);
 
 		ksdata->slot[slot].allocated = 0;
@@ -799,8 +799,7 @@ int sm_keystore_slot_load(struct device *dev, u32 unit, u32 slot,
 
 	slot_location = smpriv->slot_get_address(dev, unit, slot);
 
-	for (i = 0; i < key_length; i++)
-		slot_location[i] = key_data[i];
+	memcpy_toio(slot_location, key_data, key_length);
 
 	retval = 0;
 
@@ -828,7 +827,7 @@ int sm_keystore_slot_read(struct device *dev, u32 unit, u32 slot,
 		goto out;
 	}
 
-	memcpy(key_data, slot_addr, key_length);
+	memcpy_fromio(key_data, slot_addr, key_length);
 	retval = 0;
 
 out:
-- 
1.7.9.5

