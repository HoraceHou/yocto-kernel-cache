From 69b2967ae4410cbae33f05070efc24acd64ea313 Mon Sep 17 00:00:00 2001
From: Fugang Duan <fugang.duan@nxp.com>
Date: Thu, 9 Nov 2017 14:38:32 +0800
Subject: [PATCH 2757/5242] MLK-16789 tty: serial: lpuart: keep ipg clock
 enable during .uart_resume_port()

commit  4b6be9eb64fd2f5ac9dd788dc1332ec9c6910fc2 from
https://source.codeaurora.org/external/imx/linux-imx.git

Ensure ipg clock enable during .uart_resume_port() that call set
ops->set_mctrl() before ops->startup().

BuildInfo:
 - SCFW daf9431c, IMX-MKIMAGE 1c6fc7d8, ATF f2547fb
 - U-Boot 2017.03-00097-gd7599cf

Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
Reviewed-by: Robin Gong <yibin.gong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/tty/serial/fsl_lpuart.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/fsl_lpuart.c b/drivers/tty/serial/fsl_lpuart.c
index 2fc2c88..8afdba1 100644
--- a/drivers/tty/serial/fsl_lpuart.c
+++ b/drivers/tty/serial/fsl_lpuart.c
@@ -2755,6 +2755,7 @@ static int lpuart_resume(struct device *dev)
 	struct lpuart_port *sport = dev_get_drvdata(dev);
 	struct tty_port *port = &sport->port.state->port;
 	bool irq_wake = irqd_is_wakeup_set(irq_get_irq_data(sport->port.irq));
+	bool ipgclk_on = false;
 	int ret;
 
 	if (lpuart_is_32(sport))
@@ -2764,15 +2765,17 @@ static int lpuart_resume(struct device *dev)
 
 	if (uart_console(&sport->port) ||
 	    (irq_wake && tty_port_initialized(port))) {
+		ipgclk_on = true;
 		ret = clk_prepare_enable(sport->per_clk);
 		if (ret)
 			return ret;
-	} else {
-		clk_disable_unprepare(sport->ipg_clk);
 	}
 
 	uart_resume_port(&lpuart_reg, &sport->port);
 
+	if (!ipgclk_on)
+		clk_disable_unprepare(sport->ipg_clk);
+
 	return 0;
 }
 
-- 
1.7.9.5

