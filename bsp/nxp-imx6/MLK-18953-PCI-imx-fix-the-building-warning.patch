From c46a5088573633830c03144415494a78cb644488 Mon Sep 17 00:00:00 2001
From: Richard Zhu <hongxing.zhu@nxp.com>
Date: Wed, 18 Jul 2018 10:56:54 +0800
Subject: [PATCH 4167/5242] MLK-18953 PCI: imx: fix the building warning
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit  9764a93754f015bae4b1065506ab8a2a887ee815 from
https://source.codeaurora.org/external/imx/linux-imx.git

- warning: ‘retries’ may be used uninitialized in this function
- WARNING: vmlinux.o(.data+0x5d2d8): Section mismatch in reference from the
variable imx_pcie_driver to the function .init.text:imx_pcie_probe()

The variable imx_pcie_driver references the function __init imx_pcie_probe()
If the reference is valid then annotate the variable with
__init* or __refdata (see linux/init.h) or name the variable:
*_template, *_timer, *_sht, *_ops, *_probe, *_probe_one, *_console

Signed-off-by: Jason Liu <jason.hui.liu@nxp.com>
Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/pci/controller/dwc/pci-imx6.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
index 75abb56..491f215 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -36,6 +36,7 @@
 #include <linux/regulator/consumer.h>
 
 #include "pcie-designware.h"
+#include "../../pci.h"
 
 #define to_imx_pcie(x)	dev_get_drvdata((x)->dev)
 
@@ -640,7 +641,7 @@ static int imx7d_pcie_wait_for_phy_pll_lock(struct imx_pcie *imx_pcie)
 static int imx8_pcie_wait_for_phy_pll_lock(struct imx_pcie *imx_pcie)
 {
 	u32 val, tmp, orig;
-	unsigned int retries;
+	unsigned int retries = 0;
 	struct dw_pcie *pci = imx_pcie->pci;
 	struct device *dev = pci->dev;
 
@@ -2151,7 +2152,7 @@ static int imx_pcie_local_dma_start(struct pcie_port *pp, bool dir,
 	return 0;
 }
 
-static int __init imx_pcie_probe(struct platform_device *pdev)
+static int imx_pcie_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 	struct dw_pcie *pci;
@@ -2450,8 +2451,7 @@ static int __init imx_pcie_probe(struct platform_device *pdev)
 		dma_addr_t test_reg1_dma, test_reg2_dma;
 		void __iomem *pcie_arb_base_addr;
 		struct timeval tv1s, tv1e, tv2s, tv2e;
-		u32 val, tv_count1, tv_count2;
-		struct device_node *np = node;
+		u32 tv_count1, tv_count2;
 		struct pcie_port *pp = &pci->pp;
 		LIST_HEAD(res);
 		struct resource_entry *win, *tmp;
@@ -2462,7 +2462,7 @@ static int __init imx_pcie_probe(struct platform_device *pdev)
 		if (ret)
 			return -EINVAL;
 
-		ret = of_pci_get_host_bridge_resources(np, 0, 0xff, &res,
+		ret = devm_of_pci_get_host_bridge_resources(dev, 0, 0xff, &res,
 						       &pp->io_base);
 		if (ret)
 			return ret;
-- 
1.7.9.5

