From 0cfe131c1059fd46e855c3f635cf520fafeb4566 Mon Sep 17 00:00:00 2001
From: Gao Pan <pandy.gao@nxp.com>
Date: Thu, 13 Apr 2017 14:58:03 +0800
Subject: [PATCH 1667/5242] MLK-14642 imx: sim: fix segment fault caused by
 user address access

commit  13aea7b7b1047b9786dbdcf66da1304420e690d0 from
https://source.codeaurora.org/external/imx/linux-imx.git

Kernel space cannot access user space memory directly.
In fact, the issue always exited. Since 4.4, the kernel
handle the action as page abort.

Signed-off-by: Gao Pan <pandy.gao@nxp.com>
Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/sim/imx_sim.c |   16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/mxc/sim/imx_sim.c b/drivers/mxc/sim/imx_sim.c
index ba13b97..439561a 100755
--- a/drivers/mxc/sim/imx_sim.c
+++ b/drivers/mxc/sim/imx_sim.c
@@ -1300,6 +1300,9 @@ static long sim_ioctl(struct file *file,
 	u32 delay;
 	u32 copy_cnt, val;
 	unsigned long flags;
+	unsigned char __user *atr_buffer;
+	unsigned char __user *xmt_buffer;
+	unsigned char __user *rcv_buffer;
 
 	struct sim_t *sim = (struct sim_t *) file->private_data;
 
@@ -1342,8 +1345,8 @@ static long sim_ioctl(struct file *file,
 			break;
 		}
 
-		ret = copy_to_user(((sim_atr_t *)arg)->atr_buffer, sim->rcv_buffer,
-					sim->rcv_count);
+		__get_user(atr_buffer, &((sim_atr_t __user *)arg)->atr_buffer);
+		ret = copy_to_user(atr_buffer, sim->rcv_buffer, sim->rcv_count);
 		if (ret) {
 			pr_err("ATR ACCESS buffer Error %d %d\n", sim->rcv_count, ret);
 			errval = -SIM_E_ACCESS;
@@ -1390,8 +1393,9 @@ static long sim_ioctl(struct file *file,
 			errval = -EINVAL;
 			break;
 		}
-		ret = copy_from_user(sim->xmt_buffer, (((sim_xmt_t *)arg)->xmt_buffer),
-				     sim->xmt_remaining);
+
+		__get_user(xmt_buffer, &((sim_xmt_t *)arg)->xmt_buffer);
+		ret = copy_from_user(sim->xmt_buffer, xmt_buffer, sim->xmt_remaining);
 
 		if (ret) {
 			pr_err("Copy Error\n");
@@ -1527,8 +1531,8 @@ static long sim_ioctl(struct file *file,
 			break;
 		}
 
-		ret = copy_to_user(((sim_rcv_t *)arg)->rcv_buffer, &sim->rcv_buffer[sim->rcv_head],
-					copy_cnt);
+		__get_user(rcv_buffer, &((sim_rcv_t *)arg)->rcv_buffer);
+		ret = copy_to_user(rcv_buffer, &sim->rcv_buffer[sim->rcv_head], copy_cnt);
 		if (ret) {
 			pr_err("ATR ACCESS Error\n");
 			errval = -SIM_E_ACCESS;
-- 
1.7.9.5

