From 8308b46374b71ee53d0a3dcb2cec9bc0fc7f65ac Mon Sep 17 00:00:00 2001
From: Richard Zhu <hongxing.zhu@nxp.com>
Date: Thu, 22 Nov 2018 14:11:05 +0800
Subject: [PATCH 5167/5242] MLK-20446 rpmsg: imx: only use the timeout by the
 first notify

commit  7697c3f6f06ebd80077168b8ae5f30efd0134f51 from
https://source.codeaurora.org/external/imx/linux-imx.git

To make sure that the message wound't be discarded when
M4 is running normally or in the suspend mode. Only use
the timeout mechanism by the first notify when the vdev
is registered.

Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
(cherry picked from commit aaf42a6c2c224aa9bd88b13abcf8f848f2eab073)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/rpmsg/imx_rpmsg.c |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/rpmsg/imx_rpmsg.c b/drivers/rpmsg/imx_rpmsg.c
index 4fed5b0..30cc8b8 100644
--- a/drivers/rpmsg/imx_rpmsg.c
+++ b/drivers/rpmsg/imx_rpmsg.c
@@ -55,6 +55,7 @@ struct imx_rpmsg_vproc {
 	struct clk *mu_clk;
 	enum imx_rpmsg_variants variant;
 	int vdev_nums;
+	int first_notify;
 #define MAX_VDEV_NUMS	8
 	struct imx_virdev ivdev[MAX_VDEV_NUMS];
 	void __iomem *mu_base;
@@ -126,8 +127,17 @@ static bool imx_rpmsg_notify(struct virtqueue *vq)
 	 * Use the timeout MU send message here.
 	 * Since that M4 core may not be loaded, and the first MSG may
 	 * not be handled by M4 when multi-vdev is enabled.
+	 * To make sure that the message wound't be discarded when M4
+	 * is running normally or in the suspend mode. Only use
+	 * the timeout mechanism by the first notify when the vdev is
+	 * registered.
 	 */
-	MU_SendMessageTimeout(rpvq->rpdev->mu_base, 1, mu_rpmsg, 200);
+	if (unlikely(rpvq->rpdev->first_notify > 0)) {
+		rpvq->rpdev->first_notify--;
+		MU_SendMessageTimeout(rpvq->rpdev->mu_base, 1, mu_rpmsg, 200);
+	} else {
+		MU_SendMessage(rpvq->rpdev->mu_base, 1, mu_rpmsg);
+	}
 	mutex_unlock(&rpvq->rpdev->lock);
 
 	return true;
@@ -531,6 +541,7 @@ static int imx_rpmsg_probe(struct platform_device *pdev)
 		pr_err("vdev-nums exceed the max %d\n", MAX_VDEV_NUMS);
 		return -EINVAL;
 	}
+	rpdev->first_notify = rpdev->vdev_nums;
 
 	if (!strcmp(rpdev->rproc_name, "m4")) {
 		ret = set_vring_phy_buf(pdev, rpdev,
-- 
1.7.9.5

