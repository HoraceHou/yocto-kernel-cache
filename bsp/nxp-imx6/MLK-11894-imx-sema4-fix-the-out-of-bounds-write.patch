From d71e3d8666d723de2e4583d3a78303362a1fa4b0 Mon Sep 17 00:00:00 2001
From: Richard Zhu <Richard.Zhu@freescale.com>
Date: Thu, 26 Nov 2015 09:36:48 +0800
Subject: [PATCH 0764/5242] MLK-11894 imx: sema4: fix the out of bounds write

commit  e4e58f4b613bc06465aba8f25cc2a791087764e0 from
https://source.codeaurora.org/external/imx/linux-imx.git

Fix the out of bounds write, and the dereference before
null check.

Signed-off-by: Richard Zhu <Richard.Zhu@freescale.com>
(cherry picked from commit 775ff0727166535e9b1ba1f70167e6a33fee5f13)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/char/imx_amp/imx_sema4.c |   10 ++++++----
 include/linux/imx_sema4.h        |    4 ++--
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/char/imx_amp/imx_sema4.c b/drivers/char/imx_amp/imx_sema4.c
index 4ce652c..412202f 100644
--- a/drivers/char/imx_amp/imx_sema4.c
+++ b/drivers/char/imx_amp/imx_sema4.c
@@ -44,7 +44,7 @@ struct imx_sema4_mutex *
 {
 	struct imx_sema4_mutex *mutex_ptr = NULL;
 
-	if ((mutex_num > SEMA4_NUM_GATES) || dev_num >= SEMA4_NUM_DEVICES)
+	if (mutex_num >= SEMA4_NUM_GATES || dev_num >= SEMA4_NUM_DEVICES)
 		goto out;
 
 	if (imx6_sema4->cpine_val & (1 < mutex_num)) {
@@ -121,11 +121,12 @@ int imx_sema4_mutex_destroy(struct imx_sema4_mutex *mutex_ptr)
  */
 int _imx_sema4_mutex_lock(struct imx_sema4_mutex *mutex_ptr)
 {
-	int ret = 0, i = mutex_ptr->gate_num;
+	int ret = 0, i = 0;
 
 	if ((mutex_ptr == NULL) || (mutex_ptr->valid != CORE_MUTEX_VALID))
 		return -EINVAL;
 
+	i = mutex_ptr->gate_num;
 	mutex_ptr->gate_val = readb(imx6_sema4->ioaddr + i);
 	mutex_ptr->gate_val &= SEMA4_GATE_MASK;
 	/* Check to see if this core already own it */
@@ -234,11 +235,12 @@ int imx_sema4_mutex_lock(struct imx_sema4_mutex *mutex_ptr)
  */
 int imx_sema4_mutex_unlock(struct imx_sema4_mutex *mutex_ptr)
 {
-	int ret = 0, i = mutex_ptr->gate_num;
+	int ret = 0, i = 0;
 
 	if ((mutex_ptr == NULL) || (mutex_ptr->valid != CORE_MUTEX_VALID))
 		return -EINVAL;
 
+	i = mutex_ptr->gate_num;
 	mutex_ptr->gate_val = readb(imx6_sema4->ioaddr + i);
 	mutex_ptr->gate_val &= SEMA4_GATE_MASK;
 	/* make sure it is locked by this core */
@@ -271,7 +273,7 @@ static irqreturn_t imx_sema4_isr(int irq, void *dev_id)
 {
 	int i;
 	struct imx_sema4_mutex *mutex_ptr;
-	u32 mask;
+	unsigned int mask;
 	struct imx_sema4_mutex_device *imx6_sema4 = dev_id;
 
 	imx6_sema4->cpntf_val = readw(imx6_sema4->ioaddr + SEMA4_CP0NTF);
diff --git a/include/linux/imx_sema4.h b/include/linux/imx_sema4.h
index fe48089..19850ae 100644
--- a/include/linux/imx_sema4.h
+++ b/include/linux/imx_sema4.h
@@ -29,7 +29,7 @@ enum {
 	SEMA4_CP1NTF	= 0x88,
 };
 
-static const unsigned int idx_sema4[16] = {
+static const unsigned int idx_sema4[SEMA4_NUM_GATES] = {
 	1 << 7, 1 << 6, 1 << 5, 1 << 4,
 	1 << 3, 1 << 2, 1 << 1, 1 << 0,
 	1 << 15, 1 << 14, 1 << 13, 1 << 12,
@@ -52,7 +52,7 @@ struct imx_sema4_mutex_device {
 	int			irq;
 
 	u16			alloced;
-	struct imx_sema4_mutex	*mutex_ptr[16];
+	struct imx_sema4_mutex	*mutex_ptr[SEMA4_NUM_GATES];
 };
 
 struct imx_sema4_mutex *
-- 
1.7.9.5

