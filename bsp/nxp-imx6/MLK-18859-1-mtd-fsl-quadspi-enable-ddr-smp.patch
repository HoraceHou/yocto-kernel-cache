From 6edbe2af984cc2c6fec0a6ef53b15e8d4ced00b8 Mon Sep 17 00:00:00 2001
From: Han Xu <han.xu@nxp.com>
Date: Tue, 21 Aug 2018 11:28:43 -0500
Subject: [PATCH 4505/5242] MLK-18859-1: mtd: fsl-quadspi: enable ddr smp

commit  2ca4cb19fa2e7f5092dd967a059bd7d6407980fc from
https://source.codeaurora.org/external/imx/linux-imx.git

enable the ddr smp function to get correcct ddr sample point drom DT

Signed-off-by: Han Xu <han.xu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mtd/spi-nor/fsl-quadspi.c |   24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/mtd/spi-nor/fsl-quadspi.c b/drivers/mtd/spi-nor/fsl-quadspi.c
index 6baa7f0..9fb3f60 100644
--- a/drivers/mtd/spi-nor/fsl-quadspi.c
+++ b/drivers/mtd/spi-nor/fsl-quadspi.c
@@ -304,6 +304,7 @@ struct fsl_qspi {
 	unsigned int chip_base_addr; /* We may support two chips. */
 	bool has_second_chip;
 	bool big_endian;
+	u32 ddr_smp; /* ddr sample point */
 	bool ddr_enabled;
 	struct mutex lock;
 	struct pm_qos_request pm_qos_req;
@@ -937,8 +938,7 @@ static ssize_t fsl_qspi_write(struct spi_nor *nor, loff_t to,
 static void __fsl_qspi_enable_ddr_mode(struct spi_nor *nor, bool v)
 {
 	struct fsl_qspi *q = nor->priv;
-	u32 reg;
-	/* u32 reg, reg2; */
+	u32 reg, reg2;
 
 	reg = qspi_readl(q, q->iobase + QUADSPI_MCR);
 
@@ -946,15 +946,15 @@ static void __fsl_qspi_enable_ddr_mode(struct spi_nor *nor, bool v)
 	qspi_writel(q, reg | QUADSPI_MCR_MDIS_MASK,
 		    q->iobase + QUADSPI_MCR);
 
-	/* reg2 = qspi_readl(q, q->iobase + QUADSPI_SMPR); */
-	/* reg2 &= ~QUADSPI_SMPR_DDRSMP_MASK; */
+	reg2 = qspi_readl(q, q->iobase + QUADSPI_SMPR);
+	reg2 &= ~QUADSPI_SMPR_DDRSMP_MASK;
 
 	/* Set the Sampling Register for DDR, if to enable it */
-	/* if (v) */
-		/* reg2 |= ((q->ddr_smp << QUADSPI_SMPR_DDRSMP_SHIFT) & */
-			  /* QUADSPI_SMPR_DDRSMP_MASK); */
+	if (v)
+		reg2 |= ((q->ddr_smp << QUADSPI_SMPR_DDRSMP_SHIFT) &
+			  QUADSPI_SMPR_DDRSMP_MASK);
 
-	/* qspi_writel(q, reg2, q->iobase + QUADSPI_SMPR); */
+	qspi_writel(q, reg2, q->iobase + QUADSPI_SMPR);
 
 	/* Enable the module again and enable the DDR, if need */
 	if (v) {
@@ -1157,10 +1157,10 @@ static int fsl_qspi_probe(struct platform_device *pdev)
 		return PTR_ERR(q->clk);
 
 	/* find ddrsmp value */
-	/* ret = of_property_read_u32(dev->of_node, "ddrsmp", */
-				   /* &q->ddr_smp); */
-	/* if (ret) */
-		/* q->ddr_smp = 0; */
+	ret = of_property_read_u32(dev->of_node, "ddrsmp",
+				   &q->ddr_smp);
+	if (ret)
+		q->ddr_smp = 0;
 
 	ret = fsl_qspi_clk_prep_enable(q);
 	if (ret) {
-- 
1.7.9.5

