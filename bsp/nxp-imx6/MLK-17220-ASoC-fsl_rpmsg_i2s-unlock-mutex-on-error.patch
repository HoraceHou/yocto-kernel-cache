From d0b47da20484edd8aba8997587fe116519f2d097 Mon Sep 17 00:00:00 2001
From: Viorel Suman <viorel.suman@nxp.com>
Date: Tue, 12 Dec 2017 14:07:34 +0200
Subject: [PATCH 3094/5242] MLK-17220: ASoC: fsl_rpmsg_i2s: unlock mutex on
 error

commit  c198f4b3bba3f29d3629345b6f09acdfae7ae115 from
https://source.codeaurora.org/external/imx/linux-imx.git

Mutex must be unlocked when i2s_send_message method
fails.

Signed-off-by: Viorel Suman <viorel.suman@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_rpmsg_i2s.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/sound/soc/fsl/fsl_rpmsg_i2s.c b/sound/soc/fsl/fsl_rpmsg_i2s.c
index 3cfa3e9..95cbe45 100644
--- a/sound/soc/fsl/fsl_rpmsg_i2s.c
+++ b/sound/soc/fsl/fsl_rpmsg_i2s.c
@@ -35,7 +35,6 @@ static int i2s_send_message(struct i2s_rpmsg_s *msg,
 {
 	int err;
 
-	mutex_lock(&info->tx_lock);
 	if (!info->rpdev) {
 		dev_dbg(info->dev, "rpmsg channel not ready, m4 image ready?\n");
 		return -EINVAL;
@@ -43,11 +42,14 @@ static int i2s_send_message(struct i2s_rpmsg_s *msg,
 
 	dev_dbg(&info->rpdev->dev, "send cmd %d\n", msg->header.cmd);
 
+	mutex_lock(&info->tx_lock);
+
 	reinit_completion(&info->cmd_complete);
 	err = rpmsg_send(info->rpdev->ept, (void *)msg,
 			 sizeof(struct i2s_rpmsg_s));
 	if (err) {
 		dev_err(&info->rpdev->dev, "rpmsg_send failed: %d\n", err);
+		mutex_unlock(&info->tx_lock);
 		return err;
 	}
 
@@ -57,6 +59,7 @@ static int i2s_send_message(struct i2s_rpmsg_s *msg,
 	if (!err) {
 		dev_err(&info->rpdev->dev, "rpmsg_send cmd %d timeout!\n",
 							msg->header.cmd);
+		mutex_unlock(&info->tx_lock);
 		return -ETIMEDOUT;
 	}
 
-- 
1.7.9.5

