From 54c80b2adf32ac7ec6831930b51271b52c729b5e Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Tue, 12 Dec 2017 14:33:14 +0800
Subject: [PATCH 3080/5242] MLK-17154 watchdog: imx8_wdt: align timeout value
 with imx2_wdt

commit  24cda556ae9ef4b723d572d192458f41f6ca16d5 from
https://source.codeaurora.org/external/imx/linux-imx.git

Align timeout value with imx2_wdt.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/watchdog/imx8_wdt.c |   19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/watchdog/imx8_wdt.c b/drivers/watchdog/imx8_wdt.c
index 6564532..955f129 100644
--- a/drivers/watchdog/imx8_wdt.c
+++ b/drivers/watchdog/imx8_wdt.c
@@ -12,6 +12,7 @@
 #include <linux/init.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
+#include <linux/moduleparam.h>
 #include <linux/platform_device.h>
 #include <linux/reboot.h>
 #include <linux/watchdog.h>
@@ -19,13 +20,23 @@
 #include <soc/imx8/sc/sci.h>
 #include <soc/imx8/sc/svc/irq/api.h>
 
-#define DEFAULT_TIMEOUT 10
+#define DEFAULT_TIMEOUT 60
 /*
  * Software timer tick implemented in scfw side, support 10ms to 0xffffffff ms
- * in theory, but for normal case, 1s~60s is enough, you can change this max
+ * in theory, but for normal case, 1s~128s is enough, you can change this max
  * value in case it's not enough.
  */
-#define MAX_TIMEOUT 60
+#define MAX_TIMEOUT 128
+
+static bool nowayout = WATCHDOG_NOWAYOUT;
+module_param(nowayout, bool, 0000);
+MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started (default="
+				__MODULE_STRING(WATCHDOG_NOWAYOUT) ")");
+
+static unsigned int timeout = DEFAULT_TIMEOUT;
+module_param(timeout, uint, 0000);
+MODULE_PARM_DESC(timeout, "Watchdog timeout in seconds (default="
+				__MODULE_STRING(DEFAULT_TIMEOUT) ")");
 
 static struct watchdog_device imx8_wdd;
 
@@ -82,6 +93,8 @@ static int imx8_wdt_set_timeout(struct watchdog_device *wdog,
 {
 	struct arm_smccc_res res;
 
+	wdog->timeout = timeout;
+
 	arm_smccc_smc(FSL_SIP_SRTC, FSL_SIP_SRTC_SET_TIMEOUT_WDOG,
 			timeout * 1000, 0, 0, 0, 0, 0, &res);
 
-- 
1.7.9.5

