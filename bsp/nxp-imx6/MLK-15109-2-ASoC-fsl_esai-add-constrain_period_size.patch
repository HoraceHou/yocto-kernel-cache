From a46ebc177b4387f8597be431e2ede992c7af0ea3 Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <shengjiu.wang@freescale.com>
Date: Mon, 19 Jun 2017 11:28:42 +0800
Subject: [PATCH 1958/5242] MLK-15109-2: ASoC: fsl_esai: add
 constrain_period_size

commit  7191be1de96e4e27563642d01ff505cc22b1613f from
https://source.codeaurora.org/external/imx/linux-imx.git

There is limitaion for EDMA, which can only accept the period bytes
that can be divided by maxburst with no remainder. Otherwise EDMA
will not copy the left data in the end, and it will cause noise.
so add constraint for these chips.

Signed-off-by: Shengjiu Wang <shengjiu.wang@freescale.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 sound/soc/fsl/fsl_esai.c |   18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/sound/soc/fsl/fsl_esai.c b/sound/soc/fsl/fsl_esai.c
index 6133c4d..6a69dd2 100644
--- a/sound/soc/fsl/fsl_esai.c
+++ b/sound/soc/fsl/fsl_esai.c
@@ -81,6 +81,7 @@ struct fsl_esai_soc_data {
 	bool imx;
 	bool dma_workaround;
 	bool channel_swap_workaround;
+	bool constrain_period_size;
 };
 
 /**
@@ -144,18 +145,21 @@ struct fsl_esai {
 	.imx = false,
 	.dma_workaround = false,
 	.channel_swap_workaround = true,
+	.constrain_period_size = false,
 };
 
 static struct fsl_esai_soc_data fsl_esai_imx35 = {
 	.imx = true,
 	.dma_workaround = false,
 	.channel_swap_workaround = true,
+	.constrain_period_size = false,
 };
 
 static struct fsl_esai_soc_data fsl_esai_imx6ull = {
 	.imx = true,
 	.dma_workaround = false,
 	.channel_swap_workaround = false,
+	.constrain_period_size = false,
 };
 
 /* In imx8qxp rev1, the dma request signal is not revert. For esai
@@ -166,12 +170,14 @@ struct fsl_esai {
 	.imx = true,
 	.dma_workaround = true,
 	.channel_swap_workaround = false,
+	.constrain_period_size = true,
 };
 
 static struct fsl_esai_soc_data fsl_esai_imx8qm = {
 	.imx = true,
 	.dma_workaround = false,
 	.channel_swap_workaround = false,
+	.constrain_period_size = true,
 };
 
 static irqreturn_t esai_isr(int irq, void *devid)
@@ -590,6 +596,7 @@ static int fsl_esai_startup(struct snd_pcm_substream *substream,
 			    struct snd_soc_dai *dai)
 {
 	struct fsl_esai *esai_priv = snd_soc_dai_get_drvdata(dai);
+	bool tx = substream->stream == SNDRV_PCM_STREAM_PLAYBACK;
 	int ret;
 
 	/*
@@ -630,6 +637,17 @@ static int fsl_esai_startup(struct snd_pcm_substream *substream,
 
 	esai_priv->substream[substream->stream] = substream;
 
+	if (esai_priv->soc->constrain_period_size) {
+		if (tx)
+			snd_pcm_hw_constraint_step(substream->runtime, 0,
+				SNDRV_PCM_HW_PARAM_PERIOD_SIZE,
+				esai_priv->dma_params_tx.maxburst);
+		else
+			snd_pcm_hw_constraint_step(substream->runtime, 0,
+				SNDRV_PCM_HW_PARAM_PERIOD_SIZE,
+				esai_priv->dma_params_rx.maxburst);
+	}
+
 	return 0;
 
 err_fsysclk:
-- 
1.7.9.5

