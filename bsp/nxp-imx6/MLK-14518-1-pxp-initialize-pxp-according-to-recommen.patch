From 9dd0bb3744608c1311c32a268e2c0800d94782f5 Mon Sep 17 00:00:00 2001
From: Robby Cai <robby.cai@nxp.com>
Date: Tue, 21 Mar 2017 20:12:14 +0800
Subject: [PATCH 1700/5242] MLK-14518-1 pxp: initialize pxp according to
 recommended flow

commit  5cd462d85702d5322cfac9b2c047b43259a67da8 from
https://source.codeaurora.org/external/imx/linux-imx.git

use pxp_soft_reset() in probe and resume function because this implementation
follows the recommended flow in the IC spec.
without soft reset, when only use wfe_a process without legacy process it's
likely to meet timeout issue since. In other words, wfe_a process need the
soft reset to work properly.

Signed-off-by: Robby Cai <robby.cai@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/dma/pxp/pxp_dma_v3.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/dma/pxp/pxp_dma_v3.c b/drivers/dma/pxp/pxp_dma_v3.c
index b2e68e6..0854757 100644
--- a/drivers/dma/pxp/pxp_dma_v3.c
+++ b/drivers/dma/pxp/pxp_dma_v3.c
@@ -5212,9 +5212,6 @@ static int pxp_probe(struct platform_device *pdev)
 	if (err)
 		goto exit;
 
-	/* enable all the possible irq raised by PXP */
-	__raw_writel(0xffff, pxp->base + HW_PXP_IRQ_MASK);
-
 	/* Initialize DMA engine */
 	err = pxp_dma_init(pxp);
 	if (err < 0)
@@ -5228,6 +5225,10 @@ static int pxp_probe(struct platform_device *pdev)
 
 	device_create_file(&pdev->dev, &dev_attr_block_size);
 	pxp_clk_enable(pxp);
+	pxp_soft_reset(pxp);
+	/* enable all the possible irq raised by PXP */
+	__raw_writel(0xffff, pxp->base + HW_PXP_IRQ_MASK);
+
 	dump_pxp_reg(pxp);
 	pxp_clk_disable(pxp);
 
@@ -5321,7 +5322,9 @@ static int pxp_resume(struct device *dev)
 
 	pxp_clk_enable(pxp);
 	/* Pull PxP out of reset */
-	__raw_writel(0, pxp->base + HW_PXP_CTRL);
+	pxp_soft_reset(pxp);
+	/* enable all the possible irq raised by PXP */
+	__raw_writel(0xffff, pxp->base + HW_PXP_IRQ_MASK);
 	pxp_clk_disable(pxp);
 
 	return 0;
-- 
1.7.9.5

