From 58ff62329b201e084869a4789f4238a1a2a69c05 Mon Sep 17 00:00:00 2001
From: Sandor Yu <Sandor.yu@nxp.com>
Date: Fri, 7 Sep 2018 16:51:21 +0800
Subject: [PATCH 4566/5242] MLK-19495: hdp: Add vendor infoframe

commit  8eb490182e04d8d40545ac972dc5e4334b950b72 from
https://source.codeaurora.org/external/imx/linux-imx.git

VIC code check is introduced in 4.14.y,
if a mode is found in HDMI 1.4b 4K modes.
HDMI driver should send its VIC in vendor infoframes.
Add vendor infoframe setting.

Signed-off-by: Sandor Yu <Sandor.yu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/hdp/imx-hdmi.c |   38 +++++++++++++++++++++++++++++++++---
 1 file changed, 35 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/imx/hdp/imx-hdmi.c b/drivers/gpu/drm/imx/hdp/imx-hdmi.c
index 1af7ce4..6e48be0 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdmi.c
+++ b/drivers/gpu/drm/imx/hdp/imx-hdmi.c
@@ -98,7 +98,7 @@ static int hdmi_avi_info_set(struct imx_hdp *hdp,
 	int ret;
 
 	/* Initialise info frame from DRM mode */
-	drm_hdmi_avi_infoframe_from_display_mode(&frame, mode, false);
+	drm_hdmi_avi_infoframe_from_display_mode(&frame, mode, true);
 
 	/* Set up colorimetry */
 	allowed_colorimetry = format == PXL_RGB ? RGB_ALLOWED_COLORIMETRY :
@@ -154,6 +154,33 @@ static int hdmi_avi_info_set(struct imx_hdp *hdp,
 
 }
 
+static int hdmi_vendor_info_set(struct imx_hdp *hdp,
+				struct drm_display_mode *mode,
+				int format)
+{
+	struct hdmi_vendor_infoframe frame;
+	u8 buf[32];
+	int ret;
+
+	/* Initialise vendor frame from DRM mode */
+	ret = drm_hdmi_vendor_infoframe_from_display_mode(&frame, mode);
+	if (ret < 0) {
+		DRM_DEBUG("Unable to init vendor infoframe: %d\n", ret);
+		return -1;
+	}
+
+	ret = hdmi_vendor_infoframe_pack(&frame, buf + 1, sizeof(buf) - 1);
+	if (ret < 0) {
+		DRM_DEBUG("Unable to pack vendor infoframe: %d\n", ret);
+		return -1;
+	}
+
+	buf[0] = 0;
+	return CDN_API_InfoframeSet(&hdp->state, 0, sizeof(buf),
+				    (u32 *)buf, HDMI_INFOFRAME_TYPE_VENDOR);
+
+}
+
 int hdmi_phy_init_ss28fdsoi(state_struct *state, struct drm_display_mode *mode, int format, int color_depth)
 {
 	struct imx_hdp *hdp = state_to_imx_hdp(state);
@@ -213,11 +240,12 @@ void hdmi_mode_set_ss28fdsoi(state_struct *state, struct drm_display_mode *mode,
 	}
 
 	ret = hdmi_avi_info_set(hdp, mode, format);
-	if (ret != CDN_OK) {
+	if (ret < 0) {
 		DRM_ERROR("hdmi avi info set ret = %d\n", ret);
 		return;
 	}
 
+	hdmi_vendor_info_set(hdp, mode, format);
 
 	ret =  CDN_API_HDMITX_SetVic_blocking(state, mode, color_depth, format);
 	if (ret != CDN_OK) {
@@ -386,11 +414,15 @@ void hdmi_mode_set_t28hpc(state_struct *state, struct drm_display_mode *mode, in
 	}
 
 	ret = hdmi_avi_info_set(hdp, mode, format);
-	if (ret != CDN_OK) {
+	if (ret < 0) {
 		DRM_ERROR("hdmi avi info set ret = %d\n", ret);
 		return;
 	}
 
+	ret = hdmi_vendor_info_set(hdp, mode, format);
+	if (ret < 0)
+		DRM_WARN("Unable to configure VS infoframe\n");
+
 	ret = CDN_API_HDMITX_SetVic_blocking(state, mode, color_depth, format);
 	if (ret != CDN_OK) {
 		DRM_ERROR("CDN_API_HDMITX_SetVic_blocking ret = %d\n", ret);
-- 
1.7.9.5

