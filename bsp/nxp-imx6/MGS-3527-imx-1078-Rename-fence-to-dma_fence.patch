From 63dfb39868b08e7fa163f0ed7e924117cc23c021 Mon Sep 17 00:00:00 2001
From: Yong Gan <yong.gan@nxp.com>
Date: Sat, 11 Aug 2018 08:21:56 +0800
Subject: [PATCH 4354/5242] MGS-3527 [#imx-1078] Rename fence to dma_fence

commit  e723b8f2c31a0490909ca147181c0ef06fe88abd from
https://source.codeaurora.org/external/imx/linux-imx.git

Support the kernel 4.9.y in fsl_6.2.4.p2.

Signed-off-by: Yong Gan<yong.gan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../hal/os/linux/kernel/gc_hal_kernel_linux.h      |   21 ++++++++++++++++++++
 .../gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c |    8 ++++----
 .../hal/os/linux/kernel/gc_hal_kernel_sync.h       |    9 +++++++--
 3 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_linux.h b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_linux.h
index 584a7c9..f8f08d9 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_linux.h
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_linux.h
@@ -148,6 +148,27 @@
 #   endif
 #endif
 
+/* gcdLINUX_SYNC_FILE and CONFIG_SYNC_FILE. */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,10,0)
+#  define dma_fence                         fence
+#  define dma_fence_array                   fence_array
+#  define dma_fence_ops                     fence_ops
+
+#  define dma_fence_default_wait            fence_default_wait
+
+#  define dma_fence_signal(f)               fence_signal(f)
+#  define dma_fence_signal_locked(f)        fence_signal_locked(f)
+#  define dma_fence_get(f)                  fence_get(f)
+#  define dma_fence_put(f)                  fence_put(f)
+#  define dma_fence_is_array(f)             fence_is_array(f)
+#  define dma_fence_is_signaled(f)          fence_is_signaled(f)
+#  define to_dma_fence_array(f)             to_fence_array(f)
+#  define dma_fence_wait_timeout(f, n, t)   fence_wait_timeout((f), (n), (t))
+#  define dma_fence_init(f, o, l, t, s)     fence_init((f), (o), (l), (t), (s))
+#  define dma_fence_context_alloc(s)        fence_context_alloc(s)
+
+#endif
+
 extern struct device *galcore_device;
 
 /******************************************************************************\
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
index 08a87e2..4d00f4a 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
@@ -6797,7 +6797,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
 
         for (i = 0; i < fence->num_fences; i++)
         {
-            struct dma_fence *f = fence->cbs[i].sync_pt;
+            struct fence *f = fence->cbs[i].sync_pt;
             struct sync_pt *pt = container_of(f, struct sync_pt, base);
 
             /* Do not need to wait on same timeline. */
@@ -7013,13 +7013,13 @@ gceSTATUS gckOS_UserLogicalToPhysical(
     IN gctUINT32 Timeout
     )
 {
-    struct dma_fence *fence;
     struct viv_sync_timeline *timeline;
     gceSTATUS status = gcvSTATUS_OK;
     unsigned int i;
     unsigned int numFences;
-    struct dma_fence **fences;
     unsigned long timeout;
+    struct dma_fence *fence;
+    struct dma_fence **fences;
 
     timeline = (struct viv_sync_timeline *) Timeline;
 
@@ -7052,7 +7052,7 @@ gceSTATUS gckOS_UserLogicalToPhysical(
             !dma_fence_is_signaled(f))
         {
             signed long ret;
-            ret = dma_fence_wait_timeout(fence, 1, timeout);
+            ret = dma_fence_wait_timeout(f, 1, timeout);
 
             if (ret == -ERESTARTSYS)
             {
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_sync.h b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_sync.h
index 4b526ba..695ccff 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_sync.h
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_sync.h
@@ -101,8 +101,13 @@ struct sync_pt * viv_sync_pt_create(struct viv_sync_timeline *obj,
 #else /* v4.9.0 */
 
 #include <linux/sync_file.h>
-#include <linux/dma-fence.h>
-#include <linux/dma-fence-array.h>
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,10,0)
+#  include <linux/fence.h>
+#  include <linux/fence-array.h>
+#else
+#  include <linux/dma-fence.h>
+#  include <linux/dma-fence-array.h>
+#endif
 
 #include <gc_hal.h>
 #include <gc_hal_base.h>
-- 
1.7.9.5

