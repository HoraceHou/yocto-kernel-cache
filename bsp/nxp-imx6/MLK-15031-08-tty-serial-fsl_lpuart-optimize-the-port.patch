From 5e76a203d4e0866122de2333bd39d7ede1e8589b Mon Sep 17 00:00:00 2001
From: Fugang Duan <fugang.duan@nxp.com>
Date: Tue, 6 Jun 2017 18:50:04 +0800
Subject: [PATCH 1882/5242] MLK-15031-08 tty: serial: fsl_lpuart: optimize the
 port.lock cover range

commit  102a1f5562269879e818556c20e3b326fac8b477 from
https://source.codeaurora.org/external/imx/linux-imx.git

In DMA tx callback, .uart_circ_chars_pending() also should be protected
by the port.lock, and in DMA rx callback, it can remove the lock protection
for .lpuart_copy_rx_to_tty() and .tty_flip_buffer_push() code range.

Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
Reviewed-by: Robin Gong <yibin.gong@nxp.com>
Reviewed-by: Dong Aisheng <aisheng.dong@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/tty/serial/fsl_lpuart.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/tty/serial/fsl_lpuart.c b/drivers/tty/serial/fsl_lpuart.c
index b14ea4e..a21ba39 100644
--- a/drivers/tty/serial/fsl_lpuart.c
+++ b/drivers/tty/serial/fsl_lpuart.c
@@ -461,18 +461,16 @@ static void lpuart_dma_tx_complete(void *arg)
 
 	sport->port.icount.tx += sport->dma_tx_bytes;
 	sport->dma_tx_in_progress = false;
-	spin_unlock_irqrestore(&sport->port.lock, flags);
 
 	if (uart_circ_chars_pending(xmit) < WAKEUP_CHARS)
 		uart_write_wakeup(&sport->port);
 
 	if (waitqueue_active(&sport->dma_wait)) {
 		wake_up(&sport->dma_wait);
+		spin_unlock_irqrestore(&sport->port.lock, flags);
 		return;
 	}
 
-	spin_lock_irqsave(&sport->port.lock, flags);
-
 	if (!uart_circ_empty(xmit) && !uart_tx_stopped(&sport->port))
 		lpuart_dma_tx(sport);
 
@@ -1021,9 +1019,13 @@ static void lpuart_dma_rx_complete(void *arg)
 	sport->dma_rx_in_progress = false;
 	dmaengine_tx_status(sport->dma_rx_chan, sport->dma_rx_cookie, &state);
 	count = sport->rxdma_len - state.residue;
+	spin_unlock_irqrestore(&sport->port.lock, flags);
+
 	lpuart_copy_rx_to_tty(sport, port, count);
 	tty_flip_buffer_push(port);
 
+	spin_lock_irqsave(&sport->port.lock, flags);
+
 	/* For end of packet, clear the idle flag to avoid to trigger
 	 * the next transfer. Only i.MX8x lpuart support EEOP.
 	 */
-- 
1.7.9.5

