From 9fbf9429bc7559964841da70e8af653ca9f73f4d Mon Sep 17 00:00:00 2001
From: Robin Gong <yibin.gong@nxp.com>
Date: Wed, 16 May 2018 00:29:04 +0800
Subject: [PATCH 3665/5242] MLK-18315-1 dma: imx-sdma: add fw_loaded check

commit  4a0afd17a0c8f695720969dd117d105afac1eb6c from
https://source.codeaurora.org/external/imx/linux-imx.git

Return failure if sdma firmware not loaded from rootfs before
any dma transfer started indeed. That assume no any dma tranfser
started in any driver probe function. Otherwise, some driver such
as spi may probe failed or defered probe until sdma firmware loaded
from rootfs.

Signed-off-by: Robin Gong <yibin.gong@nxp.com>
Acked-by: Fugang Duan <fugang.duan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/dma/imx-sdma.c |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/dma/imx-sdma.c b/drivers/dma/imx-sdma.c
index d6662b3..8c04eb0 100644
--- a/drivers/dma/imx-sdma.c
+++ b/drivers/dma/imx-sdma.c
@@ -433,6 +433,7 @@ struct sdma_engine {
 	bool				bd0_iram;
 	struct sdma_buffer_descriptor	*bd0;
 	bool				suspend_off;
+	bool				fw_loaded;
 	int				idx;
 	/* clock ration for AHB:SDMA core. 1:1 is 1, 2:1 is 0*/
 	bool				clk_ratio;
@@ -1523,6 +1524,12 @@ static struct sdma_desc *sdma_transfer_init(struct sdma_channel *sdmac,
 			      enum dma_transfer_direction direction, u32 bds)
 {
 	struct sdma_desc *desc;
+
+	if (!sdmac->sdma->fw_loaded) {
+		dev_err(sdmac->sdma->dev, "sdma firmware not ready!\n");
+		goto err_out;
+	}
+
 	/* Now allocate and setup the descriptor. */
 	desc = kzalloc((sizeof(*desc)), GFP_ATOMIC);
 	if (!desc)
@@ -1978,7 +1985,7 @@ static void sdma_load_firmware(const struct firmware *fw, void *context)
 		return;
 	}
 
-	if (fw->size < sizeof(*header))
+	if (fw->size < sizeof(*header) || sdma->fw_loaded)
 		goto err_firmware;
 
 	header = (struct sdma_firmware_header *)fw->data;
@@ -2023,6 +2030,8 @@ static void sdma_load_firmware(const struct firmware *fw, void *context)
 			header->version_major,
 			header->version_minor);
 
+	sdma->fw_loaded = true;
+
 err_firmware:
 	release_firmware(fw);
 }
@@ -2491,6 +2500,8 @@ static int sdma_suspend(struct device *dev)
 			sdma->save_regs[i] = readl_relaxed(sdma->regs + 4 * i);
 	}
 
+	sdma->fw_loaded = false;
+
 	clk_disable(sdma->clk_ipg);
 	clk_disable(sdma->clk_ahb);
 
-- 
1.7.9.5

