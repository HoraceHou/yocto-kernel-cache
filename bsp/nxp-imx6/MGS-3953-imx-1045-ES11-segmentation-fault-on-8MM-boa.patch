From 604ae33217a438e2d4b363b00a5a796eda277128 Mon Sep 17 00:00:00 2001
From: Chenyan Feng <ella.feng@nxp.com>
Date: Tue, 19 Jun 2018 18:11:36 +0800
Subject: [PATCH 4025/5242] MGS-3953 [#imx-1045] ES11 segmentation fault on
 8MM board

commit  02038fea51942539d5d75205cf21dc0d7610c06e from
https://source.codeaurora.org/external/imx/linux-imx.git

Some 2D APIs were not compatible with 64bit, resulting in some memory
address not accessible, Refine them as internal usage.

Date: 19th Jun, 2018
Signed-off-by: Ella Feng <ella.feng@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/gpu-viv/hal/kernel/inc/gc_hal_raster.h |   52 ++++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/drivers/mxc/gpu-viv/hal/kernel/inc/gc_hal_raster.h b/drivers/mxc/gpu-viv/hal/kernel/inc/gc_hal_raster.h
index a2bdb8f..988577f 100644
--- a/drivers/mxc/gpu-viv/hal/kernel/inc/gc_hal_raster.h
+++ b/drivers/mxc/gpu-viv/hal/kernel/inc/gc_hal_raster.h
@@ -339,6 +339,24 @@
     IN gctUINT32 TransparencyColor
     );
 
+/* Same as gco2D_SetColorSourceEx, but with better 64bit SW-path support.
+** Please do NOT export the API now.
+*/
+gceSTATUS
+gco2D_SetColorSource64(
+    IN gco2D Engine,
+    IN gctUINT32 Address,
+    IN gctPOINTER Logical,
+    IN gctUINT32 Stride,
+    IN gceSURF_FORMAT Format,
+    IN gceSURF_ROTATION Rotation,
+    IN gctUINT32 SurfaceWidth,
+    IN gctUINT32 SurfaceHeight,
+    IN gctBOOL CoordRelative,
+    IN gceSURF_TRANSPARENCY Transparency,
+    IN gctUINT32 TransparencyColor
+    );
+
 /* Configure color source. */
 gceSTATUS
 gco2D_SetColorSourceAdvanced(
@@ -389,6 +407,23 @@
     IN gctUINT32 SurfaceHeight
     );
 
+/* Same as gco2D_SetMaskedSourceEx, but with better 64bit SW-path support.
+** Please do NOT export the API now.
+*/
+gceSTATUS
+gco2D_SetMaskedSource64(
+    IN gco2D Engine,
+    IN gctUINT32 Address,
+    IN gctPOINTER Logical,
+    IN gctUINT32 Stride,
+    IN gceSURF_FORMAT Format,
+    IN gctBOOL CoordRelative,
+    IN gceSURF_MONOPACK MaskPack,
+    IN gceSURF_ROTATION Rotation,
+    IN gctUINT32 SurfaceWidth,
+    IN gctUINT32 SurfaceHeight
+    );
+
 /* Setup the source rectangle. */
 gceSTATUS
 gco2D_SetSource(
@@ -424,6 +459,21 @@
     IN gctUINT32 SurfaceHeight
     );
 
+/* Same as gco2D_SetTargetEx, but with better 64bit SW-path support.
+** Please do NOT export the API now.
+*/
+gceSTATUS
+gco2D_SetTarget64(
+    IN gco2D Engine,
+    IN gctUINT32 Address,
+    IN gctPOINTER Logical,
+    IN gctUINT32 Stride,
+    IN gceSURF_ROTATION Rotation,
+    IN gctUINT32 SurfaceWidth,
+    IN gctUINT32 SurfaceHeight
+    );
+
+
 /* Calculate and program the stretch factors. */
 gceSTATUS
 gco2D_CalcStretchFactor(
@@ -1055,3 +1105,5 @@ gceSTATUS gco2D_SetTargetGlobalColorAdvanced(
 #endif
 
 #endif /* __gc_hal_raster_h_ */
+
+
-- 
1.7.9.5

