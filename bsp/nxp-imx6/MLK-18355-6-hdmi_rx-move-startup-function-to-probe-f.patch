From 6c51f863c34ce8f891b4f8d6770e3b00348885b9 Mon Sep 17 00:00:00 2001
From: Sandor Yu <Sandor.yu@nxp.com>
Date: Mon, 21 May 2018 10:45:00 +0800
Subject: [PATCH 3855/5242] MLK-18355-6: hdmi_rx: move startup function to
 probe function

commit  36f98fb458613d5772555955ce0e164d8595fa71 from
https://source.codeaurora.org/external/imx/linux-imx.git

Move startup function from s_power to probe function,
HDMI RX controller keep in running state after driver probe.
The startup function should move to cable plugin handle.
When iMX8QM B0 silicon HDMI RX hot plug function is ready.

Signed-off-by: Sandor Yu <Sandor.yu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/hdmi/mxc-hdmi-rx.c |   26 ++++++++++++------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/media/platform/imx8/hdmi/mxc-hdmi-rx.c b/drivers/media/platform/imx8/hdmi/mxc-hdmi-rx.c
index 6cd53c9..844cb97 100644
--- a/drivers/media/platform/imx8/hdmi/mxc-hdmi-rx.c
+++ b/drivers/media/platform/imx8/hdmi/mxc-hdmi-rx.c
@@ -528,22 +528,10 @@ static int mxc_hdmi_dv_timings_cap(struct v4l2_subdev *sd,
 static int mxc_hdmi_s_power(struct v4l2_subdev *sd, int on)
 {
 	struct mxc_hdmi_rx_dev *hdmi_rx = imx_sd_to_hdmi(sd);
-	state_struct *state = &hdmi_rx->state;
 	struct device *dev = &hdmi_rx->pdev->dev;
-	u8 sts;
 
 	dev_dbg(dev, "%s\n", __func__);
 
-	if (on) {
-		pm_runtime_get_sync(dev);
-		hdmirx_startup(&hdmi_rx->state);
-	} else {
-		/* Reset HDMI RX PHY */
-		CDN_API_HDMIRX_Stop_blocking(state);
-		CDN_API_MainControl_blocking(state, 0, &sts);
-		pm_runtime_put_sync(dev);
-	}
-
 	return 0;
 }
 static struct v4l2_subdev_core_ops imx_core_ops_hdmi = {
@@ -751,11 +739,15 @@ static int mxc_hdmi_probe(struct platform_device *pdev)
 	pm_runtime_enable(dev);
 	pm_runtime_get_sync(dev);
 	ret = mxc_hdmi_init(hdmi_rx);
-	pm_runtime_put_sync(dev);
 	if (ret) {
 		dev_info(dev, "mxc hdmi rx init failed\n");
 		goto failed;
 	}
+	ret = hdmirx_startup(&hdmi_rx->state);
+	if (ret) {
+		dev_info(dev, "mxc hdmi rx startup failed\n");
+		goto failed;
+	}
 
 	dev_info(dev, "mxc hdmi rx probe successfully\n");
 
@@ -766,19 +758,27 @@ static int mxc_hdmi_probe(struct platform_device *pdev)
 
 	mxc_hdmi_clock_disable(hdmi_rx);
 	pm_runtime_disable(dev);
+	dev_info(dev, "mxc hdmi rx probe failed\n");
 	return ret;
 }
 
 static int mxc_hdmi_remove(struct platform_device *pdev)
 {
 	struct mxc_hdmi_rx_dev *hdmi_rx = platform_get_drvdata(pdev);
+	state_struct *state = &hdmi_rx->state;
 	struct device *dev = &pdev->dev;
+	u8 sts;
 
 	dev_dbg(dev, "%s\n", __func__);
 	v4l2_async_unregister_subdev(&hdmi_rx->sd);
 	media_entity_cleanup(&hdmi_rx->sd.entity);
 
+	/* Reset HDMI RX PHY */
+	CDN_API_HDMIRX_Stop_blocking(state);
+	CDN_API_MainControl_blocking(state, 0, &sts);
+
 	mxc_hdmi_clock_disable(hdmi_rx);
+	pm_runtime_put_sync(dev);
 	pm_runtime_disable(dev);
 
 	return 0;
-- 
1.7.9.5

