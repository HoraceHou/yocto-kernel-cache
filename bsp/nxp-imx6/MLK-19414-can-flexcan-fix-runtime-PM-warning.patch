From cc80f317711ecdcfb915c1b4e577751b36687ecd Mon Sep 17 00:00:00 2001
From: Joakim Zhang <qiangqing.zhang@nxp.com>
Date: Wed, 19 Sep 2018 15:07:33 +0800
Subject: [PATCH 4810/5242] MLK-19414 can: flexcan: fix runtime PM warning

commit  f1ae369ba329293626a272e73620d35bd5a28386 from
https://source.codeaurora.org/external/imx/linux-imx.git

When do CAN wakeup test, it printed "flexcan 2094000.can: Unbalanced
pm_runtime_enable!" warning.

For wakeup system resume case, it will call pm_runtime_force_resume(),
however, pm_runtime_force_suspend() haven't been called in system suspend.
While pm_runtime_force_resume() will decrease the variable "disable_depth",
and pm_runtime_force_suspend() will increase "disable_depth". So, if we
didn't call pm_runtime_force_suspend() but called pm_runtime_force_resume(),
would produce this waring.

To fix this warning, pm_runtime_force_suspend() and pm_runtime_force_resume()
should appear in pairs.

Reviewed-by: Dong Aisheng <aisheng.dong@nxp.com>
Reviewed-by: Andy Duan <fugang.duan@nxp.com>
Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/net/can/flexcan.c |   11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
index 5910ea9..734a87c 100644
--- a/drivers/net/can/flexcan.c
+++ b/drivers/net/can/flexcan.c
@@ -1883,19 +1883,18 @@ static int __maybe_unused flexcan_resume(struct device *device)
 
 	priv->can.state = CAN_STATE_ERROR_ACTIVE;
 	if (netif_running(dev)) {
-		err = pm_runtime_force_resume(device);
-		if (err)
-			return err;
-
 		netif_device_attach(dev);
 		netif_start_queue(dev);
 
 		if (device_may_wakeup(device)) {
 			disable_irq_wake(dev->irq);
 			flexcan_exit_stop_mode(priv);
+		} else {
+			err = pm_runtime_force_resume(device);
+			if (err)
+				return err;
+			err = flexcan_chip_start(dev);
 		}
-
-		err = flexcan_chip_start(dev);
 	}
 
 	return err;
-- 
1.7.9.5

