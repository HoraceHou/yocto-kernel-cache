From 83dded1ac1657e67d6b4f7f2e3e8ddc28e03e120 Mon Sep 17 00:00:00 2001
From: Leonard Crestez <leonard.crestez@nxp.com>
Date: Fri, 23 Feb 2018 18:03:04 +0200
Subject: [PATCH 3423/5242] video: mxfsb: Fix endless -EPROBE_DEFER with empty
 disp_dev

commit  1165041e066f4f4e5b02f2aba11326f4ac369759 from
https://source.codeaurora.org/external/imx/linux-imx.git

Since f7b48681ec68 ("MLK-16137 video: fbdev: add defer probe for mxs framebuffer")
the mxsfb_dispdrv_init function will return -EPROBE_DEFER on all
mxc_dispdrv_gethandle failures. That makes sense because all
mxc_dispdrv_entry are registered in their respective probe functions and
an absent entry should result in probing mxsfb later.

However in some cases an the disp_dev is empty and those configurations
now result in enless EPROBE_DEFER loops. Fix this by accepting empty
disp_dev at the start of mxsfb_dispdrv_init.

Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
Reviewed-by: Robert Chiras <robert.chiras@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/video/fbdev/mxsfb.c |    3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/video/fbdev/mxsfb.c b/drivers/video/fbdev/mxsfb.c
index 57d4de6..4f40427 100644
--- a/drivers/video/fbdev/mxsfb.c
+++ b/drivers/video/fbdev/mxsfb.c
@@ -1473,6 +1473,9 @@ static int mxsfb_dispdrv_init(struct platform_device *pdev,
 	struct device *dev = &pdev->dev;
 	char disp_dev[32];
 
+	if (!strlen(host->disp_dev))
+		return 0;
+
 	memset(&setting, 0x0, sizeof(setting));
 	setting.fbi = fbi;
 	memcpy(disp_dev, host->disp_dev, strlen(host->disp_dev));
-- 
1.7.9.5

