From 91a6e8bf077b0c1d4e3c85733f5917334fc45e9b Mon Sep 17 00:00:00 2001
From: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@nxp.com>
Date: Fri, 21 Jul 2017 11:35:04 -0500
Subject: [PATCH 2189/5242] MLK16061 imx8qm/imx8qxp: Add support allowing
 devices to enter into low power mode during
 runtime suspend and idle.

commit  d9c877265e1526d2af0a3e6eab9951a1559ac18d from
https://source.codeaurora.org/external/imx/linux-imx.git

On imx8qm/imx8qx, when devices enter into runtime suspend/idle,
the resource associated with the device will be enter a low power
state (as defined by SCFW). None of the state or clocks will be lost
in this mode.

Signed-off-by: Ranjani Vaidyanathan <Ranjani.Vaidyanathan@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/soc/imx/pm-domain-imx8.h |    1 +
 drivers/soc/imx/pm-domains.c     |   44 ++++++++++++++++++++++++++++++++++++--
 2 files changed, 43 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/imx/pm-domain-imx8.h b/drivers/soc/imx/pm-domain-imx8.h
index 910ac21..c42cfbe 100644
--- a/drivers/soc/imx/pm-domain-imx8.h
+++ b/drivers/soc/imx/pm-domain-imx8.h
@@ -29,6 +29,7 @@ struct imx8_pm_domain {
 	int (*suspend)(void);
 	void (*resume)(void);
 	sc_rsrc_t rsrc_id;
+	bool runtime_idle_active;
 };
 
 static inline
diff --git a/drivers/soc/imx/pm-domains.c b/drivers/soc/imx/pm-domains.c
index 158ceb6..34e814f 100644
--- a/drivers/soc/imx/pm-domains.c
+++ b/drivers/soc/imx/pm-domains.c
@@ -21,6 +21,7 @@
 #include <linux/of_platform.h>
 #include <linux/platform_device.h>
 #include <linux/pm.h>
+#include <linux/pm_runtime.h>
 #include <linux/pm_clock.h>
 #include <linux/slab.h>
 
@@ -33,7 +34,7 @@
 static int imx8_pd_power(struct generic_pm_domain *domain, bool power_on)
 {
 	struct imx8_pm_domain *pd;
-	sc_err_t sci_err;
+	sc_err_t sci_err = SC_ERR_NONE;
 
 	pd = container_of(domain, struct imx8_pm_domain, pd);
 
@@ -41,7 +42,8 @@ static int imx8_pd_power(struct generic_pm_domain *domain, bool power_on)
 		return 0;
 
 	sci_err = sc_pm_set_resource_power_mode(pm_ipc_handle, pd->rsrc_id,
-		(power_on) ? SC_PM_PW_MODE_ON : SC_PM_PW_MODE_OFF);
+		(power_on) ? SC_PM_PW_MODE_ON :
+		(pd->runtime_idle_active) ? SC_PM_PW_MODE_LP : SC_PM_PW_MODE_OFF);
 
 	if (sci_err)
 		pr_err("Failed power operation on resource %d\n", pd->rsrc_id);
@@ -51,6 +53,10 @@ static int imx8_pd_power(struct generic_pm_domain *domain, bool power_on)
 
 static int imx8_pd_power_on(struct generic_pm_domain *domain)
 {
+	struct imx8_pm_domain *pd;
+
+	pd = container_of(domain, struct imx8_pm_domain, pd);
+	pd->runtime_idle_active = false;
 	return imx8_pd_power(domain, true);
 }
 
@@ -59,6 +65,36 @@ static int imx8_pd_power_off(struct generic_pm_domain *domain)
 	return imx8_pd_power(domain, false);
 }
 
+static int imx8_pd_dev_start(struct device *dev)
+{
+	struct generic_pm_domain *genpd = pd_to_genpd(dev->pm_domain);
+	struct imx8_pm_domain *pd;
+
+	pd = container_of(genpd, struct imx8_pm_domain, pd);
+	pd->runtime_idle_active = false;
+	return 0;
+}
+
+static int imx8_pd_dev_stop(struct device *dev)
+{
+	struct generic_pm_domain *genpd = pd_to_genpd(dev->pm_domain);
+	struct imx8_pm_domain *pd;
+
+	pd = container_of(genpd, struct imx8_pm_domain, pd);
+	pd->runtime_idle_active = true;
+	return 0;
+}
+
+static int imx8_pm_runtime_idle(struct device *dev)
+{
+	struct generic_pm_domain *genpd = pd_to_genpd(dev->pm_domain);
+	struct imx8_pm_domain *pd;
+
+	pd = container_of(genpd, struct imx8_pm_domain, pd);
+	pd->runtime_idle_active = true;
+	return pm_runtime_autosuspend(dev);
+}
+
 static int __init imx8_add_pm_domains(struct device_node *parent,
 					struct generic_pm_domain *genpd_parent)
 {
@@ -80,9 +116,13 @@ static int __init imx8_add_pm_domains(struct device_node *parent,
 
 		imx8_pd->pd.power_off = imx8_pd_power_off;
 		imx8_pd->pd.power_on = imx8_pd_power_on;
+		imx8_pd->pd.dev_ops.start = imx8_pd_dev_start;
+		imx8_pd->pd.dev_ops.stop = imx8_pd_dev_stop;
 
 		pm_genpd_init(&imx8_pd->pd, NULL, true);
 
+		imx8_pd->pd.domain.ops.runtime_idle = imx8_pm_runtime_idle;
+
 		if (genpd_parent)
 			pm_genpd_add_subdomain(genpd_parent, &imx8_pd->pd);
 
-- 
1.7.9.5

