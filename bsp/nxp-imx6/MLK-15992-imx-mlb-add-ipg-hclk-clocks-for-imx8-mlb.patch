From c8e7ccc1a338b3d574cf2b699ab9a67a3307dea3 Mon Sep 17 00:00:00 2001
From: Gao Pan <pandy.gao@nxp.com>
Date: Fri, 14 Jul 2017 18:10:57 +0800
Subject: [PATCH 2144/5242] MLK-15992 imx: mlb: add ipg & hclk clocks for imx8
 mlb

commit  dfd90094853373fe3d6fc2ef9ac5e27fdb29be8c from
https://source.codeaurora.org/external/imx/linux-imx.git

Add ipg & hclk clock for imx8 mlb due to IP integration difference.

Signed-off-by: Gao Pan <pandy.gao@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/mlb/mxc_mlb.c |   29 ++++++++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/drivers/mxc/mlb/mxc_mlb.c b/drivers/mxc/mlb/mxc_mlb.c
index fcb849f..cebcf5b 100755
--- a/drivers/mxc/mlb/mxc_mlb.c
+++ b/drivers/mxc/mlb/mxc_mlb.c
@@ -369,6 +369,10 @@ struct mlb_dev_info {
 struct mlb_data {
 	struct device *dev;
 	struct mlb_dev_info *devinfo;
+#ifdef CONFIG_ARCH_MXC_ARM64
+	struct clk *ipg;
+	struct clk *hclk;
+#endif
 	struct clk *mlb;
 	struct cdev cdev;
 	struct class *class;	/* device class */
@@ -1940,6 +1944,10 @@ static int mxc_mlb150_open(struct inode *inode, struct file *filp)
 		return -EBUSY;
 	}
 
+#ifdef CONFIG_ARCH_MXC_ARM64
+	clk_prepare_enable(drvdata->ipg);
+	clk_prepare_enable(drvdata->hclk);
+#endif
 	clk_prepare_enable(drvdata->mlb);
 
 	/* initial MLB module */
@@ -2031,6 +2039,10 @@ static int mxc_mlb150_release(struct inode *inode, struct file *filp)
 	atomic_set(&pdevinfo->on, 0);
 
 	clk_disable_unprepare(drvdata->mlb);
+#ifdef CONFIG_ARCH_MXC_ARM64
+	clk_disable_unprepare(drvdata->hclk);
+	clk_disable_unprepare(drvdata->ipg);
+#endif
 	/* decrease the open count */
 	atomic_set(&pdevinfo->opencnt, 0);
 
@@ -2664,7 +2676,22 @@ static int mxc_mlb150_probe(struct platform_device *pdev)
 	}
 #endif
 
-	/* enable clock */
+#ifdef CONFIG_ARCH_MXC_ARM64
+	drvdata->ipg = devm_clk_get(&pdev->dev, "ipg");
+	if (IS_ERR(drvdata->ipg)) {
+		dev_err(&pdev->dev, "unable to get mlb ipg clock\n");
+		ret = PTR_ERR(drvdata->ipg);
+		goto err_dev;
+	};
+
+	drvdata->hclk = devm_clk_get(&pdev->dev, "hclk");
+	if (IS_ERR(drvdata->hclk)) {
+		dev_err(&pdev->dev, "unable to get mlb hclk clock\n");
+		ret = PTR_ERR(drvdata->hclk);
+		goto err_dev;
+	};
+#endif
+
 	drvdata->mlb = devm_clk_get(&pdev->dev, "mlb");
 	if (IS_ERR(drvdata->mlb)) {
 		dev_err(&pdev->dev, "unable to get mlb clock\n");
-- 
1.7.9.5

