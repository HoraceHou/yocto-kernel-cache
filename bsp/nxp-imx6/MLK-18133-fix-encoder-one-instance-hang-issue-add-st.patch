From 75e5dc890e53d194c32cf88755f235bd02459003 Mon Sep 17 00:00:00 2001
From: GuoRui <rui.guo_4@nxp.com>
Date: Wed, 25 Apr 2018 19:27:36 +0800
Subject: [PATCH 3694/5242] MLK-18133 fix encoder one instance hang issue, add
 start sync with firmware, cmd buffer protection,
 mb() and firmware version initialize cmdword in
 send command add cmd buf mutex to protect command
 buf show firmware version number while starting
 encode

commit  1b1003e4463f044d4a4efee4154b6898db0c8586 from
https://source.codeaurora.org/external/imx/linux-imx.git

Signed-off-by: GuoRui <rui.guo_4@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c  |   23 ++++++++++++++++++++++-
 drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h  |    6 ++++--
 drivers/mxc/vpu-encoder-b0/vpu_encoder_rpc.c |    1 +
 3 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
index 72ac107..90e2a6a 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.c
@@ -48,7 +48,7 @@
 
 #include "vpu_encoder_b0.h"
 
-unsigned int vpu_dbg_level_encoder = 0;
+unsigned int vpu_dbg_level_encoder = 1;
 #ifdef DUMP_DATA
 #define DATA_NUM 10
 #endif
@@ -747,7 +747,10 @@ static void ctrls_delete_encoder(struct vpu_ctx *This)
 
 static void v4l2_vpu_send_cmd(struct vpu_ctx *ctx, uint32_t idx, uint32_t cmdid, uint32_t cmdnum, uint32_t *local_cmddata)
 {
+	mutex_lock(&ctx->dev->cmd_mutex);
 	rpc_send_cmd_buf_encoder(&ctx->dev->shared_mem, idx, cmdid, cmdnum, local_cmddata);
+	mutex_unlock(&ctx->dev->cmd_mutex);
+	mb();
 	MU_SendMessage(ctx->dev->mu_base_virtaddr, 0, COMMAND);
 }
 
@@ -796,6 +799,17 @@ static void v4l2_transfer_buffer_to_firmware(struct queue_data *This, struct vb2
 			vpu_dbg(LVL_INFO, " 0x%x", read_data[read_idx]);
 		vpu_dbg(LVL_INFO, "\n");
  #endif
+		vpu_dbg(LVL_INFO, "enter %s, start_flag %d, index=%d,firmware_started=%d\n",
+					__func__, ctx->start_flag, ctx->str_index,
+				ctx->dev->firmware_started);
+
+		if (!ctx->dev->firmware_started)
+			wait_for_completion(&ctx->dev->start_cmp);
+		vpu_dbg(LVL_ALL, "vpu encoder firmware version is %d.%d.%d\n",
+				(pSharedInterface->FWVersion & 0x00ff0000) >> 16,
+				(pSharedInterface->FWVersion & 0x0000ff00) >> 8,
+				pSharedInterface->FWVersion & 0x000000ff);
+
 		v4l2_vpu_send_cmd(ctx, ctx->str_index, GTB_ENC_CMD_CONFIGURE_CODEC, 0, NULL);
 		vpu_dbg(LVL_INFO, "send command GTB_ENC_CMD_CONFIGURE_CODEC\n");
 
@@ -1137,6 +1151,9 @@ static irqreturn_t fsl_vpu_mu_isr(int irq, void *This)
 		MU_sendMesgToFW(dev->mu_base_virtaddr, BOOT_ADDRESS, dev->m0_p_fw_space_phy);
 #endif
 		MU_sendMesgToFW(dev->mu_base_virtaddr, INIT_DONE, 2);
+	} else if (msg == 0x55) {
+		dev->firmware_started = true;
+		complete(&dev->start_cmp);
 	} else
 		schedule_work(&dev->msg_work);
 	return IRQ_HANDLED;
@@ -1941,6 +1958,10 @@ static int vpu_probe(struct platform_device *pdev)
 	vpu_enable_hw(dev);
 
 	mutex_init(&dev->dev_mutex);
+	mutex_init(&dev->cmd_mutex);
+	init_completion(&dev->start_cmp);
+	dev->firmware_started = false;
+
 	dev->fw_is_ready = false;
 	dev->workqueue = alloc_workqueue("vpu", WQ_UNBOUND | WQ_MEM_RECLAIM, 1);
 	if (!dev->workqueue) {
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
index 3279e44..486c468 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_b0.h
@@ -45,7 +45,7 @@
 
 #define VPU_MAX_FORMATS 4
 #define VPU_MAX_BUFFER 32
-#define M0FW_FILENAME "vpu_fw_imx8qxp_enc.bin"
+#define M0FW_FILENAME "vpu/vpu_fw_imx8qxp_enc.bin"
 #define MMAP_BUF_TYPE_SHIFT 28
 #define MMAP_BUF_TYPE_MASK 0xF0000000
 #define M0_BOOT_SIZE 0x1000000
@@ -180,8 +180,10 @@ struct vpu_dev {
 	void *m0_rpc_virt;
 	u_int32 m0_rpc_phy;
 	struct mutex dev_mutex;
+	struct mutex cmd_mutex;
 	bool fw_is_ready;
-	struct completion msg_complete;
+	bool firmware_started;
+	struct completion start_cmp;
 	struct workqueue_struct *workqueue;
 	struct work_struct msg_work;
 	unsigned long instance_mask;
diff --git a/drivers/mxc/vpu-encoder-b0/vpu_encoder_rpc.c b/drivers/mxc/vpu-encoder-b0/vpu_encoder_rpc.c
index 17e6adb..312810b 100644
--- a/drivers/mxc/vpu-encoder-b0/vpu_encoder_rpc.c
+++ b/drivers/mxc/vpu-encoder-b0/vpu_encoder_rpc.c
@@ -221,6 +221,7 @@ void rpc_send_cmd_buf_encoder(struct shared_addr *This,
 	u_int32 i;
 	u_int32 *cmdword = (u_int32 *)(This->cmd_mem_vir+pCmdDesc->wptr - pCmdDesc->start);
 
+	*cmdword = 0;
 	*cmdword |= ((idx & 0x000000ff) << 24);
 	*cmdword |= ((cmdnum & 0x000000ff) << 16);
 	*cmdword |= ((cmdid & 0x00003fff) << 0);
-- 
1.7.9.5

