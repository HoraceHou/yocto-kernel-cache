From e7b7ef51ce63edbc8d523091d8ca0c09c5b0803b Mon Sep 17 00:00:00 2001
From: Liu Ying <victor.liu@nxp.com>
Date: Mon, 26 Mar 2018 15:32:12 +0800
Subject: [PATCH 3592/5242] MLK-17931-4 drm/imx: dpu: kms: Let crtc/plane know
 if prefetch engine has fixups

commit  ad75544c4b725d18c6808dc205e64b5d262e018d from
https://source.codeaurora.org/external/imx/linux-imx.git

This patch tells crtc and plane if dpu prefetch engine has fixups
via the dpu_has_prefetch_fixup() helper.

Signed-off-by: Liu Ying <victor.liu@nxp.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/gpu/drm/imx/dpu/dpu-crtc.c  |   10 ++++++++--
 drivers/gpu/drm/imx/dpu/dpu-plane.c |    4 +++-
 drivers/gpu/drm/imx/dpu/dpu-plane.h |    4 +++-
 3 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/imx/dpu/dpu-crtc.c b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
index 5abdf60..ba2996f 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-crtc.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-crtc.c
@@ -46,6 +46,8 @@ struct dpu_crtc {
 	int			content_shdld_irq;
 	int			dec_shdld_irq;
 
+	bool			has_prefetch_fixup;
+
 	struct completion	safety_shdld_done;
 	struct completion	content_shdld_done;
 	struct completion	dec_shdld_done;
@@ -666,12 +668,14 @@ static int dpu_crtc_init(struct dpu_crtc *dpu_crtc,
 	struct drm_crtc *crtc = &dpu_crtc->base;
 	struct dpu_plane_grp *plane_grp = pdata->plane_grp;
 	unsigned int stream_id = pdata->stream_id;
+	bool has_prefetch_fixup = dpu_has_prefetch_fixup(dpu);
 	int i, ret;
 
 	init_completion(&dpu_crtc->safety_shdld_done);
 	init_completion(&dpu_crtc->content_shdld_done);
 	init_completion(&dpu_crtc->dec_shdld_done);
 
+	dpu_crtc->has_prefetch_fixup = has_prefetch_fixup;
 	dpu_crtc->stream_id = stream_id;
 	dpu_crtc->hw_plane_num = plane_grp->hw_plane_num;
 
@@ -688,7 +692,8 @@ static int dpu_crtc_init(struct dpu_crtc *dpu_crtc,
 
 	plane_grp->res.fg[stream_id] = dpu_crtc->fg;
 	dpu_crtc->plane[0] = dpu_plane_init(drm, 0, stream_id, plane_grp,
-					DRM_PLANE_TYPE_PRIMARY);
+					DRM_PLANE_TYPE_PRIMARY,
+					has_prefetch_fixup);
 	if (IS_ERR(dpu_crtc->plane[0])) {
 		ret = PTR_ERR(dpu_crtc->plane[0]);
 		dev_err(dev, "initializing plane0 failed with %d.\n", ret);
@@ -708,7 +713,8 @@ static int dpu_crtc_init(struct dpu_crtc *dpu_crtc,
 		dpu_crtc->plane[i] = dpu_plane_init(drm,
 					drm_crtc_mask(&dpu_crtc->base),
 					stream_id, plane_grp,
-					DRM_PLANE_TYPE_OVERLAY);
+					DRM_PLANE_TYPE_OVERLAY,
+					has_prefetch_fixup);
 		if (IS_ERR(dpu_crtc->plane[i])) {
 			ret = PTR_ERR(dpu_crtc->plane[i]);
 			dev_err(dev, "initializing plane%d failed with %d.\n",
diff --git a/drivers/gpu/drm/imx/dpu/dpu-plane.c b/drivers/gpu/drm/imx/dpu/dpu-plane.c
index 270b917..c92f8dc 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-plane.c
+++ b/drivers/gpu/drm/imx/dpu/dpu-plane.c
@@ -725,7 +725,8 @@ struct dpu_plane *dpu_plane_init(struct drm_device *drm,
 				 unsigned int possible_crtcs,
 				 unsigned int stream_id,
 				 struct dpu_plane_grp *grp,
-				 enum drm_plane_type type)
+				 enum drm_plane_type type,
+				 bool has_prefetch_fixup)
 {
 	struct dpu_plane *dpu_plane;
 	struct drm_plane *plane;
@@ -738,6 +739,7 @@ struct dpu_plane *dpu_plane_init(struct drm_device *drm,
 
 	dpu_plane->stream_id = stream_id;
 	dpu_plane->grp = grp;
+	dpu_plane->has_prefetch_fixup = has_prefetch_fixup;
 
 	plane = &dpu_plane->base;
 
diff --git a/drivers/gpu/drm/imx/dpu/dpu-plane.h b/drivers/gpu/drm/imx/dpu/dpu-plane.h
index fef5e6b..5dc37f9 100644
--- a/drivers/gpu/drm/imx/dpu/dpu-plane.h
+++ b/drivers/gpu/drm/imx/dpu/dpu-plane.h
@@ -31,6 +31,7 @@ struct dpu_plane {
 	struct dpu_plane_grp	*grp;
 	struct list_head	head;
 	unsigned int		stream_id;
+	bool			has_prefetch_fixup;
 };
 
 struct dpu_plane_state {
@@ -159,5 +160,6 @@ struct dpu_plane *dpu_plane_init(struct drm_device *drm,
 				 unsigned int possible_crtcs,
 				 unsigned int stream_id,
 				 struct dpu_plane_grp *grp,
-				 enum drm_plane_type type);
+				 enum drm_plane_type type,
+				 bool has_prefetch_fixup);
 #endif
-- 
1.7.9.5

