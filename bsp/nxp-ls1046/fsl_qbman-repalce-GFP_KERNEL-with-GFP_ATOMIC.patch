From fd39034c3dade2f2290ef569385639683960f615 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Wed, 13 Mar 2019 14:33:17 +0800
Subject: [PATCH] fsl_qbman: repalce GFP_KERNEL with GFP_ATOMIC

With irq and preemption disabled status, kmalloc with "GFP_ATOMIC" should be
used. Otherwise it might cause system sleeping. To avoid below call trace:

BUG: sleeping function called from invalid context at mm/slab.h:421
in_atomic(): 1, irqs_disabled(): 128, pid: 1, name: swapper/0
2 locks held by swapper/0/1:
 #0: (____ptrval____) (&dev->mutex){....}, at: __driver_attach+0x70/0x108
 #1: (____ptrval____) (fqalloc.lock){....}, at: dpa_alloc_new+0x94/0x290
irq event stamp: 449910
hardirqs last enabled at (449909): [<ffff000008c85e28>] _raw_write_unlock_irqrestore+0x70/0xa0
hardirqs last disabled at (449910): [<ffff000008c85308>] _raw_spin_lock_irq+0x28/0xb0
softirqs last enabled at (449338): [<ffff000008081e80>] __do_softirq+0x300/0x62c
softirqs last disabled at (449315): [<ffff0000080c08d4>] irq_exit+0x114/0x130
Preemption disabled at:
[<ffff000008a4e8f4>] dpa_alloc_new+0x94/0x290
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.18.20-yocto-standard #1
Hardware name: LS1046A RDB Board (DT)
Call trace:
 dump_backtrace+0x0/0x158
 show_stack+0x24/0x30
 dump_stack+0x9c/0xd4
 ___might_sleep+0x190/0x228
 __might_sleep+0x58/0x90
 kmem_cache_alloc_trace+0x2ec/0x428
 dpa_alloc_new+0x1b4/0x290
 qman_alloc_fqid_range+0x48/0x58
 qman_create_fq+0x40/0x508
 FqAlloc.constprop.3+0x8c/0x280
 fm_port_probe+0x61c/0x1048
 platform_drv_probe+0x58/0xa8
 driver_probe_device+0x20c/0x2e0
 __driver_attach+0x100/0x108
 bus_for_each_dev+0x84/0xd8
 driver_attach+0x30/0x40
 bus_add_driver+0x1e0/0x210
 driver_register+0x64/0x110
 __platform_driver_register+0x54/0x60
 fm_port_load+0x24/0x5c
 do_one_initcall+0xa8/0x458
 kernel_init_freeable+0x4d0/0x5c8
 kernel_init+0x18/0x108
 ret_from_fork+0x10/0x1c

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl_qbman/dpa_alloc.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fsl_qbman/dpa_alloc.c b/drivers/staging/fsl_qbman/dpa_alloc.c
index b62b502..5a03502 100644
--- a/drivers/staging/fsl_qbman/dpa_alloc.c
+++ b/drivers/staging/fsl_qbman/dpa_alloc.c
@@ -457,10 +457,10 @@ int dpa_alloc_new(struct dpa_alloc *alloc, u32 *result, u32 count, u32 align,
 	/* If 'align' is 0, it should behave as though it was 1 */
 	if (!align)
 		align = 1;
-	margin_left = kmalloc(sizeof(*margin_left), GFP_KERNEL);
+	margin_left = kmalloc(sizeof(*margin_left), GFP_ATOMIC);
 	if (!margin_left)
 		goto err;
-	margin_right = kmalloc(sizeof(*margin_right), GFP_KERNEL);
+	margin_right = kmalloc(sizeof(*margin_right), GFP_ATOMIC);
 	if (!margin_right) {
 		kfree(margin_left);
 		goto err;
@@ -521,7 +521,7 @@ int dpa_alloc_new(struct dpa_alloc *alloc, u32 *result, u32 count, u32 align,
 		return -ENOMEM;
 
 	/* Add the allocation to the used list with a refcount of 1 */
-	used_node = kmalloc(sizeof(*used_node), GFP_KERNEL);
+	used_node = kmalloc(sizeof(*used_node), GFP_ATOMIC);
 	if (!used_node) {
 		spin_unlock_irq(&alloc->lock);
 		return -ENOMEM;
-- 
1.7.9.5

