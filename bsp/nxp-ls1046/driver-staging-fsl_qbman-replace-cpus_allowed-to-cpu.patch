From f8290c1b60fe72a0a85669d9be7b47fef9108aec Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Thu, 28 Feb 2019 10:49:05 +0800
Subject: [PATCH 2/2] driver: staging: fsl_qbman: replace cpus_allowed to
 cpus_mask for RT

Based on the commit fdfae20a1d8d1(kernel: sched: Provide a pointer to the valid CPU mask)
need to replace cpus_allowed to cpus_mask for RT.

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/staging/fsl_qbman/fsl_usdpaa_irq.c |    9 ++++++++-
 drivers/staging/fsl_qbman/qman_driver.c    |    4 ++++
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c b/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c
index d01b958..90ae25d 100644
--- a/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c
+++ b/drivers/staging/fsl_qbman/fsl_usdpaa_irq.c
@@ -145,11 +145,18 @@ static int map_irq(struct file *fp, struct usdpaa_ioctl_irq_map *irq_map)
 		fput(ctx->usdpaa_filp);
 		return ret;
 	}
+#ifdef CONFIG_PREEMPT_RT_FULL
+	ret = irq_set_affinity(ctx->irq_num, &current->cpus_mask);
+#else
 	ret = irq_set_affinity(ctx->irq_num, &current->cpus_allowed);
+#endif
 	if (ret)
 		pr_err("USDPAA irq_set_affinity() failed, ret= %d\n", ret);
-
+#ifdef CONFIG_PREEMPT_RT_FULL
+	ret = irq_set_affinity_hint(ctx->irq_num, &current->cpus_mask);
+#else
 	ret = irq_set_affinity_hint(ctx->irq_num, &current->cpus_allowed);
+#endif
 	if (ret)
 		pr_err("USDPAA irq_set_affinity_hint() failed, ret= %d\n", ret);
 
diff --git a/drivers/staging/fsl_qbman/qman_driver.c b/drivers/staging/fsl_qbman/qman_driver.c
index c1c7959..2a08e32 100644
--- a/drivers/staging/fsl_qbman/qman_driver.c
+++ b/drivers/staging/fsl_qbman/qman_driver.c
@@ -645,7 +645,11 @@ static struct qman_portal *init_pcfg(struct qm_portal_config *pcfg)
 static void init_slave(int cpu)
 {
 	struct qman_portal *p;
+#ifdef CONFIG_PREEMPT_RT_FULL
+	struct cpumask oldmask = current->cpus_mask;
+#else
 	struct cpumask oldmask = current->cpus_allowed;
+#endif
 	set_cpus_allowed_ptr(current, get_cpu_mask(cpu));
 	p = qman_create_affine_slave(shared_portals[shared_portals_idx++], cpu);
 	if (!p)
-- 
1.7.9.5

