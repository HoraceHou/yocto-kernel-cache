From 46445a3d8a8edfff3ce7838dbefbaeb7a06f2b8e Mon Sep 17 00:00:00 2001
From: Alison Wang <alison.wang@nxp.com>
Date: Tue, 9 Oct 2018 16:13:10 +0800
Subject: [PATCH 338/706] drm: hdp: update hdp operations for LS1028A

This patch updates the corresponding hdp operations for LS1028A.

Signed-off-by: Alison Wang <alison.wang@nxp.com>
(cherry picked from commit f170dc769b53b6af30afb21e1bed9a8273fe36a7)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/imx/hdp/imx-dp.c  |  8 ++++++++
 drivers/gpu/drm/imx/hdp/imx-hdp.c | 26 ++++++++++++++++++--------
 2 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/imx/hdp/imx-dp.c b/drivers/gpu/drm/imx/hdp/imx-dp.c
index 83eab110014c..d15d341e5a8c 100644
--- a/drivers/gpu/drm/imx/hdp/imx-dp.c
+++ b/drivers/gpu/drm/imx/hdp/imx-dp.c
@@ -466,7 +466,11 @@ int dp_phy_init_t28hpc(state_struct *state,
 	}
 
 	/* PHY initialization while phy reset pin is active */
+#ifdef CONFIG_EMU_PXP
+	AFE_init(state, num_lanes, (ENUM_AFE_LINK_RATE)max_link_rate);
+#else
 	afe_init_t28hpc(state, num_lanes, (ENUM_AFE_LINK_RATE)max_link_rate);
+#endif
 	DRM_INFO("AFE_init\n");
 
 	/* In this point the phy reset should be deactivated */
@@ -474,7 +478,11 @@ int dp_phy_init_t28hpc(state_struct *state,
 	DRM_INFO("deasserted reset\n");
 
 	/* PHY power set */
+#ifdef CONFIG_EMU_PXP
+	AFE_power(state, num_lanes, (ENUM_AFE_LINK_RATE)max_link_rate);
+#else
 	afe_power_t28hpc(state, num_lanes, (ENUM_AFE_LINK_RATE)max_link_rate);
+#endif
 	DRM_INFO("AFE_power exit\n");
 
 	/* Video off */
diff --git a/drivers/gpu/drm/imx/hdp/imx-hdp.c b/drivers/gpu/drm/imx/hdp/imx-hdp.c
index ff497de11bbd..8819fb9d911f 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdp.c
+++ b/drivers/gpu/drm/imx/hdp/imx-hdp.c
@@ -537,7 +537,7 @@ void imx8qm_ipg_clock_set_rate(struct hdp_clks *clks)
 
 static u8 imx_hdp_link_rate(struct drm_display_mode *mode)
 {
-	if (mode->clock < 297000)
+	if (mode->clock < 74250)
 		return AFE_LINK_RATE_1_6;
 	else if (mode->clock > 297000)
 		return AFE_LINK_RATE_5_4;
@@ -559,7 +559,9 @@ static void imx_hdp_mode_setup(struct imx_hdp *hdp, struct drm_display_mode *mod
 	/* Config pixel link mux */
 	imx_hdp_call(hdp, pixel_link_mux, &hdp->state, mode);
 
+#ifndef CONFIG_EMU_PXP
 	hdp->link_rate = imx_hdp_link_rate(mode);
+#endif
 
 	/* mode set */
 	ret = imx_hdp_call(hdp, phy_init, &hdp->state, mode,
@@ -969,6 +971,12 @@ static struct hdp_ops ls1028a_dp_ops = {
 	.get_edid_block = dp_get_edid_block,
 	.get_hpd_state = dp_get_hpd_state,
 	.phy_reset = ls1028a_phy_reset,
+	.clock_init = imx8qm_clock_init,
+	.ipg_clock_enable = imx8qm_ipg_clock_enable,
+	.ipg_clock_disable = imx8qm_ipg_clock_disable,
+	.pixel_clock_set_rate = imx8qm_dp_pixel_clock_set_rate,
+	.pixel_clock_enable = imx8qm_pixel_clock_enable,
+	.pixel_clock_disable = imx8qm_pixel_clock_disable,
 };
 
 static struct hdp_devtype ls1028a_dp_devtype = {
@@ -1083,17 +1091,19 @@ static int imx_hdp_imx_bind(struct device *dev, struct device *master,
 		return -EINVAL;
 	}
 
-#ifndef CONFIG_ARCH_LAYERSCAPE
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 1);
-	hdp->mem.ss_base = devm_ioremap_resource(dev, res);
-	if (IS_ERR(hdp->mem.ss_base)) {
-		dev_err(dev, "Failed to get HDP CRS base register\n");
-		return -EINVAL;
+	if (!of_device_is_compatible(dev->of_node, "fsl,ls1028a-dp")) {
+		res = platform_get_resource(pdev, IORESOURCE_MEM, 1);
+		hdp->mem.ss_base = devm_ioremap_resource(dev, res);
+		if (IS_ERR(hdp->mem.ss_base)) {
+			dev_err(dev, "Failed to get HDP CRS base register\n");
+			return -EINVAL;
+		}
 	}
-#endif
 
 	hdp->is_edp = of_property_read_bool(pdev->dev.of_node, "fsl,edp");
 
+	hdp->no_edid = of_property_read_bool(pdev->dev.of_node, "fsl,no_edid");
+
 	ret = of_property_read_u32(pdev->dev.of_node,
 				       "lane_mapping",
 				       &hdp->lane_mapping);
-- 
2.17.1

