From 5c4c27e3c1c6c6e5ffb497df8c2f9b8cbee28b3e Mon Sep 17 00:00:00 2001
From: Yangbo Lu <yangbo.lu@nxp.com>
Date: Tue, 19 Mar 2019 11:41:25 +0800
Subject: [PATCH 672/706] felix: add HW timestamping support for packet
 extraction

Added HW timestamping support for packet extraction.

Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
(cherry picked from commit 578b2b3eb215d116e1d5fbd2cbc88bc5061a6faf)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c | 29 +++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index be935bfc8c46..74bdf00db168 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -203,7 +203,9 @@ FELIX_IFH_FIELD(cpuq, 20, 8)
 
 /* Felix 128bit-value frame extraction header */
 
+/* bit 85-116: rewriter val */
 /* bit 43-45: source port id */
+FELIX_EFH_FIELD(rew_val, 85, 32)
 FELIX_EFH_FIELD(srcp, 43, 4)
 
 static void felix_tx_hdr_set(struct sk_buff *skb, struct ocelot_port *port)
@@ -224,11 +226,13 @@ static rx_handler_result_t felix_frm_ext_handler(struct sk_buff **pskb)
 {
 	struct net_device *ndev = (*pskb)->dev;
 	struct sk_buff *skb = *pskb;
-	struct ocelot_port *port;
+	struct skb_shared_hwtstamps *shhwtstamps;
+	struct timespec64 ts;
+	struct ocelot_port *port = NULL;
+	struct ocelot *ocelot = NULL;
 	char *start = skb->data;
-	struct ocelot *ocelot;
-	u64 *efh;
-	u32 p;
+	u64 *efh, tstamp_in_ns;
+	u32 p, tstamp_lo, tstamp_hi;
 
 	/* extraction header offset: assume eth header was consumed */
 	efh = (u64 *)(start + FELIX_XFH_LEN - ETH_HLEN);
@@ -236,6 +240,8 @@ static rx_handler_result_t felix_frm_ext_handler(struct sk_buff **pskb)
 	/* decode src port */
 	p = felix_get_efh_srcp(efh);
 
+	tstamp_lo = felix_get_efh_rew_val(efh);
+
 	/* don't pass frames with unknown header format back to interface */
 	if (unlikely(p >= FELIX_MAX_NUM_PHY_PORTS)) {
 		kfree_skb(skb);
@@ -267,6 +273,21 @@ static rx_handler_result_t felix_frm_ext_handler(struct sk_buff **pskb)
 	if (ocelot && p == ocelot->cpu_port_id)
 		return RX_HANDLER_PASS;
 
+	if (port && port->rx_tstamp) {
+		felix_ptp_gettime(&ocelot->ptp_caps, &ts);
+		tstamp_in_ns = ktime_set(ts.tv_sec, ts.tv_nsec);
+
+		tstamp_hi = tstamp_in_ns >> 32;
+		if ((tstamp_in_ns & 0xffffffff) < tstamp_lo)
+			tstamp_hi = tstamp_hi - 1;
+
+		tstamp_in_ns = ((u64)tstamp_hi << 32) | tstamp_lo;
+
+		shhwtstamps = skb_hwtstamps(skb);
+		memset(shhwtstamps, 0, sizeof(struct skb_shared_hwtstamps));
+		shhwtstamps->hwtstamp = tstamp_in_ns;
+	}
+
 	netif_rx(skb);
 
 	return RX_HANDLER_CONSUMED;
-- 
2.17.1

