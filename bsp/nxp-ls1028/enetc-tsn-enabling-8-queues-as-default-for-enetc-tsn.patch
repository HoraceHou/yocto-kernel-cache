From 3035c9ee5b08e0866c6880d4d85f97ab7e2570e7 Mon Sep 17 00:00:00 2001
From: Po Liu <Po.Liu@nxp.com>
Date: Wed, 8 Aug 2018 01:40:24 +0800
Subject: [PATCH 184/706] enetc-tsn: enabling 8 queues as default for enetc tsn

Signed-off-by: Po Liu <Po.Liu@nxp.com>
Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 7500adcc18e3c0cfa683ffc325cbf3bf26b9ffe0)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c    | 7 ++++++-
 drivers/net/ethernet/freescale/enetc/enetc.h    | 6 ++++++
 drivers/net/ethernet/freescale/enetc/enetc_hw.h | 1 +
 3 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index efc8829ccd6d..cf5c16ccada2 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1120,6 +1120,11 @@ static void enetc_setup_txbdr(struct enetc_hw *hw, struct enetc_bdr *tx_ring)
 	if (tx_ring->ndev->features & NETIF_F_HW_VLAN_CTAG_TX)
 		tbmr |= ENETC_TBMR_VIH;
 
+	if (enetc_tsn_is_enabled()) {
+		tbmr &= ~ENETC_TBMR_PRIO_MASK;
+		tbmr |= ENETC_TBMR_PRIO_SET(idx % 8);
+	}
+
 	/* enable ring */
 	enetc_txbdr_wr(hw, idx, ENETC_TBMR, tbmr);
 
@@ -1281,7 +1286,7 @@ int enetc_open(struct net_device *ndev)
 
 	enetc_setup_bdrs(priv);
 
-	err = netif_set_real_num_tx_queues(ndev, ENETC_TXQ_PER_TC);
+	err = netif_set_real_num_tx_queues(ndev, ENETC_DEFAULT_NUM_TXQS);
 	if (err)
 		goto err_set_queues;
 
diff --git a/drivers/net/ethernet/freescale/enetc/enetc.h b/drivers/net/ethernet/freescale/enetc/enetc.h
index 5898841f4e70..743ba327ca80 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc.h
@@ -165,6 +165,12 @@ static inline bool enetc_si_is_pf(struct enetc_si *si)
 #define ENETC_TXQ_PER_TC	num_online_cpus()
 #define ENETC_MAX_NUM_TXQS	(ENETC_MAX_TCS * ENETC_TXQ_PER_TC)
 
+#ifdef CONFIG_ENETC_TSN
+#define ENETC_DEFAULT_NUM_TXQS 8
+#else
+#define ENETC_DEFAULT_NUM_TXQS ENETC_TXQ_PER_TC
+#endif
+
 struct enetc_int_vector {
 	void __iomem *rbier;
 	void __iomem *tbier_base;
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index cf59fefee6d3..3d1bed83e568 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -410,6 +410,7 @@ static inline __le16 enetc_txbd_l3_csoff(int start, int hdr_sz, u16 l3_flags)
 
 // TODO: Add support for dynamic allocation of BD rings to replace #ifdefs
 #define enetc_has_extended_rxbds() IS_ENABLED(CONFIG_FSL_ENETC_HW_TIMESTAMPING)
+#define enetc_tsn_is_enabled() IS_ENABLED(CONFIG_ENETC_TSN)
 
 union enetc_rx_bd {
 	struct {
-- 
2.17.1

