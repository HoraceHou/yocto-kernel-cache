From 5f751d5f90cf5a05628fd8563521a0486bee7754 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Fri, 25 Aug 2017 11:03:01 +0300
Subject: [PATCH 043/706] enetc: ethtool: Display registers for all available
 rings

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit c8f5308837772dd06b8fcbec5e29472cd9d3186d)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../ethernet/freescale/enetc/enetc_ethtool.c  | 49 +++++++++++--------
 1 file changed, 29 insertions(+), 20 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index d52c90b8757b..ee9374205796 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -1,15 +1,14 @@
 #include "enetc.h"
 
 #define PR_REG_FMT_STR(NAME) __stringify(NAME) "[0x%X]: %08x\n"
-#define PR_BDR_REG_FMT_STR(i, NAME) "ring " __stringify(i) ": " \
-				    PR_REG_FMT_STR(NAME)
+#define PR_BDR_REG_FMT_STR(NAME) "ring %d: " PR_REG_FMT_STR(NAME)
 
 #define PR_REG(hw, NAME)	pr_info(PR_REG_FMT_STR(NAME), ENETC_##NAME, \
 					enetc_rd(hw, ENETC_##NAME))
 #define enetc_rxbdr_off(i, off) ENETC_BDR(RX, i, (off))
 #define enetc_txbdr_off(i, off) ENETC_BDR(TX, i, (off))
 #define PR_BDR_REG(hw, t, i, NAME) \
-			pr_info(PR_BDR_REG_FMT_STR(i, NAME), \
+			pr_info(PR_BDR_REG_FMT_STR(NAME), i, \
 				enetc_##t##bdr_off(i, ENETC_##NAME), \
 				enetc_##t##bdr_rd(hw, i, ENETC_##NAME))
 
@@ -23,31 +22,41 @@ static void enetc_get_regs(struct net_device *ndev, struct ethtool_regs *regs,
 {
 	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 	struct enetc_hw *hw = &priv->si->hw;
+	int i;
 
 	/* SI regs */
 	PR_REG(hw, SIMR);
 	PR_REG(hw, SICAPR0);
 	PR_REG(hw, SICAPR1);
+
+	for (i = 0; i < priv->num_int_vectors; i++) {
+		PR_REG(hw, SIMSITRV(i));
+		PR_REG(hw, SIMSIRRV(i));
+	}
+
 	PR_REG(hw, SICCAPR);
 	/** Tx BDR dump */
-	PR_BDR_REG(hw, tx, 0, TBMR);
-	PR_BDR_REG(hw, tx, 0, TBSR);
-	PR_BDR_REG(hw, tx, 0, TBBAR0);
-	PR_BDR_REG(hw, tx, 0, TBBAR1);
-	PR_BDR_REG(hw, tx, 0, TBCIR);
-	PR_BDR_REG(hw, tx, 0, TBCISR);
-	PR_BDR_REG(hw, tx, 0, TBIER);
+	for (i = 0; i < priv->num_tx_rings; i++) {
+		PR_BDR_REG(hw, tx, i, TBMR);
+		PR_BDR_REG(hw, tx, i, TBSR);
+		PR_BDR_REG(hw, tx, i, TBBAR0);
+		PR_BDR_REG(hw, tx, i, TBBAR1);
+		PR_BDR_REG(hw, tx, i, TBCIR);
+		PR_BDR_REG(hw, tx, i, TBCISR);
+		PR_BDR_REG(hw, tx, i, TBIER);
+	}
 	/** Rx BDR dump */
-	PR_BDR_REG(hw, rx, 0, RBMR);
-	PR_BDR_REG(hw, rx, 0, RBSR);
-	PR_BDR_REG(hw, rx, 0, RBBSR);
-	PR_BDR_REG(hw, rx, 0, RBCIR);
-	PR_BDR_REG(hw, rx, 0, RBBAR0);
-	PR_BDR_REG(hw, rx, 0, RBBAR1);
-	PR_BDR_REG(hw, rx, 0, RBPIR);
-	PR_BDR_REG(hw, rx, 0, RBICIR0);
-	PR_BDR_REG(hw, rx, 0, RBIER);
-
+	for (i = 0; i < priv->num_rx_rings; i++) {
+		PR_BDR_REG(hw, rx, i, RBMR);
+		PR_BDR_REG(hw, rx, i, RBSR);
+		PR_BDR_REG(hw, rx, i, RBBSR);
+		PR_BDR_REG(hw, rx, i, RBCIR);
+		PR_BDR_REG(hw, rx, i, RBBAR0);
+		PR_BDR_REG(hw, rx, i, RBBAR1);
+		PR_BDR_REG(hw, rx, i, RBPIR);
+		PR_BDR_REG(hw, rx, i, RBICIR0);
+		PR_BDR_REG(hw, rx, i, RBIER);
+	}
 	/* Port regs */
 	PR_REG(hw, PMR);
 	PR_REG(hw, PSR);
-- 
2.17.1

