From 84ef199dc0c1a3bb54529f46338cc857c803ae26 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Wed, 29 Aug 2018 14:16:25 +0300
Subject: [PATCH 285/706] enetc: Add DT based phy connection info support

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 758a2b120515743f3c959a0b4395cb1fa885a45b)
(cherry picked from commit b6565753f44d6b94e84fa4c5d9f7c841eeee3fbf)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../arm64/boot/dts/freescale/fsl-ls1028a.dtsi | 36 ++++++++++---
 drivers/net/ethernet/freescale/enetc/enetc.h  |  4 ++
 .../net/ethernet/freescale/enetc/enetc_pf.c   | 51 +++++++++++++++++++
 3 files changed, 84 insertions(+), 7 deletions(-)

diff --git a/arch/arm64/boot/dts/freescale/fsl-ls1028a.dtsi b/arch/arm64/boot/dts/freescale/fsl-ls1028a.dtsi
index 7c68c8ed617b..49e1fe02eec1 100755
--- a/arch/arm64/boot/dts/freescale/fsl-ls1028a.dtsi
+++ b/arch/arm64/boot/dts/freescale/fsl-ls1028a.dtsi
@@ -522,13 +522,35 @@
 			dma-coherent;
 			msi-map = <0 &its 0 0xe>;
 			iommu-map = <0 &smmu 0x4000 0xe>;
-			ranges = <0x82000000 0x0 0x00000000  0x1 0xf8000000  0x0 0x160000     /* PF0-6 BAR0 - non-prefetchable memory */
-				  0xc2000000 0x0 0x00000000  0x1 0xf8160000  0x0 0x070000     /* PF0-6, BAR2 - prefetchable memory */
-				  0x82000000 0x0 0x00000000  0x1 0xf81d0000  0x0 0x020000     /* PF0, VF-BAR0 - non-prefetchable memory */
-				  0xc2000000 0x0 0x00000000  0x1 0xf81f0000  0x0 0x020000     /* PF0, VF-BAR2 - prefetchable memory */
-				  0x82000000 0x0 0x00000000  0x1 0xf8210000  0x0 0x020000     /* PF1, VF-BAR0 - non-prefetchable memory */
-				  0xc2000000 0x0 0x00000000  0x1 0xf8230000  0x0 0x020000     /* PF1, VF-BAR1 - prefetchable memory */
-				  0x82000000 0x0 0x00000000  0x1 0xfc000000  0x0 0x400000>;   /* PF2/PF5, BAR4 - non-prefetchable memory */
+			ranges = <0x82000000 0x0 0x00000000  0x1 0xf8000000  0x0 0x160000   /* PF0-6 BAR0 - non-prefetchable memory */
+				  0xc2000000 0x0 0x00000000  0x1 0xf8160000  0x0 0x070000   /* PF0-6, BAR2 - prefetchable memory */
+				  0x82000000 0x0 0x00000000  0x1 0xf81d0000  0x0 0x020000   /* PF0, VF-BAR0 - non-prefetchable memory */
+				  0xc2000000 0x0 0x00000000  0x1 0xf81f0000  0x0 0x020000   /* PF0, VF-BAR2 - prefetchable memory */
+				  0x82000000 0x0 0x00000000  0x1 0xf8210000  0x0 0x020000   /* PF1, VF-BAR0 - non-prefetchable memory */
+				  0xc2000000 0x0 0x00000000  0x1 0xf8230000  0x0 0x020000   /* PF1, VF-BAR1 - prefetchable memory */
+				  0x82000000 0x0 0x00000000  0x1 0xfc000000  0x0 0x400000>; /* PF2/PF5, BAR4 - non-prefetchable memory */
+
+			enetc_port0: pci@0,0 {
+				reg = <0x000000 0 0 0 0>;
+			};
+			enetc_port1: pci@0,1 {
+				reg = <0x000100 0 0 0 0>;
+			};
+			enetc_port2: pci@0,2 {
+				reg = <0x000200 0 0 0 0>;
+			};
+			pci@0,3 {
+				reg = <0x000300 0 0 0 0>;
+			};
+			pci@0,4 {
+				reg = <0x000400 0 0 0 0>;
+			};
+			pci@0,5 {
+				reg = <0x000500 0 0 0 0>;
+			};
+			enetc_port3: pci@0,6 {
+				reg = <0x000600 0 0 0 0>;
+			};
 		};
 
 		mdio0: mdio@1f8101c00 {
diff --git a/drivers/net/ethernet/freescale/enetc/enetc.h b/drivers/net/ethernet/freescale/enetc/enetc.h
index 3bf94bb339a8..4ffbf7da241c 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc.h
@@ -40,6 +40,7 @@
 #include <linux/skbuff.h>
 #include <linux/ethtool.h>
 #include <linux/if_vlan.h>
+#include <linux/phy.h>
 #include <net/tsn.h>
 
 #include "enetc_hw.h"
@@ -236,6 +237,9 @@ struct enetc_ndev_priv {
 	struct enetc_bdr *rx_ring[16];
 
 	struct enetc_cls_rule *cls_rules;
+
+	struct device_node *phy_node;
+	phy_interface_t if_mode;
 };
 
 /* Messaging */
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index c94d2f33a9f0..c2079d64046d 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -33,6 +33,8 @@
  */
 
 #include <linux/module.h>
+#include <linux/of_mdio.h>
+#include <linux/of_net.h>
 #include "enetc_pf.h"
 
 #define ENETC_DRV_VER_MAJ 0
@@ -692,6 +694,45 @@ static void enetc_pf_netdev_setup(struct enetc_si *si, struct net_device *ndev,
 	enetc_get_primary_mac_addr(&si->hw, ndev->dev_addr);
 }
 
+static int enetc_of_get_phy(struct enetc_ndev_priv *priv)
+{
+	struct device_node *np = priv->dev->of_node;
+	int err;
+
+	if (!np) {
+		dev_err(priv->dev, "missing ENETC port node\n");
+		return -ENODEV;
+	}
+
+	priv->phy_node = of_parse_phandle(np, "phy-handle", 0);
+	if (!priv->phy_node) {
+		if (!of_phy_is_fixed_link(np)) {
+			dev_err(priv->dev, "PHY not specified\n");
+			return -ENODEV;
+		}
+
+		err = of_phy_register_fixed_link(np);
+		if (err < 0) {
+			dev_err(priv->dev, "fixed link registration failed\n");
+			return err;
+		}
+
+		priv->phy_node = of_node_get(np);
+	}
+
+	priv->if_mode = of_get_phy_mode(np);
+	if (priv->if_mode < 0) {
+		dev_err(priv->dev, "missing phy type\n");
+		of_node_put(priv->phy_node);
+		if (of_phy_is_fixed_link(np))
+			of_phy_deregister_fixed_link(np);
+
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
 static int enetc_pf_probe(struct pci_dev *pdev,
 			  const struct pci_device_id *ent)
 {
@@ -757,6 +798,10 @@ static int enetc_pf_probe(struct pci_dev *pdev,
 	if (err)
 		goto err_setup_irq;
 
+	err = enetc_of_get_phy(priv);
+	if (err)
+		goto err_of_get_phy;
+
 	netif_carrier_off(ndev);
 
 	netif_info(priv, probe, ndev, "%s v%s\n",
@@ -764,6 +809,8 @@ static int enetc_pf_probe(struct pci_dev *pdev,
 
 	return 0;
 
+err_of_get_phy:
+	enetc_free_irqs(priv);
 err_setup_irq:
 	unregister_netdev(ndev);
 err_reg_netdev:
@@ -794,6 +841,10 @@ static void enetc_pf_remove(struct pci_dev *pdev)
 		   enetc_drv_name, enetc_drv_ver);
 	unregister_netdev(si->ndev);
 
+	if (of_phy_is_fixed_link(priv->dev->of_node))
+		of_phy_deregister_fixed_link(priv->dev->of_node);
+	of_node_put(priv->phy_node);
+
 	enetc_free_irqs(priv);
 	enetc_free_msix(priv);
 
-- 
2.17.1

