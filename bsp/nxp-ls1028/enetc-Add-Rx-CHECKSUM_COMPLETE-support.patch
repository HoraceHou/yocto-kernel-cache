From da378b00d496a7ed62044bd04162e257a2f3706e Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Wed, 1 Nov 2017 13:58:49 +0200
Subject: [PATCH 073/706] enetc: Add Rx CHECKSUM_COMPLETE support

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 2994259b432b11eb0fb24bf6cd9c52b6209bf8a6)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index c81cbd12b361..85436c101b4e 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -319,6 +319,18 @@ static int enetc_refill_rx_ring(struct enetc_bdr *rx_ring, const int buff_cnt)
 	return j;
 }
 
+static void enetc_get_offloads(struct enetc_bdr *rx_ring,
+			       union enetc_rx_bd *rxbd, struct sk_buff *skb)
+{
+	// TODO: checksum, tstamp, VLAN, hash
+	if (rx_ring->ndev->features & NETIF_F_RXCSUM) {
+		u16 inet_csum = le16_to_cpu(rxbd->r.inet_csum);
+
+		skb->csum = csum_unfold((__force __sum16)~htons(inet_csum));
+		skb->ip_summed = CHECKSUM_COMPLETE;
+	}
+}
+
 #define ENETC_RXBD_BUNDLE 16 /* recommended # of BDs to update at once */
 
 static int enetc_clean_rx_ring(struct enetc_bdr *rx_ring,
@@ -356,6 +368,8 @@ static int enetc_clean_rx_ring(struct enetc_bdr *rx_ring,
 			break;
 		}
 
+		enetc_get_offloads(rx_ring, rxbd, skb);
+
 		cleaned_cnt++;
 		rxbd++;
 		i++;
@@ -497,8 +511,6 @@ static void enetc_add_rx_buff_to_skb(struct enetc_bdr *rx_ring, int i,
 static void enetc_process_skb(struct enetc_bdr *rx_ring,
 			      struct sk_buff *skb)
 {
-	// TODO: checksum, tstamp, VLAN, hash
-
 	skb_record_rx_queue(skb, 0); // TODO: use queue_idx for multi-queue
 	skb->protocol = eth_type_trans(skb, rx_ring->ndev);
 }
@@ -1250,7 +1262,8 @@ static void enetc_netdev_setup(struct enetc_si *si, struct net_device *ndev,
 	ndev->min_mtu = ETH_MIN_MTU;
 	ndev->max_mtu = ENETC_MAX_MTU;
 
-	ndev->features = NETIF_F_HIGHDMA | NETIF_F_SG;
+	ndev->hw_features = NETIF_F_RXCSUM;
+	ndev->features = NETIF_F_RXCSUM | NETIF_F_HIGHDMA | NETIF_F_SG;
 	ndev->priv_flags |= IFF_UNICAST_FLT;
 }
 
-- 
2.17.1

