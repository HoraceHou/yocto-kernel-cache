From 05d4f4fe5635affedeef3b8cfbfb7d458e6d97a4 Mon Sep 17 00:00:00 2001
From: Catalin Horghidan <catalin.horghidan@nxp.com>
Date: Mon, 21 May 2018 12:56:08 +0300
Subject: [PATCH 152/706] enetc: Switch to big-endian MAC addreses (BG v153)

Since ENETC BG v153 (BOM 79.40) endianess od ENETC
MAC addresses changed to big endia format:

"For example if MAC address equals 11:12:13:14:15:16
(11 being the most significant byte), then
PSIaPMAR0 equals 14131211h.
PSIaPMAR1 equals xxxx1615h (where x should be set to 0)"

Signed-off-by: Catalin Horghidan <catalin.horghidan@nxp.com>
Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit f56e441331a01bb02ce2adcd5ce196571118d8ac)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../net/ethernet/freescale/enetc/enetc_cbdr.c    | 12 ++++++------
 drivers/net/ethernet/freescale/enetc/enetc_hw.h  |  4 ++--
 drivers/net/ethernet/freescale/enetc/enetc_pf.c  | 16 ++++++++--------
 3 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
index 4a5b98c73fe0..1d932bd2f6f5 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
@@ -131,8 +131,8 @@ void enetc_set_mac_flt_entry(struct enetc_si *si, int index,
 {
 	struct enetc_cbd cbd;
 	bool async = false;
-	u16 upper;
-	u32 lower;
+	u32 upper;
+	u16 lower;
 	int ret;
 
 	memset(&cbd, 0, sizeof(cbd));
@@ -148,10 +148,10 @@ void enetc_set_mac_flt_entry(struct enetc_si *si, int index,
 	/* enable entry */
 	cbd.opt[0] = cpu_to_le32(BIT(31));
 
-	upper = ntohs(*(const u16 *)mac_addr);
-	lower = ntohl(*(const u32 *)(mac_addr + 2));
-	cbd.addr[0] = cpu_to_le32(lower);
-	cbd.addr[1] = cpu_to_le16(upper);
+	upper = *(const u32 *)mac_addr;
+	lower = *(const u16 *)(mac_addr + 4);
+	cbd.addr[0] = upper;
+	cbd.addr[1] = lower;
 
 	ret = enetc_send_cmd(si, &cbd, async);
 	if (ret) {
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 6ac269007c06..f4de8ad84240 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -470,8 +470,8 @@ struct enetc_cmd_rfse {
 
 static inline void enetc_get_primary_mac_addr(struct enetc_hw *hw, u8 *addr)
 {
-	*(u32 *)(addr + 2) = htonl((u32)enetc_rd(hw, ENETC_SIPMAR0));
-	*(u16 *)addr = htons(enetc_rd(hw, ENETC_SIPMAR1) >> 16);
+	*(u32 *)addr = enetc_rd(hw, ENETC_SIPMAR0);
+	*(u16 *)(addr + 4) = enetc_rd(hw, ENETC_SIPMAR1);
 }
 
 #define ENETC_SI_INT_IDX	0
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index 994326ad1b8e..b4766c2dc823 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -51,21 +51,21 @@ module_param(prune, uint, 0);
 
 static void enetc_pf_get_primary_mac_addr(struct enetc_hw *hw, int si, u8 *addr)
 {
-	u16 upper = enetc_port_rd(hw, ENETC_PSIPMAR1(si)) >> 16;
-	u32 lower = enetc_port_rd(hw, ENETC_PSIPMAR0(si));
+	u32 upper = enetc_port_rd(hw, ENETC_PSIPMAR0(si));
+	u16 lower = enetc_port_rd(hw, ENETC_PSIPMAR1(si));
 
-	*(u16 *)addr = htons(upper);
-	*(u32 *)(addr + 2) = htonl(lower);
+	*(u32 *)addr = upper;
+	*(u16 *)(addr + 4) = lower;
 }
 
 static void enetc_pf_set_primary_mac_addr(struct enetc_hw *hw, int si,
 				       const u8 *addr)
 {
-	u16 upper = ntohs(*(const u16 *)addr);
-	u32 lower = ntohl(*(const u32 *)(addr + 2));
+	u32 upper = *(const u32 *)addr;
+	u16 lower = *(const u16 *)(addr + 4);
 
-	enetc_port_wr(hw, ENETC_PSIPMAR0(si), lower);
-	enetc_port_wr(hw, ENETC_PSIPMAR1(si), upper << 16);
+	enetc_port_wr(hw, ENETC_PSIPMAR0(si), upper);
+	enetc_port_wr(hw, ENETC_PSIPMAR1(si), lower);
 }
 
 static int enetc_pf_set_mac_addr(struct net_device *ndev, void *addr)
-- 
2.17.1

