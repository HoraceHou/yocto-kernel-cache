From 88bbac10a6750fac918ddead9228e66b2e53c78e Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@nxp.com>
Date: Mon, 10 Sep 2018 17:03:01 +0300
Subject: [PATCH 294/706] enetc: use endianness agnostic accessors for MAC
 addresses

MAC address registers are always BE and addresses exchanged with the network
stack are also BE.

Signed-off-by: Alex Marginean <alexandru.marginean@nxp.com>
(cherry picked from commit 33fca155b2bf9413c5e56b9ad6351f2777290b5e)
(cherry picked from commit 846983f34b1e661913f00e25b01ebba01fa8df9a)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_hw.h | 4 ++--
 drivers/net/ethernet/freescale/enetc/enetc_pf.c | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index a1e116e523ea..cf0486ea0230 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -506,8 +506,8 @@ struct enetc_cmd_rfse {
 
 static inline void enetc_get_primary_mac_addr(struct enetc_hw *hw, u8 *addr)
 {
-	*(u32 *)addr = enetc_rd(hw, ENETC_SIPMAR0);
-	*(u16 *)(addr + 4) = enetc_rd(hw, ENETC_SIPMAR1);
+	*(u32 *)addr = __raw_readl(hw->reg + ENETC_SIPMAR0);
+	*(u16 *)(addr + 4) = __raw_readw(hw->reg + ENETC_SIPMAR1);
 }
 
 #define ENETC_SI_INT_IDX	0
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index 0fae152e9cfd..1d5c2d8620d0 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -53,8 +53,8 @@ module_param(prune, uint, 0);
 
 static void enetc_pf_get_primary_mac_addr(struct enetc_hw *hw, int si, u8 *addr)
 {
-	u32 upper = enetc_port_rd(hw, ENETC_PSIPMAR0(si));
-	u16 lower = enetc_port_rd(hw, ENETC_PSIPMAR1(si));
+	u32 upper = __raw_readl(hw->port + ENETC_PSIPMAR0(si));
+	u16 lower = __raw_readw(hw->port + ENETC_PSIPMAR1(si));
 
 	*(u32 *)addr = upper;
 	*(u16 *)(addr + 4) = lower;
@@ -66,8 +66,8 @@ static void enetc_pf_set_primary_mac_addr(struct enetc_hw *hw, int si,
 	u32 upper = *(const u32 *)addr;
 	u16 lower = *(const u16 *)(addr + 4);
 
-	enetc_port_wr(hw, ENETC_PSIPMAR0(si), upper);
-	enetc_port_wr(hw, ENETC_PSIPMAR1(si), lower);
+	__raw_writel(upper, hw->port + ENETC_PSIPMAR0(si));
+	__raw_writew(lower, hw->port + ENETC_PSIPMAR1(si));
 }
 
 static int enetc_pf_set_mac_addr(struct net_device *ndev, void *addr)
-- 
2.17.1

