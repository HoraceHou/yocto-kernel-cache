From 505bcd36b3199acfe127ac731f1a5ae918d7cf2a Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@freescale.com>
Date: Fri, 8 Sep 2017 19:09:48 +0300
Subject: [PATCH 055/706] enetc: added VFs to register macros and a define for
 register BAR

Signed-off-by: Alex Marginean <alexandru.marginean@freescale.com>
(cherry picked from commit b3bcf14a8023007a7e3c7eae063038bec48679d3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c         | 6 +++---
 drivers/net/ethernet/freescale/enetc/enetc_ethtool.c | 2 +-
 drivers/net/ethernet/freescale/enetc/enetc_hw.h      | 7 +++++--
 3 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 93228bfe9c71..df2aa2d16cc3 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1059,7 +1059,7 @@ static void enetc_configure_port(struct enetc_ndev_priv *priv)
 
 	val = ENETC_PVCFGR_SET_TXBDR(priv->num_tx_rings);
 	val |= ENETC_PVCFGR_SET_RXBDR(priv->num_rx_rings);
-	enetc_port_wr(hw, ENETC_PV0CFGR, val);
+	enetc_port_wr(hw, ENETC_PV0CFGR(0), val);
 
 	enetc_configure_port_mac(priv->si);
 	/* enable port */
@@ -1184,8 +1184,8 @@ static int enetc_pci_probe(struct pci_dev *pdev,
 	si->pdev = pdev;
 	hw = &si->hw;
 
-	len = pci_resource_len(pdev, 0);
-	hw->reg = ioremap(pci_resource_start(pdev, 0), len);
+	len = pci_resource_len(pdev, ENETC_BAR_REGS);
+	hw->reg = ioremap(pci_resource_start(pdev, ENETC_BAR_REGS), len);
 	if (!hw->reg) {
 		err = -ENXIO;
 		dev_err(&pdev->dev, "ioremap() failed\n");
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 683722e02ada..d24991a169c9 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -75,7 +75,7 @@ static void enetc_get_regs(struct net_device *ndev, struct ethtool_regs *regs,
 		PR_PREG(hw, PSIPMAR1(0));
 		PR_PREG(hw, PCAPR0);
 		PR_PREG(hw, PCAPR1);
-		PR_PREG(hw, PV0CFGR);
+		PR_PREG(hw, PV0CFGR(0));
 		PR_PREG(hw, PM0_CMD_CFG);
 		PR_PREG(hw, PM0_MAXFRM);
 	}
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 3b0619b32229..a964ab1f2a1d 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -1,5 +1,8 @@
 #include <linux/bitops.h>
 
+/* ENETC register block BAR */
+#define ENETC_BAR_REGS	0
+
 /* SI regs, offset: 0h */
 #define ENETC_SIMR	0
 #define ENETC_SIMR_EN	BIT(31)
@@ -55,7 +58,7 @@ enum enetc_bdr_type {TX, RX};
 /* Port regs, offset: 1_0000h */
 #define ENETC_PORT_BASE	0x10000
 #define ENETC_PMR	0x00000
-#define ENETC_PMR_EN	GENMASK(17, 16)
+#define ENETC_PMR_EN	GENMASK(18, 16)
 #define ENETC_PSR	0x00004 /* RO */
 #define ENETC_PSIPMR	0x00018
 #define ENETC_PSIPMR_SET_UP(n)	(0x1 << (n)) /* n = SI index */
@@ -65,7 +68,7 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_PCAPR0	0x00900
 #define ENETC_PCAPR1	0x00904
 
-#define ENETC_PV0CFGR	0x00920
+#define ENETC_PV0CFGR(n)	(0x00920 + (n) * 0x10)  /* n = SI index */
 #define ENETC_PVCFGR_SET_TXBDR(val)	((val) & 0xff)
 #define ENETC_PVCFGR_SET_RXBDR(val)	(((val) & 0xff) << 16)
 
-- 
2.17.1

