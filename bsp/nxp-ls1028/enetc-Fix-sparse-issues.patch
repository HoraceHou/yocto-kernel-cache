From 4977279119458b7d6f9d17cee611e2721528cc9e Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Thu, 15 Nov 2018 13:25:12 +0200
Subject: [PATCH 483/706] enetc: Fix sparse issues

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 10c6d62b4e3d7d5cebe97b85ab7f1674a2a0830c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c         | 10 +++++-----
 drivers/net/ethernet/freescale/enetc/enetc_cbdr.c    |  4 ++--
 drivers/net/ethernet/freescale/enetc/enetc_ethtool.c |  4 ++--
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 1c7bd1c05bc8..e1025aeae508 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -491,9 +491,9 @@ static void enetc_get_offloads(struct enetc_bdr *rx_ring,
 	/* copy VLAN to skb, if one is extracted, for now we assume it's a
 	 * standard TPID, but HW also supports custom values
 	 */
-	if (rxbd->r.flags & ENETC_RXBD_FLAG_VLAN)
+	if (le16_to_cpu(rxbd->r.flags) & ENETC_RXBD_FLAG_VLAN)
 		__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q),
-				       rxbd->r.vlan_opt);
+				       le16_to_cpu(rxbd->r.vlan_opt));
 #ifdef CONFIG_FSL_ENETC_HW_TIMESTAMPING
 	enetc_get_rx_tstamp(rx_ring->ndev, rxbd, skb);
 #endif
@@ -622,8 +622,8 @@ static void enetc_reuse_page(struct enetc_bdr *rx_ring,
 	*new = *old;
 }
 
-struct enetc_rx_swbd *enetc_get_rx_buff(struct enetc_bdr *rx_ring, int i,
-					u16 size)
+static struct enetc_rx_swbd *enetc_get_rx_buff(struct enetc_bdr *rx_ring,
+					       int i, u16 size)
 {
 	struct enetc_rx_swbd *rx_swbd = &rx_ring->rx_swbd[i];
 
@@ -769,7 +769,7 @@ static void enetc_free_txbdr(struct enetc_bdr *txr)
 	txr->bd_base = NULL;
 
 	vfree(txr->tx_swbd);
-	txr->tx_swbd = 0;
+	txr->tx_swbd = NULL;
 }
 
 static int enetc_alloc_tx_resources(struct enetc_ndev_priv *priv)
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
index fdd64d84c51d..5acf96f7d3df 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
@@ -103,8 +103,8 @@ int enetc_set_mac_flt_entry(struct enetc_si *si, int index,
 
 	upper = *(const u32 *)mac_addr;
 	lower = *(const u16 *)(mac_addr + 4);
-	cbd.addr[0] = upper;
-	cbd.addr[1] = lower;
+	cbd.addr[0] = cpu_to_le32(upper);
+	cbd.addr[1] = cpu_to_le32(lower);
 
 	return enetc_send_cmd(si, &cbd);
 }
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 3052cdacdbec..7138bbf886df 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -582,7 +582,7 @@ static int enetc_get_ts_info(struct net_device *ndev,
 	return 0;
 }
 
-const struct ethtool_ops enetc_pf_ethtool_ops = {
+static const struct ethtool_ops enetc_pf_ethtool_ops = {
 	.get_regs_len = enetc_get_reglen,
 	.get_regs = enetc_get_regs,
 	.get_sset_count = enetc_get_sset_count,
@@ -600,7 +600,7 @@ const struct ethtool_ops enetc_pf_ethtool_ops = {
 	.set_link_ksettings = phy_ethtool_set_link_ksettings,
 };
 
-const struct ethtool_ops enetc_vf_ethtool_ops = {
+static const struct ethtool_ops enetc_vf_ethtool_ops = {
 	.get_regs_len = enetc_get_reglen,
 	.get_regs = enetc_get_regs,
 	.get_sset_count = enetc_get_sset_count,
-- 
2.17.1

