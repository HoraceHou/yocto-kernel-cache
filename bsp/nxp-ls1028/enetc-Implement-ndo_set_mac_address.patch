From 3014edbb31f31c1b6da23c93b6b3ad3fb2b33d8c Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Thu, 7 Sep 2017 15:15:46 +0300
Subject: [PATCH 050/706] enetc: Implement ndo_set_mac_address

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit cc7a9bc7fd9b249a33fea01f0499f36e9d76d0d2)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c  | 20 ++++++++++++++++---
 .../ethernet/freescale/enetc/enetc_ethtool.c  |  4 ++++
 .../net/ethernet/freescale/enetc/enetc_hw.h   |  5 +++++
 3 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 0ee968e93f2d..d3cf5aa9524f 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -782,9 +782,6 @@ static void enetc_configure_port_mac(struct enetc_si *si)
 
 	enetc_wr(&si->hw, ENETC_PM0_CMD_CFG,
 		 ENETC_PM0_TX_EN | ENETC_PM0_RX_EN);
-
-	/* enable promisc for now (FIXME) */
-	enetc_wr(&si->hw, ENETC_PSIPMR, 0x1);
 }
 
 static void enetc_configure_hw_vector(struct enetc_hw *hw, int idx, u16 entry)
@@ -944,14 +941,31 @@ static int enetc_close(struct net_device *ndev)
 	return 0;
 }
 
+static void enetc_set_primary_mac_addr(struct enetc_hw *hw, const u8 *addr)
+{
+	u16 upper = ntohs(*(const u16 *)addr);
+	u32 lower = ntohl(*(const u32 *)(addr + 2));
+
+	enetc_wr(hw, ENETC_PSIPMAR0(0), lower);
+	enetc_wr(hw, ENETC_PSIPMAR1(0), upper << 16);
+}
+
 static int enetc_set_mac_addr(struct net_device *ndev, void *addr)
 {
+	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 	struct sockaddr *saddr = addr;
 
 	if (!is_valid_ether_addr(saddr->sa_data))
 		return -EADDRNOTAVAIL;
 
+	// FIXME: VF must not have access to this, see also ndo_set_vf_mac()
+	if (priv->si->is_vf) {
+		WARN_ON(1);
+		return -EOPNOTSUPP;
+	}
+
 	memcpy(ndev->dev_addr, saddr->sa_data, ndev->addr_len);
+	enetc_set_primary_mac_addr(&priv->si->hw, saddr->sa_data);
 
 	return 0;
 }
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 66ca6f0c02fd..7cd6e93dc870 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -26,6 +26,8 @@ static void enetc_get_regs(struct net_device *ndev, struct ethtool_regs *regs,
 
 	/* SI regs */
 	PR_REG(hw, SIMR);
+	PR_REG(hw, SIPMAR0);
+	PR_REG(hw, SIPMAR1);
 	PR_REG(hw, SICAPR0);
 	PR_REG(hw, SICAPR1);
 
@@ -63,6 +65,8 @@ static void enetc_get_regs(struct net_device *ndev, struct ethtool_regs *regs,
 	PR_REG(hw, PMR);
 	PR_REG(hw, PSR);
 	PR_REG(hw, PSIPMR);
+	PR_REG(hw, PSIPMAR0(0));
+	PR_REG(hw, PSIPMAR1(0));
 	PR_REG(hw, PCAPR0);
 	PR_REG(hw, PCAPR1);
 	PR_REG(hw, PV0CFGR);
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index b4619eb9f8ca..589ca580aca8 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -4,6 +4,9 @@
 #define ENETC_SIMR	0
 #define ENETC_SIMR_EN	BIT(31)
 
+#define ENETC_SIPMAR0	0x80
+#define ENETC_SIPMAR1	0x84
+
 #define ENETC_SICAPR0	0x900
 #define ENETC_SICAPR1	0x904
 
@@ -54,6 +57,8 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_PMR_EN	GENMASK(17, 16)
 #define ENETC_PSR	0x10004 /* RO */
 #define ENETC_PSIPMR	0x10018
+#define ENETC_PSIPMAR0(n)	(0x10100 + (n) * 0x20) /* n = SI index */
+#define ENETC_PSIPMAR1(n)	(0x10104 + (n) * 0x20)
 #define ENETC_PCAPR0	0x10900
 #define ENETC_PCAPR1	0x10904
 
-- 
2.17.1

