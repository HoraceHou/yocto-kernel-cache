From 8ffd82a09cd9d611865afaff8e4ad36a1b3d2f91 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Thu, 13 Dec 2018 16:52:31 +0200
Subject: [PATCH 404/706] enetc: Fix allocation flags for RFS/RSS entries from
 dma_alloc_coherent() calls

dma_alloc_coherent() requires gfp flags and not dma direction flags.
Before this fix, the wrong flags didn't seem to visibly affect the
functionality of RFS or RSS, the dma flags coinciding with GFP_DMA (1)
and GFP_HIGHMEM (2).

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit ef5b86adf5572db955850c7f4ff9c290035137f4)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_cbdr.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
index df9ea297fa4a..34b57781e9cb 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
@@ -127,7 +127,7 @@ int enetc_set_fs_entry(struct enetc_si *si, struct enetc_cmd_rfse *rfse,
 	cbd.opt[3] = cpu_to_le32(0); /* SI */
 
 	tmp = dma_alloc_coherent(&si->pdev->dev, sizeof(*rfse) + RFSE_ALIGN,
-				 &dma, DMA_TO_DEVICE);
+				 &dma, GFP_KERNEL);
 	if (!tmp) {
 		dev_err(&si->pdev->dev, "DMA mapping of RFS entry failed!\n");
 		return -ENOMEM;
@@ -164,7 +164,7 @@ static int enetc_cmd_rss_table(struct enetc_si *si, u32 *table, int count,
 		return -EINVAL;
 
 	tmp = dma_alloc_coherent(&si->pdev->dev, count + RSSE_ALIGN,
-				 &dma, read ? DMA_FROM_DEVICE : DMA_TO_DEVICE);
+				 &dma, GFP_KERNEL);
 	if (!tmp) {
 		dev_err(&si->pdev->dev, "DMA mapping of RSS table failed!\n");
 		return -ENOMEM;
-- 
2.17.1

