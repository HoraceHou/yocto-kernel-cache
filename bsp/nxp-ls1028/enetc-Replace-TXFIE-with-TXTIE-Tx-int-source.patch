From 17146e56139904f4f9a39b83cbca9de6ae81d6a2 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Tue, 16 Jan 2018 11:41:13 +0200
Subject: [PATCH 098/706] enetc: Replace TXFIE with TXTIE Tx int source

Same as for Rx path, use the interrupt coalescing mechanism
for Tx confirmation. The Tx BD IE flag is targeting exceptional
cases, when interrupt coalescing should be preempted by IE
interrupts. Such cases are not part of the linux driver design,
so IE usage is dropped altogether.

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 72da628f00b8bf1f3257b31cb7df4e5ff2837a62)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c    | 10 ++++++----
 drivers/net/ethernet/freescale/enetc/enetc_hw.h |  5 +++--
 2 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index dee7192876e5..59c6719a758b 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -201,7 +201,7 @@ static void enetc_update_txbdr(struct enetc_bdr *tx_ring, struct sk_buff *skb,
 	struct enetc_tx_swbd *tx_swbd;
 	struct enetc_tx_bd *txbd;
 	bool do_csum;
-	u8 flags;
+	u8 flags = 0;
 	int i;
 
 	i = tx_ring->next_to_use;
@@ -210,7 +210,6 @@ static void enetc_update_txbdr(struct enetc_bdr *tx_ring, struct sk_buff *skb,
 
 	do_csum = enetc_tx_csum(skb, txbd);
 
-	flags = ENETC_TXBD_FLAGS_IE;
 	if (do_csum)
 		flags |= ENETC_TXBD_FLAGS_CSUM | ENETC_TXBD_FLAGS_L4CS;
 
@@ -259,7 +258,7 @@ static int enetc_poll(struct napi_struct *napi, int budget)
 	napi_complete_done(napi, work_done);
 
 	/* enable interrupts */
-	enetc_wr_reg(v->tbier, ENETC_TBIER_TXFIE);
+	enetc_wr_reg(v->tbier, ENETC_TBIER_TXTIE);
 	enetc_wr_reg(v->rbier, ENETC_RBIER_RXTIE);
 
 	return work_done;
@@ -932,6 +931,9 @@ static void enetc_setup_txbdr(struct enetc_hw *hw, struct enetc_bdr *tx_ring)
 	enetc_txbdr_wr(hw, idx, ENETC_TBLENR,
 		       ENETC_RTBLENR_LEN(tx_ring->bd_count));
 
+	/* enable Tx ints by setting pkt thr to 1 */
+	enetc_txbdr_wr(hw, idx, ENETC_TBICIR0, ENETC_TBICIR0_ICEN | 0x1);
+
 	tbmr = ENETC_TBMR_EN;
 	/* enable ring */
 	enetc_txbdr_wr(hw, idx, ENETC_TBMR, tbmr);
@@ -1038,7 +1040,7 @@ static void enetc_enable_interrupts(struct enetc_ndev_priv *priv)
 	/* enable Tx & Rx event indication */
 	for (i = 0; i < priv->bdr_int_num; i++) {
 		enetc_txbdr_wr(&priv->si->hw, i,
-			       ENETC_TBIER, ENETC_TBIER_TXFIE);
+			       ENETC_TBIER, ENETC_TBIER_TXTIE);
 		enetc_rxbdr_wr(&priv->si->hw, i,
 			       ENETC_RBIER, ENETC_RBIER_RXTIE);
 	}
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 493729393577..800795ad0300 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -136,8 +136,10 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_TBLENR	0x20
 #define ENETC_TBCISR_IDX_MASK	0xffff
 #define ENETC_TBIER	0xa0
-#define ENETC_TBIER_TXFIE	BIT(1)
+#define ENETC_TBIER_TXTIE	BIT(0)
 #define ENETC_TBIDR	0xa4
+#define ENETC_TBICIR0	0xa8
+#define ENETC_TBICIR0_ICEN	BIT(31)
 
 //FIXME , BG 0.7: #define ENETC_RTBMR_RSIZE(n)  __ilog2_u32((n) >> 6)
 #define ENETC_RTBLENR_LEN(n)	(((n) >> 3) << 7)
@@ -245,7 +247,6 @@ struct enetc_tx_bd {
 #define ENETC_TXBD_FLAGS_L4CS	BIT(0)
 #define ENETC_TXBD_FLAGS_CSUM	BIT(3)
 #define ENETC_TXBD_FLAGS_TSTMP	BIT(4)
-#define ENETC_TXBD_FLAGS_IE	BIT(5)
 #define ENETC_TXBD_FLAGS_F	BIT(7)
 
 /* L3 csum flags */
-- 
2.17.1

