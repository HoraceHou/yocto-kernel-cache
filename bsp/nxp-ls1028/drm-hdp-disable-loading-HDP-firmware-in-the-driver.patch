From 9640d70f15402398c376b39615c7dddb3c1ba637 Mon Sep 17 00:00:00 2001
From: Alison Wang <alison.wang@nxp.com>
Date: Wed, 26 Sep 2018 14:25:05 +0800
Subject: [PATCH 312/706] drm: hdp: disable loading HDP firmware in the driver

This patch disables loading HDP firmware in the driver. The HDP firmware
binary will be loaded in U-Boot.

Signed-off-by: Alison Wang <alison.wang@nxp.com>
(cherry picked from commit a06c795bbde69c5b602a01a5d1c2144ad6d29fd3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/imx/hdp/cdn_hdp/util.h |  4 ++++
 drivers/gpu/drm/imx/hdp/imx-dp.c       | 12 +++++++++++-
 drivers/gpu/drm/imx/hdp/imx-dp.h       |  2 +-
 drivers/gpu/drm/imx/hdp/imx-hdmi.c     |  8 +++++++-
 drivers/gpu/drm/imx/hdp/imx-hdmi.h     |  2 +-
 drivers/gpu/drm/imx/hdp/imx-hdp.c      | 15 +++++++++++++--
 drivers/gpu/drm/imx/hdp/imx-hdp.h      |  2 +-
 7 files changed, 38 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h b/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h
index 6f30fe65ce34..40856635e842 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h
@@ -141,7 +141,11 @@ typedef struct {
  * \brief expands to blocking function body
  * \param x - function call
  */
+#ifdef CONFIG_EMU_PXP
+#define MAILBOX_FILL_TIMEOUT	5
+#else
 #define MAILBOX_FILL_TIMEOUT	15000
+#endif
 #define internal_block_function(x)					\
 do {									\
 	unsigned long end_jiffies = jiffies +				\
diff --git a/drivers/gpu/drm/imx/hdp/imx-dp.c b/drivers/gpu/drm/imx/hdp/imx-dp.c
index 90ccb0c669ae..f0ba55a2a39b 100644
--- a/drivers/gpu/drm/imx/hdp/imx-dp.c
+++ b/drivers/gpu/drm/imx/hdp/imx-dp.c
@@ -9,13 +9,16 @@
 #include <linux/io.h>
 #include <linux/of.h>
 #include <linux/of_address.h>
+#ifdef DEBUG_FW_LOAD
 #include "mhdp_firmware.h"
+#endif
 #include "imx-hdp.h"
 #include "imx-hdmi.h"
 #include "imx-dp.h"
 
 #define EDP_PHY_RESET	0x230
 
+#ifdef DEBUG_FW_LOAD
 void dp_fw_load(state_struct *state)
 {
 	printk("Loading DP Firmware\n");
@@ -25,8 +28,9 @@ void dp_fw_load(state_struct *state)
 		(u8 *)mhdp_dram0_get_ptr(),
 		mhdp_dram0_get_size());
 }
+#endif
 
-void dp_fw_init(state_struct *state, u32 core_rate)
+int dp_fw_init(state_struct *state, u32 core_rate)
 {
 	u8 echo_msg[] = "echo test";
 	u8 echo_resp[sizeof(echo_msg) + 1];
@@ -40,6 +44,10 @@ void dp_fw_init(state_struct *state, u32 core_rate)
 	cdn_apb_write(state, APB_CTRL << 2, 0);
 
 	ret = CDN_API_CheckAlive_blocking(state);
+	if (ret != 0) {
+		DRM_ERROR("CDN_API_CheckAlive failed - check firmware!\n");
+		return -ENXIO;
+	}
 
 	CDN_API_General_getCurVersion(state, &ver, &verlib);
 	printk("FIRMWARE VERSION: %d, LIB VERSION: %d\n", ver, verlib);
@@ -49,6 +57,8 @@ void dp_fw_init(state_struct *state, u32 core_rate)
 
 	ret = CDN_API_General_Test_Echo_Ext_blocking(state, echo_msg, echo_resp,
 		sizeof(echo_msg), CDN_BUS_TYPE_APB);
+
+	return 0;
 }
 
 static const struct of_device_id scfg_device_ids[] = {
diff --git a/drivers/gpu/drm/imx/hdp/imx-dp.h b/drivers/gpu/drm/imx/hdp/imx-dp.h
index 92c8814ca66f..651d541685f7 100644
--- a/drivers/gpu/drm/imx/hdp/imx-dp.h
+++ b/drivers/gpu/drm/imx/hdp/imx-dp.h
@@ -8,7 +8,7 @@
 #define _IMX_DP_H_
 
 void dp_fw_load(state_struct *state);
-void dp_fw_init(state_struct *state, u32 rate);
+int dp_fw_init(state_struct *state, u32 rate);
 void dp_mode_set(state_struct *state, int vic, int format, int color_depth, int max_link_rate);
 void dp_phy_init(state_struct *state, int num_lanes, int max_link_rate, int tmp);
 int dp_get_edid_block(void *data, u8 *buf, u32 block, size_t len);
diff --git a/drivers/gpu/drm/imx/hdp/imx-hdmi.c b/drivers/gpu/drm/imx/hdp/imx-hdmi.c
index 69fd40a9aafb..a95f54fc021c 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdmi.c
+++ b/drivers/gpu/drm/imx/hdp/imx-hdmi.c
@@ -22,7 +22,7 @@ void hdmi_fw_load(state_struct *state)
 		hdmitx_dram0_get_size());
 }
 
-void hdmi_fw_init(state_struct *state, u32 core_rate)
+int hdmi_fw_init(state_struct *state, u32 core_rate)
 {
 	u8 echo_msg[] = "echo test";
 	u8 echo_resp[sizeof(echo_msg) + 1];
@@ -36,12 +36,18 @@ void hdmi_fw_init(state_struct *state, u32 core_rate)
 	cdn_apb_write(state, APB_CTRL << 2, 0);
 
 	ret = CDN_API_CheckAlive_blocking(state);
+	if (ret != 0) {
+		DRM_ERROR("CDN_API_CheckAlive failed - check firmware!\n");
+		return -ENXIO;
+	}
 
 	/* turn on IP activity */
 	ret = CDN_API_MainControl_blocking(state, 1, &sts);
 
 	ret = CDN_API_General_Test_Echo_Ext_blocking(state, echo_msg, echo_resp,
 		 sizeof(echo_msg), CDN_BUS_TYPE_APB);
+
+	return 0;
 }
 
 void hdmi_phy_init(state_struct *state, int vic, int format, int color_depth)
diff --git a/drivers/gpu/drm/imx/hdp/imx-hdmi.h b/drivers/gpu/drm/imx/hdp/imx-hdmi.h
index 693ae405c550..322d6b70befd 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdmi.h
+++ b/drivers/gpu/drm/imx/hdp/imx-hdmi.h
@@ -7,7 +7,7 @@
 #ifndef _IMX_HDMI_H_
 #define _IMX_HDMI_H_
 void hdmi_fw_load(state_struct *state);
-void hdmi_fw_init(state_struct *state, u32 rate);
+int hdmi_fw_init(state_struct *state, u32 rate);
 void hdmi_phy_init(state_struct *state, int vic, int format, int color_depth);
 void hdmi_mode_set(state_struct *state, int vic, int format, int color_depth, int max_link);
 int hdmi_get_edid_block(void *data, u8 *buf, u32 block, size_t len);
diff --git a/drivers/gpu/drm/imx/hdp/imx-hdp.c b/drivers/gpu/drm/imx/hdp/imx-hdp.c
index 0dbe38ccb89a..bc34d563379f 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdp.c
+++ b/drivers/gpu/drm/imx/hdp/imx-hdp.c
@@ -746,7 +746,9 @@ static struct hdp_rw_func imx8qm_rw = {
 };
 
 static struct hdp_ops imx8qm_dp_ops = {
+#ifdef DEBUG_FW_LOAD
 	.fw_load = dp_fw_load,
+#endif
 	.fw_init = dp_fw_init,
 	.phy_init = dp_phy_init,
 	.mode_set = dp_mode_set,
@@ -754,7 +756,9 @@ static struct hdp_ops imx8qm_dp_ops = {
 };
 
 static struct hdp_ops imx8qm_hdmi_ops = {
+#ifdef DEBUG_FW_LOAD
 	.fw_load = hdmi_fw_load,
+#endif
 	.fw_init = hdmi_fw_init,
 	.phy_init = hdmi_phy_init,
 	.mode_set = hdmi_mode_set,
@@ -798,7 +802,9 @@ static struct hdp_rw_func ls1028a_rw = {
 };
 
 static struct hdp_ops ls1028a_dp_ops = {
+#ifdef DEBUG_FW_LOAD
 	.fw_load = dp_fw_load,
+#endif
 	.fw_init = dp_fw_init,
 	.phy_init = dp_phy_init,
 	.mode_set = dp_mode_set,
@@ -806,7 +812,7 @@ static struct hdp_ops ls1028a_dp_ops = {
 };
 
 static struct hdp_devtype ls1028a_dp_devtype = {
-	.load_fw = true,
+	.load_fw = false,
 	.is_hdmi = false,
 	.ops = &ls1028a_dp_ops,
 	.rw = &ls1028a_rw,
@@ -1029,7 +1035,12 @@ static int imx_hdp_imx_bind(struct device *dev, struct device *master,
 	imx_hdp_call(hdp, fw_load, &hdp->state);
 	core_rate = clk_get_rate(hdp->clks.clk_core);
 
-	imx_hdp_call(hdp, fw_init, &hdp->state, core_rate);
+	ret = imx_hdp_call(hdp, fw_init, &hdp->state, core_rate);
+	if (ret < 0) {
+		DRM_ERROR("Failed to initialise HDP firmware\n");
+		return ret;
+	}
+
 	if (hdp->is_hdmi == true)
 		/* default set hdmi to 1080p60 mode */
 		imx_hdp_call(hdp, phy_init, &hdp->state, 2, 1, 8);
diff --git a/drivers/gpu/drm/imx/hdp/imx-hdp.h b/drivers/gpu/drm/imx/hdp/imx-hdp.h
index 48979b9a8222..c297aa649f3d 100644
--- a/drivers/gpu/drm/imx/hdp/imx-hdp.h
+++ b/drivers/gpu/drm/imx/hdp/imx-hdp.h
@@ -64,7 +64,7 @@
 
 struct hdp_ops {
 	void (*fw_load)(state_struct *state);
-	void (*fw_init)(state_struct *state, u32 rate);
+	int (*fw_init)(state_struct *state, u32 rate);
 	void (*phy_init)(state_struct *state, int vic, int format, int color_depth);
 	void (*mode_set)(state_struct *state, int vic, int format, int color_depth, int max_link);
 	int (*get_edid_block)(void *data, u8 *buf, u32 block, size_t len);
-- 
2.17.1

