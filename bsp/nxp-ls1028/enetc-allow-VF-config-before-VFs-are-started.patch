From 146d156d10e98a3a4341b7279d9c580c5ef7cf4b Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@nxp.com>
Date: Wed, 2 May 2018 11:54:53 +0300
Subject: [PATCH 144/706] enetc: allow VF config before VFs are started

Signed-off-by: Alex Marginean <alexandru.marginean@nxp.com>
(cherry picked from commit 3a58e171ec67922773a6e84052da5cae40ab3aba)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index e37c2ea919b4..688418da9430 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -371,7 +371,7 @@ static int enetc_pf_set_vf_mac(struct net_device *ndev, int vf, u8 *mac)
 	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 	struct enetc_pf *pf = enetc_si_priv(priv->si);
 
-	if (vf > pf->num_vfs)
+	if (vf >= pf->total_vfs)
 		return -EINVAL;
 
 	enetc_set_primary_mac_addr(&priv->si->hw, vf + 1, mac);
@@ -384,7 +384,7 @@ static int enetc_pf_set_vf_vlan(struct net_device *ndev, int vf, u16 vlan,
 	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 	struct enetc_pf *pf = enetc_si_priv(priv->si);
 
-	if (vf > pf->num_vfs)
+	if (vf >= pf->total_vfs)
 		return -EINVAL;
 
 	if (proto != htons(0x8100))
@@ -401,7 +401,7 @@ static int enetc_pf_set_vf_spoofchk(struct net_device *ndev, int vf, bool en)
 	struct enetc_pf *pf = enetc_si_priv(priv->si);
 	u32 cfgr;
 
-	if (vf > pf->num_vfs)
+	if (vf >= pf->total_vfs)
 		return -EINVAL;
 
 	cfgr = enetc_port_rd(&priv->si->hw, ENETC_PSICFGR0(vf + 1));
-- 
2.17.1

