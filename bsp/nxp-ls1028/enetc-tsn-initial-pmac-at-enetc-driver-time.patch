From a49586b03607a4ad27917ea21e5cf7616f8b6411 Mon Sep 17 00:00:00 2001
From: Po Liu <Po.Liu@nxp.com>
Date: Fri, 13 Jul 2018 16:39:29 +0800
Subject: [PATCH 170/706] enetc-tsn: initial pmac at enetc driver time

Signed-off-by: Po Liu <Po.Liu@nxp.com>
(cherry picked from commit 93827a42c36c91828e28afe181c57ab120c899e2)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../net/ethernet/freescale/enetc/enetc_hw.h   | 14 +++++++------
 .../net/ethernet/freescale/enetc/enetc_pf.c   | 20 +++++++++++++++++++
 .../net/ethernet/freescale/enetc/enetc_tsn.c  | 18 +++++++----------
 3 files changed, 35 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 51ba9192ce25..d04c2439d139 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -213,6 +213,12 @@ enum enetc_bdr_type {TX, RX};
 
 #define ENETC_PRFSMR		0x01800
 #define ENETC_PRFSMR_RFSE	BIT(31)
+#define ENETC_PFPMR			0x01900
+#define ENETC_PFPMR_PMACE	BIT(1)
+#define ENETC_PFPMR_MWLM	BIT(0)
+#define ENETC_MMCSR		0x1F00
+#define ENETC_MMCSR_ME		BIT(16)
+
 #define ENETC_PRFSCAPR		0x01804
 #define ENETC_PSIRFSCFGR(n)	(0x01814 + (n) * 4) /* n = SI index */
 
@@ -225,6 +231,8 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_PM0_CMD_XGLP	BIT(10)
 #define ENETC_PM0_CMD_TXP	BIT(11)
 #define ENETC_PM0_CMD_PHY_TX_EN	BIT(15)
+#define ENETC_PM0_CMD_SFD   BIT(21)
+#define ENETC_PM1_CMD_CFG	0x09008
 
 #define ENETC_PM0_MAXFRM	0x08014
 #define ENETC_SET_TX_MTU(val)	((val) << 16)
@@ -950,12 +958,6 @@ struct enetc_cbd {
 #define ENETC_SIPCAPR1	0x24
 #define ENETC_SITGTGR	0x30
 
-#define ENETC_MMCSR		0x1F00
-#define ENETC_MMCSR_ME		BIT(16)
-
-#define ENETC_PFPMR		0x1900
-#define ENETC_PFPMR_PMACE	BIT(1)
-#define ENETC_PFPMR_MWLM	BIT(0)
 #define ENETC_PTCFPR(n)		(0x1910 + (n) * 4) /* n = [0 ..7] */
 #define ENETC_FPE		BIT(31)
 
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index a7bfc60fb14a..e9e5eab52062 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -377,6 +377,7 @@ static void enetc_set_loopback(struct net_device *ndev, bool en)
 		reg = enetc_port_rd(hw, ENETC_PM0_CMD_CFG);
 		reg = en ? reg | ENETC_PM0_CMD_XGLP : reg & ~ENETC_PM0_CMD_XGLP;
 		enetc_port_wr(hw, ENETC_PM0_CMD_CFG, reg);
+		enetc_port_wr(hw, ENETC_PM1_CMD_CFG, reg);
 	}
 }
 
@@ -530,6 +531,23 @@ static void enetc_configure_port_mac(struct enetc_hw *hw)
 	enetc_port_wr(hw, ENETC_PM0_CMD_CFG, ENETC_PM0_CMD_PHY_TX_EN |
 		      ENETC_PM0_CMD_TXP	| ENETC_PM0_PROMISC |
 		      ENETC_PM0_TX_EN | ENETC_PM0_RX_EN);
+
+	enetc_port_wr(hw, ENETC_PM1_CMD_CFG, ENETC_PM0_CMD_PHY_TX_EN |
+		      ENETC_PM0_CMD_TXP	| ENETC_PM0_PROMISC |
+		      ENETC_PM0_TX_EN | ENETC_PM0_RX_EN);
+}
+
+static void enetc_configure_port_pmac(struct enetc_hw *hw)
+{
+	u32 temp;
+
+	/* Set pMAC step lock */
+	temp = enetc_port_rd(hw, ENETC_PFPMR);
+	enetc_port_wr(hw, ENETC_PFPMR,
+			temp|ENETC_PFPMR_PMACE|ENETC_PFPMR_MWLM);
+
+	temp = enetc_port_rd(hw, ENETC_MMCSR);
+	enetc_port_wr(hw, ENETC_MMCSR, temp|ENETC_MMCSR_ME);
 }
 
 static void enetc_configure_port(struct enetc_pf *pf)
@@ -537,6 +555,8 @@ static void enetc_configure_port(struct enetc_pf *pf)
 	u8 hash_key[ENETC_RSSHASH_KEY_SIZE];
 	struct enetc_hw *hw = &pf->si->hw;
 
+	enetc_configure_port_pmac(hw);
+
 	enetc_configure_port_mac(hw);
 
 	enetc_port_si_configure(pf->si);
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_tsn.c b/drivers/net/ethernet/freescale/enetc/enetc_tsn.c
index 85280bc9595b..717876363a63 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_tsn.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_tsn.c
@@ -1591,23 +1591,19 @@ int enetc_qbu_set(struct net_device *ndev, u8 ptvector)
 	int i;
 	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 
-	temp = enetc_port_rd(&priv->si->hw, ENETC_PFPMR);
-	enetc_port_wr(&priv->si->hw, ENETC_PFPMR,
-			temp|ENETC_PFPMR_PMACE|ENETC_PFPMR_MWLM);
-
-	temp = enetc_port_rd(&priv->si->hw, ENETC_MMCSR);
-	enetc_port_wr(&priv->si->hw, ENETC_MMCSR, temp|ENETC_MMCSR_ME);
-
 	temp = enetc_rd(&priv->si->hw, QBV_PTGCR_OFFSET);
 	if (temp & QBV_TGE)
 		enetc_wr(&priv->si->hw, QBV_PTGCR_OFFSET, temp & (~QBV_TGPE));
 
-	for (i = 0;i < 8;i++)
+	for (i = 0;i < 8;i++) {
 		/* 1 Enabled. Traffic is transmitted on the preemptive MAC. */
-		if ((ptvector >> i) & 0x1) {
-			temp = enetc_port_rd(&priv->si->hw, ENETC_PTCFPR(i));
+		temp = enetc_port_rd(&priv->si->hw, ENETC_PTCFPR(i));
+
+		if ((ptvector >> i) & 0x1)
 			enetc_port_wr(&priv->si->hw, ENETC_PTCFPR(i), temp | ENETC_FPE);
-		}
+		else
+			enetc_port_wr(&priv->si->hw, ENETC_PTCFPR(i), temp & ~ENETC_FPE);
+	}
 
 	return 0;
 }
-- 
2.17.1

