From b7f0f5394af19641f311df02148eaedc493bcd8b Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@nxp.com>
Date: Fri, 4 May 2018 19:03:56 +0300
Subject: [PATCH 148/706] enetc: added pruning as a PF module option

Signed-off-by: Alex Marginean <alexandru.marginean@nxp.com>
(cherry picked from commit 8f6c4fff32bbabedcf39ae24463dc5aedc0f8e21)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_hw.h | 1 +
 drivers/net/ethernet/freescale/enetc/enetc_pf.c | 6 ++++++
 2 files changed, 7 insertions(+)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 99ec7c0b4023..43ada44d4381 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -194,6 +194,7 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_PSICFGR0(n)	(0x00940 + (n) * 0xc)  /* n = SI index */
 #define ENETC_PSICFGR0_SET_TXBDR(val)	((val) & 0xff)
 #define ENETC_PSICFGR0_SET_RXBDR(val)	(((val) & 0xff) << 16)
+#define ENETC_PSICFGR0_SPE	BIT(11)
 #define ENETC_PSICFGR0_VTE	BIT(12)
 #define ENETC_PSICFGR0_SIVIE	BIT(14)
 #define ENETC_PSICFGR0_ASE	BIT(15)
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index 2c8d7f24e607..96376bd089bc 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -46,6 +46,8 @@ static const char enetc_drv_name[] = ENETC_DRV_NAME_STR;
 
 /* PF driver params */
 module_param(debug, uint, 0);
+static uint prune;
+module_param(prune, uint, 0);
 
 static void enetc_pf_get_primary_mac_addr(struct enetc_hw *hw, int si, u8 *addr)
 {
@@ -487,6 +489,8 @@ static void enetc_port_si_configure(struct enetc_si *si)
 
 	/* Add default one-time settings for SI0 (PF) */
 	val |= ENETC_PSICFGR0_SIVC(ENETC_VLAN_TYPE_C | ENETC_VLAN_TYPE_S);
+	if (prune)
+		val |= ENETC_PSICFGR0_SPE;
 
 	enetc_port_wr(hw, ENETC_PSICFGR0(0), val);
 
@@ -496,6 +500,8 @@ static void enetc_port_si_configure(struct enetc_si *si)
 	/* Configure the SIs for each available VF */
 	val = ENETC_PSICFGR0_SIVC(ENETC_VLAN_TYPE_C | ENETC_VLAN_TYPE_S);
 	val |= ENETC_PSICFGR0_VTE | ENETC_PSICFGR0_SIVIE;
+	if (prune)
+		val |= ENETC_PSICFGR0_SPE;
 
 	if (num_rings) {
 		num_rings /= pf->total_vfs;
-- 
2.17.1

