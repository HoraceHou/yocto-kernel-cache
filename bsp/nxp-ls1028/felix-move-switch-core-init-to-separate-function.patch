From b39830eb32d02a12582d3586f396b5d0e9417cfd Mon Sep 17 00:00:00 2001
From: Catalin Horghidan <catalin.horghidan@nxp.com>
Date: Wed, 13 Feb 2019 18:05:14 +0200
Subject: [PATCH 641/706] felix: move switch core init to separate function

Signed-off-by: Catalin Horghidan <catalin.horghidan@nxp.com>
(cherry picked from commit 4211b3a8eab353704a1debc4e58715ae26c0530e)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c | 70 ++++++++++++++-----------
 1 file changed, 39 insertions(+), 31 deletions(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index c0a895dbd715..5ddba016bac0 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -540,11 +540,46 @@ static int felix_ports_init(struct pci_dev *pdev)
 	return err;
 }
 
+static int felix_init_switch_core(struct ocelot *ocelot)
+{
+	int timeout = FELIX_INIT_TIMEOUT;
+	int val = 1;
+
+	/* soft-reset the switch core */
+	regmap_field_write(ocelot->regfields[GCB_SOFT_RST_SWC_RST], 1);
+	do {
+		usleep_range(10, 100);;
+		regmap_field_read(ocelot->regfields[GCB_SOFT_RST_SWC_RST],
+				  &val);
+	} while (val && --timeout);
+
+	if (timeout == 0) {
+		dev_err(ocelot->dev, "timeout: switch core init\n");
+		return -ETIMEDOUT;
+	}
+	/* initialize switch mem ~40us */
+	ocelot_write(ocelot, SYS_RAM_INIT_RAM_INIT, SYS_RAM_INIT);
+	timeout = FELIX_INIT_TIMEOUT;
+	do {
+		usleep_range(40, 80);
+		val = ocelot_read(ocelot, SYS_RAM_INIT);
+	} while (val && --timeout);
+
+	if (timeout == 0) {
+		dev_err(ocelot->dev, "timeout: switch sram init\n");
+		return -ETIMEDOUT;
+	}
+
+	/* enable switch core */
+	regmap_field_write(ocelot->regfields[SYS_RESET_CFG_CORE_ENA], 1);
+
+	return 0;
+}
+
 static int felix_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 {
 	resource_size_t offset;
 	struct ocelot *ocelot;
-	int timeout, val;
 	size_t len;
 	int i, err;
 
@@ -611,37 +646,10 @@ static int felix_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	if (err)
 		goto err_chip_init;
 
-	/* start reset procedure */
-
-	/* soft-reset the switch core */
-	regmap_field_write(ocelot->regfields[GCB_SOFT_RST_SWC_RST], 1);
-	val = 1;
-	timeout = FELIX_INIT_TIMEOUT;
-	do {
-		usleep_range(10, 100);;
-		regmap_field_read(ocelot->regfields[GCB_SOFT_RST_SWC_RST],
-				  &val);
-	} while (val && --timeout);
-
-	if (timeout == 0) {
-		dev_err(&pdev->dev, "timeout: switch core init\n");
-		goto err_sw_core_init;
-	}
-	/* initialize switch mem ~40us */
-	ocelot_write(ocelot, SYS_RAM_INIT_RAM_INIT, SYS_RAM_INIT);
-	timeout = FELIX_INIT_TIMEOUT;
-	do {
-		usleep_range(40, 80);
-		val = ocelot_read(ocelot, SYS_RAM_INIT);
-	} while (val && --timeout);
-
-	if (timeout == 0) {
-		dev_err(&pdev->dev, "timeout: switch sram init\n");
+	/* initialize switch core */
+	err = felix_init_switch_core(ocelot);
+	if (err)
 		goto err_sw_core_init;
-	}
-
-	/* enable switch core */
-	regmap_field_write(ocelot->regfields[SYS_RESET_CFG_CORE_ENA], 1);
 
 	err = felix_ptp_init(ocelot);
 	if (err)
-- 
2.17.1

