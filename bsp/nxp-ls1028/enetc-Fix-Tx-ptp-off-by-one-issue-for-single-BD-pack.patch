From 0a2576b4cf4567d9fa9f550159d2f4394bc7a4e9 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Thu, 14 Mar 2019 18:54:37 +0200
Subject: [PATCH 665/706] enetc: Fix Tx ptp off-by-one issue for single BD
 packets

For single buffer packets, when first BD is the same as
last (eof) BD, the timestap for the current frame was
updated inside the skb of the next packet.
Make sure the skb of the current frame gets updated with
the current timestamp instead and avoid off-by-one delay.

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 0e1e44a8fe5293efe80dd4f60edbcb61d01b931a)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 13aa62098a87..1ef3717739c7 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -346,23 +346,19 @@ static bool enetc_clean_tx_ring(struct enetc_bdr *tx_ring, int napi_budget)
 	while (bds_to_clean && tx_frm_cnt < ENETC_DEFAULT_TX_WORK) {
 		bool is_eof = !!tx_swbd->skb;
 
-		if (unlikely(do_tstamp)) {
-			if (unlikely(first)) {
-				union enetc_tx_bd *txbd;
+		if (unlikely(do_tstamp && first)) {
+			union enetc_tx_bd *txbd;
 
-				txbd = ENETC_TXBD(*tx_ring, i);
-				enetc_get_tx_tstamp(&priv->si->hw, txbd,
-						    &tstamp);
-
-			} else if (is_eof) {
-				enetc_tstamp_tx(tx_swbd->skb, tstamp);
-			}
+			txbd = ENETC_TXBD(*tx_ring, i);
+			enetc_get_tx_tstamp(&priv->si->hw, txbd, &tstamp);
 		}
 
 		if (likely(tx_swbd->dma))
 			enetc_unmap_tx_buff(tx_ring, tx_swbd);
 
 		if (is_eof) {
+			if (unlikely(do_tstamp))
+				enetc_tstamp_tx(tx_swbd->skb, tstamp);
 			napi_consume_skb(tx_swbd->skb, napi_budget);
 			tx_swbd->skb = NULL;
 		}
-- 
2.17.1

