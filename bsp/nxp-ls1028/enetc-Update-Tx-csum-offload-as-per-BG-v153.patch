From 3acdf240b056d0635726233f9368987e59396718 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Tue, 5 Jun 2018 13:31:06 +0300
Subject: [PATCH 155/706] enetc: Update Tx csum offload as per BG v153

L4 header size from Tx BD was dropped with the L1 model release
and the remaining reserved field should be written with 0's as
per latest ENETC BG.

Fix L3_HDR_SIZE mask from 0xef to 0x7f (7bit field), with no
impact since IP header sizes are not bigger than 60B (0xf << 2).

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 066f47633f5d56652c62ae59e0b80199ba4c31d8)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c    |  6 ++----
 drivers/net/ethernet/freescale/enetc/enetc_hw.h | 10 +---------
 2 files changed, 3 insertions(+), 13 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index a27cf1151dbf..ca35f9b9d443 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -118,7 +118,7 @@ netdev_tx_t enetc_xmit(struct sk_buff *skb, struct net_device *ndev)
 
 static bool enetc_tx_csum(struct sk_buff *skb, union enetc_tx_bd *txbd)
 {
-	int l3_start, l3_hsize, l4_hsize;
+	int l3_start, l3_hsize;
 	u16 l3_flags, l4_flags;
 
 	if (skb->ip_summed != CHECKSUM_PARTIAL)
@@ -126,11 +126,9 @@ static bool enetc_tx_csum(struct sk_buff *skb, union enetc_tx_bd *txbd)
 
 	switch (skb->csum_offset) {
 	case offsetof(struct tcphdr, check):
-		l4_hsize = sizeof(struct tcphdr);
 		l4_flags = ENETC_TXBD_L4_TCP;
 		break;
 	case offsetof(struct udphdr, check):
-		l4_hsize = sizeof(struct udphdr);
 		l4_flags = ENETC_TXBD_L4_UDP;
 		break;
 	default:
@@ -149,7 +147,7 @@ static bool enetc_tx_csum(struct sk_buff *skb, union enetc_tx_bd *txbd)
 
 	/* write BD fields */
 	txbd->l3_csoff = enetc_txbd_l3_csoff(l3_start, l3_hsize, l3_flags);
-	txbd->l4_csoff = enetc_txbd_l4_csoff(l4_hsize, l4_flags);
+	txbd->l4_csoff = l4_flags;
 
 	return true;
 }
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index ed3bc557ad5e..8524d9a88a5e 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -378,8 +378,7 @@ union enetc_tx_bd {
 #define ENETC_TXBD_L3_IPV6	BIT(15)
 
 #define ENETC_TXBD_L3_START_MASK	GENMASK(6, 0)
-#define ENETC_TXBD_L3_SET_HSIZE(val)	((((val) >> 2) & 0xef) << 8)
-#define ENETC_TXBD_L3_HSIZE_MASK	GENMASK(14, 8)
+#define ENETC_TXBD_L3_SET_HSIZE(val)	((((val) >> 2) & 0x7f) << 8)
 
 static inline __le16 enetc_txbd_l3_csoff(int start, int hdr_sz, u16 l3_flags)
 {
@@ -391,13 +390,6 @@ static inline __le16 enetc_txbd_l3_csoff(int start, int hdr_sz, u16 l3_flags)
 #define ENETC_TXBD_L4_UDP	BIT(5)
 #define ENETC_TXBD_L4_TCP	BIT(6)
 
-#define ENETC_TXBD_L4_SET_HSIZE(val)	(((val) >> 2) & 0x1f)
-
-static inline u8 enetc_txbd_l4_csoff(int hdr_sz, u8 l4_flags)
-{
-	return l4_flags | ENETC_TXBD_L4_SET_HSIZE(hdr_sz);
-}
-
 union enetc_rx_bd {
 	struct {
 		__le64 addr;
-- 
2.17.1

