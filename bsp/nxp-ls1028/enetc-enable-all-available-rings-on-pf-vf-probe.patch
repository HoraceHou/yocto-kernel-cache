From 3d9f27775c1c4c98241230422a81f0d86e5a97f0 Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Fri, 15 Jun 2018 12:18:46 +0300
Subject: [PATCH 172/706] enetc: enable all available rings on pf/vf probe

All TX rings are enabled in order to configure as many priorities as
possible, if required.

Enable all RX rings as well, since the numbers of RX/TX rings are
assumed equal.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
(cherry picked from commit 986105734ed8ad951554608b2d080ea880ef913e)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_pf.c | 13 ++++++++-----
 drivers/net/ethernet/freescale/enetc/enetc_vf.c | 13 ++++++++-----
 2 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index e9e5eab52062..a16313189783 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -696,11 +696,14 @@ static void enetc_pf_sw_init(struct enetc_ndev_priv *priv)
 	priv->tx_bd_count = 1024; //TODO: use defines for defaults
 	priv->rx_bd_count = 1024;
 
-	/* we only use one ring per CPU for now */
-	priv->num_rx_rings = min_t(u16, num_online_cpus(),
-				   si->num_rx_rings);
-	priv->num_tx_rings = min_t(u16, num_online_cpus(),
-				   si->num_tx_rings);
+	/* Enable all available TX rings in order to configure as many
+	 * priorities as possible, when needed.
+	 *
+	 * Enable all RX rings as well since the numbers of RX/TX rings are
+	 * assumed equal for now.
+	 */
+	priv->num_rx_rings = si->num_rx_rings;
+	priv->num_tx_rings = si->num_tx_rings;
 	 // TODO: fixed to Rx/TX pair, make configurable
 	priv->bdr_int_num = priv->num_rx_rings;
 
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_vf.c b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
index 4a45eefcc63b..93d18bf4f634 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_vf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
@@ -179,11 +179,14 @@ static void enetc_vf_sw_init(struct enetc_ndev_priv *priv)
 	priv->tx_bd_count = 1024; //TODO: use defines for defaults
 	priv->rx_bd_count = 1024;
 
-	/* we only use one ring per CPU for now */
-	priv->num_rx_rings = min_t(u16, num_online_cpus(),
-				   priv->si->num_rx_rings);
-	priv->num_tx_rings = min_t(u16, num_online_cpus(),
-				   priv->si->num_tx_rings);
+	/* Enable all available TX rings in order to configure as many
+	 * priorities as possible, when needed.
+	 *
+	 * Enable all RX rings as well since the numbers of RX/TX rings are
+	 * assumed equal for now.
+	 */
+	priv->num_rx_rings = si->num_rx_rings;
+	priv->num_tx_rings = si->num_tx_rings;
 	priv->bdr_int_num = priv->num_rx_rings; /* int for each Tx/Rx pairs */
 
 	/* SI specific */
-- 
2.17.1

