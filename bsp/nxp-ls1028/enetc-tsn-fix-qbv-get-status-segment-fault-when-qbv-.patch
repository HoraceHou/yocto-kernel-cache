From f69248c561ca4890ad6bd8ecb4213ccee081de1c Mon Sep 17 00:00:00 2001
From: Po Liu <Po.Liu@nxp.com>
Date: Tue, 26 Feb 2019 15:43:19 +0800
Subject: [PATCH 655/706] enetc: tsn: fix qbv get status segment fault when qbv
 disable

Signed-off-by: Po Liu <Po.Liu@nxp.com>
(cherry picked from commit 58e41b8dd15c16bfbc6a13849826b49403032c7b)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../net/ethernet/freescale/enetc/enetc_tsn.c  | 21 ++++++++++++-------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_tsn.c b/drivers/net/ethernet/freescale/enetc/enetc_tsn.c
index 93cd6db4a3df..fb0c801c19c9 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_tsn.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_tsn.c
@@ -259,6 +259,13 @@ int enetc_qbv_get(struct net_device *ndev, struct tsn_qbv_conf *admin_conf)
 	u64 temp;
 	int i;
 
+	if (enetc_rd(&priv->si->hw, QBV_PTGCR_OFFSET) & QBV_TGE) {
+		admin_conf->gate_enabled = true;
+	} else {
+		admin_conf->gate_enabled = false;
+		return 0;
+	}
+
 	curr_cbd = alloc_cbdr(priv->si, &cbdr);
 
 	gcl_query =  &cbdr->gcl_query;
@@ -321,11 +328,6 @@ int enetc_qbv_get(struct net_device *ndev, struct tsn_qbv_conf *admin_conf)
 		temp_entry->time_interval = le32_to_cpu(temp_gce->period);
 	}
 
-	if (enetc_rd(&priv->si->hw, QBV_PTGCR_OFFSET) & QBV_TGE)
-		admin_conf->gate_enabled = true;
-	else
-		admin_conf->gate_enabled = false;
-
 	/* Updated by ENETC on completion of the configuration
 	 * command. A zero value indicates success.
 	 */
@@ -338,7 +340,7 @@ int enetc_qbv_get(struct net_device *ndev, struct tsn_qbv_conf *admin_conf)
 }
 
 int enetc_qbv_get_status(struct net_device *ndev,
-							struct tsn_qbv_status *status)
+			 struct tsn_qbv_status *status)
 {
 	struct enetc_cbd *cbdr;
 	struct tgs_gcl_resp *gcl_data;
@@ -364,6 +366,9 @@ int enetc_qbv_get_status(struct net_device *ndev,
 	oper_basic = &status->oper;
 	priv = netdev_priv(ndev);
 
+	if (!(enetc_rd(&priv->si->hw, QBV_PTGCR_OFFSET) & QBV_TGE))
+		return -EINVAL;
+
 	curr_cbd = alloc_cbdr(priv->si, &cbdr);
 
 	gcl_query = &cbdr->gcl_query;
@@ -603,7 +608,7 @@ int enetc_cb_streamid_set(struct net_device *ndev, u32 index,
 
 /* CBD Class 7: Stream Identity Entry Query Descriptor - Long Format */
 int enetc_cb_streamid_get(struct net_device *ndev, u32 index,
-							struct tsn_cb_streamid *streamid)
+			  struct tsn_cb_streamid *streamid)
 {
 	struct enetc_cbd *cbdr;
 	struct streamid_query_resp *si_data;
@@ -683,7 +688,7 @@ int enetc_cb_streamid_get(struct net_device *ndev, u32 index,
 
 /*  CBD Class 7: Stream Identity Statistics Query Descriptor - Long Format */
 int enetc_cb_streamid_counters_get(struct net_device *ndev, u32 index,
-				struct tsn_cb_streamid_counters *counters)
+				   struct tsn_cb_streamid_counters *counters)
 {
 	return 0;
 }
-- 
2.17.1

