From db142903d6c8e6440830969e38c5baa54dbb1fb7 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Mon, 5 Nov 2018 10:48:53 +0200
Subject: [PATCH 464/706] enetc: Call phy_start/stop() consistently, fix
 posible open/close races

Close phy first, start phy last, except only starting and stopping of
Tx queues.

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 066c7567ed4ef171a516bd91444b77b306ca20e0)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index c37507b336ac..c8998535defb 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1321,16 +1321,16 @@ int enetc_open(struct net_device *ndev)
 	if (err)
 		goto err_set_queues;
 
-	if (ndev->phydev)
-		phy_start(ndev->phydev);
-	else
-		netif_carrier_on(ndev);
-
 	for (i = 0; i < priv->bdr_int_num; i++)
 		napi_enable(&priv->int_vector[i]->napi);
 
 	enetc_enable_interrupts(priv);
 
+	if (ndev->phydev)
+		phy_start(ndev->phydev);
+	else
+		netif_carrier_on(ndev);
+
 	netif_tx_start_all_queues(ndev);
 
 	return 0;
@@ -1351,11 +1351,6 @@ int enetc_close(struct net_device *ndev)
 
 	netif_tx_stop_all_queues(ndev);
 
-	for (i = 0; i < priv->bdr_int_num; i++) {
-		napi_synchronize(&priv->int_vector[i]->napi);
-		napi_disable(&priv->int_vector[i]->napi);
-	}
-
 	if (ndev->phydev) {
 		phy_stop(ndev->phydev);
 		phy_disconnect(ndev->phydev);
@@ -1363,6 +1358,11 @@ int enetc_close(struct net_device *ndev)
 		netif_carrier_off(ndev);
 	}
 
+	for (i = 0; i < priv->bdr_int_num; i++) {
+		napi_synchronize(&priv->int_vector[i]->napi);
+		napi_disable(&priv->int_vector[i]->napi);
+	}
+
 	enetc_disable_interrupts(priv);
 	enetc_clear_bdrs(priv);
 
-- 
2.17.1

