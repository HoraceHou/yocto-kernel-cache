From 416eba7fd3372fd0e9d68f25d1daca466ca8f0d1 Mon Sep 17 00:00:00 2001
From: Radu Alexe <radu.alexe@nxp.com>
Date: Wed, 8 Nov 2017 17:22:12 +0200
Subject: [PATCH 569/706] crypto: caam - add caam_dma device on caam_probe
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Dynamically create a platform device for the caam_dma driver
at caam_probe() time.

Signed-off-by: Radu Alexe <radu.alexe@nxp.com>
Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
(cherry picked from commit 235db48a2d2152cbd324e941d48735b53157d5da)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/crypto/caam/ctrl.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index 538c01f428c1..d8ec79d0ce0f 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -27,6 +27,8 @@ EXPORT_SYMBOL(caam_imx);
 #include "qi.h"
 #endif
 
+static struct platform_device *caam_dma_dev;
+
 /*
  * i.MX targets tend to have clock control subsystems that can
  * enable/disable clocking to our device.
@@ -332,6 +334,9 @@ static int caam_remove(struct platform_device *pdev)
 	debugfs_remove_recursive(ctrlpriv->dfs_root);
 #endif
 
+	if (caam_dma_dev)
+		platform_device_unregister(caam_dma_dev);
+
 	/* Unmap controller region */
 	iounmap(ctrl);
 
@@ -481,6 +486,10 @@ static int caam_probe(struct platform_device *pdev)
 		{.family = "Freescale i.MX"},
 		{},
 	};
+	static struct platform_device_info caam_dma_pdev_info = {
+		.name = "caam-dma",
+		.id = PLATFORM_DEVID_NONE
+	};
 	struct device *dev;
 	struct device_node *nprop, *np;
 	struct caam_ctrl __iomem *ctrl;
@@ -732,6 +741,16 @@ static int caam_probe(struct platform_device *pdev)
 		goto caam_remove;
 	}
 
+	caam_dma_pdev_info.parent = dev;
+	caam_dma_pdev_info.dma_mask = dma_get_mask(dev);
+	caam_dma_dev = platform_device_register_full(&caam_dma_pdev_info);
+	if (IS_ERR(caam_dma_dev)) {
+		dev_err(dev, "Unable to create and register caam-dma dev\n");
+		caam_dma_dev = 0;
+	} else {
+		set_dma_ops(&caam_dma_dev->dev, get_dma_ops(dev));
+	}
+
 	cha_vid_ls = rd_reg32(&ctrl->perfmon.cha_id_ls);
 
 	/*
-- 
2.17.1

