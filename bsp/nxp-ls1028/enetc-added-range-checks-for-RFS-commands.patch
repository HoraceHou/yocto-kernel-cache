From c028a0ea03aac55197dbe6e270a74f950af82978 Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@freescale.com>
Date: Wed, 25 Oct 2017 14:50:37 +0300
Subject: [PATCH 080/706] enetc: added range checks for RFS commands

Signed-off-by: Alex Marginean <alexandru.marginean@freescale.com>
(cherry picked from commit f32b55468437f114141114886863fe81ab5a75e1)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../net/ethernet/freescale/enetc/enetc_ethtool.c    | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 234c9ee40b8d..ceb94669be6f 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -251,6 +251,9 @@ static int enetc_get_rxnfc(struct net_device *ndev, struct ethtool_rxnfc *rxnfc,
 				rxnfc->rule_cnt++;
 		break;
 	case ETHTOOL_GRXCLSRULE:
+		if (rxnfc->fs.location >= priv->si->num_fs_entries)
+			return -EINVAL;
+
 		/* get entry x */
 		rxnfc->fs = priv->cls_rules[rxnfc->fs.location].fs;
 		break;
@@ -283,6 +286,13 @@ static int enetc_set_rxnfc(struct net_device *ndev, struct ethtool_rxnfc *rxnfc)
 
 	switch (rxnfc->cmd) {
 	case ETHTOOL_SRXCLSRLINS:
+		if (rxnfc->fs.location >= priv->si->num_fs_entries)
+			return -EINVAL;
+
+		if (rxnfc->fs.ring_cookie >= priv->num_rx_rings &&
+		    rxnfc->fs.ring_cookie != RX_CLS_FLOW_DISC)
+			return -EINVAL;
+
 		err = enetc_set_cls_entry(priv->si, &rxnfc->fs, true);
 		if (err)
 			return err;
@@ -290,6 +300,9 @@ static int enetc_set_rxnfc(struct net_device *ndev, struct ethtool_rxnfc *rxnfc)
 		priv->cls_rules[rxnfc->fs.location].used = 1;
 		break;
 	case ETHTOOL_SRXCLSRLDEL:
+		if (rxnfc->fs.location >= priv->si->num_fs_entries)
+			return -EINVAL;
+
 		err = enetc_set_cls_entry(priv->si, &rxnfc->fs, false);
 		if (err)
 			return err;
-- 
2.17.1

