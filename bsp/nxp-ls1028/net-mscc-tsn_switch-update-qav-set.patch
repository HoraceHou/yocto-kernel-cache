From f51e17a70d4d74d7f69d3c20086fe5b389ac7ff2 Mon Sep 17 00:00:00 2001
From: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Date: Wed, 19 Dec 2018 14:09:19 +0800
Subject: [PATCH 419/706] net: mscc: tsn_switch: update qav set

Old Qav set function is setting DWRR of port shaper. update the Qav set
function by using credit based queue shaper set, and set AVB mode in
function.

Signed-off-by: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
(cherry picked from commit 8a8ff3391e096d7c5904c178efc0905773b1e0bc)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/mscc/tsn_switch.c | 25 ++++++++++++++++++++++---
 1 file changed, 22 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/mscc/tsn_switch.c b/drivers/net/ethernet/mscc/tsn_switch.c
index e70e672f446c..905ebec14b76 100644
--- a/drivers/net/ethernet/mscc/tsn_switch.c
+++ b/drivers/net/ethernet/mscc/tsn_switch.c
@@ -327,7 +327,7 @@ int switch_cut_thru_set(struct net_device *ndev, u8 cut_thru)
 }
 
 
-int qos_shaper_conf_set(struct net_device *ndev, u32 port_ix)
+int qos_shaper_conf_set(struct net_device *ndev, u32 port_ix, u8 percent)
 {
 	struct ocelot_port *ocelot_port = netdev_priv(ndev);
 	struct ocelot *ocelot = ocelot_port->ocelot;
@@ -349,13 +349,13 @@ int qos_shaper_conf_set(struct net_device *ndev, u32 port_ix)
 		break;
 	}
 
+	cir = cir * percent / 100;
 	cir = MSCC_DIV_ROUND_UP(cir, 100);  /* Rate unit is 100 kbps */
 	cir = (cir ? cir : 1);                    /* Avoid using zero rate */
 	cbs = MSCC_DIV_ROUND_UP(cbs, 4096); /* Burst unit is 4kB */
 	cbs = (cbs ? cbs : 1);                    /* Avoid using zero burst size */
 	cir = MIN(GENMASK(15, 0), cir);
 	cbs = MIN(GENMASK(6, 0), cbs);
-
 	ocelot_write_gix(ocelot,
 			 QSYS_CIR_CFG_CIR_RATE(cir) |
 			 QSYS_CIR_CFG_CIR_BURST(cbs),
@@ -366,15 +366,34 @@ int qos_shaper_conf_set(struct net_device *ndev, u32 port_ix)
 }
 
 int switch_cbs_set(struct net_device *ndev, u8 tc, u8 bw)
+{
+	struct ocelot_port *ocelot_port = netdev_priv(ndev);
+	struct ocelot *ocelot = ocelot_port->ocelot;
+
+	qos_shaper_conf_set(ndev, ocelot_port->chip_port * 8 + tc, bw);
+
+	ocelot_rmw_gix(ocelot,
+		       QSYS_SE_CFG_SE_AVB_ENA,
+		       QSYS_SE_CFG_SE_AVB_ENA,
+		       QSYS_SE_CFG,
+		       ocelot_port->chip_port * 8 + tc);
+
+	return 0;
+
+}
+
+int switch_port_shaper_set(struct net_device *ndev, u8 tc, u8 bw)
 {
 	struct ocelot_port *ocelot_port = netdev_priv(ndev);
 	struct ocelot *ocelot = ocelot_port->ocelot;
 	u8 *weight = ocelot_port->cbs_weight;
 	int i;
+	int percent = 100;
 	u8 w_min = 100;
 	u32 c_max = 1 << 5;
 
-	qos_shaper_conf_set(ndev, SE_IX_PORT + ocelot_port->chip_port);
+	qos_shaper_conf_set(ndev, SE_IX_PORT + ocelot_port->chip_port,
+			    percent);
 
 	ocelot_rmw_gix(ocelot,
 		       QSYS_SE_CFG_SE_DWRR_CNT(7) |
-- 
2.17.1

