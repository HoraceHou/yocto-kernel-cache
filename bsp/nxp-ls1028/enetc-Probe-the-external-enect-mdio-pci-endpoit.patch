From c89dfa12ecf72e9d261e66211df1f342a600b62b Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Wed, 5 Sep 2018 18:11:32 +0300
Subject: [PATCH 288/706] enetc: Probe the external enect mdio pci endpoit

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit b4460a087c70ae7a59a4d94655ff2599af404051)
(cherry picked from commit d0ec4624529878d1bc32008a8ea151e725d1f748)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/Kconfig       |  6 +++
 drivers/net/ethernet/freescale/Makefile      |  1 +
 drivers/net/ethernet/freescale/enetc/Kconfig |  3 +-
 drivers/net/ethernet/freescale/enetc_mdio.c  | 55 ++++++++++++++++++++
 4 files changed, 63 insertions(+), 2 deletions(-)
 create mode 100644 drivers/net/ethernet/freescale/enetc_mdio.c

diff --git a/drivers/net/ethernet/freescale/Kconfig b/drivers/net/ethernet/freescale/Kconfig
index e21eacc3ffdc..be3b5ed56904 100644
--- a/drivers/net/ethernet/freescale/Kconfig
+++ b/drivers/net/ethernet/freescale/Kconfig
@@ -95,6 +95,12 @@ config GIANFAR
 	  and MPC86xx family of chips, the eTSEC on LS1021A and the FEC
 	  on the 8540.
 
+config FSL_ENETC_MDIO
+	tristate "External MDIO PCI endpoint for ENETC"
+	depends on PCI
+	---help---
+	  TBD
+
 source "drivers/net/ethernet/freescale/dpaa/Kconfig"
 source "drivers/net/ethernet/freescale/enetc/Kconfig"
 
diff --git a/drivers/net/ethernet/freescale/Makefile b/drivers/net/ethernet/freescale/Makefile
index efc1725f9490..4d76469269fc 100644
--- a/drivers/net/ethernet/freescale/Makefile
+++ b/drivers/net/ethernet/freescale/Makefile
@@ -22,3 +22,4 @@ ucc_geth_driver-objs := ucc_geth.o ucc_geth_ethtool.o
 obj-$(CONFIG_FSL_FMAN) += fman/
 obj-$(CONFIG_FSL_DPAA_ETH) += dpaa/
 obj-$(CONFIG_FSL_ENETC) += enetc/
+obj-$(CONFIG_FSL_ENETC_MDIO) += enetc_mdio.o
diff --git a/drivers/net/ethernet/freescale/enetc/Kconfig b/drivers/net/ethernet/freescale/enetc/Kconfig
index 16c3c5a21e4e..a83eb62652c1 100644
--- a/drivers/net/ethernet/freescale/enetc/Kconfig
+++ b/drivers/net/ethernet/freescale/enetc/Kconfig
@@ -1,7 +1,6 @@
 config FSL_ENETC
 	tristate "ENETC PF driver"
-	depends on PCI
-	select FSL_XGMAC_MDIO
+	depends on PCI && FSL_XGMAC_MDIO && FSL_ENETC_MDIO
 	---help---
 	  TBD
 
diff --git a/drivers/net/ethernet/freescale/enetc_mdio.c b/drivers/net/ethernet/freescale/enetc_mdio.c
new file mode 100644
index 000000000000..1b943251abae
--- /dev/null
+++ b/drivers/net/ethernet/freescale/enetc_mdio.c
@@ -0,0 +1,55 @@
+#include <linux/module.h>
+#include <linux/pci.h>
+
+#define ENETC_MDIO_DEV_ID	0xee01
+#define ENETC_DRV_NAME_STR "ENETC MDIO driver"
+
+static int enetc_mdio_probe(struct pci_dev *pdev,
+			    const struct pci_device_id *ent)
+{
+	int err;
+
+	err = pci_enable_device_mem(pdev);
+	if (err) {
+		dev_err(&pdev->dev, "device enable failed\n");
+		return err;
+	}
+
+	err = pci_request_mem_regions(pdev, KBUILD_MODNAME);
+	if (err) {
+		dev_err(&pdev->dev, "pci_request_regions failed err=%d\n", err);
+		goto err_pci_mem_reg;
+	}
+
+	pci_set_master(pdev);
+
+	return 0;
+
+err_pci_mem_reg:
+	pci_disable_device(pdev);
+
+	return err;
+}
+
+void enetc_mdio_remove(struct pci_dev *pdev)
+{
+	pci_release_mem_regions(pdev);
+	pci_disable_device(pdev);
+}
+
+static const struct pci_device_id enetc_mdio_id_table[] = {
+	{ PCI_DEVICE(PCI_VENDOR_ID_FREESCALE, ENETC_MDIO_DEV_ID) },
+	{ 0, } /* End of table. */
+};
+MODULE_DEVICE_TABLE(pci, enetc_mdio_id_table);
+
+static struct pci_driver enetc_mdio_driver = {
+	.name = KBUILD_MODNAME,
+	.id_table = enetc_mdio_id_table,
+	.probe = enetc_mdio_probe,
+	.remove = enetc_mdio_remove,
+};
+module_pci_driver(enetc_mdio_driver);
+
+MODULE_DESCRIPTION(ENETC_DRV_NAME_STR);
+MODULE_LICENSE("Dual BSD/GPL");
-- 
2.17.1

