From f51537a0ae4fb2ea14d95f731202384abf22e358 Mon Sep 17 00:00:00 2001
From: Catalin Horghidan <catalin.horghidan@nxp.com>
Date: Wed, 13 Feb 2019 16:54:24 +0200
Subject: [PATCH 639/706] felix: reset switch core before hw initialization

Signed-off-by: Catalin Horghidan <catalin.horghidan@nxp.com>
(cherry picked from commit 70d7a4c3ffdcc6c0785cac9e2a5dd2718b3fb382)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c | 39 ++++++++++++++++++++-----
 1 file changed, 32 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index ea6a2f48621d..f51305e18723 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -28,6 +28,8 @@ static const char felix_driver_version[] = DRV_VERSION;
 /* Switch register block BAR */
 #define FELIX_SWITCH_BAR	4
 
+#define FELIX_INIT_TIMEOUT	50000
+
 /* pair PCI device */
 char *pair_eth = "\0";
 module_param(pair_eth, charp, 0000);
@@ -542,8 +544,8 @@ static int felix_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 {
 	resource_size_t offset;
 	struct ocelot *ocelot;
+	int timeout, val;
 	size_t len;
-	int timeout;
 	int i, err;
 
 	err = pci_enable_device(pdev);
@@ -609,18 +611,40 @@ static int felix_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	if (err)
 		goto err_chip_init;
 
+	/* start reset procedure */
+
+	/* soft-reset the switch core */
+	regmap_field_write(ocelot->regfields[GCB_SOFT_RST_SWC_RST], 1);
+	val = 1;
+	timeout = FELIX_INIT_TIMEOUT;
+	do {
+		usleep_range(10, 100);;
+		regmap_field_read(ocelot->regfields[GCB_SOFT_RST_SWC_RST],
+				  &val);
+	} while (val && --timeout);
+
+	if (timeout == 0) {
+		dev_err(&pdev->dev, "timeout: switch core init\n");
+		goto err_sw_core_init;
+	}
+	/* initialize switch mem ~40us */
 	err = felix_ptp_init(ocelot);
 	if (err)
 		goto err_ptp_init;
 
 	ocelot_write(ocelot, SYS_RAM_INIT_RAM_INIT, SYS_RAM_INIT);
+	timeout = FELIX_INIT_TIMEOUT;
+	do {
+		usleep_range(40, 80);
+		val = ocelot_read(ocelot, SYS_RAM_INIT);
+	} while (val && --timeout);
+
+	if (timeout == 0) {
+		dev_err(&pdev->dev, "timeout: switch sram init\n");
+		goto err_sw_core_init;
+	}
 
-	timeout = 50000;
-	while (ocelot_read(ocelot, SYS_RAM_INIT) && --timeout)
-		udelay(1); /* busy wait for memory init */
-	if (timeout == 0)
-		dev_err(&pdev->dev, "Timeout waiting for memory to initialize\n");
-
+	/* enable switch core */
 	regmap_field_write(ocelot->regfields[SYS_RESET_CFG_CORE_ENA], 1);
 
 	err = felix_ports_init(pdev);
@@ -637,6 +661,7 @@ static int felix_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	felix_ptp_remove(ocelot);
 err_ptp_init:
 err_chip_init:
+err_sw_core_init:
 	pci_iounmap(pdev, regs);
 err_iomap:
 err_resource_len:
-- 
2.17.1

