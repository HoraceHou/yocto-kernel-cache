From 1bd2b01b0e77162e12a8fcf51319dbf1f8c1f530 Mon Sep 17 00:00:00 2001
From: Yangbo Lu <yangbo.lu@nxp.com>
Date: Mon, 24 Dec 2018 11:19:22 +0800
Subject: [PATCH 440/706] ptp_qoriq: make ptp operations global

This patch is to make functions of ptp operations global
so that ENETC PTP driver which is a PCI driver for same
1588 timer IP could reuse them.

Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
(cherry picked from commit 5cc0632bea0c6d3e3abaec7d97dff53f812011f2)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/ptp/ptp_qoriq.c       | 19 +++++++++----------
 include/linux/fsl/ptp_qoriq.h |  8 ++++++++
 2 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/drivers/ptp/ptp_qoriq.c b/drivers/ptp/ptp_qoriq.c
index fdd49c26bbcc..2cc2532683d4 100644
--- a/drivers/ptp/ptp_qoriq.c
+++ b/drivers/ptp/ptp_qoriq.c
@@ -92,7 +92,7 @@ static void set_fipers(struct qoriq_ptp *qoriq_ptp)
  * Interrupt service routine
  */
 
-static irqreturn_t isr(int irq, void *priv)
+irqreturn_t ptp_qoriq_isr(int irq, void *priv)
 {
 	struct qoriq_ptp *qoriq_ptp = priv;
 	struct qoriq_ptp_registers *regs = &qoriq_ptp->regs;
@@ -170,7 +170,7 @@ static irqreturn_t isr(int irq, void *priv)
  * PTP clock operations
  */
 
-static int ptp_qoriq_adjfine(struct ptp_clock_info *ptp, long scaled_ppm)
+int ptp_qoriq_adjfine(struct ptp_clock_info *ptp, long scaled_ppm)
 {
 	u64 adj, diff;
 	u32 tmr_add;
@@ -199,7 +199,7 @@ static int ptp_qoriq_adjfine(struct ptp_clock_info *ptp, long scaled_ppm)
 	return 0;
 }
 
-static int ptp_qoriq_adjtime(struct ptp_clock_info *ptp, s64 delta)
+int ptp_qoriq_adjtime(struct ptp_clock_info *ptp, s64 delta)
 {
 	s64 now;
 	unsigned long flags;
@@ -217,8 +217,7 @@ static int ptp_qoriq_adjtime(struct ptp_clock_info *ptp, s64 delta)
 	return 0;
 }
 
-static int ptp_qoriq_gettime(struct ptp_clock_info *ptp,
-			       struct timespec64 *ts)
+int ptp_qoriq_gettime(struct ptp_clock_info *ptp, struct timespec64 *ts)
 {
 	u64 ns;
 	unsigned long flags;
@@ -235,8 +234,7 @@ static int ptp_qoriq_gettime(struct ptp_clock_info *ptp,
 	return 0;
 }
 
-static int ptp_qoriq_settime(struct ptp_clock_info *ptp,
-			       const struct timespec64 *ts)
+int ptp_qoriq_settime(struct ptp_clock_info *ptp, const struct timespec64 *ts)
 {
 	u64 ns;
 	unsigned long flags;
@@ -254,8 +252,8 @@ static int ptp_qoriq_settime(struct ptp_clock_info *ptp,
 	return 0;
 }
 
-static int ptp_qoriq_enable(struct ptp_clock_info *ptp,
-			      struct ptp_clock_request *rq, int on)
+int ptp_qoriq_enable(struct ptp_clock_info *ptp,
+		     struct ptp_clock_request *rq, int on)
 {
 	struct qoriq_ptp *qoriq_ptp = container_of(ptp, struct qoriq_ptp, caps);
 	struct qoriq_ptp_registers *regs = &qoriq_ptp->regs;
@@ -467,7 +465,8 @@ static int qoriq_ptp_probe(struct platform_device *dev)
 		pr_err("irq not in device tree\n");
 		goto no_node;
 	}
-	if (request_irq(qoriq_ptp->irq, isr, IRQF_SHARED, DRIVER, qoriq_ptp)) {
+	if (request_irq(qoriq_ptp->irq, ptp_qoriq_isr,
+			IRQF_SHARED, DRIVER, qoriq_ptp)) {
 		pr_err("request_irq failed\n");
 		goto no_node;
 	}
diff --git a/include/linux/fsl/ptp_qoriq.h b/include/linux/fsl/ptp_qoriq.h
index c1f003aadcce..d0835ecff626 100644
--- a/include/linux/fsl/ptp_qoriq.h
+++ b/include/linux/fsl/ptp_qoriq.h
@@ -166,4 +166,12 @@ static inline void qoriq_write(unsigned __iomem *addr, u32 val)
 	iowrite32be(val, addr);
 }
 
+irqreturn_t ptp_qoriq_isr(int irq, void *priv);
+int ptp_qoriq_adjfine(struct ptp_clock_info *ptp, long scaled_ppm);
+int ptp_qoriq_adjtime(struct ptp_clock_info *ptp, s64 delta);
+int ptp_qoriq_gettime(struct ptp_clock_info *ptp, struct timespec64 *ts);
+int ptp_qoriq_settime(struct ptp_clock_info *ptp, const struct timespec64 *ts);
+int ptp_qoriq_enable(struct ptp_clock_info *ptp,
+		     struct ptp_clock_request *rq, int on);
+
 #endif
-- 
2.17.1

