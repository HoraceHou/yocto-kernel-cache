From a080c574599fc83b9223b11e90acad9f2c9a6263 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Fri, 5 Oct 2018 11:07:05 +0300
Subject: [PATCH 317/706] enetc: RSS misc fixes and cleanup

Fix num_rss computation from SIRSSCAPR according to h/w RM.
Don't use the stack for tmp alloc of rss_table, according to h/w RM
it could go up to 1MB in size.
Remove 64B rss table size hardcoding, use si->num_rss consistently
instead (for more generic and consistent code).
Remove the "2x" simulator related hack, fix out of bounds access in
the process.
Cleanup some RSS related old comments and TODOs.

Fixes: 4d28d5625a6cc7c59622a5c29ac86da01f2676b0 ("enetc: fix RSS cmd error on Neches")

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 582492d80a64bc499b4359d51ad61069c3a6f9c8)
(cherry picked from commit 72995932be6e0736abaa45e2eee9fa97f73371c3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c  | 30 +++++++++++++------
 .../ethernet/freescale/enetc/enetc_ethtool.c  |  9 ++----
 .../net/ethernet/freescale/enetc/enetc_hw.h   |  1 -
 3 files changed, 24 insertions(+), 16 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index c7b878dc7fe0..34d6f4d7147b 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -784,7 +784,8 @@ void enetc_get_si_caps(struct enetc_si *si)
 	si->num_tx_rings = val & 0xff;
 	si->num_fs_entries = enetc_rd(hw, ENETC_SIRFSCAPR) & 0x7f;
 	si->num_fs_entries = min(si->num_fs_entries, ENETC_MAX_RFS_SIZE);
-	si->num_rss = ((enetc_rd(hw, ENETC_SIRSSCAPR) & 0xf) + 1) * 32;
+	val = enetc_rd(hw, ENETC_SIRSSCAPR) & 0xf;
+	si->num_rss = BIT(val) * 32;
 
 	val = enetc_rd(hw, ENETC_SIPCAPR0);
 	if (!(val & ENETC_SIPCAPR0_RSS))
@@ -1017,29 +1018,36 @@ static void enetc_setup_cbdr(struct enetc_hw *hw, struct enetc_cbdr *cbdr)
 	cbdr->cisr = hw->reg + ENETC_SICBDRCISR;
 }
 
-static void enetc_configure_si(struct enetc_ndev_priv *priv)
+static int enetc_configure_si(struct enetc_ndev_priv *priv)
 {
 	struct enetc_si *si = priv->si;
 	struct enetc_hw *hw = &si->hw;
-	int rss_table[si->num_rss];
+	int *rss_table;
 	int i;
 
+	rss_table = kmalloc_array(si->num_rss, sizeof(*rss_table), GFP_KERNEL);
+	if (!rss_table)
+		return -ENOMEM;
+
 	enetc_setup_cbdr(hw, &si->cbd_ring);
 	/* set SI cache attributes */
 	enetc_wr(hw, ENETC_SICAR0,
 		 ENETC_SICAR_RD_COHERENT | ENETC_SICAR_WR_COHERENT);
 	enetc_wr(hw, ENETC_SICAR1, ENETC_SICAR_MSI);
-	/* enable SI, TODO: start RSS by default */
-	enetc_wr(hw, ENETC_SIMR, ENETC_SIMR_EN /*| ENETC_SIMR_RSSE*/);
+	/* enable SI */
+	enetc_wr(hw, ENETC_SIMR, ENETC_SIMR_EN);
 
 	if (si->num_rss) {
 		/* Set up RSS table defaults */
 		for (i = 0; i < si->num_rss; i++)
 			rss_table[i] = i % priv->num_rx_rings;
-		if (si->num_rss)
-			/* TODO: fix the size, *2 is just to keep sim happy */
-			enetc_set_rss_table(si, rss_table, si->num_rss * 2);
+
+		enetc_set_rss_table(si, rss_table, si->num_rss);
 	}
+
+	kfree(rss_table);
+
+	return 0;
 }
 
 void enetc_init_si_rings_params(struct enetc_ndev_priv *priv)
@@ -1078,10 +1086,14 @@ int enetc_alloc_si_resources(struct enetc_ndev_priv *priv)
 		goto err_alloc_cls;
 	}
 
-	enetc_configure_si(priv);
+	err = enetc_configure_si(priv);
+	if (err)
+		goto err_config_si;
 
 	return 0;
 
+err_config_si:
+	kfree(priv->cls_rules);
 err_alloc_cls:
 	enetc_free_cbdr(priv->dev, &si->cbd_ring);
 err_alloc_cbdr:
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 5303885aad01..325a7fc9b077 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -516,8 +516,7 @@ static int enetc_get_rxfh(struct net_device *ndev, u32 *indir, u8 *key,
 
 	/* return RSS table */
 	if (indir)
-		err = enetc_get_rss_table(priv->si, indir,
-					  ENETC_RSS_TABLE_SIZE);
+		err = enetc_get_rss_table(priv->si, indir, priv->si->num_rss);
 
 	return err;
 }
@@ -542,10 +541,8 @@ static int enetc_set_rxfh(struct net_device *ndev, const u32 *indir,
 		enetc_set_rss_key(hw, key);
 
 	/* set RSS table */
-	if (indir) {
-		err = enetc_set_rss_table(priv->si, indir,
-					  ENETC_RSS_TABLE_SIZE);
-	}
+	if (indir)
+		err = enetc_set_rss_table(priv->si, indir, priv->si->num_rss);
 
 	return err;
 }
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 3aeca8eea2a7..7e1e2c0dec0f 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -219,7 +219,6 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_PSICFGR0_ASE	BIT(15)
 #define ENETC_PSICFGR0_SIVC(bmp)	(((bmp) & 0xff) << 24) /* VLAN_TYPE */
 
-#define ENETC_RSS_TABLE_SIZE	64
 #define ENETC_RSSHASH_KEY_SIZE	40
 #define ENETC_PRSSK(n)		(0x01410 + (n) * 4) /* n = [0..9] */
 
-- 
2.17.1

