From 5e4c2f8700f908f21ce745565e0cb1babe84ac92 Mon Sep 17 00:00:00 2001
From: Alison Wang <alison.wang@nxp.com>
Date: Tue, 9 Oct 2018 14:37:21 +0800
Subject: [PATCH 333/706] drm: hdp: add mutex for mailbox access

This patch adds mutex for mailbox access.

Signed-off-by: Sandor Yu <Sandor.yu@nxp.com>
Signed-off-by: Alison Wang <alison.wang@nxp.com>
(cherry picked from commit ab5985c4a9f4ab5ed6a9c094817440cabc52bf40)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/gpu/drm/imx/hdp/cdn_hdp/API_Audio.c   | 11 ++--
 drivers/gpu/drm/imx/hdp/cdn_hdp/API_DPTX.c    | 50 +++++++++++--------
 drivers/gpu/drm/imx/hdp/cdn_hdp/API_General.c | 23 +++++----
 drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDCP.c    | 33 ++++++------
 drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDMITX.c  | 14 +++---
 drivers/gpu/drm/imx/hdp/cdn_hdp/util.h        |  5 +-
 6 files changed, 80 insertions(+), 56 deletions(-)

diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_Audio.c b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_Audio.c
index fe35e40b7ed0..4cb73e6de473 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_Audio.c
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_Audio.c
@@ -37,7 +37,7 @@ CDN_API_STATUS CDN_API_AudioMute(state_struct *state, AUDIO_MUTE_MODE mode)
 CDN_API_STATUS CDN_API_AudioMute_blocking(state_struct *state,
 					  AUDIO_MUTE_MODE mode)
 {
-	internal_block_function(CDN_API_AudioMute(state, mode));
+	internal_block_function(&state->mutex, CDN_API_AudioMute(state, mode));
 }
 
 CDN_API_STATUS CDN_API_AudioMode(state_struct *state, AUDIO_MODE mode)
@@ -49,7 +49,7 @@ CDN_API_STATUS CDN_API_AudioMode(state_struct *state, AUDIO_MODE mode)
 
 CDN_API_STATUS CDN_API_AudioMode_blocking(state_struct *state, AUDIO_MODE mode)
 {
-	internal_block_function(CDN_API_AudioMode(state, mode));
+	internal_block_function(&state->mutex, CDN_API_AudioMode(state, mode));
 }
 
 CDN_API_STATUS CDN_API_AudioConfigCore(state_struct *state,
@@ -184,7 +184,7 @@ CDN_API_STATUS CDN_API_AudioConfigCore_blocking(state_struct *state,
 						AUDIO_FREQ freq, int lanes,
 						AUDIO_WIDTH width)
 {
-	internal_block_function(CDN_API_AudioConfigCore
+	internal_block_function(&state->mutex, CDN_API_AudioConfigCore
 				(state, audioType, numOfChannels, freq, lanes,
 				 width));
 }
@@ -329,7 +329,7 @@ CDN_API_STATUS CDN_API_AudioAutoConfig_blocking(state_struct *state,
 						CDN_PROTOCOL_TYPE protocol,
 						int ncts, AUDIO_MUTE_MODE mode)
 {
-	internal_block_function(CDN_API_AudioAutoConfig
+	internal_block_function(&state->mutex, CDN_API_AudioAutoConfig
 				(state, audioType, numOfChannels, freq, lanes,
 				 width, protocol, ncts, mode));
 }
@@ -407,5 +407,6 @@ CDN_API_STATUS CDN_API_AudioOff(state_struct *state, AUDIO_TYPE audioType)
 CDN_API_STATUS CDN_API_AudioOff_blocking(state_struct *state,
 					 AUDIO_TYPE audioType)
 {
-	internal_block_function(CDN_API_AudioOff(state, audioType));
+	internal_block_function(&state->mutex,
+				CDN_API_AudioOff(state, audioType));
 }
diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_DPTX.c b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_DPTX.c
index 220c39b0e55b..0894e446daa6 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_DPTX.c
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_DPTX.c
@@ -55,7 +55,7 @@ CDN_API_STATUS CDN_API_DPTX_Read_DPCD_blocking(state_struct *state,
 					       DPTX_Read_DPCD_response *resp,
 					       CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_DPTX_Read_DPCD
+	internal_block_function(&state->mutex, CDN_API_DPTX_Read_DPCD
 				(state, numOfBytes, addr, resp, bus_type));
 }
 
@@ -88,7 +88,7 @@ CDN_API_STATUS CDN_API_DPTX_Read_EDID_blocking(state_struct *state, u8 segment,
 					       u8 extension,
 					       DPTX_Read_EDID_response *resp)
 {
-	internal_block_function(CDN_API_DPTX_Read_EDID
+	internal_block_function(&state->mutex, CDN_API_DPTX_Read_EDID
 				(state, segment, extension, resp));
 }
 
@@ -128,7 +128,7 @@ CDN_API_STATUS CDN_API_DPTX_SetHostCap_blocking(state_struct *state,
 						u8 fastLinkTraining,
 						u8 laneMapping, u8 enchanced)
 {
-	internal_block_function(CDN_API_DPTX_SetHostCap
+	internal_block_function(&state->mutex, CDN_API_DPTX_SetHostCap
 				(state, maxLinkRate, lanesCount_SSC,
 				 maxVoltageSwing, maxPreemphasis,
 				 testPatternsSupported, fastLinkTraining,
@@ -153,7 +153,8 @@ CDN_API_STATUS CDN_API_DPTX_SetPowerMode(state_struct *state,
 CDN_API_STATUS CDN_API_DPTX_SetPowerMode_blocking(state_struct *state,
 						  CDN_API_PWR_MODE mode)
 {
-	internal_block_function(CDN_API_DPTX_SetPowerMode(state, mode));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_SetPowerMode(state, mode));
 }
 
 CDN_API_STATUS CDN_API_DPTX_Control(state_struct *state, u32 mode)
@@ -172,7 +173,8 @@ CDN_API_STATUS CDN_API_DPTX_Control(state_struct *state, u32 mode)
 
 CDN_API_STATUS CDN_API_DPTX_Control_blocking(state_struct *state, u32 mode)
 {
-	internal_block_function(CDN_API_DPTX_Control(state, mode));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_Control(state, mode));
 }
 
 CDN_API_STATUS CDN_API_DPTX_EDP_Training(state_struct *state,
@@ -201,7 +203,8 @@ CDN_API_STATUS CDN_API_DPTX_EDP_Training_blocking(state_struct *state, u8 mode,
 						  ENUM_AFE_LINK_RATE linkRate,
 						  u8 rateId)
 {
-	internal_block_function(CDN_API_DPTX_EDP_Training(state, mode,
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_EDP_Training(state, mode,
 							  linkRate, rateId));
 }
 
@@ -237,7 +240,7 @@ CDN_API_STATUS CDN_API_DPTX_Write_DPCD_blocking(state_struct *state,
 						DPTX_Write_DPCD_response *resp,
 						CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_DPTX_Write_DPCD
+	internal_block_function(&state->mutex, CDN_API_DPTX_Write_DPCD
 				(state, numOfBytes, addr, buff, resp,
 				 bus_type));
 }
@@ -273,7 +276,7 @@ CDN_API_STATUS CDN_API_DPTX_Read_Register_blocking(state_struct *state,
 						   u8 base, u8 regNo,
 						   DPTX_Read_Register_response *resp)
 {
-	internal_block_function(CDN_API_DPTX_Read_Register
+	internal_block_function(&state->mutex, CDN_API_DPTX_Read_Register
 				(state, base, regNo, resp));
 }
 
@@ -297,7 +300,7 @@ CDN_API_STATUS CDN_API_DPTX_Write_Register(state_struct *state, u8 base,
 CDN_API_STATUS CDN_API_DPTX_Write_Register_blocking(state_struct *state,
 						    u8 base, u8 regNo, u32 val)
 {
-	internal_block_function(CDN_API_DPTX_Write_Register
+	internal_block_function(&state->mutex, CDN_API_DPTX_Write_Register
 				(state, base, regNo, val));
 }
 
@@ -324,7 +327,7 @@ CDN_API_STATUS CDN_API_DPTX_Write_Field_blocking(state_struct *state, u8 base,
 						 u8 startBit,
 						 u8 bitsNo, u32 val)
 {
-	internal_block_function(CDN_API_DPTX_Write_Field
+	internal_block_function(&state->mutex, CDN_API_DPTX_Write_Field
 				(state, base, regNo, startBit, bitsNo, val));
 }
 
@@ -355,7 +358,8 @@ CDN_API_STATUS CDN_API_DPTX_EnableEvent(state_struct *state, bool hpd,
 CDN_API_STATUS CDN_API_DPTX_EnableEvent_blocking(state_struct *state, bool hpd,
 						 bool training)
 {
-	internal_block_function(CDN_API_DPTX_EnableEvent(state, hpd, training));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_EnableEvent(state, hpd, training));
 }
 
 CDN_API_STATUS CDN_API_DPTX_ReadEvent(state_struct *state, u8 *LinkeventId,
@@ -384,7 +388,7 @@ CDN_API_STATUS CDN_API_DPTX_ReadEvent(state_struct *state, u8 *LinkeventId,
 CDN_API_STATUS CDN_API_DPTX_ReadEvent_blocking(state_struct *state,
 					       u8 *LinkeventId, u8 *HPDevents)
 {
-	internal_block_function(CDN_API_DPTX_ReadEvent
+	internal_block_function(&state->mutex, CDN_API_DPTX_ReadEvent
 				(state, LinkeventId, HPDevents));
 }
 
@@ -759,7 +763,7 @@ CDN_API_STATUS CDN_API_DPTX_Set_VIC_blocking(state_struct *state,
 					     STEREO_VIDEO_ATTR steroVidAttr,
 					     BT_TYPE bt_type, int TU)
 {
-	internal_block_function(CDN_API_DPTX_Set_VIC
+	internal_block_function(&state->mutex, CDN_API_DPTX_Set_VIC
 				(state, mode, bitsPerPixel, NumOfLanes, rate,
 				 pxlencformat, steroVidAttr, bt_type, TU));
 }
@@ -773,7 +777,8 @@ CDN_API_STATUS CDN_API_DPTX_SetVideo(state_struct *state, u8 mode)
 
 CDN_API_STATUS CDN_API_DPTX_SetVideo_blocking(state_struct *state, u8 mode)
 {
-	internal_block_function(CDN_API_DPTX_SetVideo(state, mode));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_SetVideo(state, mode));
 }
 
 CDN_API_STATUS CDN_API_DPTX_ReadLinkStat(state_struct *state,
@@ -792,7 +797,8 @@ CDN_API_STATUS CDN_API_DPTX_ReadLinkStat(state_struct *state,
 CDN_API_STATUS CDN_API_DPTX_ReadLinkStat_blocking(state_struct *state,
 						  S_LINK_STAT *stat)
 {
-	internal_block_function(CDN_API_DPTX_ReadLinkStat(state, stat));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_ReadLinkStat(state, stat));
 }
 
 CDN_API_STATUS CDN_API_DPTX_TrainingControl(state_struct *state, u8 val)
@@ -806,7 +812,8 @@ CDN_API_STATUS CDN_API_DPTX_TrainingControl(state_struct *state, u8 val)
 CDN_API_STATUS CDN_API_DPTX_TrainingControl_blocking(state_struct *state,
 						     u8 val)
 {
-	internal_block_function(CDN_API_DPTX_TrainingControl(state, val));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_TrainingControl(state, val));
 }
 
 CDN_API_STATUS CDN_API_DPTX_GetLastAuxStatus(state_struct *state, u8 *resp)
@@ -821,7 +828,8 @@ CDN_API_STATUS CDN_API_DPTX_GetLastAuxStatus(state_struct *state, u8 *resp)
 CDN_API_STATUS CDN_API_DPTX_GetLastAuxStatus_blocking(state_struct *state,
 						      u8 *resp)
 {
-	internal_block_function(CDN_API_DPTX_GetLastAuxStatus(state, resp));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_GetLastAuxStatus(state, resp));
 }
 
 CDN_API_STATUS CDN_API_DPTX_GetHpdStatus(state_struct *state, u8 *resp)
@@ -836,7 +844,8 @@ CDN_API_STATUS CDN_API_DPTX_GetHpdStatus_blocking(state_struct *state,
 						  u8 *resp)
 {
 
-	internal_block_function(CDN_API_DPTX_GetHpdStatus(state, resp));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_GetHpdStatus(state, resp));
 }
 
 CDN_API_STATUS CDN_API_DPTX_ForceLanes(state_struct *state, u8 linkRate,
@@ -879,7 +888,7 @@ CDN_API_STATUS CDN_API_DPTX_ForceLanes_blocking(state_struct *state,
 						u8 preemphasis_l3, u8 pattern,
 						u8 ssc)
 {
-	internal_block_function(CDN_API_DPTX_ForceLanes_blocking
+	internal_block_function(&state->mutex, CDN_API_DPTX_ForceLanes_blocking
 				(state, linkRate, numOfLanes, voltageSwing_l0,
 				 preemphasis_l0, voltageSwing_l1,
 				 preemphasis_l1, voltageSwing_l2,
@@ -916,5 +925,6 @@ CDN_API_STATUS CDN_API_DPTX_SetDbg(state_struct *state, uint32_t dbg_cfg)
 CDN_API_STATUS CDN_API_DPTX_SetDbg_blocking(state_struct *state,
 					    uint32_t dbg_cfg)
 {
-	internal_block_function(CDN_API_DPTX_SetDbg(state, dbg_cfg));
+	internal_block_function(&state->mutex,
+				CDN_API_DPTX_SetDbg(state, dbg_cfg));
 }
diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_General.c b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_General.c
index bab6ceb0ca31..cd750cecf3ba 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_General.c
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_General.c
@@ -78,7 +78,7 @@ CDN_API_STATUS CDN_API_General_Test_Echo(state_struct *state, u32 val,
 CDN_API_STATUS CDN_API_General_Test_Echo_blocking(state_struct *state, u32 val,
 						  CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_General_Test_Echo
+	internal_block_function(&state->mutex, CDN_API_General_Test_Echo
 				(state, val, bus_type));
 }
 
@@ -140,7 +140,7 @@ CDN_API_STATUS CDN_API_General_Test_Echo_Ext_blocking(state_struct *state,
 						      u16 num_bytes,
 						      CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_General_Test_Echo_Ext
+	internal_block_function(&state->mutex, CDN_API_General_Test_Echo_Ext
 				       (state, msg, resp, num_bytes, bus_type));
 }
 
@@ -221,7 +221,7 @@ CDN_API_STATUS CDN_API_CheckAlive(state_struct *state)
 
 CDN_API_STATUS CDN_API_CheckAlive_blocking(state_struct *state)
 {
-	internal_block_function(CDN_API_CheckAlive(state));
+	internal_block_function(&state->mutex, CDN_API_CheckAlive(state));
 }
 
 CDN_API_STATUS CDN_API_MainControl(state_struct *state, u8 mode, u8 *resp)
@@ -245,7 +245,8 @@ CDN_API_STATUS CDN_API_MainControl(state_struct *state, u8 mode, u8 *resp)
 CDN_API_STATUS CDN_API_MainControl_blocking(state_struct *state, u8 mode,
 					    u8 *resp)
 {
-	internal_block_function(CDN_API_MainControl(state, mode, resp));
+	internal_block_function(&state->mutex,
+				CDN_API_MainControl(state, mode, resp));
 }
 
 CDN_API_STATUS CDN_API_ApbConf(state_struct *state, u8 dpcd_bus_sel,
@@ -315,7 +316,7 @@ CDN_API_STATUS CDN_API_ApbConf_blocking(state_struct *state, u8 dpcd_bus_sel,
 					u8 *dpcd_resp,
 					u8 *hdcp_resp, u8 *capb_resp)
 {
-	internal_block_function(CDN_API_ApbConf
+	internal_block_function(&state->mutex, CDN_API_ApbConf
 				(state, dpcd_bus_sel, dpcd_bus_lock,
 				 hdcp_bus_sel, hdcp_bus_lock, capb_bus_sel,
 				 capb_bus_lock, dpcd_resp, hdcp_resp,
@@ -352,7 +353,7 @@ CDN_API_STATUS CDN_API_General_Read_Register(state_struct *state, u32 addr,
 CDN_API_STATUS CDN_API_General_Read_Register_blocking(state_struct *state,
 						      u32 addr, GENERAL_Read_Register_response *resp)
 {
-	internal_block_function(CDN_API_General_Read_Register
+	internal_block_function(&state->mutex, CDN_API_General_Read_Register
 				(state, addr, resp));
 }
 
@@ -375,7 +376,7 @@ CDN_API_STATUS CDN_API_General_Write_Register(state_struct *state, u32 addr,
 CDN_API_STATUS CDN_API_General_Write_Register_blocking(state_struct *state,
 						       u32 addr, u32 val)
 {
-	internal_block_function(CDN_API_General_Write_Register
+	internal_block_function(&state->mutex, CDN_API_General_Write_Register
 				(state, addr, val));
 }
 
@@ -399,7 +400,7 @@ CDN_API_STATUS CDN_API_General_Write_Field_blocking(state_struct *state,
 						    u32 addr, u8 startBit,
 						    u8 bitsNo, u32 val)
 {
-	internal_block_function(CDN_API_General_Write_Field
+	internal_block_function(&state->mutex, CDN_API_General_Write_Field
 				(state, addr, startBit, bitsNo, val));
 }
 
@@ -438,7 +439,8 @@ CDN_API_STATUS CDN_API_General_Phy_Test_Access(state_struct *state, u8 *resp)
 CDN_API_STATUS CDN_API_General_Phy_Test_Access_blocking(state_struct *state,
 							u8 *resp)
 {
-	internal_block_function(CDN_API_General_Phy_Test_Access(state, resp));
+	internal_block_function(&state->mutex,
+				CDN_API_General_Phy_Test_Access(state, resp));
 }
 
 CDN_API_STATUS CDN_API_General_GetHpdState(state_struct *state, u8 *hpd_state)
@@ -469,5 +471,6 @@ CDN_API_STATUS CDN_API_General_GetHpdState(state_struct *state, u8 *hpd_state)
 
 CDN_API_STATUS CDN_API_General_GetHpdState_blocking(state_struct *state, u8 *hpd_state)
 {
-	internal_block_function(CDN_API_General_GetHpdState(state, hpd_state));
+	internal_block_function(&state->mutex,
+				CDN_API_General_GetHpdState(state, hpd_state));
 }
diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDCP.c b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDCP.c
index b697f296fe5c..f5364a2b671d 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDCP.c
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDCP.c
@@ -41,7 +41,7 @@ CDN_API_STATUS CDN_API_HDCP_TX_CONFIGURATION_blocking(state_struct *state,
 						      u8 val,
 						      CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP_TX_CONFIGURATION
+	internal_block_function(&state->mutex, CDN_API_HDCP_TX_CONFIGURATION
 				(state, val, bus_type));
 }
 
@@ -71,7 +71,8 @@ CDN_API_HDCP2_TX_SET_PUBLIC_KEY_PARAMS_blocking(state_struct *state,
 							S_HDCP_TRANS_PUBLIC_KEY_PARAMS *val,
 							CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP2_TX_SET_PUBLIC_KEY_PARAMS
+	internal_block_function(&state->mutex,
+				CDN_API_HDCP2_TX_SET_PUBLIC_KEY_PARAMS
 				(state, val, bus_type));
 }
 
@@ -104,7 +105,8 @@ CDN_API_HDCP2_TX_SET_KM_KEY_PARAMS_blocking(state_struct *state,
 					    S_HDCP_TRANS_KM_KEY_PARAMS *val,
 					    CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP2_TX_SET_KM_KEY_PARAMS
+	internal_block_function(&state->mutex,
+				CDN_API_HDCP2_TX_SET_KM_KEY_PARAMS
 				(state, val, bus_type));
 }
 
@@ -137,7 +139,8 @@ CDN_API_STATUS CDN_API_HDCP2_TX_SET_DEBUG_RANDOM_NUMBERS_blocking(
 				S_HDCP_TRANS_DEBUG_RANDOM_NUMBERS *val,
 				CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP2_TX_SET_DEBUG_RANDOM_NUMBERS
+	internal_block_function(&state->mutex,
+				CDN_API_HDCP2_TX_SET_DEBUG_RANDOM_NUMBERS
 				(state, val, bus_type));
 }
 
@@ -174,7 +177,7 @@ CDN_API_STATUS CDN_API_HDCP2_TX_RESPOND_KM_blocking(state_struct *state,
 						    S_HDCP_TRANS_PAIRING_DATA *val,
 							CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP2_TX_RESPOND_KM
+	internal_block_function(&state->mutex, CDN_API_HDCP2_TX_RESPOND_KM
 				(state, val, bus_type));
 }
 
@@ -203,7 +206,7 @@ CDN_API_HDCP1_TX_SEND_KEYS_blocking(state_struct *state,
 				    S_HDCP_TX_MAIL_BOX_CMD_HDCP1_TX_SEND_KEYS *val,
 					CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP1_TX_SEND_KEYS
+	internal_block_function(&state->mutex, CDN_API_HDCP1_TX_SEND_KEYS
 				(state, val, bus_type));
 }
 
@@ -227,7 +230,7 @@ CDN_API_STATUS CDN_API_HDCP1_TX_SEND_RANDOM_AN(state_struct *state, u8 An[8],
 CDN_API_STATUS CDN_API_HDCP1_TX_SEND_RANDOM_AN_blocking(state_struct *state,
 							u8 An[8], CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP1_TX_SEND_RANDOM_AN
+	internal_block_function(&state->mutex, CDN_API_HDCP1_TX_SEND_RANDOM_AN
 				(state, An, bus_type));
 }
 
@@ -253,7 +256,7 @@ CDN_API_STATUS CDN_API_HDCP_TX_STATUS_REQ_blocking(state_struct *state,
 						   u8 resp[5],
 						   CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP_TX_STATUS_REQ
+	internal_block_function(&state->mutex, CDN_API_HDCP_TX_STATUS_REQ
 				(state, resp, bus_type));
 }
 
@@ -287,7 +290,7 @@ CDN_API_STATUS CDN_API_HDCP2_TX_IS_KM_STORED_REQ_blocking(state_struct *state,
 							  u8 resp[5],
 							  CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP2_TX_IS_KM_STORED_REQ
+	internal_block_function(&state->mutex, CDN_API_HDCP2_TX_IS_KM_STORED_REQ
 				(state, resp, bus_type));
 }
 
@@ -319,7 +322,7 @@ CDN_API_STATUS CDN_API_HDCP2_TX_STORE_KM_REQ_blocking(state_struct *state,
 						      *resp,
 						      CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP2_TX_STORE_KM_REQ
+	internal_block_function(&state->mutex, CDN_API_HDCP2_TX_STORE_KM_REQ
 				(state, resp, bus_type));
 }
 
@@ -350,7 +353,8 @@ CDN_API_STATUS CDN_API_HDCP_TX_IS_RECEIVER_ID_VALID_REQ_blocking(
 								 CDN_BUS_TYPE
 								 bus_type)
 {
-	internal_block_function(CDN_API_HDCP_TX_IS_RECEIVER_ID_VALID_REQ
+	internal_block_function(&state->mutex,
+				CDN_API_HDCP_TX_IS_RECEIVER_ID_VALID_REQ
 				(state, num, id, bus_type));
 }
 
@@ -378,7 +382,8 @@ CDN_API_STATUS CDN_API_HDCP_TX_RESPOND_RECEIVER_ID_VALID_blocking(
 								CDN_BUS_TYPE
 								bus_type)
 {
-	internal_block_function(CDN_API_HDCP_TX_RESPOND_RECEIVER_ID_VALID
+	internal_block_function(&state->mutex,
+				CDN_API_HDCP_TX_RESPOND_RECEIVER_ID_VALID
 				(state, valid, bus_type));
 }
 
@@ -394,7 +399,7 @@ CDN_API_STATUS CDN_API_HDCP_GENERAL_2_SET_LC_blocking(state_struct *state,
 						      u8 *lc,
 						      CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_HDCP_GENERAL_2_SET_LC
+	internal_block_function(&state->mutex, CDN_API_HDCP_GENERAL_2_SET_LC
 				(state, lc, bus_type));
 }
 
@@ -419,6 +424,6 @@ CDN_API_STATUS CDN_API_TEST_KEYS(state_struct *state, u8 test_type, u8 resp[1],
 CDN_API_STATUS CDN_API_TEST_KEYS_blocking(state_struct *state, u8 test_type,
 					  u8 resp[1], CDN_BUS_TYPE bus_type)
 {
-	internal_block_function(CDN_API_TEST_KEYS
+	internal_block_function(&state->mutex, CDN_API_TEST_KEYS
 				(state, test_type, resp, bus_type));
 }
diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDMITX.c b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDMITX.c
index c51a41c20c6b..c346f06c459b 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDMITX.c
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/API_HDMITX.c
@@ -41,7 +41,7 @@ CDN_API_STATUS CDN_API_HDMITX_DDC_READ_blocking(state_struct *state,
 						HDMITX_TRANS_DATA *data_in,
 						HDMITX_TRANS_DATA *data_out)
 {
-	internal_block_function(CDN_API_HDMITX_DDC_READ
+	internal_block_function(&state->mutex, CDN_API_HDMITX_DDC_READ
 				(state, data_in, data_out));
 }
 
@@ -63,7 +63,7 @@ CDN_API_STATUS CDN_API_HDMITX_DDC_WRITE_blocking(state_struct *state,
 						 HDMITX_TRANS_DATA *data_in,
 						 HDMITX_TRANS_DATA *data_out)
 {
-	internal_block_function(CDN_API_HDMITX_DDC_WRITE
+	internal_block_function(&state->mutex, CDN_API_HDMITX_DDC_WRITE
 				(state, data_in, data_out));
 }
 
@@ -80,7 +80,7 @@ CDN_API_STATUS CDN_API_HDMITX_DDC_UPDATE_READ_blocking(state_struct *state,
 						       HDMITX_TRANS_DATA *
 						       data_out)
 {
-	internal_block_function(CDN_API_HDMITX_DDC_UPDATE_READ
+	internal_block_function(&state->mutex, CDN_API_HDMITX_DDC_UPDATE_READ
 				(state, data_out));
 }
 
@@ -100,7 +100,7 @@ CDN_API_STATUS CDN_API_HDMITX_READ_EDID_blocking(state_struct *state, u8 block,
 						 u8 segment,
 						 HDMITX_TRANS_DATA *data_out)
 {
-	internal_block_function(CDN_API_HDMITX_READ_EDID
+	internal_block_function(&state->mutex, CDN_API_HDMITX_READ_EDID
 				(state, block, segment, data_out));
 }
 
@@ -434,7 +434,8 @@ CDN_API_STATUS CDN_API_HDMITX_ReadEvents(state_struct *state,
 CDN_API_STATUS CDN_API_HDMITX_ReadEvents_blocking(state_struct *state,
 						  uint32_t *events)
 {
-	internal_block_function(CDN_API_HDMITX_ReadEvents(state, events));
+	internal_block_function(&state->mutex,
+				CDN_API_HDMITX_ReadEvents(state, events));
 }
 
 CDN_API_STATUS CDN_API_HDMITX_GetHpdStatus(state_struct *state, u8 *hpd_sts)
@@ -463,5 +464,6 @@ CDN_API_STATUS CDN_API_HDMITX_GetHpdStatus(state_struct *state, u8 *hpd_sts)
 CDN_API_STATUS CDN_API_HDMITX_GetHpdStatus_blocking(state_struct *state,
 						    u8 *hpd_sts)
 {
-	internal_block_function(CDN_API_HDMITX_GetHpdStatus(state, hpd_sts));
+	internal_block_function(&state->mutex,
+				CDN_API_HDMITX_GetHpdStatus(state, hpd_sts));
 }
diff --git a/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h b/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h
index 3072cc9f8b59..e737d4820da7 100644
--- a/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h
+++ b/drivers/gpu/drm/imx/hdp/cdn_hdp/util.h
@@ -151,6 +151,7 @@ typedef struct {
 struct hdp_mem {
 	void __iomem *regs_base;
 	void __iomem *ss_base;
+	struct mutex mutex;
 };
 
 struct hdp_rw_func {
@@ -191,16 +192,18 @@ typedef struct {
 #else
 #define MAILBOX_FILL_TIMEOUT	15000
 #endif
-#define internal_block_function(x)					\
+#define internal_block_function(y, x)					\
 do {									\
 	unsigned long end_jiffies = jiffies +				\
 			msecs_to_jiffies(MAILBOX_FILL_TIMEOUT);		\
 	CDN_API_STATUS ret;						\
+	mutex_lock(y);							\
 	do {								\
 		ret = x;						\
 		cpu_relax();						\
 	} while (time_after(end_jiffies, jiffies) &&			\
 			(ret == CDN_BSY || ret == CDN_STARTED));	\
+	mutex_unlock(y);						\
 	return ret;							\
 } while (0)
 
-- 
2.17.1

