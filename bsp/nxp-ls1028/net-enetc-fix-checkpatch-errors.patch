From a4519c9a4201bd3bdb1d66a2d3e37827ab71b435 Mon Sep 17 00:00:00 2001
From: Zumeng Chen <zumeng.chen@windriver.com>
Date: Tue, 5 Mar 2019 15:08:04 +0800
Subject: [PATCH 302/706] net: enetc: fix checkpatch errors

This comes from 38f18055

Signed-off-by: Amit Jain <amit.jain_1@nxp.com>
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c  |  5 ++--
 .../ethernet/freescale/enetc/enetc_ethtool.c  | 23 +++++++++----------
 .../net/ethernet/freescale/enetc/enetc_pf.c   |  6 ++---
 .../net/ethernet/freescale/enetc/enetc_vf.c   |  2 +-
 4 files changed, 17 insertions(+), 19 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index b6f50e42e761..fb02f76d868c 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -51,7 +51,7 @@ static void enetc_process_skb(struct enetc_bdr *rx_ring, struct sk_buff *skb);
 static int enetc_clean_rx_ring(struct enetc_bdr *rx_ring,
 			       struct napi_struct *napi, int work_limit);
 
-unsigned int debug = 0;
+unsigned int debug;
 
 static void enetc_dbg_print_skb(struct sk_buff *skb, int type)
 {
@@ -59,7 +59,7 @@ static void enetc_dbg_print_skb(struct sk_buff *skb, int type)
 	int i;
 
 	netdev_info(skb->dev, "\n[DBG] %s skb->data: %p, len: %d\n",
-		(type == RX) ? "RX" : "TX" ,skb->data, skb->len);
+		(type == RX) ? "RX" : "TX", skb->data, skb->len);
 
 	for (i = 0; i < skb->len; i++) {
 		if (i % 32 == 0)
@@ -1032,7 +1032,6 @@ static void enetc_configure_si(struct enetc_ndev_priv *priv)
 		rss_table[i] = i % priv->num_rx_rings;
 	/* TODO: fix the size, *2 is just to keep sim happy */
 	enetc_set_rss_table(si, rss_table, ENETC_RSS_TABLE_SIZE * 2);
-
 }
 
 void enetc_init_si_rings_params(struct enetc_ndev_priv *priv)
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 306c534116fd..d94878c6c5e8 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -132,16 +132,16 @@ static struct {
 	{ ENETC_SITFRM, "SI tx frames" },
 	{ ENETC_SITUCA, "SI tx u-cast frames" },
 	{ ENETC_SITMCA, "SI tx m-cast frames" },
-	{ ENETC_RBDCR( 0), "Rx ring  0 discarded frames" },
-	{ ENETC_RBDCR( 1), "Rx ring  1 discarded frames" },
-	{ ENETC_RBDCR( 2), "Rx ring  2 discarded frames" },
-	{ ENETC_RBDCR( 3), "Rx ring  3 discarded frames" },
-	{ ENETC_RBDCR( 4), "Rx ring  4 discarded frames" },
-	{ ENETC_RBDCR( 5), "Rx ring  5 discarded frames" },
-	{ ENETC_RBDCR( 6), "Rx ring  6 discarded frames" },
-	{ ENETC_RBDCR( 7), "Rx ring  7 discarded frames" },
-	{ ENETC_RBDCR( 8), "Rx ring  8 discarded frames" },
-	{ ENETC_RBDCR( 9), "Rx ring  9 discarded frames" },
+	{ ENETC_RBDCR(0), "Rx ring  0 discarded frames" },
+	{ ENETC_RBDCR(1), "Rx ring  1 discarded frames" },
+	{ ENETC_RBDCR(2), "Rx ring  2 discarded frames" },
+	{ ENETC_RBDCR(3), "Rx ring  3 discarded frames" },
+	{ ENETC_RBDCR(4), "Rx ring  4 discarded frames" },
+	{ ENETC_RBDCR(5), "Rx ring  5 discarded frames" },
+	{ ENETC_RBDCR(6), "Rx ring  6 discarded frames" },
+	{ ENETC_RBDCR(7), "Rx ring  7 discarded frames" },
+	{ ENETC_RBDCR(8), "Rx ring  8 discarded frames" },
+	{ ENETC_RBDCR(9), "Rx ring  9 discarded frames" },
 	{ ENETC_RBDCR(10), "Rx ring 10 discarded frames" },
 	{ ENETC_RBDCR(11), "Rx ring 11 discarded frames" },
 	{ ENETC_RBDCR(12), "Rx ring 12 discarded frames" },
@@ -559,8 +559,7 @@ static void enetc_get_ringparam(struct net_device *ndev,
 	ring->tx_pending = priv->tx_bd_count;
 
 	/* do some h/w sanity checks for BDR length */
-	if (netif_running(ndev))
-	{
+	if (netif_running(ndev)) {
 		struct enetc_hw *hw = &priv->si->hw;
 		u32 val = enetc_rxbdr_rd(hw, 0, ENETC_RBLENR);
 
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index d011e2b94a30..aeac11f8942b 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -47,9 +47,9 @@ static const char enetc_drv_ver[] = ENETC_DRV_VER_STR;
 static const char enetc_drv_name[] = ENETC_DRV_NAME_STR;
 
 /* PF driver params */
-module_param(debug, uint, 0);
+module_param(debug, uint, 0000);
 static uint prune;
-module_param(prune, uint, 0);
+module_param(prune, uint, 0000);
 
 static void enetc_pf_get_primary_mac_addr(struct enetc_hw *hw, int si, u8 *addr)
 {
@@ -437,7 +437,7 @@ static void enetc_port_setup_primary_mac_address(struct enetc_si *si)
 	int i;
 
 	/* check MAC addresses for PF and all VFs, if any is 0 set it ro rand */
-	for (i=0; i<pf->total_vfs + 1; i++) {
+	for (i = 0; i < pf->total_vfs + 1; i++) {
 		enetc_pf_get_primary_mac_addr(hw, i, mac_addr);
 		if (!is_zero_ether_addr(mac_addr))
 			continue;
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_vf.c b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
index 380ecdd76a3e..02504b56131c 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_vf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
@@ -45,7 +45,7 @@ static const char enetc_drv_ver[] = ENETC_DRV_VER_STR;
 static const char enetc_drv_name[] = ENETC_DRV_NAME_STR;
 
 /* VF driver params */
-module_param(debug, uint, 0);
+module_param(debug, uint, 0000);
 
 /* Messaging */
 static void enetc_msg_vsi_write_msg(struct enetc_hw *hw,
-- 
2.17.1

