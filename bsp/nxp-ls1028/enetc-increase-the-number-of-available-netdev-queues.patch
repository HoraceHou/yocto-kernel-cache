From a0f56c9c821ffd61cc03655b2a2265e006a8cf6f Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Fri, 15 Jun 2018 12:26:52 +0300
Subject: [PATCH 173/706] enetc: increase the number of available netdev queues

Start up the pv/vf drivers with enough netdev queues to accommodate
num_online_cpus() queues for each prioritised traffic class
(ENETC_MAX_NUM_TXQS) supported by the SI (8 maximum - ENETC_MAX_TCS).

Since we support only one priority, lower the real count of netdev
queues to one per CPU (ENETC_TXQ_PER_TC).

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
(cherry picked from commit e73acc714c37666bbd2e72a74d9de77d616d71e5)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c | 3 +--
 drivers/net/ethernet/freescale/enetc/enetc.h | 4 +++-
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 4714ddf0778e..d46dda731d07 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1154,8 +1154,7 @@ int enetc_open(struct net_device *ndev)
 
 	enetc_setup_bdrs(priv);
 
-
-	err = netif_set_real_num_tx_queues(ndev, priv->num_tx_rings);
+	err = netif_set_real_num_tx_queues(ndev, ENETC_TXQ_PER_TC);
 	if (err)
 		goto err_set_queues;
 
diff --git a/drivers/net/ethernet/freescale/enetc/enetc.h b/drivers/net/ethernet/freescale/enetc/enetc.h
index cdf11a9159fb..288c3c96c79f 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc.h
@@ -161,7 +161,9 @@ static inline bool enetc_si_is_pf(struct enetc_si *si)
 	return !!(si->hw.port);
 }
 
-#define ENETC_MAX_NUM_TXQS	8
+#define ENETC_MAX_TCS		8
+#define ENETC_TXQ_PER_TC	num_online_cpus()
+#define ENETC_MAX_NUM_TXQS	(ENETC_MAX_TCS * ENETC_TXQ_PER_TC)
 
 struct enetc_int_vector {
 	void __iomem *tbier;
-- 
2.17.1

