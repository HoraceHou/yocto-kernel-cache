From a2a1294f7451a1b08a71fa1011f5b31f02a59b9b Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Thu, 15 Mar 2018 20:03:49 +0200
Subject: [PATCH 145/706] enetc: DBG: Add debug print of rx/tx skb, as module
 param [TMP]

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
Signed-off-by: Alex Marginean <alexandru.marginean@nxp.com>
(cherry picked from commit b5f0732bc5fb512af1fd060fe04971825afdfab3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c  | 28 +++++++++++++++++++
 drivers/net/ethernet/freescale/enetc/enetc.h  |  3 ++
 .../net/ethernet/freescale/enetc/enetc_pf.c   |  3 ++
 .../net/ethernet/freescale/enetc/enetc_vf.c   |  3 ++
 4 files changed, 37 insertions(+)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 4e463b10eb5a..a6924f9fabba 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -50,6 +50,27 @@ static void enetc_process_skb(struct enetc_bdr *rx_ring, struct sk_buff *skb);
 static int enetc_clean_rx_ring(struct enetc_bdr *rx_ring,
 			       struct napi_struct *napi, int work_limit);
 
+unsigned int debug = 0;
+
+static void enetc_dbg_print_skb(struct sk_buff *skb, int type)
+{
+	char *c = skb->data;
+	int i;
+
+	netdev_info(skb->dev, "\n[DBG] %s skb->data: %p, len: %d\n",
+		(type == RX) ? "RX" : "TX" ,skb->data, skb->len);
+
+	for (i = 0; i < skb->len; i++) {
+		if (i % 32 == 0)
+			pr_info("%02d: ", i / 32);
+		pr_cont("%02X%s", *c++, ((i + 1) % 4 == 0) ? " " : "");
+	}
+	if (skb_vlan_tag_present(skb))
+		pr_info("VLAN tag %04x\n", skb_vlan_tag_get(skb));
+
+	pr_info("\n");
+}
+
 static irqreturn_t enetc_msix(int irq, void *data)
 {
 	struct enetc_int_vector	*v = data;
@@ -241,6 +262,8 @@ static int enetc_map_tx_buffs(struct enetc_bdr *tx_ring, struct sk_buff *skb)
 	enetc_bdr_idx_inc(tx_ring, &i);
 	tx_ring->next_to_use = i;
 
+	if (debug)
+		enetc_dbg_print_skb(skb, TX);
 	/* let H/W know BD ring has been updated */
 	enetc_wr_reg(tx_ring->tcir, i); /* includes wmb() */
 
@@ -541,6 +564,11 @@ static int enetc_clean_rx_ring(struct enetc_bdr *rx_ring,
 
 		rx_byte_cnt += skb->len;
 
+		if (debug) {
+			skb->dev = rx_ring->ndev;
+			enetc_dbg_print_skb(skb, RX);
+		}
+
 		enetc_process_skb(rx_ring, skb);
 
 		napi_gro_receive(napi, skb);
diff --git a/drivers/net/ethernet/freescale/enetc/enetc.h b/drivers/net/ethernet/freescale/enetc/enetc.h
index 47cf12b92af8..4914ac6733f0 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc.h
@@ -250,3 +250,6 @@ void enetc_tsn_init(struct enetc_si *si);
 #else
 #define enetc_tsn_init(si) (void)0
 #endif
+
+/* common PF and VF module params */
+extern unsigned int debug;
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index 688418da9430..6fafa44c5c21 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -44,6 +44,9 @@ static const char enetc_drv_ver[] = ENETC_DRV_VER_STR;
 #define ENETC_DRV_NAME_STR "ENETC PF driver"
 static const char enetc_drv_name[] = ENETC_DRV_NAME_STR;
 
+/* PF driver params */
+module_param(debug, uint, 0);
+
 static void enetc_set_primary_mac_addr(struct enetc_hw *hw, int si,
 				       const u8 *addr)
 {
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_vf.c b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
index c011f83dbe77..9f167e98e191 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_vf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
@@ -44,6 +44,9 @@ static const char enetc_drv_ver[] = ENETC_DRV_VER_STR;
 #define ENETC_DRV_NAME_STR "ENETC VF driver"
 static const char enetc_drv_name[] = ENETC_DRV_NAME_STR;
 
+/* VF driver params */
+module_param(debug, uint, 0);
+
 /* Messaging */
 static void enetc_msg_vsi_write_msg(struct enetc_hw *hw,
 				    struct enetc_msg_swbd *msg)
-- 
2.17.1

