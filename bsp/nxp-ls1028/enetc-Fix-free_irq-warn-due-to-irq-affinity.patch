From 20fc97835fbc77ed2918a07425193e79a5e5a7dc Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Wed, 16 Jan 2019 11:45:37 +0200
Subject: [PATCH 494/706] enetc: Fix free_irq() warn due to irq affinity

affinity_hint needs to be cleaned up on free_irq() otherwise
WANR_ON() is triggered by the stack.
Fixes -
bash-4.4# ifconfig eth0 down
[56906.023479] ------------[ cut here ]------------
[56906.028120] WARNING: CPU: 0 PID: 728 at kernel/irq/manage.c:1556
__free_irq+0x208/0x298
[56906.036149] Modules linked in:
[56906.039211] CPU: 0 PID: 728 Comm: ifconfig Not tainted
4.14.47-51178-g6f45f27 #33
[56906.046716] Hardware name: LS1028A QDS Board (DT)
[56906.051431] task: ffff802079a6f0c0 task.stack: ffff000009428000
[56906.057368] PC is at __free_irq+0x208/0x298
[56906.061560] LR is at __free_irq+0x228/0x298
[...]

Fixes: 29be27e "enetc: spread out IRQs by default"

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 1b41bd9e903b16a6a75e612e3fa37ae83aba2a23)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 7d27842fc0f0..1db4cf0dce7a 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1257,9 +1257,12 @@ static int enetc_setup_irqs(struct enetc_ndev_priv *priv)
 	return 0;
 
 irq_err:
-	while (i--)
-		free_irq(pci_irq_vector(pdev, ENETC_BDR_INT_BASE_IDX + i),
-			 priv->int_vector[i]);
+	while (i--) {
+		int irq = pci_irq_vector(pdev, ENETC_BDR_INT_BASE_IDX + i);
+
+		irq_set_affinity_hint(irq, NULL);
+		free_irq(irq, priv->int_vector[i]);
+	}
 
 	return err;
 }
@@ -1269,9 +1272,12 @@ static void enetc_free_irqs(struct enetc_ndev_priv *priv)
 	struct pci_dev *pdev = priv->si->pdev;
 	int i;
 
-	for (i = 0; i < priv->bdr_int_num; i++)
-		free_irq(pci_irq_vector(pdev, ENETC_BDR_INT_BASE_IDX + i),
-			 priv->int_vector[i]);
+	for (i = 0; i < priv->bdr_int_num; i++) {
+		int irq = pci_irq_vector(pdev, ENETC_BDR_INT_BASE_IDX + i);
+
+		irq_set_affinity_hint(irq, NULL);
+		free_irq(irq, priv->int_vector[i]);
+	}
 }
 
 static void enetc_enable_interrupts(struct enetc_ndev_priv *priv)
-- 
2.17.1

