From 0545c0adf0cf6139fb40dba74c00c789ed3f35e4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>
Date: Mon, 8 Oct 2018 15:46:44 +0300
Subject: [PATCH 578/706] crypto: caam/jr - set up ICIDs (temporary workaround)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Note / workaround: JRxICID_LS is programmed in CAAM driver; however,
this should be done in u-boot.

Use reserved (but unused) ICIDs 3-6 for the 4 Job Rings.

Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
(cherry picked from commit 3954ea83d4a3bab9cc35df83afcaaeea08f2cf10)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/crypto/caam/ctrl.c | 8 +++++++-
 drivers/crypto/caam/jr.c   | 7 +++++++
 2 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/caam/ctrl.c b/drivers/crypto/caam/ctrl.c
index 0a558de7345f..4d5e175b70c1 100644
--- a/drivers/crypto/caam/ctrl.c
+++ b/drivers/crypto/caam/ctrl.c
@@ -647,13 +647,19 @@ static int caam_probe(struct platform_device *pdev)
 	ctrlpriv->mc_en = !!np;
 	of_node_put(np);
 
-	if (!ctrlpriv->mc_en)
+	if (!ctrlpriv->mc_en) {
+		int idx;
+
 		clrsetbits_32(&ctrl->mcr, MCFGR_AWCACHE_MASK | MCFGR_LONG_PTR,
 			      MCFGR_AWCACHE_CACH | MCFGR_AWCACHE_BUFF |
 			      MCFGR_WDENABLE | MCFGR_LARGE_BURST |
 			      (sizeof(dma_addr_t) == sizeof(u64) ?
 			       MCFGR_LONG_PTR : 0));
 
+		for (idx = 0; idx < 4; idx++)
+			wr_reg32(&ctrl->jr_mid[idx].liodn_ls, 3 + idx);
+	}
+
 	/*
 	 *  Read the Compile Time paramters and SCFGR to determine
 	 * if Virtualization is enabled for this platform
diff --git a/drivers/crypto/caam/jr.c b/drivers/crypto/caam/jr.c
index 1880c1c9a91d..e65898c4178b 100644
--- a/drivers/crypto/caam/jr.c
+++ b/drivers/crypto/caam/jr.c
@@ -155,6 +155,10 @@ static irqreturn_t caam_jr_interrupt(int irq, void *st_dev)
 	 */
 	if (irqstate & JRINT_JR_ERROR) {
 		dev_err(dev, "job ring error: irqstate: %08x\n", irqstate);
+		dev_err(dev, "FAR = %llx, FAICIDR = %x, FADR = %x\n",
+			rd_reg64(&jrp->rregs->perfmon.faultaddr),
+			rd_reg32(&jrp->rregs->perfmon.faultliodn),
+			rd_reg32(&jrp->rregs->perfmon.faultdetail));
 		BUG();
 	}
 
@@ -481,6 +485,9 @@ static int caam_jr_init(struct device *dev)
 	wr_reg32(&jrp->rregs->inpring_size, JOBR_DEPTH);
 	wr_reg32(&jrp->rregs->outring_size, JOBR_DEPTH);
 
+	dev_info(dev, "input ring iova = %llx, output ring iova = %llx\n",
+		 inpbusaddr, outbusaddr);
+
 	jrp->ringsize = JOBR_DEPTH;
 
 	spin_lock_init(&jrp->inplock);
-- 
2.17.1

