From c02439545f940a4f26d88a40f4a00fea7d2cf0e8 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Mon, 18 Feb 2019 18:27:13 +0200
Subject: [PATCH 649/706] enetc: Fix NULL dma address unmap for Tx BD
 extensions

For the unlikely case of TxBD extensions (used with ptp)
now the driver tries to unmap the tx_swbd corresponding
to the extension, which is bogus at it has no buffer
attached.

Fixes: 49bc7b882a8e2338b4e84cab6d6eb59168417baf "enetc: Add tx cleanup budget and use napi_consume_skb()"

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 459ae3bd0618938b5137ed2e8d6cd7a0981a31f1)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 556cdc2b1e61..86e40e61d786 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -359,7 +359,9 @@ static bool enetc_clean_tx_ring(struct enetc_bdr *tx_ring, int napi_budget)
 			}
 		}
 
-		enetc_unmap_tx_buff(tx_ring, tx_swbd);
+		if (likely(tx_swbd->dma))
+			enetc_unmap_tx_buff(tx_ring, tx_swbd);
+
 		if (is_eof) {
 			napi_consume_skb(tx_swbd->skb, napi_budget);
 			tx_swbd->skb = NULL;
-- 
2.17.1

