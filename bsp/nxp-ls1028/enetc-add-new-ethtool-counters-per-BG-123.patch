From 13576ed2007de32610f94a9dfe80f77aad0f41a8 Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@nxp.com>
Date: Wed, 28 Mar 2018 14:10:12 +0300
Subject: [PATCH 132/706] enetc: add new ethtool counters per BG 123

Signed-off-by: Alex Marginean <alexandru.marginean@nxp.com>
(cherry picked from commit a6327d11eb195a1e8729efb8ae456895ae8b2d8b)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../ethernet/freescale/enetc/enetc_ethtool.c  | 47 +++++++++++++++----
 .../net/ethernet/freescale/enetc/enetc_hw.h   | 11 +++++
 2 files changed, 48 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index 69a40ae72ff4..14037333dab9 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -136,14 +136,30 @@ static struct {
 	int reg;
 	char name[ETH_GSTRING_LEN];
 } enetc_si_counters[] =  {
-	{ ENETC_SIROCT, "SI received octets" },
-	{ ENETC_SIRFRM, "SI received frames" },
-	{ ENETC_SIRUCA, "SI received unicast frames" },
-	{ ENETC_SIRMCA, "SI received multicast frames" },
-	{ ENETC_SITOCT, "SI transmit octets" },
-	{ ENETC_SITFRM, "SI transmit frames" },
-	{ ENETC_SITUCA, "SI transmit unicast frames" },
-	{ ENETC_SITMCA, "SI transmit multicast frames" },
+	{ ENETC_SIROCT, "SI rx octets" },
+	{ ENETC_SIRFRM, "SI rx frames" },
+	{ ENETC_SIRUCA, "SI rx u-cast frames" },
+	{ ENETC_SIRMCA, "SI rx m-cast frames" },
+	{ ENETC_SITOCT, "SI tx octets" },
+	{ ENETC_SITFRM, "SI tx frames" },
+	{ ENETC_SITUCA, "SI tx u-cast frames" },
+	{ ENETC_SITMCA, "SI tx m-cast frames" },
+	{ ENETC_RBDCR( 0), "Rx ring  0 discarded frames" },
+	{ ENETC_RBDCR( 1), "Rx ring  1 discarded frames" },
+	{ ENETC_RBDCR( 2), "Rx ring  2 discarded frames" },
+	{ ENETC_RBDCR( 3), "Rx ring  3 discarded frames" },
+	{ ENETC_RBDCR( 4), "Rx ring  4 discarded frames" },
+	{ ENETC_RBDCR( 5), "Rx ring  5 discarded frames" },
+	{ ENETC_RBDCR( 6), "Rx ring  6 discarded frames" },
+	{ ENETC_RBDCR( 7), "Rx ring  7 discarded frames" },
+	{ ENETC_RBDCR( 8), "Rx ring  8 discarded frames" },
+	{ ENETC_RBDCR( 9), "Rx ring  9 discarded frames" },
+	{ ENETC_RBDCR(10), "Rx ring 10 discarded frames" },
+	{ ENETC_RBDCR(11), "Rx ring 11 discarded frames" },
+	{ ENETC_RBDCR(12), "Rx ring 12 discarded frames" },
+	{ ENETC_RBDCR(13), "Rx ring 13 discarded frames" },
+	{ ENETC_RBDCR(14), "Rx ring 14 discarded frames" },
+	{ ENETC_RBDCR(15), "Rx ring 15 discarded frames" },
 };
 
 static struct {
@@ -197,6 +213,17 @@ static struct {
 	{ ENETC_PM0_TSCOL,  "MAC tx single collisions" },
 	{ ENETC_PM0_TLCOL,  "MAC tx late collisions" },
 	{ ENETC_PM0_TECOL,  "MAC tx excessive collisions" },
+	{ ENETC_UFDMF,      "SI MAC nomatch u-cast discards" },
+	{ ENETC_MFDMF,      "SI MAC nomatch m-cast discards" },
+	{ ENETC_PBFDSIR,    "SI MAC nomatch b-cast discards" },
+	{ ENETC_PUFDVFR,    "SI VLAN nomatch u-cast discards" },
+	{ ENETC_PMFDVFR,    "SI VLAN nomatch m-cast discards" },
+	{ ENETC_PBFDVFR,    "SI VLAN nomatch b-cast discards" },
+	{ ENETC_PFDMSAPR,   "SI pruning discarded frames" },
+	{ ENETC_PICDR(0),   "ICM DR0 discarded frames" },
+	{ ENETC_PICDR(1),   "ICM DR1 discarded frames" },
+	{ ENETC_PICDR(2),   "ICM DR2 discarded frames" },
+	{ ENETC_PICDR(3),   "ICM DR3 discarded frames" },
 };
 
 static int enetc_get_sset_count(struct net_device *ndev, int sset)
@@ -206,8 +233,8 @@ static int enetc_get_sset_count(struct net_device *ndev, int sset)
 	switch (sset) {
 	case ETH_SS_STATS:
 		return ARRAY_SIZE(enetc_si_counters) +
-			enetc_si_is_pf(priv->si) ?
-			ARRAY_SIZE(enetc_port_counters) : 0;
+			(enetc_si_is_pf(priv->si) ?
+			ARRAY_SIZE(enetc_port_counters) : 0);
 	default:
 		return -EOPNOTSUPP;
 	}
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 858cc9689b58..f05416a19a30 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -93,6 +93,7 @@ static inline u32 enetc_vsi_set_msize(u32 size)
 #define ENETC_SITFRM	0x328
 #define ENETC_SITUCA	0x330
 #define ENETC_SITMCA	0x338
+#define ENETC_RBDCR(n)	(0x8180 + (n) * 0x200)
 
 /* Control BDR regs */
 #define ENETC_SICBDRMR		0x800
@@ -273,6 +274,16 @@ enum enetc_bdr_type {TX, RX};
 #define ENETC_PM0_TLCOL		0x82E8
 #define ENETC_PM0_TECOL		0x82F0
 
+/* Port counters */
+#define ENETC_PICDR(n)		(0x0700 + (n) * 8) /* n = [0..3] */
+#define ENETC_PBFDSIR		0x0810
+#define ENETC_PFDMSAPR		0x0814
+#define ENETC_UFDMF		0x1680
+#define ENETC_MFDMF		0x1684
+#define ENETC_PUFDVFR		0x1780
+#define ENETC_PMFDVFR		0x1784
+#define ENETC_PBFDVFR		0x1788
+
 /* Global regs, offset: 2_0000h */
 #define ENETC_GLOBAL_BASE		0x20000
 #define ENETC_G_EIPBRR0		0x00bf8
-- 
2.17.1

