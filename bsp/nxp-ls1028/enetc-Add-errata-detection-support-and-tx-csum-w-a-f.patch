From adbb357b6c73644a55b4d6effca0dfbeb0fdb614 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Tue, 9 Oct 2018 16:14:54 +0300
Subject: [PATCH 323/706] enetc: Add errata detection support and tx csum w/a
 for rev1

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit bad639acf3b55c16d3ba2bd30b00cc74672a409d)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c    | 8 ++++++++
 drivers/net/ethernet/freescale/enetc/enetc.h    | 6 ++++++
 drivers/net/ethernet/freescale/enetc/enetc_pf.c | 5 +++++
 drivers/net/ethernet/freescale/enetc/enetc_vf.c | 5 +++++
 4 files changed, 24 insertions(+)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 2d78669f5d85..762b7f55e071 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1645,6 +1645,12 @@ static void enetc_kfree_si(struct enetc_si *si)
 	kfree(p);
 }
 
+static void enetc_detect_errata(struct enetc_si *si)
+{
+	if (si->pdev->revision == ENETC_REV1)
+		si->errata = ENETC_ERR_TXCSUM;
+}
+
 int enetc_pci_probe(struct pci_dev *pdev, const char *name, int sizeof_priv)
 {
 	struct enetc_si *si, *p;
@@ -1711,6 +1717,8 @@ int enetc_pci_probe(struct pci_dev *pdev, const char *name, int sizeof_priv)
 	if (len > ENETC_GLOBAL_BASE)
 		hw->global = hw->reg + ENETC_GLOBAL_BASE;
 
+	enetc_detect_errata(si);
+
 	return 0;
 
 err_ioremap:
diff --git a/drivers/net/ethernet/freescale/enetc/enetc.h b/drivers/net/ethernet/freescale/enetc/enetc.h
index 0d98552de014..785487a0aac0 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc.h
@@ -128,10 +128,16 @@ struct enetc_cbs {
 };
 #endif
 
+#define ENETC_REV1	0x1
+enum enetc_errata {
+	ENETC_ERR_TXCSUM	= BIT(0),
+};
+
 /* PCI IEP device data */
 struct enetc_si {
 	struct pci_dev *pdev;
 	struct enetc_hw hw;
+	enum enetc_errata errata;
 
 	struct net_device *ndev; /* back ref. */
 
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index 1f50921e0340..e5ab256b84ac 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -667,6 +667,11 @@ static void enetc_pf_netdev_setup(struct enetc_si *si, struct net_device *ndev,
 	if (si->num_rss)
 		ndev->hw_features |= NETIF_F_RXHASH;
 
+	if (si->errata & ENETC_ERR_TXCSUM) {
+		ndev->hw_features &= ~NETIF_F_HW_CSUM;
+		ndev->features &= ~NETIF_F_HW_CSUM;
+	}
+
 	ndev->priv_flags |= IFF_UNICAST_FLT;
 
 	/* pick up primary MAC address from SI */
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_vf.c b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
index 7d8d7e198285..65ad2b2b0d6c 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_vf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_vf.c
@@ -137,6 +137,11 @@ static void enetc_vf_netdev_setup(struct enetc_si *si, struct net_device *ndev,
 			 NETIF_F_HW_VLAN_CTAG_TX |
 			 NETIF_F_HW_VLAN_CTAG_RX; /* < has to stay on for now */
 
+	if (si->errata & ENETC_ERR_TXCSUM) {
+		ndev->hw_features &= ~NETIF_F_HW_CSUM;
+		ndev->features &= ~NETIF_F_HW_CSUM;
+	}
+
 	ndev->priv_flags |= IFF_UNICAST_FLT;
 
 	/* pick up primary MAC address from SI */
-- 
2.17.1

