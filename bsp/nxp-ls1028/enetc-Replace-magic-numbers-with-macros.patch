From 2cc8f12e8f17528c602541570dbb9d424c9f670d Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Thu, 1 Nov 2018 10:57:11 +0200
Subject: [PATCH 465/706] enetc: Replace magic numbers with macros

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit 8b5632994c84f467c95bdc3f55047b0b705697c3)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c    | 6 +++---
 drivers/net/ethernet/freescale/enetc/enetc.h    | 3 +++
 drivers/net/ethernet/freescale/enetc/enetc_pf.c | 2 +-
 3 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index c8998535defb..0d668f742edc 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1014,8 +1014,8 @@ void enetc_init_si_rings_params(struct enetc_ndev_priv *priv)
 	struct enetc_si *si = priv->si;
 	int cpus = num_online_cpus();
 
-	priv->tx_bd_count = 1024; //TODO: use defines for defaults
-	priv->rx_bd_count = 1024;
+	priv->tx_bd_count = ENETC_BDR_DEFAULT_SIZE;
+	priv->rx_bd_count = ENETC_BDR_DEFAULT_SIZE;
 
 	/* Enable all available TX rings in order to configure as many
 	 * priorities as possible, when needed.
@@ -1026,7 +1026,7 @@ void enetc_init_si_rings_params(struct enetc_ndev_priv *priv)
 	priv->bdr_int_num = cpus;
 
 	/* SI specific */
-	si->cbd_ring.bd_count = 64; //TODO: use defines for defaults
+	si->cbd_ring.bd_count = ENETC_CBDR_DEFAULT_SIZE;
 }
 
 int enetc_alloc_si_resources(struct enetc_ndev_priv *priv)
diff --git a/drivers/net/ethernet/freescale/enetc/enetc.h b/drivers/net/ethernet/freescale/enetc/enetc.h
index 0c3ef9ca2304..581d77357f49 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc.h
@@ -44,6 +44,8 @@ struct enetc_ring_stats {
 	unsigned int rx_alloc_errs;
 };
 
+#define ENETC_BDR_DEFAULT_SIZE	1024
+
 struct enetc_bdr {
 	struct device *dev; /* for DMA mapping */
 	struct net_device *ndev;
@@ -86,6 +88,7 @@ static inline int enetc_bd_unused(struct enetc_bdr *bdr)
 }
 
 /* Control BD ring */
+#define ENETC_CBDR_DEFAULT_SIZE	64
 struct enetc_cbdr {
 	void *bd_base; /* points to Rx or Tx BD ring */
 	void __iomem *pir;
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_pf.c b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
index d58417c50734..9f43e22278cf 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_pf.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_pf.c
@@ -389,7 +389,7 @@ static int enetc_pf_set_vf_vlan(struct net_device *ndev, int vf, u16 vlan,
 	if (vf >= pf->total_vfs)
 		return -EINVAL;
 
-	if (proto != htons(0x8100))
+	if (proto != htons(ETH_P_8021Q))
 		/* only C-tags supported for now */
 		return -EPROTONOSUPPORT;
 
-- 
2.17.1

