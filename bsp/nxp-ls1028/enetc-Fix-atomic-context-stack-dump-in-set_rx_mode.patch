From 5696fdb837ffb2b53ce5bc71198c9a7b4e268718 Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Wed, 17 Oct 2018 15:26:17 +0300
Subject: [PATCH 331/706] enetc: Fix atomic context stack dump in set_rx_mode()

Actually enetc_send_cmd() (via set_rx_mode()) cannot sleep,
as it is called in atomic context (triggers kernel BUG otherwise).

Fixes:
d700e4ffd8f8e9688dff997ea004b77bd437a50c ("enetc: Clean up enetc_cbdr.c, use usleep_range, consistency updates")

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
(cherry picked from commit d942c24c20435ee841d05ea5ffcde8e59ec513b7)
(cherry picked from commit d524e749f760ddddc8c7ac6caa8472e01be3515e)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_cbdr.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
index 597fb27a5b3c..c9b69ab807b1 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_cbdr.c
@@ -59,8 +59,8 @@ static int enetc_send_cmd(struct enetc_si *si, struct enetc_cbd *cbd)
 	do {
 		if (enetc_rd_reg(ring->cisr) == i)
 			break;
-		usleep_range(100, 200);
-		timeout -= 100;
+		udelay(10); /* cannot sleep, rtnl_lock() */
+		timeout -= 10;
 	} while (timeout);
 
 	if (!timeout)
-- 
2.17.1

