From a38176c2d88ad57fbf2d16f02554606645120ac0 Mon Sep 17 00:00:00 2001
From: Yangbo Lu <yangbo.lu@nxp.com>
Date: Thu, 27 Dec 2018 11:42:36 +0800
Subject: [PATCH 447/706] enetc_ptp: add interrupt support

This patch is to add interrupt support for ENETC PTP.

Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
(cherry picked from commit b213f0ac3849ffe3ceeca38bf6c5d139e8a11639)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 .../net/ethernet/freescale/enetc/enetc_ptp.c  | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ptp.c b/drivers/net/ethernet/freescale/enetc/enetc_ptp.c
index fb17b9e5506d..9656cd966b8f 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ptp.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ptp.c
@@ -32,7 +32,7 @@ static int enetc_ptp_probe(struct pci_dev *pdev,
 	struct device *ptp_dev = &pdev->dev;
 	struct qoriq_ptp *qoriq_ptp;
 	void __iomem *base;
-	int err, len;
+	int err, len, n;
 
 	err = pci_enable_device_mem(pdev);
 	if (err) {
@@ -74,6 +74,21 @@ static int enetc_ptp_probe(struct pci_dev *pdev,
 		goto err_ioremap;
 	}
 
+	/* Allocate 1 interrupt */
+	n = pci_alloc_irq_vectors(pdev, 1, 1, PCI_IRQ_MSIX);
+	if (n != 1) {
+		err = -EPERM;
+		goto err_irq;
+	}
+
+	qoriq_ptp->irq = pci_irq_vector(pdev, 0);
+
+	err = request_irq(qoriq_ptp->irq, ptp_qoriq_isr, 0, DRIVER, qoriq_ptp);
+	if (err) {
+		dev_err(&pdev->dev, "request_irq() failed!\n");
+		goto err_irq;
+	}
+
 	err = qoriq_ptp_init(ptp_dev, qoriq_ptp, base, enetc_ptp_caps);
 	if (err)
 		goto err_no_clock;
@@ -84,6 +99,8 @@ static int enetc_ptp_probe(struct pci_dev *pdev,
 	return 0;
 
 err_no_clock:
+	free_irq(qoriq_ptp->irq, qoriq_ptp);
+err_irq:
 	iounmap(base);
 err_ioremap:
 	kfree(qoriq_ptp);
-- 
2.17.1

