From bfeb85f145c295059b7951e6ffc0cf8456a43445 Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@freescale.com>
Date: Fri, 17 Nov 2017 18:13:35 +0200
Subject: [PATCH 081/706] enetc: enable RSS hash and report RSS fields in
 ethtool

Print fields used in RSS hash using:
$ ethtool -n eth0 rx-flow-hash [tcp4|udp4|...]
Hash composition is read only, fixed by hardware.

Signed-off-by: Alex Marginean <alexandru.marginean@freescale.com>

Conflicts:
	drivers/net/ethernet/freescale/enetc/enetc.c

(cherry picked from commit 4a37ac1337479da3f5b8cb601fb7b0401ae22e3c)
Signed-off-by: Zumeng Chen <zumeng.chen@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc.c  |  4 +--
 .../ethernet/freescale/enetc/enetc_ethtool.c  | 30 +++++++++++++++++++
 .../net/ethernet/freescale/enetc/enetc_hw.h   |  1 +
 3 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc.c b/drivers/net/ethernet/freescale/enetc/enetc.c
index 2f8509187e2d..b63971a9206b 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc.c
@@ -1398,8 +1398,8 @@ static void enetc_configure_si(struct enetc_ndev_priv *priv)
 
 	enetc_setup_cbdr(hw, &priv->si->cbd_ring);
 
-	/* enable SI */
-	enetc_wr(hw, ENETC_SIMR, ENETC_SIMR_EN);
+	/* enable SI, start RSS by default */
+	enetc_wr(hw, ENETC_SIMR, ENETC_SIMR_EN | ENETC_SIMR_RSSE);
 }
 
 static int enetc_alloc_msix(struct enetc_ndev_priv *priv)
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
index ceb94669be6f..d874a88fe3e5 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
@@ -148,6 +148,33 @@ static void enetc_get_ethtool_stats(struct net_device *ndev,
 		data[i] = enetc_rd64(hw, enetc_si_counters[i].reg);
 }
 
+#define ENETC_RSSHASH_L3 (RXH_L2DA | RXH_VLAN | RXH_L3_PROTO | RXH_IP_SRC | \
+			  RXH_IP_DST)
+#define ENETC_RSSHASH_L4 (ENETC_RSSHASH_L3 | RXH_L4_B_0_1 | RXH_L4_B_2_3)
+static int enetc_get_rsshash(struct ethtool_rxnfc *rxnfc)
+{
+	static const u32 rsshash[] = {
+			[TCP_V4_FLOW]    = ENETC_RSSHASH_L4,
+			[UDP_V4_FLOW]    = ENETC_RSSHASH_L4,
+			[SCTP_V4_FLOW]   = ENETC_RSSHASH_L4,
+			[AH_ESP_V4_FLOW] = ENETC_RSSHASH_L3,
+			[IPV4_FLOW]      = ENETC_RSSHASH_L3,
+			[TCP_V6_FLOW]    = ENETC_RSSHASH_L4,
+			[UDP_V6_FLOW]    = ENETC_RSSHASH_L4,
+			[SCTP_V6_FLOW]   = ENETC_RSSHASH_L4,
+			[AH_ESP_V6_FLOW] = ENETC_RSSHASH_L3,
+			[IPV6_FLOW]      = ENETC_RSSHASH_L3,
+			[ETHER_FLOW]     = 0,
+	};
+
+	if (rxnfc->flow_type >= ARRAY_SIZE(rsshash))
+		return -EINVAL;
+
+	rxnfc->data = rsshash[rxnfc->flow_type];
+
+	return 0;
+}
+
 /* current HW spec does byte reversal on everything including MAC addresses */
 static void ether_addr_copy_swap(u8 *dst, const u8 *src)
 {
@@ -241,6 +268,9 @@ static int enetc_get_rxnfc(struct net_device *ndev, struct ethtool_rxnfc *rxnfc,
 	case ETHTOOL_GRXRINGS:
 		rxnfc->data = priv->num_rx_rings;
 		break;
+	case ETHTOOL_GRXFH:
+		/* get RSS hash config */
+		return enetc_get_rsshash(rxnfc);
 	case ETHTOOL_GRXCLSRLCNT:
 		/* total number of entries */
 		rxnfc->data = priv->si->num_fs_entries;
diff --git a/drivers/net/ethernet/freescale/enetc/enetc_hw.h b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
index 9f9a76fad83a..0b7ace2b372f 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_hw.h
+++ b/drivers/net/ethernet/freescale/enetc/enetc_hw.h
@@ -10,6 +10,7 @@
 /* SI regs, offset: 0h */
 #define ENETC_SIMR	0
 #define ENETC_SIMR_EN	BIT(31)
+#define ENETC_SIMR_RSSE	BIT(0)
 
 #define ENETC_SIPMAR0	0x80
 #define ENETC_SIPMAR1	0x84
-- 
2.17.1

