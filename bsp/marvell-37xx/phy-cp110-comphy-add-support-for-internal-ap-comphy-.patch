From 11d2df31303d7d76d2419f265415f6d1c0694437 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Fri, 26 Apr 2019 12:44:32 +0200
Subject: [PATCH 191/386] phy: cp110-comphy: add support for internal/ap comphy
 initialization

The cp110-comphy can support internal/ap mode on serdes lanes 2 and 4,
allow driver for triggering fw to perform such configuration.

Change-Id: I1829c46408b523fa268f66086ca5fe7de633001f
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/8139
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
Reviewed-by: Marcin Wojtas <marcin@marvell.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/phy/marvell/phy-mvebu-cp110-comphy.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
index a956cf764592..44a0128a5229 100644
--- a/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
+++ b/drivers/phy/marvell/phy-mvebu-cp110-comphy.c
@@ -60,6 +60,7 @@ struct mvebu_comhy_conf {
 #define COMPHY_XFI_MODE		0x8
 #define COMPHY_SFI_MODE		0x9
 #define COMPHY_USB3_MODE	0xa
+#define COMPHY_AP_MODE		0xb
 
 /* COMPHY speed macro */
 #define COMPHY_SPEED_1_25G		0 /* SGMII 1G */
@@ -129,6 +130,7 @@ static const struct mvebu_comhy_conf mvebu_comphy_cp110_modes[] = {
 	MVEBU_COMPHY_CONF_ETH(2, 0, PHY_INTERFACE_MODE_2500BASEX),
 	MVEBU_COMPHY_CONF_ETH(2, 0, PHY_INTERFACE_MODE_10GKR),
 	MVEBU_COMPHY_CONF_ETH(2, 0, PHY_INTERFACE_MODE_5GKR),
+	MVEBU_COMPHY_CONF_ETH(2, 0, PHY_INTERFACE_MODE_INTERNAL),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_PCIE),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_USB_HOST),
 	MVEBU_COMPHY_CONF(2, 0, PHY_MODE_SATA),
@@ -146,6 +148,7 @@ static const struct mvebu_comhy_conf mvebu_comphy_cp110_modes[] = {
 	MVEBU_COMPHY_CONF_ETH(4, 0, PHY_INTERFACE_MODE_10GKR),
 	MVEBU_COMPHY_CONF_ETH(4, 1, PHY_INTERFACE_MODE_10GKR),
 	MVEBU_COMPHY_CONF_ETH(4, 0, PHY_INTERFACE_MODE_5GKR),
+	MVEBU_COMPHY_CONF_ETH(4, 0, PHY_INTERFACE_MODE_INTERNAL),
 	MVEBU_COMPHY_CONF_ETH(4, 1, PHY_INTERFACE_MODE_5GKR),
 	MVEBU_COMPHY_CONF_ETH(4, 1, PHY_INTERFACE_MODE_SGMII),
 	MVEBU_COMPHY_CONF(4, 1, PHY_MODE_PCIE),
@@ -254,6 +257,13 @@ static int mvebu_comphy_eth_power_on(struct phy *phy)
 						      lane->port,
 						      COMPHY_SPEED_10_3125G));
 		break;
+	case PHY_INTERFACE_MODE_INTERNAL:
+		ret = data->comphy_smc(MV_SIP_COMPHY_POWER_ON, priv->phys,
+				 lane->id,
+				 COMPHY_FW_NET_FORMAT(COMPHY_AP_MODE,
+						      lane->port,
+						      COMPHY_SPEED_10_3125G));
+		break;
 	case PHY_INTERFACE_MODE_RXAUI:
 		ret = data->comphy_smc(MV_SIP_COMPHY_POWER_ON, priv->phys,
 				 lane->id,
-- 
2.17.1

