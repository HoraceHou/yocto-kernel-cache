From 9adcb20329de05a92c260e772fc8b6bcd19d351a Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Mon, 3 Jun 2019 16:48:32 +0200
Subject: [PATCH 279/386] net: mvpp2: configure per-CPU long BM pools for FC

Proper FC operation require updating BM pools configuration.
Recent commit allowed for optional per-CPU BM long pools usage,
so reflect when calling mvpp2_bm_pool_update_fc(). In order
to increase readability, move common part to a helper routine.

Change-Id: I2faea5770920958c03bf130f2a0966428b68c0a3
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/10435
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Yan Markman <Yan.Markman@cavium.com>
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 .../net/ethernet/marvell/mvpp2/mvpp2_main.c   | 47 +++++++++++++++----
 1 file changed, 37 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 2587d5491963..d2b9281ffa6c 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -1189,7 +1189,12 @@ static int mvpp2_bm_update_mtu(struct net_device *dev, int mtu)
 
 	if (new_long_pool_type != port->pool_long->type) {
 		if (port->tx_fc) {
-			if (port->pkt_size > MVPP2_BM_LONG_PKT_SIZE)
+			if (recycle) {
+				for_each_present_cpu(cpu)
+					mvpp2_bm_pool_update_fc(port,
+								pools_pcpu[cpu],
+								false);
+			} else if (port->pkt_size > MVPP2_BM_LONG_PKT_SIZE)
 				mvpp2_bm_pool_update_fc(port,
 							port->pool_short,
 							false);
@@ -1219,7 +1224,12 @@ static int mvpp2_bm_update_mtu(struct net_device *dev, int mtu)
 			return err;
 
 		if (port->tx_fc) {
-			if (port->pkt_size > MVPP2_BM_LONG_PKT_SIZE)
+			if (recycle) {
+				for_each_present_cpu(cpu)
+					mvpp2_bm_pool_update_fc(port,
+								pools_pcpu[cpu],
+								false);
+			} else if (port->pkt_size > MVPP2_BM_LONG_PKT_SIZE)
 				mvpp2_bm_pool_update_fc(port, port->pool_long,
 							true);
 			else
@@ -5344,6 +5354,29 @@ static void mvpp2_ethtool_get_pause_param(struct net_device *dev,
 	phylink_ethtool_get_pauseparam(port->phylink, pause);
 }
 
+static void mvpp2_reconfigure_fc(struct mvpp2_port *port)
+{
+	struct mvpp2_bm_pool **pools_pcpu = port->priv->pools_pcpu;
+	int cpu;
+
+	if (recycle) {
+		for_each_present_cpu(cpu)
+			mvpp2_bm_pool_update_fc(port, pools_pcpu[cpu],
+						port->tx_fc);
+		if (port->pool_long->type == MVPP2_BM_JUMBO)
+			mvpp2_bm_pool_update_fc(port,
+						port->pool_long, port->tx_fc);
+		else
+			mvpp2_bm_pool_update_fc(port,
+						port->pool_short, port->tx_fc);
+	} else {
+		mvpp2_bm_pool_update_fc(port, port->pool_long, port->tx_fc);
+		mvpp2_bm_pool_update_fc(port, port->pool_short, port->tx_fc);
+	}
+	if (port->priv->hw_version == MVPP23)
+		mvpp23_rx_fifo_fc_en(port->priv, port->id, port->tx_fc);
+}
+
 static int mvpp2_ethtool_set_pause_param(struct net_device *dev,
 					 struct ethtool_pauseparam *pause)
 {
@@ -5360,17 +5393,11 @@ static int mvpp2_ethtool_set_pause_param(struct net_device *dev,
 
 		port->tx_fc = true;
 		mvpp2_rxq_enable_fc(port);
-		mvpp2_bm_pool_update_fc(port, port->pool_long, true);
-		mvpp2_bm_pool_update_fc(port, port->pool_short, true);
-		if (port->priv->hw_version == MVPP23)
-			mvpp23_rx_fifo_fc_en(port->priv, port->id, true);
+		mvpp2_reconfigure_fc(port);
 	} else if (port->priv->global_tx_fc) {
 		port->tx_fc = false;
 		mvpp2_rxq_disable_fc(port);
-		mvpp2_bm_pool_update_fc(port, port->pool_long, false);
-		mvpp2_bm_pool_update_fc(port, port->pool_short, false);
-		if (port->priv->hw_version == MVPP23)
-			mvpp23_rx_fifo_fc_en(port->priv, port->id, false);
+		mvpp2_reconfigure_fc(port);
 	}
 
 	if (!port->phylink)
-- 
2.17.1

