From 090acd2f0e55d18e2dfa3393e65fe8ae3b2ccb6f Mon Sep 17 00:00:00 2001
From: Tomasz Duszynski <tduszynski@cavium.com>
Date: Thu, 4 Apr 2019 09:33:29 +0200
Subject: [PATCH 156/386] octeontx2-pf: fix resources cleanup and sr-iov init

This is in fact a mixture of patches similar enough
that they were merged into one.

- Jump to proper label in case error happened during initialization.
This makes sure all resources are freed in reversed order.

- otx2_pfvf_mbox_init() returns negative error code whenever
internal initialization logic fails. In case this happens
enabling SR-IOV should fail and error should be propagated
up the callstack.

- On otx2_pf_flr_init() failure memory holding VFs configuration
does not get released because of missing label in cleaup path.

Change-Id: Id8f1636978adb988ef8e8f06da585b3e39f130e0
Signed-off-by: Tomasz Duszynski <tduszynski@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/7753
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c | 6 ++++--
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c | 2 +-
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index b080fca1c48c..68a7e65ccb1e 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -2352,7 +2352,7 @@ static int otx2_sriov_enable(struct pci_dev *pdev, int numvfs)
 	/* Init PF <=> VF mailbox stuff */
 	ret = otx2_pfvf_mbox_init(pf, numvfs);
 	if (ret)
-		return 0;
+		return ret;
 
 	ret = otx2_register_pfvf_mbox_intr(pf);
 	if (ret)
@@ -2376,7 +2376,7 @@ static int otx2_sriov_enable(struct pci_dev *pdev, int numvfs)
 
 	ret = otx2_pf_flr_init(pf, numvfs);
 	if (ret)
-		goto free_intr;
+		goto free_configs;
 
 	ret = otx2_register_flr_me_intr(pf);
 	if (ret)
@@ -2392,6 +2392,8 @@ static int otx2_sriov_enable(struct pci_dev *pdev, int numvfs)
 	otx2_disable_flr_me_intr(pf);
 free_flr:
 	otx2_flr_wq_destroy(pf);
+free_configs:
+	kfree(pf->vf_configs);
 free_intr:
 	otx2_disable_pfvf_mbox_intr(pf);
 free_mbox:
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
index e6efc0ba8fb1..b30f24550926 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
@@ -559,7 +559,7 @@ static int otx2vf_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	err = register_netdev(netdev);
 	if (err) {
 		dev_err(dev, "Failed to register netdevice\n");
-		goto err_free_netdev;
+		goto err_detach_rsrc;
 	}
 
 	otx2vf_set_ethtool_ops(netdev);
-- 
2.17.1

