From c04bb7831519f75e581ec5c856dc2dffc2976b5e Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep <sbhatta@marvell.com>
Date: Thu, 28 Mar 2019 19:17:55 +0530
Subject: [PATCH 097/386] octeontx2-pf: Correct timestamp endianness

The receive timestamp from parse result exists in
network byte order hence convert to cpu endianness.
Also ptp timestamping is enabled in open because when
an interface goes down and up then timestamping
should work.

Change-Id: I32b5a722f984d7f85658e507524b8baa3e87ca4a
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/6564
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c   | 18 ++++++++++++++++++
 .../ethernet/marvell/octeontx2/nic/otx2_txrx.c |  2 +-
 2 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 1aa51a57e0a7..c418e2eba78e 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -41,6 +41,9 @@ MODULE_LICENSE("GPL v2");
 MODULE_VERSION(DRV_VERSION);
 MODULE_DEVICE_TABLE(pci, otx2_pf_id_table);
 
+static int otx2_config_hw_tx_tstamp(struct otx2_nic *pfvf, bool enable);
+static int otx2_config_hw_rx_tstamp(struct otx2_nic *pfvf, bool enable);
+
 static void otx2_queue_work(struct mbox *mw, struct workqueue_struct *mbox_wq,
 			    int first, int mdevs, u64 intr)
 {
@@ -1417,6 +1420,16 @@ int otx2_open(struct net_device *netdev)
 	if (!(pf->pcifunc & RVU_PFVF_FUNC_MASK))
 		otx2_alloc_rxvlan(pf);
 
+	/* When reinitializing enable time stamping if it is enabled before */
+	if (pf->hw_tx_tstamp) {
+		pf->hw_tx_tstamp = 0;
+		otx2_config_hw_tx_tstamp(pf, true);
+	}
+	if (pf->hw_rx_tstamp) {
+		pf->hw_rx_tstamp = 0;
+		otx2_config_hw_rx_tstamp(pf, true);
+	}
+
 	return 0;
 
 err_free_cints:
@@ -2037,6 +2050,11 @@ static void otx2_remove(struct pci_dev *pdev)
 
 	pf = netdev_priv(netdev);
 
+	if (pf->hw_tx_tstamp)
+		otx2_config_hw_tx_tstamp(pf, false);
+	if (pf->hw_rx_tstamp)
+		otx2_config_hw_rx_tstamp(pf, false);
+
 	/* Disable link notifications */
 	otx2_cgx_config_linkevents(pf, false);
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
index 575bbf89465a..1bd93c678dd1 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
@@ -208,7 +208,7 @@ static inline void otx2_set_rxtstamp(struct otx2_nic *pfvf, struct sk_buff *skb)
 		return;
 
 	/* The first 8 bytes is the timestamp */
-	err = otx2_ptp_tstamp2time(pfvf, *(u64 *)skb->data, &tsns);
+	err = otx2_ptp_tstamp2time(pfvf, be64_to_cpu(*(u64 *)skb->data), &tsns);
 	if (err)
 		goto done;
 
-- 
2.17.1

