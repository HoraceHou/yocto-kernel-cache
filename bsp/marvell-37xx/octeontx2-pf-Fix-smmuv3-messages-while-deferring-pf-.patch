From 18138cb5560afecb0d4e0809d039804d71623509 Mon Sep 17 00:00:00 2001
From: Christina Jacob <cjacob@marvell.com>
Date: Fri, 3 May 2019 10:27:18 +0530
Subject: [PATCH 208/386] octeontx2-pf: Fix smmuv3 messages while deferring pf
 driver probe.

Issue occurs on probing pf driver before the af driver and the probe is
deferred with the message "AF is not initialized, deferring probe"

The reason for the issue is incorrect iova value in RVU_AF_MSIXTR_BASE as
the af driver is not probed yet.

Fixed by moving  otx2_check_pf_usable before pf tries to allocate
irq vectors.

Change-Id: I29e36556579764017c593f6914c8ca8ce02bb4e4
Signed-off-by: Christina Jacob <cjacob@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8620
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 3893a2e17309..1a3970e408a6 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -2178,22 +2178,22 @@ static int otx2_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	if (!hw->affinity_mask)
 		goto err_free_netdev;
 
-	err = pci_alloc_irq_vectors(hw->pdev, num_vec, num_vec, PCI_IRQ_MSIX);
-	if (err < 0)
-		goto err_free_netdev;
 
 	/* Map CSRs */
 	pf->reg_base = pcim_iomap(pdev, PCI_CFG_REG_BAR_NUM, 0);
 	if (!pf->reg_base) {
 		dev_err(dev, "Unable to map physical function CSRs, aborting\n");
 		err = -ENOMEM;
-		goto err_free_irq_vectors;
+		goto err_free_netdev;
 	}
 
 	err = otx2_check_pf_usable(pf);
 	if (err)
-		goto err_free_irq_vectors;
+		goto err_free_netdev;
 
+	err = pci_alloc_irq_vectors(hw->pdev, num_vec, num_vec, PCI_IRQ_MSIX);
+	if (err < 0)
+		goto err_free_netdev;
 	/* Init PF <=> AF mailbox stuff */
 	err = otx2_pfaf_mbox_init(pf);
 	if (err)
-- 
2.17.1

