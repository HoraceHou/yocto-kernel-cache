From 9ee6e607ff7f9a3b08abae74ac725d25d5d92fc9 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Fri, 7 Jun 2019 11:40:48 +0530
Subject: [PATCH 284/386] octeontx2-pf: Update workarounds for hardware issues

Few hardware issues from 96xx A0 are not fixed in
95xx A0 silicon. This patch applies workarounds of
non fixed 96xx A0's hw issues to 95xx A0.

Change-Id: Ib16c1bf941ce563a8cf4107af73b775517154e95
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/10631
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c | 4 ++--
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h | 9 ++++++++-
 .../net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c    | 2 +-
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c     | 2 +-
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c     | 3 +++
 5 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index 9acbff551f59..19df7feab040 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -625,7 +625,7 @@ static int otx2_rq_init(struct otx2_nic *pfvf, u16 qidx, u16 lpb_aura)
 	 * RED accepts pkts if unused CQE > 600 & <= 648.
 	 * Drops pkts if unused CQE <= 600.
 	 */
-	if (is_9xxx_pass1_silicon(pfvf->pdev))
+	if (is_96xx_A0(pfvf->pdev) || is_95xx_A0(pfvf->pdev))
 		skid = RX_CQ_SKID;
 	aq->rq.xqe_pass = RQ_PASS_LVL_CQ(skid, qset->rqe_cnt);
 	aq->rq.xqe_drop = RQ_DROP_LVL_CQ(skid, qset->rqe_cnt);
@@ -765,7 +765,7 @@ static int otx2_cq_init(struct otx2_nic *pfvf, u16 qidx)
 	aq->cq.avg_level = 255;
 
 	if (qidx < pfvf->hw.rx_queues) {
-		if (is_9xxx_pass1_silicon(pfvf->pdev))
+		if (is_96xx_A0(pfvf->pdev) || is_95xx_A0(pfvf->pdev))
 			skid = RX_CQ_SKID;
 		aq->cq.drop = RQ_DROP_LVL_CQ(skid, cq->cqe_cnt);
 		aq->cq.drop_ena = 1;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index 5b5dc51bb983..7bfd834a0db2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -23,6 +23,7 @@
 #define PCI_DEVID_OCTEONTX2_RVU_AFVF		0xA0F8
 
 #define PCI_SUBSYS_DEVID_96XX_RVU_PFVF		0xB200
+#define PCI_SUBSYS_DEVID_95XX_RVU_PFVF		0xB200
 
 /* PCI BAR nos */
 #define PCI_CFG_REG_BAR_NUM                     2
@@ -202,12 +203,18 @@ struct otx2_nic {
 	struct flr_work		*flr_wrk;
 };
 
-static inline bool is_9xxx_pass1_silicon(struct pci_dev *pdev)
+static inline bool is_96xx_A0(struct pci_dev *pdev)
 {
 	return (pdev->revision == 0x00) &&
 		(pdev->subsystem_device == PCI_SUBSYS_DEVID_96XX_RVU_PFVF);
 }
 
+static inline bool is_95xx_A0(struct pci_dev *pdev)
+{
+	return (pdev->revision == 0x10) &&
+		(pdev->subsystem_device == PCI_SUBSYS_DEVID_95XX_RVU_PFVF);
+}
+
 /* Register read/write APIs */
 static inline void otx2_write64(struct otx2_nic *nic, u64 offset, u64 val)
 {
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index b3e1f75dc714..6dcf99e63061 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -307,7 +307,7 @@ static int otx2_set_ringparam(struct net_device *netdev,
 	/* Due to HW errata #34934 & #34873 RQ.CQ.size >= 1K
 	 * and SQ.CQ.size >= 4K to avoid CQ overflow.
 	 */
-	if ((is_9xxx_pass1_silicon(pfvf->pdev)) &&
+	if ((is_96xx_A0(pfvf->pdev) || is_95xx_A0(pfvf->pdev)) &&
 	    (tx_size < 0x4 || rx_size < 0x3))
 		return 0;
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 586f09622acc..d67132dac067 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -2213,7 +2213,7 @@ static int otx2_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	if (err)
 		goto err_detach_rsrc;
 
-	if (!is_9xxx_pass1_silicon(pdev))
+	if (!is_96xx_A0(pf->pdev) && !is_95xx_A0(pf->pdev))
 		hw->hw_tso = true;
 
 	pf->cq_time_wait = CQ_TIMER_THRESH_DEFAULT;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
index e3df17bfcbed..0d815941c43d 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
@@ -536,6 +536,9 @@ static int otx2vf_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	if (err)
 		goto err_detach_rsrc;
 
+	if (!is_96xx_A0(vf->pdev) && !is_95xx_A0(vf->pdev))
+		hw->hw_tso = true;
+
 	/* Assign default mac address */
 	otx2_get_mac_from_af(netdev);
 
-- 
2.17.1

