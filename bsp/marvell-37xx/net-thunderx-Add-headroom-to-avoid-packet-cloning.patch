From 27c4c79bf9a796d0f0daf864ce00f80c4b34a15e Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Wed, 10 Jul 2019 16:17:35 +0530
Subject: [PATCH 330/386] net: thunderx: Add headroom to avoid packet cloning

Since we are setting 'needed_headroom' to 128bytes, allocate
bigger DMA buffers with 128byte headroom to avoid skb/packet
cloning in case forwarding which results in performance loss.
Removed dependency on 'CAVIUM_IPFWD_OFFLOAD' and made
headroom allocation default.

Change-Id: I35ce4e14a6d2d3b9ae2da003059f2881217db8ad
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/12339
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 .../net/ethernet/cavium/thunder/nicvf_main.c  |  2 +-
 .../ethernet/cavium/thunder/nicvf_queues.c    | 25 +++----------------
 .../ethernet/cavium/thunder/nicvf_queues.h    | 17 +++----------
 3 files changed, 8 insertions(+), 36 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_main.c b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
index a8ec0b9c0d78..12e30b1fe14c 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
@@ -2248,7 +2248,7 @@ static int nicvf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 
 	netdev->netdev_ops = &nicvf_netdev_ops;
 	netdev->watchdog_timeo = NICVF_TX_TIMEOUT;
-	netdev->needed_headroom = 128;
+	netdev->needed_headroom = NICVF_HEADROOM;
 
 	/* MTU range: 64 - 9200 */
 	netdev->min_mtu = NIC_HW_MIN_FRS;
diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_queues.c b/drivers/net/ethernet/cavium/thunder/nicvf_queues.c
index 52ea0d591006..bd754dad53fd 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_queues.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_queues.c
@@ -214,18 +214,11 @@ static inline int nicvf_alloc_rcv_buffer(struct nicvf *nic, struct rbdr *rbdr,
 	} else {
 		/* HW will ensure data coherency, CPU sync not required */
 
-#ifdef CONFIG_CAVIUM_IPFWD_OFFLOAD
 		*rbuf = (u64)dma_map_page_attrs(&nic->pdev->dev, nic->rb_page,
-			nic->rb_page_offset + CAVIUM_IPFWD_OFFLOAD_HEADROOM,
-						buf_len,
+			nic->rb_page_offset + NICVF_HEADROOM,
+						buf_len - NICVF_HEADROOM,
 						DMA_FROM_DEVICE,
 						DMA_ATTR_SKIP_CPU_SYNC);
-#else
-		*rbuf = (u64)dma_map_page_attrs(&nic->pdev->dev, nic->rb_page,
-						nic->rb_page_offset, buf_len,
-						DMA_FROM_DEVICE,
-						DMA_ATTR_SKIP_CPU_SYNC);
-#endif
 		if (dma_mapping_error(&nic->pdev->dev, (dma_addr_t)*rbuf)) {
 			if (!nic->rb_page_offset)
 				__free_pages(nic->rb_page, 0);
@@ -248,14 +241,7 @@ static struct sk_buff *nicvf_rb_ptr_to_skb(struct nicvf *nic,
 	struct sk_buff *skb;
 
 	data = phys_to_virt(rb_ptr);
-
-#ifdef CONFIG_CAVIUM_IPFWD_OFFLOAD
-	/* This extra headroom has been allocated in nicvf_alloc_rcv_buffer
-	 * and memory pointer has been moved up already.
-	 * Move the pointer down so extra headroom can be usd.
-	 */
-	data -= CAVIUM_IPFWD_OFFLOAD_HEADROOM;
-#endif
+	data -= NICVF_HEADROOM;
 
 	/* Now build an skb to give to stack */
 	skb = build_skb(data, RCV_FRAG_LEN);
@@ -264,10 +250,7 @@ static struct sk_buff *nicvf_rb_ptr_to_skb(struct nicvf *nic,
 		return NULL;
 	}
 
-#ifdef CONFIG_CAVIUM_IPFWD_OFFLOAD
-	skb_reserve(skb, CAVIUM_IPFWD_OFFLOAD_HEADROOM);
-#endif
-
+	skb_reserve(skb, NICVF_HEADROOM);
 	prefetch(skb->data);
 	return skb;
 }
diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_queues.h b/drivers/net/ethernet/cavium/thunder/nicvf_queues.h
index fb426600e2bb..c41acc6e2fab 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_queues.h
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_queues.h
@@ -91,21 +91,10 @@
 #define RBDR_THRESH		(RCV_BUF_COUNT / 2)
 #define DMA_BUFFER_LEN		1536 /* In multiples of 128bytes */
 
-#ifdef CONFIG_CAVIUM_IPFWD_OFFLOAD
-
-/* Extra 128 bytes in skb headroom to accommodate protocol headers like ppp */
-#define CAVIUM_IPFWD_OFFLOAD_HEADROOM        128
-
+#define NICVF_HEADROOM         128
 #define RCV_FRAG_LEN    (SKB_DATA_ALIGN(DMA_BUFFER_LEN + NET_SKB_PAD) + \
-			SKB_DATA_ALIGN(sizeof(struct skb_shared_info)) + \
-					CAVIUM_IPFWD_OFFLOAD_HEADROOM)
-
-#else
-
-#define RCV_FRAG_LEN	 (SKB_DATA_ALIGN(DMA_BUFFER_LEN + NET_SKB_PAD) + \
-			 SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
-
-#endif
+			SKB_DATA_ALIGN(sizeof(struct skb_shared_info)) +\
+					NICVF_HEADROOM)
 
 #define MAX_CQES_FOR_TX		((SND_QUEUE_LEN / MIN_SQ_DESC_PER_PKT_XMIT) * \
 				 MAX_CQE_PER_PKT_XMIT)
-- 
2.17.1

