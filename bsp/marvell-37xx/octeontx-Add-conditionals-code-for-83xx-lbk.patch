From 7125569140d7314deb363fa66246d3d7eb6197c8 Mon Sep 17 00:00:00 2001
From: Vidhya Vidhyaraman <Vidhya.Raman@cavium.com>
Date: Wed, 17 Jul 2019 12:22:13 -0700
Subject: [PATCH 341/386] octeontx: Add conditionals code for 83xx lbk

This code adds conditional code to create lbk netdevice only on
83xx processor. This driver is common for 81xx and 83xx

Change-Id: Ia01c585129ea370a1b8cd5a30e4ac147a726226b
Signed-off-by: Vidhya Vidhyaraman <Vidhya.Raman@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/12599
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/ethernet/cavium/thunder/nic.h      |  1 +
 drivers/net/ethernet/cavium/thunder/nic_main.c | 11 ++++++-----
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nic.h b/drivers/net/ethernet/cavium/thunder/nic.h
index 173670b19af6..42cb4e2e009a 100644
--- a/drivers/net/ethernet/cavium/thunder/nic.h
+++ b/drivers/net/ethernet/cavium/thunder/nic.h
@@ -554,6 +554,7 @@ struct set_loopback {
 
 #define LBK_IF_IDX	0xff /* LBK virtual port index */
 #define NUM_LBK_IFS 4    /* Number of LBK netdevices in kernel */
+#define INVALID_VF 0xFF
 
 struct port_context {
 	u8    msg;
diff --git a/drivers/net/ethernet/cavium/thunder/nic_main.c b/drivers/net/ethernet/cavium/thunder/nic_main.c
index e916227e962a..d4380186a6e7 100644
--- a/drivers/net/ethernet/cavium/thunder/nic_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nic_main.c
@@ -72,7 +72,7 @@ struct nicpf {
 	u8			num_vec;
 	bool			irq_allocated[NIC_PF_MSIX_VECTORS];
 	char			irq_name[NIC_PF_MSIX_VECTORS][20];
-	int			lbk_vf[NUM_LBK_IFS];
+	u16			lbk_vf[NUM_LBK_IFS];
 };
 
 /* Supported devices */
@@ -249,6 +249,11 @@ static void nic_create_lbk_interface(struct nicpf *nic)
 	u16 sdevid;
 	int i, num_lbk_ifs, numvfs;
 
+	nic->lbk_vf[0] = INVALID_VF; /* Default No lbk interface assigned*/
+	nic->lbk_vf[1] = INVALID_VF; /* Default No lbk interface assigned*/
+	nic->lbk_vf[2] = INVALID_VF; /* Default No lbk interface assigned*/
+	nic->lbk_vf[3] = INVALID_VF; /* Default No lbk interface assigned*/
+
 	pci_read_config_word(nic->pdev, PCI_SUBSYSTEM_ID, &sdevid);
 	if (sdevid != PCI_SUBSYS_DEVID_83XX_NIC_PF)
 		return;
@@ -1721,10 +1726,6 @@ static int nic_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	nic->node = nic_get_node_id(pdev);
-	nic->lbk_vf[0] = -1; /* Default No lbk interface assigned*/
-	nic->lbk_vf[1] = -1; /* Default No lbk interface assigned*/
-	nic->lbk_vf[2] = -1; /* Default No lbk interface assigned*/
-	nic->lbk_vf[3] = -1; /* Default No lbk interface assigned*/
 
 	/* Get HW capability info */
 	nic_get_hw_info(nic);
-- 
2.17.1

