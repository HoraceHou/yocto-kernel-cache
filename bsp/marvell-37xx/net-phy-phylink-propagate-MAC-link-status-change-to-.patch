From fedf985e2869f9410045f7f0eb6e34cff93f985a Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Sat, 11 May 2019 04:50:29 +0200
Subject: [PATCH 227/386] net: phy: phylink: propagate MAC link status change
 to the SFP layer

In case the SFP link interrupt occurs before MAC is ready,
the link state remains disabled in the phylink. When the latter
change occurs, the MAC interrupt handler should call
phylink_mac_change(). Then the phylink_run_resolve() can
inform the stack about change. Unfortunately this is blocked
by pl->phylink_disable_state flag.

The flag can only be changed via SFP callback, currently triggered
either via interrupts or timeout task. In most common setup, i.e.
standard up/down called from user-space, the issue is invisible,
as the timeout happens immediately. However in case trying to
using rootfs over NFS the timeout is blocked until IP-config is
completed:

[ 14.970386] Waiting up to 110 more seconds for network.
[ 24.982386] Waiting up to 100 more seconds for network.
[ 34.994385] Waiting up to 90 more seconds for network.
[ 45.006385] Waiting up to 80 more seconds for network.
[ 55.018386] Waiting up to 70 more seconds for network.
[ 65.030385] Waiting up to 60 more seconds for network.
[ 75.042385] Waiting up to 50 more seconds for network.
[ 85.054385] Waiting up to 40 more seconds for network.
[ 95.066385] Waiting up to 30 more seconds for network.
[ 105.078385] Waiting up to 20 more seconds for network.
[ 115.090385] Waiting up to 10 more seconds for network.
[ 124.970626] mvpp2 f2000000.ethernet eth0: Link is Up - 1Gbps/Full - flow control off
[ 124.978414] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[ 124.990400] IP-Config

The loop waits for netif_carrier_ok == true, but this can be updated
only via timeout, which is blocked... In order to avoid such deadlock
make sure the event is propagated to the SFP layer.

Change-Id: Idbd588d77c16a3eb1185fff739c0c8ecc1ea91ba
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/8813
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/phy/phylink.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/net/phy/phylink.c b/drivers/net/phy/phylink.c
index 9306618f581f..511d6c52e01f 100644
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@ -901,6 +901,17 @@ void phylink_mac_change(struct phylink *pl, bool up)
 {
 	if (!up)
 		pl->mac_link_dropped = true;
+
+#if IS_ENABLED(CONFIG_SFP)
+	/* Make sure the event is propagated to the SFP layer. */
+	if (pl->sfp_bus) {
+		if (up)
+			sfp_link_up(pl->sfp_bus);
+		else
+			sfp_link_down(pl->sfp_bus);
+	}
+#endif
+
 	phylink_run_resolve(pl);
 	netdev_dbg(pl->netdev, "mac link %s\n", up ? "up" : "down");
 }
-- 
2.17.1

