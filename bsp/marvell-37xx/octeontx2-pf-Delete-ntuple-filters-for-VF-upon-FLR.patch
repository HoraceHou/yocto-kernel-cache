From e116e3b9f946733a661fd80233008bc4eb06a94a Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep <sbhatta@marvell.com>
Date: Tue, 30 Apr 2019 16:00:27 +0530
Subject: [PATCH 195/386] octeontx2-pf: Delete ntuple filters for VF upon FLR

When PF receives FLR interrupt for its VF then the rules
installed for that VF needs to be deleted. Otherwise MCAM
rules exist for VFs with unmapped NIXLFS thereby causing
Rx on unmapped PF_FUNC errors.

Change-Id: I5a5743a519bd42e6a57beef5406be50ab4bd3910
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8296
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.h       |  1 +
 .../marvell/octeontx2/nic/otx2_ethtool.c      | 21 +++++++++++++++++++
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c  |  6 ++++++
 3 files changed, 28 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index 9b181a901fb8..d7d6026fc3c3 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -518,6 +518,7 @@ int otx2_install_rxvlan_offload_flow(struct otx2_nic *pfvf);
 int otx2_delete_rxvlan_offload_flow(struct otx2_nic *pfvf);
 int otx2_destroy_ethtool_flows(struct otx2_nic *pfvf);
 int otx2_delete_vf_ethtool_flows(struct otx2_nic *pfvf);
+int otx2_delete_ethtool_flows_for_vf(struct otx2_nic *pfvf, int vf);
 
 int otx2_open(struct net_device *netdev);
 int otx2_stop(struct net_device *netdev);
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index 7dc4b5b60802..13fce0f19fa8 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -513,6 +513,7 @@ struct otx2_flow {
 	u32 location;
 	u16 entry;
 	bool is_vf;
+	int vf;
 };
 
 static struct otx2_flow *otx2_find_flow(struct otx2_nic *pfvf, u32 location)
@@ -754,6 +755,7 @@ static int otx2_add_flow_msg(struct otx2_nic *pfvf, struct otx2_flow *flow)
 	if (vf) {
 		req->vf = vf;
 		flow->is_vf = true;
+		flow->vf = vf;
 	}
 
 	/* Send message to AF */
@@ -1444,3 +1446,22 @@ int otx2_delete_vf_ethtool_flows(struct otx2_nic *pfvf)
 
 	return 0;
 }
+
+int otx2_delete_ethtool_flows_for_vf(struct otx2_nic *pfvf, int vf)
+{
+	struct otx2_flow *iter, *tmp;
+	int err;
+
+	list_for_each_entry_safe(iter, tmp, &pfvf->flows, list) {
+		if (iter->vf != vf)
+			continue;
+		err = otx2_remove_flow_msg(pfvf, iter->entry, false);
+		if (err)
+			return err;
+		list_del(&iter->list);
+		kfree(iter);
+		pfvf->nr_flows--;
+	}
+
+	return 0;
+}
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 526e385c3f5c..3893a2e17309 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -94,6 +94,12 @@ static void otx2_flr_handler(struct work_struct *work)
 	struct msg_rsp *rsp;
 
 	vf = flrwork - pf->flr_wrk;
+
+	/* Delete ethtool ntuple filters for the VF before FLR */
+	if (otx2_delete_ethtool_flows_for_vf(pf, vf + 1))
+		dev_err(pf->dev, "Unable to delete VF%d ntuple filters\n",
+			vf);
+
 	otx2_mbox_lock(&pf->mbox);
 	req = otx2_mbox_alloc_msg_vf_flr(&pf->mbox);
 	if (!req) {
-- 
2.17.1

