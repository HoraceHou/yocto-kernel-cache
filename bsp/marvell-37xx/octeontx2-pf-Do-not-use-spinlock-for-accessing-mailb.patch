From 452fa12a6d25a4ad879a01618b6fcb4c5036a179 Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep <sbhatta@marvell.com>
Date: Tue, 19 Feb 2019 19:24:15 +0530
Subject: [PATCH 043/386] octeontx2-pf: Do not use spinlock for accessing
 mailbox

Using spin_lock disables preemption which inturn do not yield
CPU for AF mailbox workqueue processing in Uniprocessor case.
In the documentation it is mentioned that PTP calls should
acquire a spinlock because most of the hardware may have two
32 bit registers for reading a 64bit timecounter value.
Since ptp registers are 64bit spinlocks are omitted.

Change-Id: I9184ec08fdfaef1d8c76705a36b37ea04dd4e2a8
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/5686
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_ptp.c | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ptp.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ptp.c
index fefc06a66a81..94ae954b9da8 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ptp.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ptp.c
@@ -19,8 +19,6 @@ struct otx2_ptp {
 	struct ptp_clock *ptp_clock;
 	struct otx2_nic *nic;
 
-	/* Serialize access to cycle_counter, time_counter and reg_base */
-	spinlock_t spin_lock;
 	struct cyclecounter cycle_counter;
 	struct timecounter time_counter;
 };
@@ -85,9 +83,7 @@ static int otx2_ptp_adjtime(struct ptp_clock_info *ptp_info, s64 delta)
 	struct otx2_ptp *ptp = container_of(ptp_info, struct otx2_ptp,
 					    ptp_info);
 
-	spin_lock(&ptp->spin_lock);
 	timecounter_adjtime(&ptp->time_counter, delta);
-	spin_unlock(&ptp->spin_lock);
 
 	return 0;
 }
@@ -99,9 +95,7 @@ static int otx2_ptp_gettime(struct ptp_clock_info *ptp_info,
 					    ptp_info);
 	u64 nsec;
 
-	spin_lock(&ptp->spin_lock);
 	nsec = timecounter_read(&ptp->time_counter);
-	spin_unlock(&ptp->spin_lock);
 
 	*ts = ns_to_timespec64(nsec);
 
@@ -117,9 +111,7 @@ static int otx2_ptp_settime(struct ptp_clock_info *ptp_info,
 
 	nsec = timespec64_to_ns(ts);
 
-	spin_lock(&ptp->spin_lock);
 	timecounter_init(&ptp->time_counter, &ptp->cycle_counter, nsec);
-	spin_unlock(&ptp->spin_lock);
 
 	return 0;
 }
@@ -164,8 +156,6 @@ int otx2_ptp_init(struct otx2_nic *pfvf)
 
 	ptp_ptr->nic = pfvf;
 
-	spin_lock_init(&ptp_ptr->spin_lock);
-
 	cc = &ptp_ptr->cycle_counter;
 	cc->read = ptp_cc_read;
 	cc->mask = CYCLECOUNTER_MASK(64);
-- 
2.17.1

