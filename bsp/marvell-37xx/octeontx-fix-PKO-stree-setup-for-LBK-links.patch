From 30a16043bea3cdf7621beb05d5a10f42e4b9232b Mon Sep 17 00:00:00 2001
From: Stanislaw Kardach <skardach@marvell.com>
Date: Wed, 10 Jul 2019 15:11:00 +0200
Subject: [PATCH 334/386] octeontx: fix PKO stree setup for LBK links

The scheduling tree for LBK (and SDP) ports is configured so that
multiple links merge at PRIO 0 on L1 SQ level. However the L1 SQs used
for LBK links do not have DDWR enabled (RR_PRIO=0xF).
This commit enables DDWR on PRIO 0 for all non-BGX ports. Previously
only SDP ports had this configuration.

Change-Id: I2fa7be0816708a37968d8ca160f645a34c3ff4e4
Signed-off-by: Stanislaw Kardach <skardach@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/12360
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Vidhya Vidhyaraman <Vidhya.Raman@cavium.com>
Reviewed-by: Yuri Tolstov <Yuri.Tolstov@cavium.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 .../ethernet/cavium/octeontx-83xx/pkopf_main.c    | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c
index 27f3534793c9..526f5dc03ce5 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c
@@ -923,15 +923,12 @@ static void pko_pq_init(struct pkopf *pko, int vf, int mac_num, u32 max_frame)
 	u64 queue_base = vf * 8;
 	u64 reg;
 
-	if (mac_num != SDP_MAC_NUM) { /* BGX MAC specific configuration */
-		/* If single child PRIORITY must be 0xF */
-		reg = (mac_num << 16) |
-			(queue_base << 32) |
-			(0xFull << 1);
-	} else { /* SDP MAC specific configuration */
-		reg = (mac_num << 16) |
-			(queue_base << 32);
-	}
+	/* Non-BGX links perform DDWR on prio 0 */
+	reg = (mac_num << 16) | (queue_base << 32);
+	/* BGX MACs have only a single child, so PRIO must be 0xF */
+	if (mac_num > SDP_MAC_NUM)
+		reg |= 0xFull << 1;
+
 	pko_reg_write(pko, PKO_PF_L1_SQX_TOPOLOGY(mac_num), reg);
 
 	dev_dbg(&pko->pdev->dev, "PKO: VF[%d] L1_SQ[%d]_TOPOLOGY ::0x%llx\n",
-- 
2.17.1

