From 89b6ef5909108a622c80e11089d5e330a4215e5a Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep <sbhatta@marvell.com>
Date: Thu, 28 Mar 2019 19:45:20 +0530
Subject: [PATCH 096/386] octeontx2-af: Modify calculation of compensation
 value

Current math to calculate compensation value using ppm is
not giving accurate values compared to using ppb values.
Hence modified logic to calculate ppb first and use it.
Example:
With 1GHz coprocessor clock compensator value should be
be 0x100000000. By using testptp we can change frequency
by x ppb, if base frequency is F then applying ppb it should
be F+-F(x/1000000000).

compensator value with existing logic:

~ # ./testptp -d /dev/ptp0 -f 1000000000
[  128.638500] comp:0x104577d95
frequency adjustment okay
~ # ./testptp -d /dev/ptp0 -f -1000000000
[  137.262219] comp:0xfba8826b
frequency adjustment okay

compensator value with modified logic:

~ # ./testptp -d /dev/ptp0 -f 1000000000
[  287.846876] comp:0x200000000
frequency adjustment okay
~ # ./testptp -d /dev/ptp0 -f -1000000000
[  292.613112] comp:0x0
frequency adjustment okay

Also correct PCI device id for reset block is used.

Change-Id: Ia67a7656b921b3219f40df04b819ff78746fd630
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/6563
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/ptp.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/ptp.c b/drivers/net/ethernet/marvell/octeontx2/af/ptp.c
index 07ecf6895e94..e96efe95d64d 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/ptp.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/ptp.c
@@ -19,7 +19,7 @@
 #define PCI_DEVID_OCTEONTX2_PTP		0xA00C
 #define PCI_SUBSYS_DEVID_OCTX2_96XX_PTP	0xB200
 #define PCI_SUBSYS_DEVID_OCTX2_95XX_PTP	0xB300
-#define PCI_DEVID_OCTEONTX2_RST		0xA00E
+#define PCI_DEVID_OCTEONTX2_RST		0xA085
 
 #define PCI_PTP_BAR_NO	0
 #define PCI_RST_BAR_NO	0
@@ -91,6 +91,7 @@ int ptp_adjfine(struct ptp *ptp, long scaled_ppm)
 	bool neg_adj = false;
 	u64 comp;
 	u64 adj;
+	s64 ppb;
 
 	if (scaled_ppm < 0) {
 		neg_adj = true;
@@ -113,9 +114,12 @@ int ptp_adjfine(struct ptp *ptp, long scaled_ppm)
 	 * independent structure definition to write data to PTP register.
 	 */
 	comp = ((u64)1000000000ull << 32) / ptp->clock_rate;
-	adj = comp * scaled_ppm;
-	adj >>= 16;
-	adj = div_u64(adj, 1000000ull);
+	/* convert scaled_ppm to ppb */
+	ppb = 1 + scaled_ppm;
+	ppb *= 125;
+	ppb >>= 13;
+	adj = comp * ppb;
+	adj = div_u64(adj, 1000000000ull);
 	comp = neg_adj ? comp - adj : comp + adj;
 
 	writeq(comp, ptp->reg_base + PTP_CLOCK_COMP);
-- 
2.17.1

