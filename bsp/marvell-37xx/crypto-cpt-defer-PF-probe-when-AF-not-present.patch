From 670d87bd4da6993f8f666d07773bee58f537974f Mon Sep 17 00:00:00 2001
From: Lukasz Bartosik <lbartosik@marvell.com>
Date: Wed, 24 Apr 2019 11:42:49 +0200
Subject: [PATCH 186/386] crypto: cpt - defer PF probe when AF not present

When AF driver is not loaded then defer probe of CPT PF driver
because it communicates over mbox with AF driver during probing.

Change-Id: I7644e4cbb2c62fbf2dbcfbbd7aed7d758200644f
Signed-off-by: Lukasz Bartosik <lbartosik@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8057
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Srujana Challa <schalla@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/crypto/cavium/cpt/9x/cpt9x_pf_main.c | 24 ++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/drivers/crypto/cavium/cpt/9x/cpt9x_pf_main.c b/drivers/crypto/cavium/cpt/9x/cpt9x_pf_main.c
index cdca52973d6f..db7d45baa657 100644
--- a/drivers/crypto/cavium/cpt/9x/cpt9x_pf_main.c
+++ b/drivers/crypto/cavium/cpt/9x/cpt9x_pf_main.c
@@ -441,6 +441,25 @@ static int cpt_create_sysfs_vf_limits(struct cptpf_dev *cptpf)
 	return ret;
 }
 
+static int cpt_is_pf_usable(struct cptpf_dev *cptpf)
+{
+	u64 rev;
+
+	rev = cpt_read64(cptpf->reg_base, BLKADDR_RVUM, 0,
+			 RVU_PF_BLOCK_ADDRX_DISC(BLKADDR_RVUM));
+	rev = (rev >> 12) & 0xFF;
+	/* Check if AF has setup revision for RVUM block, otherwise
+	 * driver probe should be deferred until AF driver comes up
+	 */
+	if (!rev) {
+		dev_warn(&cptpf->pdev->dev,
+			 "AF is not initialized, deferring probe");
+		return -EPROBE_DEFER;
+	}
+
+	return 0;
+}
+
 static int cptpf_sriov_configure(struct pci_dev *pdev, int numvfs)
 {
 	struct cptpf_dev *cptpf = pci_get_drvdata(pdev);
@@ -538,6 +557,11 @@ static int cptpf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 		goto cpt_err_release_regions;
 	}
 
+	/* Check if AF driver is up, otherwise defer probe */
+	err = cpt_is_pf_usable(cptpf);
+	if (err)
+		goto cpt_err_release_regions;
+
 	/* Map AF-PF mailbox memory */
 	cptpf->afpf_mbox_base = ioremap_wc(pci_resource_start(cptpf->pdev,
 					   PCI_MBOX_BAR_NUM),
-- 
2.17.1

