From 36bb2eef89cb2f75b3090626c5552ca9331eeadd Mon Sep 17 00:00:00 2001
From: Marcin Wojtas <mw@semihalf.com>
Date: Thu, 25 Jul 2019 01:13:35 +0200
Subject: [PATCH 357/386] telephony: mvebu_phone: improve tal_status naming

This patch adds a cosmetic change for TAL return values
enum: s/TAL_STAT_/TAL_STATUS_/

Change-Id: If05ff8ff700a063f143123877d015425623e2751
Signed-off-by: Marcin Wojtas <mw@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/13012
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/telephony/mvebu_phone/tal/tal.c     | 28 ++++++++++-----------
 drivers/telephony/mvebu_phone/tal/tal.h     |  6 ++---
 drivers/telephony/mvebu_phone/tal/tal_dev.c | 10 ++++----
 3 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/drivers/telephony/mvebu_phone/tal/tal.c b/drivers/telephony/mvebu_phone/tal/tal.c
index 50ff23435072..f500963a2651 100644
--- a/drivers/telephony/mvebu_phone/tal/tal.c
+++ b/drivers/telephony/mvebu_phone/tal/tal.c
@@ -16,20 +16,20 @@ enum tal_status tal_init(struct device *dev, struct tal_params *tal_params,
 {
 	if (!tal_params || !mmp_ops) {
 		pr_err("%s: Error, bad parameters.\n", __func__);
-		return TAL_STAT_BAD_PARAM;
+		return TAL_STATUS_BAD_PARAM;
 	}
 
 	if (!mmp_ops->tal_mmp_rx_callback || !mmp_ops->tal_mmp_tx_callback) {
 		pr_err("%s: Error, MMP callbacks are missing.\n", __func__);
-		return TAL_STAT_BAD_PARAM;
+		return TAL_STATUS_BAD_PARAM;
 	}
 
 	tal_mmp = mmp_ops;
 	if (tal_if && tal_if->init)
 		if (tal_if->init(dev, tal_params) != 0)
-			return TAL_STAT_INIT_ERROR;
+			return TAL_STATUS_INIT_ERROR;
 
-	return TAL_STAT_OK;
+	return TAL_STATUS_OK;
 }
 EXPORT_SYMBOL(tal_init);
 
@@ -69,9 +69,9 @@ enum tal_status tal_write(struct device *dev, u8 *buffer, int size)
 {
 	if (tal_if && tal_if->write)
 		if (tal_if->write(dev, buffer, size) != 0)
-			return TAL_STAT_BAD_PARAM;
+			return TAL_STATUS_BAD_PARAM;
 
-	return TAL_STAT_OK;
+	return TAL_STATUS_OK;
 }
 EXPORT_SYMBOL(tal_write);
 
@@ -79,10 +79,10 @@ enum tal_status tal_stats_get(struct device *dev, struct tal_stats *tal_stats)
 {
 	if (tal_stats && tal_if && tal_if->stats_get) {
 		tal_if->stats_get(dev, tal_stats);
-		return TAL_STAT_OK;
+		return TAL_STATUS_OK;
 	}
 
-	return TAL_STAT_BAD_PARAM;
+	return TAL_STATUS_BAD_PARAM;
 }
 EXPORT_SYMBOL(tal_stats_get);
 
@@ -93,7 +93,7 @@ enum tal_status tal_set_if(struct tal_if *interface, struct device *dev,
 	if (interface && (!interface->init || !interface->exit ||
 			  !interface->pcm_start || !interface->pcm_stop)) {
 		pr_err("%s: Error, TAL callbacks are missing.\n", __func__);
-		return TAL_STAT_BAD_PARAM;
+		return TAL_STATUS_BAD_PARAM;
 	}
 
 	tal_if = interface;
@@ -105,7 +105,7 @@ enum tal_status tal_set_if(struct tal_if *interface, struct device *dev,
 		tal_dev_exit(miscdev);
 	}
 
-	return TAL_STAT_OK;
+	return TAL_STATUS_OK;
 }
 EXPORT_SYMBOL(tal_set_if);
 
@@ -113,10 +113,10 @@ enum tal_status tal_mmp_rx(struct device *dev, u8 *buffer, int size)
 {
 	if (tal_mmp && tal_mmp->tal_mmp_rx_callback) {
 		tal_mmp->tal_mmp_rx_callback(dev, buffer, size);
-		return TAL_STAT_OK;
+		return TAL_STATUS_OK;
 	}
 
-	return TAL_STAT_BAD_PARAM;
+	return TAL_STATUS_BAD_PARAM;
 }
 EXPORT_SYMBOL(tal_mmp_rx);
 
@@ -124,10 +124,10 @@ enum tal_status tal_mmp_tx(struct device *dev, u8 *buffer, int size)
 {
 	if (tal_mmp && tal_mmp->tal_mmp_tx_callback) {
 		tal_mmp->tal_mmp_tx_callback(dev, buffer, size);
-		return TAL_STAT_OK;
+		return TAL_STATUS_OK;
 	}
 
-	return TAL_STAT_BAD_PARAM;
+	return TAL_STATUS_BAD_PARAM;
 }
 EXPORT_SYMBOL(tal_mmp_tx);
 
diff --git a/drivers/telephony/mvebu_phone/tal/tal.h b/drivers/telephony/mvebu_phone/tal/tal.h
index 98aa7fc3c43e..9935695d036b 100644
--- a/drivers/telephony/mvebu_phone/tal/tal.h
+++ b/drivers/telephony/mvebu_phone/tal/tal.h
@@ -23,9 +23,9 @@ enum tal_pcm_format {
 };
 
 enum tal_status {
-	TAL_STAT_OK = 0,
-	TAL_STAT_BAD_PARAM,
-	TAL_STAT_INIT_ERROR,
+	TAL_STATUS_OK = 0,
+	TAL_STATUS_BAD_PARAM,
+	TAL_STATUS_INIT_ERROR,
 };
 
 /* Structures */
diff --git a/drivers/telephony/mvebu_phone/tal/tal_dev.c b/drivers/telephony/mvebu_phone/tal/tal_dev.c
index 8ba3d1835ed4..d7a8a3b43cfd 100644
--- a/drivers/telephony/mvebu_phone/tal/tal_dev.c
+++ b/drivers/telephony/mvebu_phone/tal/tal_dev.c
@@ -96,7 +96,7 @@ static ssize_t tal_dev_write(struct file *file_p, const char __user *buf,
 		size = -EFAULT;
 
 	/* Pass the buffer to TAL */
-	if (tal_write(tal_dev->dev, tx_buff, size) != TAL_STAT_OK)
+	if (tal_write(tal_dev->dev, tx_buff, size) != TAL_STATUS_OK)
 		return -EIO;
 
 	return size;
@@ -183,7 +183,7 @@ static long tal_dev_ioctl(struct file *file_p, unsigned int cmd,
 					    (i + 1) * tal_dev_params.pcm_format;
 
 		if (tal_init(tal_dev->dev, &tal_dev->params, &tal_mmp_ops) !=
-		    TAL_STAT_OK)
+		    TAL_STATUS_OK)
 			return -EIO;
 
 		break;
@@ -243,7 +243,7 @@ enum tal_status tal_dev_init(struct device *dev, u32 tdm_index,
 	/* Initialize TAL device */
 	tal_dev = devm_kzalloc(dev, sizeof(*tal_dev), GFP_KERNEL);
 	if (!tal_dev)
-		return TAL_STAT_INIT_ERROR;
+		return TAL_STATUS_INIT_ERROR;
 
 	tal_dev->dev = dev;
 	init_waitqueue_head(&tal_dev->wait);
@@ -261,12 +261,12 @@ enum tal_status tal_dev_init(struct device *dev, u32 tdm_index,
 	status = misc_register(miscdev);
 	if (status < 0) {
 		dev_err(dev, "Failed to register %s device!\n", name);
-		return TAL_STAT_INIT_ERROR;
+		return TAL_STATUS_INIT_ERROR;
 	}
 
 	dev_info(dev, "register /dev/%s\n", name);
 
-	return TAL_STAT_OK;
+	return TAL_STATUS_OK;
 }
 
 void tal_dev_exit(struct miscdevice *miscdev)
-- 
2.17.1

