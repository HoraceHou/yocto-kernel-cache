From ab1a8b36bc207dad598822416b0428d0963784a0 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Tue, 7 May 2019 12:44:16 +0300
Subject: [PATCH 218/386] net: phy: marvell10g: rename PHY 2210 defines

Marvell 22XX and 33XX phy series has similar registers
for configurations.
Patch rename all MII_88E2110 phy registers to MV_PHY.
This is cosmetic change.

Change-Id: Ide34eae0ef205c161d0517f6ea13ea4cd8acae39
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8687
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Stefan Chulski <Stefan.Chulski@cavium.com>
Reviewed-by: Marcin Wojtas <marcin@marvell.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/net/phy/marvell10g.c | 50 +++++++++++++++++++-----------------
 1 file changed, 26 insertions(+), 24 deletions(-)

diff --git a/drivers/net/phy/marvell10g.c b/drivers/net/phy/marvell10g.c
index 16494a72bff1..6071f8b453b5 100644
--- a/drivers/net/phy/marvell10g.c
+++ b/drivers/net/phy/marvell10g.c
@@ -27,19 +27,20 @@
 #include <linux/of.h>
 #include <linux/phy.h>
 
-#define MII_88E2110_PHY_STATUS		0x8008
-#define MII_88E2110_PHY_STATUS_SPD_MASK	0xc00c
-#define MII_88E2110_PHY_STATUS_5000	0xc008
-#define MII_88E2110_PHY_STATUS_2500	0xc004
-#define MII_88E2110_PHY_STATUS_1000	0x8000
-#define MII_88E2110_PHY_STATUS_100	0x4000
-#define MII_88E2110_PHY_STATUS_DUPLEX	0x2000
-#define MII_88E2110_PHY_STATUS_SPDDONE	0x0800
-#define MII_88E2110_PHY_STATUS_LINK	0x0400
-
-#define MII_88E2110_ADVERTISE		0x10
-#define MII_88E2110_LPA			0x13
-#define MII_88E2110_STAT1000		0x8001
+#define MV_COPPER_PHY_STATUS_LINK      0x0400
+#define MV_PHY_AN_ADVERTISE            0x10
+#define MV_PHY_AN_LPA                  0x13
+#define MV_PHY_STATUS_DUPLEX           0x2000
+#define MV_PHY_STATUS_SPD_MASK         0xc00c
+#define MV_PHY_STATUS_10000            0xc000
+#define MV_PHY_STATUS_5000             0xc008
+#define MV_PHY_STATUS_2500             0xc004
+#define MV_PHY_STATUS_1000             0x8000
+#define MV_PHY_STATUS_100              0x4000
+
+#define MV_MGBASET_AN_FS_RETRAIN_10G   0x2
+#define MV_MGBASET_AN_FS_RETRAIN_5G    0x40
+#define MV_MGBASET_AN_FS_RETRAIN_2_5G  0x20
 
 enum {
 	MV_PMA_BOOT		= 0xc050,
@@ -53,6 +54,7 @@ enum {
 	MV_PCS_PAIRSWAP_MASK	= 0x0003,
 	MV_PCS_PAIRSWAP_AB	= 0x0002,
 	MV_PCS_PAIRSWAP_NONE	= 0x0003,
+	MV_PCS_COPPER_STATUS	= 0x8008,
 
 	MV_PMAPMD_XG_EXT	= 0xc000,
 
@@ -593,17 +595,17 @@ static int m88e2110_read_status(struct phy_device *phydev)
 {
 	int adv, lpa, lpagb, status;
 
-	status = phy_read_mmd(phydev, MDIO_MMD_PCS, MII_88E2110_PHY_STATUS);
+	status = phy_read_mmd(phydev, MDIO_MMD_PCS, MV_PCS_COPPER_STATUS);
 	if (status < 0)
 		return status;
 
-	if (!(status & MII_88E2110_PHY_STATUS_LINK)) {
+	if (!(status & MV_COPPER_PHY_STATUS_LINK)) {
 		phydev->link = 0;
 		return 0;
 	}
 
 	phydev->link = 1;
-	if (status & MII_88E2110_PHY_STATUS_DUPLEX)
+	if (status & MV_PHY_STATUS_DUPLEX)
 		phydev->duplex = DUPLEX_FULL;
 	else
 		phydev->duplex = DUPLEX_HALF;
@@ -611,17 +613,17 @@ static int m88e2110_read_status(struct phy_device *phydev)
 	phydev->pause = 0;
 	phydev->asym_pause = 0;
 
-	switch (status & MII_88E2110_PHY_STATUS_SPD_MASK) {
-	case MII_88E2110_PHY_STATUS_5000:
+	switch (status & MV_PHY_STATUS_SPD_MASK) {
+	case MV_PHY_STATUS_5000:
 		phydev->speed = SPEED_5000;
 		break;
-	case MII_88E2110_PHY_STATUS_2500:
+	case MV_PHY_STATUS_2500:
 		phydev->speed = SPEED_2500;
 		break;
-	case MII_88E2110_PHY_STATUS_1000:
+	case MV_PHY_STATUS_1000:
 		phydev->speed = SPEED_1000;
 		break;
-	case MII_88E2110_PHY_STATUS_100:
+	case MV_PHY_STATUS_100:
 		phydev->speed = SPEED_100;
 		break;
 	default:
@@ -630,15 +632,15 @@ static int m88e2110_read_status(struct phy_device *phydev)
 	}
 
 	if (phydev->autoneg == AUTONEG_ENABLE) {
-		lpa = phy_read_mmd(phydev, MDIO_MMD_AN, MII_88E2110_LPA);
+		lpa = phy_read_mmd(phydev, MDIO_MMD_AN, MV_PHY_AN_LPA);
 		if (lpa < 0)
 			return lpa;
 
-		lpagb = phy_read_mmd(phydev, MDIO_MMD_AN, MII_88E2110_STAT1000);
+		lpagb = phy_read_mmd(phydev, MDIO_MMD_AN, MV_AN_STAT1000);
 		if (lpagb < 0)
 			return lpagb;
 
-		adv = phy_read_mmd(phydev, MDIO_MMD_AN, MII_88E2110_ADVERTISE);
+		adv = phy_read_mmd(phydev, MDIO_MMD_AN, MV_PHY_AN_ADVERTISE);
 		if (adv < 0)
 			return adv;
 
-- 
2.17.1

