From 1215bfc3367d98ab4b4e4ae87040f3253179ec85 Mon Sep 17 00:00:00 2001
From: Lukasz Bartosik <lbartosik@marvell.com>
Date: Tue, 30 Apr 2019 13:49:53 +0200
Subject: [PATCH 206/386] crypto: cpt - fix handling of INIT completion code

When a pending queue entry status code is 0x0 (INIT) then it means that
the entry has not been processed yet by CPT HW. In this case we should
only check for software defined timeout and log warning if timeout
occurred however do not remove entry from pending or instruction queues.
The purpose of the warning is leave a log of a scenario which we don't
expect to happen. Previously in one of scenarios invalid handling
of INIT completion code caused DMA unmaps of a request mmeory
and in the result memory access faults.

Change-Id: I07ea35543dbf1029d510292ee468a29f3ad4d95b
Signed-off-by: Lukasz Bartosik <lbartosik@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8301
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Srujana Challa <schalla@cavium.com>
[RH: Original patch taken from marvell 88F3720 board support SDK 10.0-PR2003]
Signed-off-by: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
---
 drivers/crypto/cavium/cpt/8x/cpt8x_reqmgr.c | 13 +++++--------
 drivers/crypto/cavium/cpt/9x/cpt9x_reqmgr.c | 13 +++++--------
 2 files changed, 10 insertions(+), 16 deletions(-)

diff --git a/drivers/crypto/cavium/cpt/8x/cpt8x_reqmgr.c b/drivers/crypto/cavium/cpt/8x/cpt8x_reqmgr.c
index ef77135b3ee2..9007a1139c9f 100644
--- a/drivers/crypto/cavium/cpt/8x/cpt8x_reqmgr.c
+++ b/drivers/crypto/cavium/cpt/8x/cpt8x_reqmgr.c
@@ -57,17 +57,14 @@ static int cpt8x_process_ccode(struct pci_dev *pdev,
 
 	case COMPLETION_CODE_INIT:
 		/* check for timeout */
-		if (time_after_eq(jiffies,
-				  (cpt_info->time_in +
-				  (CPT_COMMAND_TIMEOUT * HZ)))) {
-			dev_err(&pdev->dev, "Request timed out\n");
-		} else if ((ccode == (COMPLETION_CODE_INIT)) &&
-			   (cpt_info->extra_time <
-			    TIME_IN_RESET_COUNT)) {
+		if (time_after_eq(jiffies, cpt_info->time_in +
+				  CPT_COMMAND_TIMEOUT * HZ))
+			dev_warn(&pdev->dev, "Request timed out 0x%p", req);
+		else if (cpt_info->extra_time < TIME_IN_RESET_COUNT) {
 			cpt_info->time_in = jiffies;
 			cpt_info->extra_time++;
-			return 1;
 		}
+		return 1;
 	break;
 
 	case CPT_8X_COMP_E_GOOD:
diff --git a/drivers/crypto/cavium/cpt/9x/cpt9x_reqmgr.c b/drivers/crypto/cavium/cpt/9x/cpt9x_reqmgr.c
index 09ed0dea760f..92ec4f0f8647 100644
--- a/drivers/crypto/cavium/cpt/9x/cpt9x_reqmgr.c
+++ b/drivers/crypto/cavium/cpt/9x/cpt9x_reqmgr.c
@@ -54,17 +54,14 @@ static int cpt9x_process_ccode(struct pci_dev *pdev,
 
 	case COMPLETION_CODE_INIT:
 		/* check for timeout */
-		if (time_after_eq(jiffies,
-				  (cpt_info->time_in +
-				  (CPT_COMMAND_TIMEOUT * HZ)))) {
-			dev_err(&pdev->dev, "Request timed out\n");
-		} else if ((ccode == (COMPLETION_CODE_INIT)) &&
-			   (cpt_info->extra_time <
-			    TIME_IN_RESET_COUNT)) {
+		if (time_after_eq(jiffies, cpt_info->time_in +
+				  CPT_COMMAND_TIMEOUT * HZ))
+			dev_warn(&pdev->dev, "Request timed out 0x%p", req);
+		else if (cpt_info->extra_time < TIME_IN_RESET_COUNT) {
 			cpt_info->time_in = jiffies;
 			cpt_info->extra_time++;
-			return 1;
 		}
+		return 1;
 	break;
 
 	case CPT_9X_COMP_E_GOOD:
-- 
2.17.1

