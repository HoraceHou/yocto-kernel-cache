From 8de146c0d29cea98e9d1efe77ce7dd93891cf880 Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Thu, 6 Jun 2019 15:21:37 +0800
Subject: [PATCH 7/8] ARM:mach-imx:brace imx6 code with SOC_IMX6

Use SOC_IMX6 to brace imx6 specifc code to prevnt compile error.

Signed-off-by: Jiang Lu <lu.jiang@windriver.com>
---
 arch/arm/mach-imx/busfreq-imx.c   | 6 ++++++
 arch/arm/mach-imx/busfreq_optee.c | 4 ++--
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-imx/busfreq-imx.c b/arch/arm/mach-imx/busfreq-imx.c
index 4c355e2374ba..da6220a1b884 100644
--- a/arch/arm/mach-imx/busfreq-imx.c
+++ b/arch/arm/mach-imx/busfreq-imx.c
@@ -203,8 +203,10 @@ static void imx6ull_lower_cpu_rate(bool enter)
 
 	if (enter) {
 		org_arm_rate = clk_get_rate(arm_clk);
+#ifdef CONFIG_SOC_IMX6
 		origin_arm_volt = regulator_get_voltage(arm_reg);
 		origin_soc_volt = regulator_get_voltage(soc_reg);
+#endif
 	}
 
 	clk_set_parent(pll1_bypass_clk, pll1_bypass_src_clk);
@@ -215,6 +217,7 @@ static void imx6ull_lower_cpu_rate(bool enter)
 		clk_set_parent(step_clk, osc_clk);
 		clk_set_parent(pll1_sw_clk, step_clk);
 		clk_set_rate(arm_clk, LPAPM_CLK);
+#ifdef CONFIG_SOC_IMX6
 		if (cpu_is_imx6sll() && uart_from_osc) {
 			ret = regulator_set_voltage_tol(arm_reg, LOW_POWER_RUN_VOLTAGE, 0);
 			if (ret)
@@ -223,7 +226,9 @@ static void imx6ull_lower_cpu_rate(bool enter)
 			if (ret)
 				pr_err("set soc reg voltage failed\n");
 		}
+#endif
 	} else {
+#ifdef CONFIG_SOC_IMX6
 		if (uart_from_osc) {
 			ret = regulator_set_voltage_tol(soc_reg, origin_soc_volt, 0);
 			if (ret)
@@ -232,6 +237,7 @@ static void imx6ull_lower_cpu_rate(bool enter)
 			if (ret)
 				pr_err("set arm reg voltage failed\n");
 		}
+#endif
 		clk_set_parent(step_clk, origin_step_parent);
 		clk_set_parent(pll1_sw_clk, step_clk);
 		clk_set_rate(arm_clk, org_arm_rate);
diff --git a/arch/arm/mach-imx/busfreq_optee.c b/arch/arm/mach-imx/busfreq_optee.c
index 1b2abd46158f..113c744ba08b 100644
--- a/arch/arm/mach-imx/busfreq_optee.c
+++ b/arch/arm/mach-imx/busfreq_optee.c
@@ -268,11 +268,11 @@ static int init_freq_optee_smp(struct platform_device *busfreq_pdev)
 	if (wfe_iram_base & (FNCPY_ALIGN - 1))
 		wfe_iram_base += FNCPY_ALIGN -
 				((uintptr_t)wfe_iram_base % (FNCPY_ALIGN));
-
+#ifdef CONFIG_SOC_IMX6
 	wfe_change_freq = (void *)fncpy((void *)wfe_iram_base,
 				&imx_smp_wfe_optee,
 				((&imx_smp_wfe_end -&imx_smp_wfe_start) *4));
-
+#endif
 	return 0;
 
 }
-- 
2.17.1

